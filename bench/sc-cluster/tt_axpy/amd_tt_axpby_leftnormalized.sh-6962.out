orthoX: L, orthoY: L
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m43->44  [0m[1;34m44->45  [0m[1;34m45->46  [0m[1;34m46->47  [0m[1;34m47->48  [0m[1;34m48->49  [0m[1;34m49->50  [0m[1;34m50->51  [0m[1;34m51->52  [0m[1;34m52->53  [0m[1;34m53->54  [0m[1;34m54->55  [0m[1;34m55->56  [0m[1;34m56->57  [0m[1;34m57->58  [0m[1;34m58->59  [0m[1;34m59->60  [0m[1;34m60->61  [0m[1;34m61->62  [0m[1;34m62->63  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 23043789395840 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 23043573278720 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 23043371952256 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 23043170625792 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 23042969299328 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 23042767972864 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 23042566646400 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 23042365319936 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 23042163993472 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 23041962667008 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 23041761340544 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 23041560014080 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 23041358687616 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 23041157361152 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 23040956034688 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 23040754708224 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 23040553381760 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 23040352055296 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 23040150728832 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 23039949402368 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 23039748075904 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 23039546749440 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 23039345422976 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 23039144096512 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 23038942770048 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 23038741443584 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 23038540117120 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 23038338790656 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 23038137464192 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 23037936137728 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 23037734811264 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 23037533484800 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 23037332154240 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 23037130827776 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 23036929501312 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 23036728174848 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 23036526848384 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 23036325521920 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 23036124195456 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 23035922868992 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 23035721542528 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 23035520216064 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 23035318889600 -> hwthread 43 - OK[0m[1;34m
[0m[1;34m	threadid 23035117563136 -> hwthread 44 - OK[0m[1;34m
[0m[1;34m	threadid 23034916236672 -> hwthread 45 - OK[0m[1;34m
[0m[1;34m	threadid 23034714910208 -> hwthread 46 - OK[0m[1;34m
[0m[1;34m	threadid 23034513583744 -> hwthread 47 - OK[0m[1;34m
[0m[1;34m	threadid 23034312257280 -> hwthread 48 - OK[0m[1;34m
[0m[1;34m	threadid 23034110930816 -> hwthread 49 - OK[0m[1;34m
[0m[1;34m	threadid 23033909604352 -> hwthread 50 - OK[0m[1;34m
[0m[1;34m	threadid 23033708277888 -> hwthread 51 - OK[0m[1;34m
[0m[1;34m	threadid 23033506951424 -> hwthread 52 - OK[0m[1;34m
[0m[1;34m	threadid 23033305624960 -> hwthread 53 - OK[0m[1;34m
[0m[1;34m	threadid 23033104298496 -> hwthread 54 - OK[0m[1;34m
[0m[1;34m	threadid 23032902972032 -> hwthread 55 - OK[0m[1;34m
[0m[1;34m	threadid 23032701645568 -> hwthread 56 - OK[0m[1;34m
[0m[1;34m	threadid 23032500319104 -> hwthread 57 - OK[0m[1;34m
[0m[1;34m	threadid 23032298992640 -> hwthread 58 - OK[0m[1;34m
[0m[1;34m	threadid 23032097666176 -> hwthread 59 - OK[0m[1;34m
[0m[1;34m	threadid 23031896339712 -> hwthread 60 - OK[0m[1;34m
[0m[1;34m	threadid 23031695013248 -> hwthread 61 - OK[0m[1;34m
[0m[1;34m	threadid 23031493686784 -> hwthread 62 - OK[0m[1;34m
[0m[1;34m	threadid 23031292360320 -> hwthread 63 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 23043683735296 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 23043677144832 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
Performance statistics:
function                                                                                                                                                                                                     	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 51, m: 51)                                                                	 0.289743  	 700       	 2.24333   	 0         	 0.151798  	 14.7784   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2550, cols: 51, reductionFactor: 37, colBlockingSize: 12)                 	 0.164597  	 600       	 49.6618   	 0         	 3.86839   	 12.8378   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 51, n: 50, r: 51, r2: 51)            	 0.15193   	 600       	 52.3865   	 0         	 8.29966   	 6.31188   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 51, r: 51, r2: 2550, leftOrthog: 0)       	 0.150562  	 600       	 52.8622   	 0         	 12.604    	 4.19408   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 51)                                                                	 0.0392941 	 100       	 2.27133   	 0         	 0.155749  	 14.5833   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                	 0.0372872 	 100       	 2.34665   	 0         	 0.161986  	 14.4868   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 51, reductionFactor: 37, colBlockingSize: 12)                 	 0.0290518 	 100       	 45.9748   	 0         	 3.5826    	 12.8328   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 1, n: 50, r2: 1)                    	 0.027858  	 800       	 0         	 0         	 1.17166   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2550, cols: 50, reductionFactor: 37, colBlockingSize: 12)                 	 0.0272159 	 100       	 48.1137   	 0         	 3.82129   	 12.591    
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r: 51, r2: 51)            	 0.0249158 	 100       	 52.1958   	 0         	 8.27109   	 6.31063   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 2550, leftOrthog: 0)       	 0.021563  	 100       	 59.1292   	 0         	 14.3765   	 4.1129    
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 51, r: 51, r2: 2500, leftOrthog: 0)       	 0.0214882 	 100       	 60.5216   	 0         	 14.434    	 4.19298   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 2500, m: 1, k: 50)	 0.0206637 	 800       	 9.67882   	 0         	 39.5051   	 0.245002  
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 51, n: 50, r: 51, r2: 50)            	 0.0181848 	 100       	 71.5158   	 0         	 11.4425   	 6.25      
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 51, Qr2: 1)       	 0.0170408 	 700       	 0         	 0         	 84.6533   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 1, k: 2500)   	 0.0146904 	 800       	 13.6144   	 0         	 55.5683   	 0.245002  
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2550, cols: 1, reductionFactor: 37, colBlockingSize: 12)                  	 0.0091781 	 700       	 0.399482  	 0         	 1.55649   	 0.256656  
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2550, Xcols: 1, r: 1, streamingCols: 0)                    	 0.00574736	 700       	 0.310577  	 0         	 4.96972   	 0.0624939 
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 50)          	 0.00478921	 8         	 20.8803   	 0         	 3.37425   	 6.18812   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 1)                                                                                          	 0.00439992	 1210      	 0         	 0         	 0.220004  	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 0, n: 50, r2: 1)                    	 0.00414661	 100       	 0         	 0         	 0.964644  	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 51, reductionFactor: 37, colBlockingSize: 12)                   	 0.0040405 	 100       	 6.6113    	 0         	 1.01987   	 6.48247   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 1)   	 0.00358959	 900       	 1.25362   	 0         	 5.21507   	 0.240385  
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.00345204	 9         	 0.434524  	 0         	 0.157472  	 2.75937   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2550, m: 1)                                                              	 0.00308111	 700       	 0         	 0         	 9.26938   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2550, m: 1)                                                                       	 0.00294624	 700       	 0         	 0         	 9.69372   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 50, Qr2: 1)       	 0.00279259	 100       	 0         	 0         	 73.0504   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                 	 0.00267243	 8         	 38.4304   	 0         	 3.0534    	 12.5861   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                  	 0.00172548	 8         	 28.9774   	 0         	 9.31912   	 3.10945   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 51, r: 50, r2: 50, leftOrthog: 0)         	 0.00157745	 100       	 16.1654   	 0         	 6.41543   	 2.51976   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 1, reductionFactor: 37, colBlockingSize: 12)                  	 0.00139262	 100       	 0.368738  	 0         	 1.43671   	 0.256654  
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 50, r2: 50)             	 0.00131058	 100       	 19.0755   	 0         	 4.57812   	 4.16667   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                   	 0.000933964	 1         	 0.274911  	 0         	 0.0428282 	 6.41892   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 1, reductionFactor: 37, colBlockingSize: 12)                    	 0.00090894	 109       	 0.0123161 	 0         	 0.0489273 	 0.251722  
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 1, r: 1, streamingCols: 0)                    	 0.000875634	 100       	 0.285507  	 0         	 4.56858   	 0.0624938 
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                  	 0.000840009	 100       	 0.595232  	 0         	 2.38093   	 0.25      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 1, m: 1)                                                                   	 0.000811714	 909       	 0         	 0         	 0.0358353 	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                         	 0.000551467	 100       	 0         	 0         	 7.25338   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 1)                                                              	 0.00048769	 100       	 0         	 0         	 8.20193   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 1, Xr2: 50, Qr1: 1, Qr2: 0)         	 0.00046474	 100       	 0         	 0         	 8.60696   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 1, r1low: 0, n: 50, r2: 1)                     	 0.000435512	 100       	 0         	 0         	 0.183692  	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                           	 0.000434286	 100       	 1.15132   	 0         	 13.8158   	 0.0833333 
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 1)                                                                       	 0.000422884	 100       	 0         	 0         	 9.45886   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                	 0.000422471	 101       	 0.597674  	 0         	 9.56279   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 1)                                                                                 	 0.000372673	 101       	 0.0135508 	 0         	 0.216812  	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                	 0.000362751	 100       	 0.689178  	 0         	 11.0268   	 0.0625    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 1, m: 50, k: 1)    	 0.000359678	 800       	 0.222421  	 0         	 1.79716   	 0.123762  
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 50)                                                                      	 0.000290296	 8         	 0         	 0         	 55.1162   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                             	 0.000191606	 8         	 0         	 0         	 83.5047   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 1)                                                                	 0.000174254	 109       	 0         	 0         	 0.500419  	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 1, k: 50)     	 0.000124262	 100       	 4.02376   	 0         	 16.7388   	 0.240385  
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 1, r: 1, streamingCols: 0)                      	 6.8361e-05	 9         	 0.0065827 	 0         	 0.10585   	 0.0621891 
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 1, k: 50)  	 6.8261e-05	 100       	 7.32483   	 0         	 30.4713   	 0.240385  
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 1, m: 1, fromLeft: 0)                 	 5.052e-05 	 809       	 0         	 0         	 0.256215  	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 50, r: 50, streamingCols: 0)                    	 3.3031e-05	 1         	 3.78432   	 0         	 1.51373   	 2.5       
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                               	 2.276e-05 	 1         	 0         	 0         	 1.75747   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, r1_: 1, n: 50, r2: 1)             	 2.229e-05 	 9         	 0.0403769 	 0         	 0.326245  	 0.123762  
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)           	 1.095e-05 	 1         	 22.8311   	 0         	 5.47945   	 4.16667   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 0)               	 1.064e-05 	 9         	 0         	 0         	 33.8346   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                  	 8.72e-06  	 1         	 0.573394  	 0         	 2.29358   	 0.25      
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 1)                                                                                   	 8.59e-06  	 1         	 0.0116414 	 0         	 0.0465658 	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 0, m: 50, k: 1)    	 6.071e-06 	 100       	 0         	 0         	 6.5887    	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                        	 4.54e-06  	 1         	 0         	 0         	 8.81057   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 1)                                                                         	 3.13e-06  	 9         	 0         	 0         	 2.30032   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 1.34446   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 1.34441   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                            	 1.21532   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                        	 1.21402   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 1.01188   	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 0.366324  	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 0.239991  	 1818      
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.22549   	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.196341  	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.195191  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_leftOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                   	 0.129018  	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.0403637 	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0324401 	 1000      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0207319 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.0202981 	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.015594  	 918       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 0.0154084 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 0.0153796 	 2         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0148146 	 900       
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                              	 0.0105931 	 20        
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.00844987	 818       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.00495138	 1310      
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.00482245	 18        
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00474463	 1818      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.00426375	 918       
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                              	 0.00395742	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.00395534	 1800      
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                       	 0.00366709	 818       
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00271764	 6372      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00122627	 5051      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00115789	 302       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000857319	 102       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000434286	 100       
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 6.116e-05 	 818       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: L, orthoY: L
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m43->44  [0m[1;34m44->45  [0m[1;34m45->46  [0m[1;34m46->47  [0m[1;34m47->48  [0m[1;34m48->49  [0m[1;34m49->50  [0m[1;34m50->51  [0m[1;34m51->52  [0m[1;34m52->53  [0m[1;34m53->54  [0m[1;34m54->55  [0m[1;34m55->56  [0m[1;34m56->57  [0m[1;34m57->58  [0m[1;34m58->59  [0m[1;34m59->60  [0m[1;34m60->61  [0m[1;34m61->62  [0m[1;34m62->63  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 22880610002816 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 22880431630336 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 22880230303872 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 22880028977408 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 22879827650944 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 22879626324480 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 22879424998016 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 22879223671552 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 22879022345088 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 22878821018624 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 22878619692160 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 22878418365696 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 22878217039232 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 22878015712768 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 22877814386304 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 22877613059840 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 22877411733376 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 22877210406912 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 22877009080448 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 22876807753984 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 22876606427520 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 22876405101056 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 22876203774592 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 22876002448128 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 22875801121664 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 22875599795200 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 22875398468736 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 22875197142272 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 22874995815808 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 22874794489344 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 22874593162880 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 22874391836416 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 22874190505856 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 22873989179392 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 22873787852928 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 22873586526464 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 22873385200000 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 22873183873536 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 22872982547072 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 22872781220608 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 22872579894144 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 22872378567680 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 22872177241216 -> hwthread 43 - OK[0m[1;34m
[0m[1;34m	threadid 22871975914752 -> hwthread 44 - OK[0m[1;34m
[0m[1;34m	threadid 22871774588288 -> hwthread 45 - OK[0m[1;34m
[0m[1;34m	threadid 22871573261824 -> hwthread 46 - OK[0m[1;34m
[0m[1;34m	threadid 22871371935360 -> hwthread 47 - OK[0m[1;34m
[0m[1;34m	threadid 22871170608896 -> hwthread 48 - OK[0m[1;34m
[0m[1;34m	threadid 22870969282432 -> hwthread 49 - OK[0m[1;34m
[0m[1;34m	threadid 22870767955968 -> hwthread 50 - OK[0m[1;34m
[0m[1;34m	threadid 22870566629504 -> hwthread 51 - OK[0m[1;34m
[0m[1;34m	threadid 22870365303040 -> hwthread 52 - OK[0m[1;34m
[0m[1;34m	threadid 22870163976576 -> hwthread 53 - OK[0m[1;34m
[0m[1;34m	threadid 22869962650112 -> hwthread 54 - OK[0m[1;34m
[0m[1;34m	threadid 22869761323648 -> hwthread 55 - OK[0m[1;34m
[0m[1;34m	threadid 22869559997184 -> hwthread 56 - OK[0m[1;34m
[0m[1;34m	threadid 22869358670720 -> hwthread 57 - OK[0m[1;34m
[0m[1;34m	threadid 22869157344256 -> hwthread 58 - OK[0m[1;34m
[0m[1;34m	threadid 22868956017792 -> hwthread 59 - OK[0m[1;34m
[0m[1;34m	threadid 22868754691328 -> hwthread 60 - OK[0m[1;34m
[0m[1;34m	threadid 22868553364864 -> hwthread 61 - OK[0m[1;34m
[0m[1;34m	threadid 22868352038400 -> hwthread 62 - OK[0m[1;34m
[0m[1;34m	threadid 22868150711936 -> hwthread 63 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 22880504342272 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 22880325650176 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
Performance statistics:
function                                                                                                                                                                                                     	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 52, m: 52)                                                                	 0.261315  	 700       	 2.63659   	 0         	 0.174955  	 15.0701   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2600, cols: 52, reductionFactor: 37, colBlockingSize: 12)                 	 0.169746  	 600       	 51.044    	 0         	 3.89959   	 13.0896   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 52, r: 52, r2: 2600, leftOrthog: 0)       	 0.159406  	 600       	 52.9244   	 0         	 12.3762   	 4.27632   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 52, n: 50, r: 52, r2: 52)            	 0.157275  	 600       	 53.6414   	 0         	 8.33505   	 6.43564   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 52)                                                                	 0.0416562 	 100       	 2.18455   	 0         	 0.148837  	 14.6774   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                	 0.0375316 	 100       	 2.33137   	 0         	 0.160931  	 14.4868   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 52, reductionFactor: 37, colBlockingSize: 12)                 	 0.0297608 	 100       	 46.6567   	 0         	 3.56722   	 13.0793   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2600, cols: 50, reductionFactor: 37, colBlockingSize: 12)                 	 0.028716  	 100       	 46.4945   	 0         	 3.69133   	 12.5956   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r: 52, r2: 52)            	 0.0277544 	 100       	 48.7131   	 0         	 7.57226   	 6.4331    
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 52, r: 52, r2: 2500, leftOrthog: 0)       	 0.0240441 	 100       	 56.23     	 0         	 13.1561   	 4.27407   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 52, n: 50, r: 52, r2: 50)            	 0.0218536 	 100       	 61.8662   	 0         	 9.80342   	 6.31068   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 2600, leftOrthog: 0)       	 0.021809  	 100       	 59.6085   	 0         	 14.4895   	 4.11392   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 52, Qr2: 2)       	 0.0192203 	 700       	 0         	 0         	 77.3267   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 100, k: 2)  	 0.011792  	 800       	 1.35685   	 0         	 2.87653   	 0.471698  
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 2, k: 2500)   	 0.0105476 	 800       	 37.9232   	 0         	 78.9409   	 0.4804    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2600, cols: 2, reductionFactor: 37, colBlockingSize: 12)                  	 0.00937866	 700       	 1.59442   	 0         	 3.10731   	 0.513119  
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 2500, m: 2, k: 50)	 0.00797367	 800       	 50.1651   	 0         	 104.424   	 0.4804    
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2600, Xcols: 2, r: 2, streamingCols: 0)                    	 0.00567261	 700       	 1.28336   	 0         	 10.2689   	 0.124976  
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 50)          	 0.00509637	 8         	 19.6218   	 0         	 3.17089   	 6.18812   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 52, reductionFactor: 37, colBlockingSize: 12)                   	 0.00444028	 100       	 6.25429   	 0         	 0.955615  	 6.54478   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.00351314	 9         	 0.426967  	 0         	 0.154733  	 2.75937   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 2, n: 50, r2: 2)                    	 0.00332066	 700       	 0         	 0         	 17.5387   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2600, m: 2)                                                                       	 0.00326654	 700       	 0         	 0         	 17.8293   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2600, m: 2)                                                              	 0.00324755	 700       	 0         	 0         	 17.9335   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 50, Qr2: 2)       	 0.00305618	 100       	 0         	 0         	 68.0588   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 2, n: 50, r2: 2)                                                                                          	 0.00285908	 808       	 0         	 0         	 0.904347  	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                 	 0.00277091	 8         	 37.0646   	 0         	 2.94488   	 12.5861   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                  	 0.00202765	 8         	 24.6591   	 0         	 7.93036   	 3.10945   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 52, r: 50, r2: 50, leftOrthog: 0)         	 0.00151689	 100       	 17.1403   	 0         	 6.75063   	 2.53906   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 2, reductionFactor: 37, colBlockingSize: 12)                  	 0.00148943	 100       	 1.37909   	 0         	 2.68775   	 0.513103  
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 2, m: 2)                                                                   	 0.00115998	 909       	 0.00783636	 0         	 0.0877673 	 0.0892857 
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 50, r2: 50)             	 0.00115539	 100       	 21.6377   	 0         	 5.19305   	 4.16667   
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                  	 0.000907278	 100       	 0.551099  	 0         	 2.2044    	 0.25      
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 2, r: 2, streamingCols: 0)                    	 0.000866948	 100       	 1.15347   	 0         	 9.22962   	 0.124975  
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 2)                                                                                          	 0.000843427	 201       	 0         	 0         	 0.381302  	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 2, reductionFactor: 37, colBlockingSize: 12)                    	 0.00082916	 101       	 0.0500409 	 0         	 0.101346  	 0.493763  
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 2, n: 50, r2: 1)                                                                                          	 0.000772163	 201       	 0         	 0         	 0.416492  	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 2, m: 100, k: 2)   	 0.000762994	 700       	 0.733951  	 0         	 2.96516   	 0.247525  
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 2)   	 0.000747307	 100       	 1.33814   	 0         	 2.89038   	 0.462963  
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 0, n: 50, r2: 2)                    	 0.000608126	 100       	 0         	 0         	 13.1552   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                         	 0.000519453	 100       	 0         	 0         	 7.70041   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 2)                                                              	 0.000518591	 100       	 0         	 0         	 15.4264   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 2)                                                                       	 0.00051547	 100       	 0         	 0         	 15.5198   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 2, n: 50, r2: 1)                    	 0.000502218	 100       	 0         	 0         	 8.28326   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 1, Xr2: 50, Qr1: 1, Qr2: 0)         	 0.00048784	 100       	 0         	 0         	 8.19941   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                           	 0.000431081	 100       	 1.15987   	 0         	 13.9185   	 0.0833333 
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                	 0.00042307	 101       	 0.596828  	 0         	 9.54925   	 0.0625    
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 1, r1low: 0, n: 50, r2: 2)                     	 0.000422339	 100       	 0         	 0         	 0.378843  	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 2, n: 50, r2: 1)                                                                                 	 0.000383057	 101       	 0.0263668 	 0         	 0.421869  	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                	 0.000359461	 100       	 0.695486  	 0         	 11.1278   	 0.0625    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 2, k: 50)     	 0.000348131	 100       	 2.87248   	 0         	 6.20456   	 0.462963  
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                             	 0.000254348	 8         	 0         	 0         	 62.9059   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 50)                                                                      	 0.000241625	 8         	 0         	 0         	 66.2183   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 2)                                                                	 0.000175356	 101       	 0         	 0         	 0.921554  	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 2, k: 50)  	 0.000150065	 100       	 6.66378   	 0         	 14.3938   	 0.462963  
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 2, m: 2, fromLeft: 0)                 	 0.000128304	 809       	 0         	 0         	 0.403542  	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                   	 0.000119514	 1         	 2.14834   	 0         	 0.334689  	 6.41892   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 100, Xcols: 2, r: 2, streamingCols: 0)                     	 8.0083e-05	 8         	 0.0399585 	 0         	 0.321267  	 0.124378  
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 2, m: 50, k: 2)    	 6.8622e-05	 100       	 0.582903  	 0         	 2.37825   	 0.245098  
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 100, cols: 2, reductionFactor: 37, colBlockingSize: 12)                   	 5.066e-05 	 8         	 0.129747  	 0         	 0.257718  	 0.503445  
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 50, r: 50, streamingCols: 0)                    	 3.3171e-05	 1         	 3.76835   	 0         	 1.50734   	 2.5       
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                               	 2.658e-05 	 1         	 0         	 0         	 1.50489   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 2, r1_: 2, n: 50, r2: 2)             	 1.859e-05 	 8         	 0.344271  	 0         	 1.39086   	 0.247525  
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)           	 1.0341e-05	 1         	 24.1756   	 0         	 5.80215   	 4.16667   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 0)               	 9.732e-06 	 9         	 0         	 0         	 36.9914   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 2, n: 50, r2: 1)                                                                                   	 8.84e-06  	 1         	 0.0226244 	 0         	 0.0904977 	 0.25      
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                  	 7.93e-06  	 1         	 0.630517  	 0         	 2.52207   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 0, m: 100, k: 2)   	 6.7e-06   	 100       	 0         	 0         	 23.8806   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 2, r: 2, streamingCols: 0)                      	 5.731e-06 	 1         	 0.0348979 	 0         	 0.281975  	 0.123762  
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                        	 4.18e-06  	 1         	 0         	 0         	 9.56938   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 100, m: 2)                                                                        	 3.17e-06  	 8         	 0         	 0         	 8.07571   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 100, m: 2)                                                               	 3.16e-06  	 8         	 0         	 0         	 8.10127   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 2, r1_: 2, n: 50, r2: 1)             	 8.3e-07   	 1         	 0.481928  	 0         	 1.96627   	 0.245098  
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 2)                                                                         	 8e-07     	 1         	 0         	 0         	 2         	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 1.31007   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 1.31004   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                            	 1.21093   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                        	 1.20957   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 0.995324  	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 0.340502  	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 0.247301  	 1818      
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.233326  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.208039  	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.206776  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_leftOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                   	 0.0990241 	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.041669  	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.0227643 	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.0152067 	 918       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 0.0146959 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 0.014668  	 2         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.0133776 	 1800      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0108958 	 900       
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                              	 0.0105586 	 20        
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.0086862 	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.00812373	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.00512613	 18        
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00512339	 1818      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.00499412	 1310      
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.00485334	 1000      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.00467312	 918       
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                              	 0.00422558	 918       
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                       	 0.00403178	 818       
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00273502	 6372      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00147278	 5272      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00116559	 302       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000924048	 102       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000431081	 100       
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.000138036	 818       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: L, orthoY: L
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m43->44  [0m[1;34m44->45  [0m[1;34m45->46  [0m[1;34m46->47  [0m[1;34m47->48  [0m[1;34m48->49  [0m[1;34m49->50  [0m[1;34m50->51  [0m[1;34m51->52  [0m[1;34m52->53  [0m[1;34m53->54  [0m[1;34m54->55  [0m[1;34m55->56  [0m[1;34m56->57  [0m[1;34m57->58  [0m[1;34m58->59  [0m[1;34m59->60  [0m[1;34m60->61  [0m[1;34m61->62  [0m[1;34m62->63  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 22777644541824 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 22777419524096 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 22777218197632 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 22777016871168 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 22776815544704 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 22776614218240 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 22776412891776 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 22776211565312 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 22776010238848 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 22775808912384 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 22775607585920 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 22775406259456 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 22775204932992 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 22775003606528 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 22774802280064 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 22774600953600 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 22774399627136 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 22774198300672 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 22773996974208 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 22773795647744 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 22773594321280 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 22773392994816 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 22773191668352 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 22772990341888 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 22772789015424 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 22772587688960 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 22772386362496 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 22772185036032 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 22771983709568 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 22771782383104 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 22771581056640 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 22771379730176 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 22771178399616 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 22770977073152 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 22770775746688 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 22770574420224 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 22770373093760 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 22770171767296 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 22769970440832 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 22769769114368 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 22769567787904 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 22769366461440 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 22769165134976 -> hwthread 43 - OK[0m[1;34m
[0m[1;34m	threadid 22768963808512 -> hwthread 44 - OK[0m[1;34m
[0m[1;34m	threadid 22768762482048 -> hwthread 45 - OK[0m[1;34m
[0m[1;34m	threadid 22768561155584 -> hwthread 46 - OK[0m[1;34m
[0m[1;34m	threadid 22768359829120 -> hwthread 47 - OK[0m[1;34m
[0m[1;34m	threadid 22768158502656 -> hwthread 48 - OK[0m[1;34m
[0m[1;34m	threadid 22767957176192 -> hwthread 49 - OK[0m[1;34m
[0m[1;34m	threadid 22767755849728 -> hwthread 50 - OK[0m[1;34m
[0m[1;34m	threadid 22767554523264 -> hwthread 51 - OK[0m[1;34m
[0m[1;34m	threadid 22767353196800 -> hwthread 52 - OK[0m[1;34m
[0m[1;34m	threadid 22767151870336 -> hwthread 53 - OK[0m[1;34m
[0m[1;34m	threadid 22766950543872 -> hwthread 54 - OK[0m[1;34m
[0m[1;34m	threadid 22766749217408 -> hwthread 55 - OK[0m[1;34m
[0m[1;34m	threadid 22766547890944 -> hwthread 56 - OK[0m[1;34m
[0m[1;34m	threadid 22766346564480 -> hwthread 57 - OK[0m[1;34m
[0m[1;34m	threadid 22766145238016 -> hwthread 58 - OK[0m[1;34m
[0m[1;34m	threadid 22765943911552 -> hwthread 59 - OK[0m[1;34m
[0m[1;34m	threadid 22765742585088 -> hwthread 60 - OK[0m[1;34m
[0m[1;34m	threadid 22765541258624 -> hwthread 61 - OK[0m[1;34m
[0m[1;34m	threadid 22765339932160 -> hwthread 62 - OK[0m[1;34m
[0m[1;34m	threadid 22765138605696 -> hwthread 63 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 22777538881280 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 22777532290816 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
Performance statistics:
function                                                                                                                                                                                                     	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 53, m: 53)                                                                	 0.274232  	 700       	 2.66014   	 0         	 0.173167  	 15.3617   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2650, cols: 53, reductionFactor: 37, colBlockingSize: 12)                 	 0.175824  	 600       	 52.1774   	 0         	 3.91097   	 13.3413   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 53, r: 53, r2: 2650, leftOrthog: 0)       	 0.163388  	 600       	 54.6713   	 0         	 12.5435   	 4.35855   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 53, n: 50, r: 53, r2: 53)            	 0.154445  	 600       	 57.837    	 0         	 8.81741   	 6.55941   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 53)                                                                	 0.0418416 	 100       	 2.21669   	 0         	 0.15009   	 14.7691   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                	 0.0386054 	 100       	 2.26652   	 0         	 0.156455  	 14.4868   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 53, reductionFactor: 37, colBlockingSize: 12)                 	 0.0310324 	 100       	 46.4824   	 0         	 3.4882    	 13.3256   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2650, cols: 50, reductionFactor: 37, colBlockingSize: 12)                 	 0.0267933 	 100       	 50.7892   	 0         	 4.03086   	 12.6001   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 53, r: 53, r2: 2500, leftOrthog: 0)       	 0.0264667 	 100       	 53.0666   	 0         	 12.1849   	 4.35511   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r: 53, r2: 53)            	 0.0258185 	 100       	 54.399    	 0         	 8.29821   	 6.55551   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 2650, leftOrthog: 0)       	 0.0244033 	 100       	 54.2959   	 0         	 13.1949   	 4.11491   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 53, n: 50, r: 53, r2: 50)            	 0.018754  	 100       	 74.8905   	 0         	 11.7564   	 6.37019   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 53, Qr2: 3)       	 0.0186715 	 700       	 0         	 0         	 81.9987   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 150, k: 3)  	 0.0171394 	 800       	 2.10043   	 0         	 3.02462   	 0.694444  
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 3, k: 2500)   	 0.0116105 	 800       	 51.6772   	 0         	 73.1198   	 0.706747  
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2650, cols: 3, reductionFactor: 37, colBlockingSize: 12)                  	 0.0102894 	 700       	 3.33278   	 0         	 4.33166   	 0.769399  
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 2500, m: 3, k: 50)	 0.00794196	 800       	 75.5481   	 0         	 106.895   	 0.706747  
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2650, Xcols: 3, r: 3, streamingCols: 0)                    	 0.006928  	 700       	 2.40979   	 0         	 12.8558   	 0.187447  
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 50)          	 0.00509972	 8         	 19.6089   	 0         	 3.1688    	 6.18812   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 53, reductionFactor: 37, colBlockingSize: 12)                   	 0.00479807	 100       	 6.01266   	 0         	 0.910199  	 6.60588   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2650, m: 3)                                                                       	 0.00351447	 700       	 0         	 0         	 25.3352   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2650, m: 3)                                                              	 0.00346612	 700       	 0         	 0         	 25.6887   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.00343193	 9         	 0.43707   	 0         	 0.158395  	 2.75937   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 3, n: 50, r2: 3)                    	 0.00336864	 700       	 0         	 0         	 26.432    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 50, Qr2: 3)       	 0.00270971	 100       	 0         	 0         	 78.2372   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                 	 0.00270616	 8         	 37.9515   	 0         	 3.01535   	 12.5861   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 3, n: 50, r2: 3)                                                                                          	 0.00270047	 808       	 0         	 0         	 2.15429   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                  	 0.00257776	 8         	 19.3967   	 0         	 6.23798   	 3.10945   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 3, reductionFactor: 37, colBlockingSize: 12)                  	 0.00160739	 100       	 2.87522   	 0         	 3.73723   	 0.769347  
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 53, r: 50, r2: 50, leftOrthog: 0)         	 0.00157841	 100       	 16.7891   	 0         	 6.56357   	 2.55792   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 3, m: 3)                                                                   	 0.00152124	 909       	 0.0215114 	 0         	 0.143409  	 0.15      
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 50, r2: 50)             	 0.00120019	 100       	 20.8301   	 0         	 4.99923   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 3, m: 150, k: 3)   	 0.00115983	 700       	 1.62955   	 0         	 4.38892   	 0.371287  
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 3, r: 3, streamingCols: 0)                    	 0.00105157	 100       	 2.13965   	 0         	 11.4149   	 0.187444  
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                  	 0.00090831	 100       	 0.550473  	 0         	 2.20189   	 0.25      
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 3, reductionFactor: 37, colBlockingSize: 12)                    	 0.000823784	 101       	 0.113327  	 0         	 0.155954  	 0.72667   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 3)                                                                                          	 0.000823017	 201       	 0         	 0         	 0.586136  	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 3, n: 50, r2: 1)                                                                                          	 0.000819132	 201       	 0         	 0         	 0.588916  	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 0, n: 50, r2: 3)                    	 0.000698112	 100       	 0         	 0         	 17.1892   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 3)   	 0.000677963	 100       	 2.21251   	 0         	 3.30402   	 0.669643  
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 3)                                                              	 0.00064329	 100       	 0         	 0         	 18.6541   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 3)                                                                       	 0.000597547	 100       	 0         	 0         	 20.0821   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                         	 0.000534306	 100       	 0         	 0         	 7.48635   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 3, n: 50, r2: 1)                    	 0.000506903	 100       	 0         	 0         	 8.36452   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 1, Xr2: 50, Qr1: 1, Qr2: 0)         	 0.000471779	 100       	 0         	 0         	 8.47855   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 1, r1low: 0, n: 50, r2: 3)                     	 0.000431911	 100       	 0         	 0         	 0.55567   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                           	 0.000421023	 100       	 1.18758   	 0         	 14.251    	 0.0833333 
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                	 0.000408657	 101       	 0.617878  	 0         	 9.88604   	 0.0625    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 3, k: 50)     	 0.000395795	 100       	 3.78984   	 0         	 5.6595    	 0.669643  
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 3, n: 50, r2: 1)                                                                                 	 0.000368769	 101       	 0.0410826 	 0         	 0.657322  	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                	 0.000345  	 100       	 0.724638  	 0         	 11.5942   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 50)                                                                      	 0.000307547	 8         	 0         	 0         	 52.0246   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                             	 0.000260945	 8         	 0         	 0         	 61.3156   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 3)                                                                	 0.000195951	 101       	 0         	 0         	 1.23704   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 3, k: 50)  	 0.000131974	 100       	 11.3659   	 0         	 16.973    	 0.669643  
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                   	 0.000131853	 1         	 1.9473    	 0         	 0.303368  	 6.41892   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 150, Xcols: 3, r: 3, streamingCols: 0)                     	 8.8382e-05	 8         	 0.122197  	 0         	 0.654975  	 0.186567  
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 3, m: 3, fromLeft: 0)                 	 8.0992e-05	 809       	 0         	 0         	 1.43836   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 3, m: 50, k: 3)    	 6.922e-05 	 100       	 1.3002    	 0         	 3.57122   	 0.364078  
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 150, cols: 3, reductionFactor: 37, colBlockingSize: 12)                   	 5.1821e-05	 8         	 0.428085  	 0         	 0.566874  	 0.755167  
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 50, r: 50, streamingCols: 0)                    	 3.3971e-05	 1         	 3.67961   	 0         	 1.47184   	 2.5       
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 150, m: 3)                                                               	 2.8981e-05	 8         	 0         	 0         	 1.98751   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                               	 2.2431e-05	 1         	 0         	 0         	 1.78325   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 3, r1_: 3, n: 50, r2: 3)             	 2.064e-05 	 8         	 1.04651   	 0         	 2.8186    	 0.371287  
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 3, r: 3, streamingCols: 0)                      	 1.4481e-05	 1         	 0.0310752 	 0         	 0.16822   	 0.184729  
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 3, n: 50, r2: 1)                                                                                   	 1.051e-05 	 1         	 0.0285442 	 0         	 0.114177  	 0.25      
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 0)               	 1.017e-05 	 9         	 0         	 0         	 35.3982   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)           	 9.861e-06 	 1         	 25.3524   	 0         	 6.08458   	 4.16667   
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                  	 9.02e-06  	 1         	 0.554324  	 0         	 2.21729   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 0, m: 150, k: 3)   	 7.37e-06  	 100       	 0         	 0         	 48.8467   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 150, m: 3)                                                                        	 5.871e-06 	 8         	 0         	 0         	 9.81094   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                        	 4.37e-06  	 1         	 0         	 0         	 9.15332   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 3)                                                                         	 8.9e-07   	 1         	 0         	 0         	 2.69663   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 3, r1_: 3, n: 50, r2: 1)             	 6.5e-07   	 1         	 1.38462   	 0         	 3.80308   	 0.364078  
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 1.36131   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 1.36128   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                            	 1.25195   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                        	 1.2506    	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 1.04337   	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 0.354679  	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 0.254058  	 1818      
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.239089  	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.215836  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.200217  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_leftOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                   	 0.109251  	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.0467799 	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.021853  	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.0190537 	 1800      
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.0161666 	 918       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 0.0152535 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 0.0152227 	 2         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0120063 	 900       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.0106942 	 818       
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                              	 0.0103163 	 20        
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.00807394	 900       
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00539773	 1818      
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.00513087	 18        
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.00500557	 1000      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.00495317	 918       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.00487692	 1310      
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                              	 0.00461772	 918       
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                       	 0.0044307 	 818       
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00297072	 6372      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00135037	 5272      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00112243	 302       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.00092784	 102       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000421023	 100       
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 9.1162e-05	 818       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: L, orthoY: L
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m43->44  [0m[1;34m44->45  [0m[1;34m45->46  [0m[1;34m46->47  [0m[1;34m47->48  [0m[1;34m48->49  [0m[1;34m49->50  [0m[1;34m50->51  [0m[1;34m51->52  [0m[1;34m52->53  [0m[1;34m53->54  [0m[1;34m54->55  [0m[1;34m55->56  [0m[1;34m56->57  [0m[1;34m57->58  [0m[1;34m58->59  [0m[1;34m59->60  [0m[1;34m60->61  [0m[1;34m61->62  [0m[1;34m62->63  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 22758692546432 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 22758494824448 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 22758293497984 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 22758092171520 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 22757890845056 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 22757689518592 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 22757488192128 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 22757286865664 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 22757085539200 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 22756884212736 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 22756682886272 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 22756481559808 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 22756280233344 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 22756078906880 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 22755877580416 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 22755676253952 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 22755474927488 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 22755273601024 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 22755072274560 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 22754870948096 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 22754669621632 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 22754468295168 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 22754266968704 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 22754065642240 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 22753864315776 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 22753662989312 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 22753461662848 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 22753260336384 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 22753059009920 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 22752857683456 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 22752656356992 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 22752455030528 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 22752253699968 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 22752052373504 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 22751851047040 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 22751649720576 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 22751448394112 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 22751247067648 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 22751045741184 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 22750844414720 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 22750643088256 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 22750441761792 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 22750240435328 -> hwthread 43 - OK[0m[1;34m
[0m[1;34m	threadid 22750039108864 -> hwthread 44 - OK[0m[1;34m
[0m[1;34m	threadid 22749837782400 -> hwthread 45 - OK[0m[1;34m
[0m[1;34m	threadid 22749636455936 -> hwthread 46 - OK[0m[1;34m
[0m[1;34m	threadid 22749435129472 -> hwthread 47 - OK[0m[1;34m
[0m[1;34m	threadid 22749233803008 -> hwthread 48 - OK[0m[1;34m
[0m[1;34m	threadid 22749032476544 -> hwthread 49 - OK[0m[1;34m
[0m[1;34m	threadid 22748831150080 -> hwthread 50 - OK[0m[1;34m
[0m[1;34m	threadid 22748629823616 -> hwthread 51 - OK[0m[1;34m
[0m[1;34m	threadid 22748428497152 -> hwthread 52 - OK[0m[1;34m
[0m[1;34m	threadid 22748227170688 -> hwthread 53 - OK[0m[1;34m
[0m[1;34m	threadid 22748025844224 -> hwthread 54 - OK[0m[1;34m
[0m[1;34m	threadid 22747824517760 -> hwthread 55 - OK[0m[1;34m
[0m[1;34m	threadid 22747623191296 -> hwthread 56 - OK[0m[1;34m
[0m[1;34m	threadid 22747421864832 -> hwthread 57 - OK[0m[1;34m
[0m[1;34m	threadid 22747220538368 -> hwthread 58 - OK[0m[1;34m
[0m[1;34m	threadid 22747019211904 -> hwthread 59 - OK[0m[1;34m
[0m[1;34m	threadid 22746817885440 -> hwthread 60 - OK[0m[1;34m
[0m[1;34m	threadid 22746616558976 -> hwthread 61 - OK[0m[1;34m
[0m[1;34m	threadid 22746415232512 -> hwthread 62 - OK[0m[1;34m
[0m[1;34m	threadid 22746213906048 -> hwthread 63 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 22758586885888 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 22758580295424 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
Performance statistics:
function                                                                                                                                                                                                     	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 54, m: 54)                                                                	 0.284096  	 700       	 2.71589   	 0         	 0.173502  	 15.6534   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2700, cols: 54, reductionFactor: 37, colBlockingSize: 12)                 	 0.176955  	 600       	 54.8342   	 0         	 4.034     	 13.593    
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 54, r: 54, r2: 2700, leftOrthog: 0)       	 0.15951   	 600       	 59.2305   	 0         	 13.3378   	 4.44079   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 54, n: 50, r: 54, r2: 54)            	 0.159409  	 600       	 59.2681   	 0         	 8.86826   	 6.68317   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 54)                                                                	 0.0422658 	 100       	 2.23585   	 0         	 0.150476  	 14.8585   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                	 0.0374632 	 100       	 2.33562   	 0         	 0.161225  	 14.4868   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 54, reductionFactor: 37, colBlockingSize: 12)                 	 0.0332077 	 100       	 45.0921   	 0         	 3.32251   	 13.5717   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2700, cols: 50, reductionFactor: 37, colBlockingSize: 12)                 	 0.0265853 	 100       	 52.1524   	 0         	 4.13763   	 12.6044   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r: 54, r2: 54)            	 0.0253929 	 100       	 57.4176   	 0         	 8.59818   	 6.67788   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 54, r: 54, r2: 2500, leftOrthog: 0)       	 0.0236211 	 100       	 61.7245   	 0         	 13.9141   	 4.43612   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 2700, leftOrthog: 0)       	 0.0216825 	 100       	 62.2621   	 0         	 15.1274   	 4.11585   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 200, k: 4)  	 0.0212759 	 800       	 3.00809   	 0         	 3.3089    	 0.909091  
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 54, n: 50, r: 54, r2: 50)            	 0.0194362 	 100       	 75.0148   	 0         	 11.669    	 6.42857   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 54, Qr2: 4)       	 0.0181707 	 700       	 0         	 0         	 86.7857   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 4, k: 2500)   	 0.0121735 	 800       	 65.7163   	 0         	 71.0787   	 0.924556  
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2700, cols: 4, reductionFactor: 37, colBlockingSize: 12)                  	 0.0107251 	 700       	 5.79149   	 0         	 5.64744   	 1.02551   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 2500, m: 4, k: 50)	 0.00803771	 800       	 99.5308   	 0         	 107.653   	 0.924556  
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2700, Xcols: 4, r: 4, streamingCols: 0)                    	 0.00761355	 700       	 3.97187   	 0         	 15.8933   	 0.249907  
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 54, reductionFactor: 37, colBlockingSize: 12)                   	 0.00501624	 100       	 5.97023   	 0         	 0.895651  	 6.6658    
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 50)          	 0.00482403	 8         	 20.7295   	 0         	 3.34989   	 6.18812   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2700, m: 4)                                                              	 0.00352568	 700       	 0         	 0         	 34.3083   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.00349633	 9         	 0.42902   	 0         	 0.155477  	 2.75937   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 4, n: 50, r2: 4)                    	 0.00349391	 700       	 0         	 0         	 34.6202   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2700, m: 4)                                                                       	 0.00339806	 700       	 0         	 0         	 35.5968   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                 	 0.00283617	 8         	 36.2118   	 0         	 2.87712   	 12.5861   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 4, n: 50, r2: 4)                                                                                          	 0.00276557	 808       	 0         	 0         	 3.7397    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 50, Qr2: 4)       	 0.00273235	 100       	 0         	 0         	 79.0528   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                  	 0.00177041	 8         	 28.2421   	 0         	 9.08266   	 3.10945   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 4, m: 4)                                                                   	 0.00168189	 909       	 0.0453989 	 0         	 0.224833  	 0.201923  
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 4, reductionFactor: 37, colBlockingSize: 12)                  	 0.00156659	 100       	 5.24466   	 0         	 5.11482   	 1.02539   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 54, r: 50, r2: 50, leftOrthog: 0)         	 0.00143954	 100       	 18.756    	 0         	 7.28012   	 2.57634   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 4, m: 200, k: 4)   	 0.00116008	 700       	 3.86182   	 0         	 7.80087   	 0.49505   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 4, r: 4, streamingCols: 0)                    	 0.00113323	 100       	 3.52972   	 0         	 14.1245   	 0.2499    
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 50, r2: 50)             	 0.00108414	 100       	 23.0598   	 0         	 5.53434   	 4.16667   
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                  	 0.000864737	 100       	 0.57821   	 0         	 2.31284   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 4)                                                                                          	 0.000825179	 201       	 0         	 0         	 0.779467  	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 4, reductionFactor: 37, colBlockingSize: 12)                    	 0.000781393	 101       	 0.2124    	 0         	 0.223355  	 0.950951  
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 4, n: 50, r2: 1)                                                                                          	 0.000755585	 201       	 0         	 0         	 0.851261  	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 0, n: 50, r2: 4)                    	 0.000739249	 100       	 0         	 0         	 21.6436   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 4)                                                                       	 0.000622276	 100       	 0         	 0         	 25.7121   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 4)                                                              	 0.000617229	 100       	 0         	 0         	 25.9223   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 4)   	 0.000613626	 100       	 3.25931   	 0         	 3.7808    	 0.862069  
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                         	 0.000529865	 100       	 0         	 0         	 7.54909   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 4, n: 50, r2: 1)                    	 0.000469658	 100       	 0         	 0         	 9.19818   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 1, Xr2: 50, Qr1: 1, Qr2: 0)         	 0.000454199	 100       	 0         	 0         	 8.80671   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 1, r1low: 0, n: 50, r2: 4)                     	 0.000443692	 100       	 0         	 0         	 0.721221  	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                           	 0.000421053	 100       	 1.1875    	 0         	 14.25     	 0.0833333 
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 4, k: 50)     	 0.000418341	 100       	 4.78079   	 0         	 5.54572   	 0.862069  
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                	 0.00040519	 101       	 0.623164  	 0         	 9.97063   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 4, n: 50, r2: 1)                                                                                 	 0.000365386	 101       	 0.055284  	 0         	 0.884544  	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                	 0.000343371	 100       	 0.728075  	 0         	 11.6492   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                             	 0.000342541	 8         	 0         	 0         	 46.7097   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 50)                                                                      	 0.000217433	 8         	 0         	 0         	 73.5859   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 4)                                                                	 0.000187167	 101       	 0         	 0         	 1.7268    	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                   	 0.000172475	 1         	 1.48866   	 0         	 0.231918  	 6.41892   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 4, k: 50)  	 0.000135205	 100       	 14.7924   	 0         	 17.1591   	 0.862069  
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 200, Xcols: 4, r: 4, streamingCols: 0)                     	 0.000100872	 8         	 0.253787  	 0         	 1.02022   	 0.248756  
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 4, m: 4, fromLeft: 0)                 	 9.0872e-05	 809       	 0         	 0         	 2.27907   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 4, m: 50, k: 4)    	 5.0871e-05	 100       	 3.14521   	 0         	 6.54204   	 0.480769  
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 200, cols: 4, reductionFactor: 37, colBlockingSize: 12)                   	 4.9542e-05	 8         	 1.0614    	 0         	 1.05414   	 1.00689   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 50, r: 50, streamingCols: 0)                    	 3.3161e-05	 1         	 3.76949   	 0         	 1.5078    	 2.5       
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 200, m: 4)                                                               	 3.006e-05 	 8         	 0         	 0         	 3.40652   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                               	 2.221e-05 	 1         	 0         	 0         	 1.80099   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 4, r1_: 4, n: 50, r2: 4)             	 2.1971e-05	 8         	 2.33034   	 0         	 4.7073    	 0.49505   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 4, r: 4, streamingCols: 0)                      	 1.467e-05 	 1         	 0.0545331 	 0         	 0.222495  	 0.245098  
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)           	 1.041e-05 	 1         	 24.0154   	 0         	 5.76369   	 4.16667   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 0)               	 1.007e-05 	 9         	 0         	 0         	 35.7498   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                  	 9.39e-06  	 1         	 0.532481  	 0         	 2.12993   	 0.25      
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 4, n: 50, r2: 1)                                                                                   	 9.1e-06   	 1         	 0.043956  	 0         	 0.175824  	 0.25      
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 200, m: 4)                                                                        	 8.1e-06   	 8         	 0         	 0         	 12.642    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 0, m: 200, k: 4)   	 7.351e-06 	 100       	 0         	 0         	 87.063    	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                        	 4.25e-06  	 1         	 0         	 0         	 9.41176   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 4)                                                                         	 9e-07     	 1         	 0         	 0         	 3.55556   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 4, r1_: 4, n: 50, r2: 1)             	 6.8e-07   	 1         	 2.35294   	 0         	 4.89412   	 0.480769  
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 1.35675   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 1.35672   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                            	 1.24219   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                        	 1.24089   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 1.02998   	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 0.363825  	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 0.257895  	 1818      
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.242414  	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.206253  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.205322  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_leftOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                   	 0.114439  	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.0467366 	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.0231079 	 1800      
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.0213573 	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.0166378 	 918       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 0.0144943 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 0.0144651 	 2         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0125919 	 900       
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                              	 0.0109925 	 20        
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.0106659 	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.00817291	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.00517822	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.00514651	 1000      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0048762 	 1310      
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.00485709	 18        
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                              	 0.00472489	 918       
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00463437	 1818      
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                       	 0.00425102	 818       
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00253289	 6372      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00114945	 5272      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00111395	 302       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000883227	 102       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000421053	 100       
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.000100942	 818       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: L, orthoY: L
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m43->44  [0m[1;34m44->45  [0m[1;34m45->46  [0m[1;34m46->47  [0m[1;34m47->48  [0m[1;34m48->49  [0m[1;34m49->50  [0m[1;34m50->51  [0m[1;34m51->52  [0m[1;34m52->53  [0m[1;34m53->54  [0m[1;34m54->55  [0m[1;34m55->56  [0m[1;34m56->57  [0m[1;34m57->58  [0m[1;34m58->59  [0m[1;34m59->60  [0m[1;34m60->61  [0m[1;34m61->62  [0m[1;34m62->63  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 23320991287168 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 23320799995904 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 23320598669440 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 23320397342976 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 23320196016512 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 23319994690048 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 23319793363584 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 23319592037120 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 23319390710656 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 23319189384192 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 23318988057728 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 23318786731264 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 23318585404800 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 23318384078336 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 23318182751872 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 23317981425408 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 23317780098944 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 23317578772480 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 23317377446016 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 23317176119552 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 23316974793088 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 23316773466624 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 23316572140160 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 23316370813696 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 23316169487232 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 23315968160768 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 23315766834304 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 23315565507840 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 23315364181376 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 23315162854912 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 23314961528448 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 23314760201984 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 23314558871424 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 23314357544960 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 23314156218496 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 23313954892032 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 23313753565568 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 23313552239104 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 23313350912640 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 23313149586176 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 23312948259712 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 23312746933248 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 23312545606784 -> hwthread 43 - OK[0m[1;34m
[0m[1;34m	threadid 23312344280320 -> hwthread 44 - OK[0m[1;34m
[0m[1;34m	threadid 23312142953856 -> hwthread 45 - OK[0m[1;34m
[0m[1;34m	threadid 23311941627392 -> hwthread 46 - OK[0m[1;34m
[0m[1;34m	threadid 23311740300928 -> hwthread 47 - OK[0m[1;34m
[0m[1;34m	threadid 23311538974464 -> hwthread 48 - OK[0m[1;34m
[0m[1;34m	threadid 23311337648000 -> hwthread 49 - OK[0m[1;34m
[0m[1;34m	threadid 23311136321536 -> hwthread 50 - OK[0m[1;34m
[0m[1;34m	threadid 23310934995072 -> hwthread 51 - OK[0m[1;34m
[0m[1;34m	threadid 23310733668608 -> hwthread 52 - OK[0m[1;34m
[0m[1;34m	threadid 23310532342144 -> hwthread 53 - OK[0m[1;34m
[0m[1;34m	threadid 23310331015680 -> hwthread 54 - OK[0m[1;34m
[0m[1;34m	threadid 23310129689216 -> hwthread 55 - OK[0m[1;34m
[0m[1;34m	threadid 23309928362752 -> hwthread 56 - OK[0m[1;34m
[0m[1;34m	threadid 23309727036288 -> hwthread 57 - OK[0m[1;34m
[0m[1;34m	threadid 23309525709824 -> hwthread 58 - OK[0m[1;34m
[0m[1;34m	threadid 23309324383360 -> hwthread 59 - OK[0m[1;34m
[0m[1;34m	threadid 23309123056896 -> hwthread 60 - OK[0m[1;34m
[0m[1;34m	threadid 23308921730432 -> hwthread 61 - OK[0m[1;34m
[0m[1;34m	threadid 23308720403968 -> hwthread 62 - OK[0m[1;34m
[0m[1;34m	threadid 23308519077504 -> hwthread 63 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 23320885626624 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 23320879036160 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
Performance statistics:
function                                                                                                                                                                                                     	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 55, m: 55)                                                                	 0.285168  	 700       	 2.85879   	 0         	 0.179291  	 15.945    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2750, cols: 55, reductionFactor: 37, colBlockingSize: 12)                 	 0.182765  	 600       	 56.0954   	 0         	 4.05175   	 13.8447   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 55, n: 50, r: 55, r2: 55)            	 0.174459  	 600       	 57.2196   	 0         	 8.40608   	 6.80693   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 55, r: 55, r2: 2750, leftOrthog: 0)       	 0.173778  	 600       	 57.4441   	 0         	 12.7004   	 4.52303   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 55)                                                                	 0.0422363 	 100       	 2.27885   	 0         	 0.152475  	 14.9457   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                	 0.0398219 	 100       	 2.19728   	 0         	 0.151675  	 14.4868   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 55, reductionFactor: 37, colBlockingSize: 12)                 	 0.0345823 	 100       	 44.9182   	 0         	 3.25079   	 13.8176   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 250, k: 5)  	 0.0286615 	 800       	 3.489     	 0         	 3.12614   	 1.11607   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 55, r: 55, r2: 2500, leftOrthog: 0)       	 0.0264056 	 100       	 57.2795   	 0         	 12.6806   	 4.51708   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2750, cols: 50, reductionFactor: 37, colBlockingSize: 12)                 	 0.0261042 	 100       	 54.097    	 0         	 4.29049   	 12.6086   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r: 55, r2: 55)            	 0.0260917 	 100       	 57.9687   	 0         	 8.52457   	 6.8002    
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 2750, leftOrthog: 0)       	 0.024184  	 100       	 56.8559   	 0         	 13.8108   	 4.11677   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 55, n: 50, r: 55, r2: 50)            	 0.0215685 	 100       	 70.1254   	 0         	 10.8121   	 6.48585   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 55, Qr2: 5)       	 0.0208999 	 700       	 0         	 0         	 77.7039   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 5, k: 2500)   	 0.0133006 	 800       	 75.1846   	 0         	 66.2828   	 1.1343    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2750, cols: 5, reductionFactor: 37, colBlockingSize: 12)                  	 0.0117733 	 700       	 8.39626   	 0         	 6.55214   	 1.28145   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2750, Xcols: 5, r: 5, streamingCols: 0)                    	 0.00936578	 700       	 5.13838   	 0         	 16.4503   	 0.312358  
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 2500, m: 5, k: 50)	 0.00874535	 800       	 114.346   	 0         	 100.808   	 1.1343    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 55, reductionFactor: 37, colBlockingSize: 12)                   	 0.00501048	 100       	 6.20052   	 0         	 0.922068  	 6.72458   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 50)          	 0.00486088	 8         	 20.5724   	 0         	 3.3245    	 6.18812   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 5, n: 50, r2: 5)                    	 0.00401251	 700       	 0         	 0         	 38.38     	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2750, m: 5)                                                                       	 0.00395302	 700       	 0         	 0         	 38.9576   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2750, m: 5)                                                              	 0.0038821 	 700       	 0         	 0         	 39.6692   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.00350502	 9         	 0.427956  	 0         	 0.155092  	 2.75937   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 5, n: 50, r2: 5)                                                                                          	 0.0029367 	 808       	 0         	 0         	 5.50278   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 50, Qr2: 5)       	 0.00286519	 100       	 0         	 0         	 76.7838   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                 	 0.00275289	 8         	 37.3072   	 0         	 2.96416   	 12.5861   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 5, m: 250, k: 5)   	 0.00237951	 700       	 3.67722   	 0         	 5.94239   	 0.618812  
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 5, m: 5)                                                                   	 0.00216721	 909       	 0.0696261 	 0         	 0.268438  	 0.259375  
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 5, reductionFactor: 37, colBlockingSize: 12)                  	 0.00191203	 100       	 6.71425   	 0         	 5.24051   	 1.28122   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                  	 0.00178247	 8         	 28.051    	 0         	 9.02121   	 3.10945   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 55, r: 50, r2: 50, leftOrthog: 0)         	 0.00154559	 100       	 17.7925   	 0         	 6.8582    	 2.59434   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 5, r: 5, streamingCols: 0)                    	 0.00136361	 100       	 4.58343   	 0         	 14.6743   	 0.312344  
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 50, r2: 50)             	 0.00120313	 100       	 20.7791   	 0         	 4.98698   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 0, n: 50, r2: 5)                    	 0.000952231	 100       	 0         	 0         	 21.0033   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                  	 0.000899359	 100       	 0.555952  	 0         	 2.22381   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 5)                                                                                          	 0.000833979	 201       	 0         	 0         	 0.964053  	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 5, reductionFactor: 37, colBlockingSize: 12)                    	 0.000830844	 101       	 0.312122  	 0         	 0.267439  	 1.16708   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 5, n: 50, r2: 1)                                                                                          	 0.000817868	 201       	 0         	 0         	 0.983044  	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 5)                                                                       	 0.00075078	 100       	 0         	 0         	 26.639    	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 5)                                                              	 0.000721927	 100       	 0         	 0         	 27.7036   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 5)   	 0.000703383	 100       	 3.55425   	 0         	 3.41208   	 1.04167   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                         	 0.000554218	 100       	 0         	 0         	 7.21738   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 5, n: 50, r2: 1)                    	 0.000485127	 100       	 0         	 0         	 9.06979   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 5, k: 50)     	 0.000476668	 100       	 5.24474   	 0         	 5.03495   	 1.04167   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 1, Xr2: 50, Qr1: 1, Qr2: 0)         	 0.000471385	 100       	 0         	 0         	 8.48563   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                	 0.000439411	 101       	 0.574633  	 0         	 9.19413   	 0.0625    
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                           	 0.000425427	 100       	 1.17529   	 0         	 14.1035   	 0.0833333 
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 1, r1low: 0, n: 50, r2: 5)                     	 0.000423869	 100       	 0         	 0         	 0.943688  	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 5, n: 50, r2: 1)                                                                                 	 0.000381213	 101       	 0.0662359 	 0         	 1.05977   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                	 0.00036258	 100       	 0.689503  	 0         	 11.032    	 0.0625    
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                             	 0.000292936	 8         	 0         	 0         	 54.6194   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 50)                                                                      	 0.000278318	 8         	 0         	 0         	 57.4882   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 5)                                                                	 0.000188212	 101       	 0         	 0         	 2.14652   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 5, k: 50)  	 0.000168744	 100       	 14.8153   	 0         	 14.2227   	 1.04167   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 5, m: 5, fromLeft: 0)                 	 0.000129102	 809       	 0         	 0         	 2.50655   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 250, Xcols: 5, r: 5, streamingCols: 0)                     	 0.000118631	 8         	 0.421475  	 0         	 1.35546   	 0.310945  
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                   	 0.000117673	 1         	 2.18195   	 0         	 0.339925  	 6.41892   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 5, m: 50, k: 5)    	 7.2152e-05	 100       	 3.46491   	 0         	 5.82104   	 0.595238  
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 250, cols: 5, reductionFactor: 37, colBlockingSize: 12)                   	 6.0525e-05	 8         	 1.69686   	 0         	 1.3482    	 1.25861   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 50, r: 50, streamingCols: 0)                    	 3.7471e-05	 1         	 3.33591   	 0         	 1.33437   	 2.5       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 5, r1_: 5, n: 50, r2: 5)             	 2.931e-05 	 8         	 3.4118    	 0         	 5.51348   	 0.618812  
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 250, m: 5)                                                               	 2.929e-05 	 8         	 0         	 0         	 5.46262   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 250, m: 5)                                                                        	 2.889e-05 	 8         	 0         	 0         	 5.53825   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                               	 2.3211e-05	 1         	 0         	 0         	 1.72332   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 5, r: 5, streamingCols: 0)                      	 1.9271e-05	 1         	 0.0648643 	 0         	 0.212755  	 0.304878  
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 0)               	 1.089e-05 	 9         	 0         	 0         	 33.0579   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)           	 1.054e-05 	 1         	 23.7192   	 0         	 5.6926    	 4.16667   
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 5, n: 50, r2: 1)                                                                                   	 9.03e-06  	 1         	 0.055371  	 0         	 0.221484  	 0.25      
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                  	 8.781e-06 	 1         	 0.569411  	 0         	 2.27764   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 0, m: 250, k: 5)   	 7.47e-06  	 100       	 0         	 0         	 133.869   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                        	 4.13e-06  	 1         	 0         	 0         	 9.68523   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 5, r1_: 5, n: 50, r2: 1)             	 1.06e-06  	 1         	 2.35849   	 0         	 3.96226   	 0.595238  
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 5)                                                                         	 9.3e-07   	 1         	 0         	 0         	 4.30108   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 1.46173   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 1.4617    	 100       
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                            	 1.32638   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                        	 1.32502   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 1.09492   	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 0.367226  	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 0.26591   	 1818      
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.24912   	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.225913  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.223323  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_leftOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                   	 0.135234  	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.0520075 	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.0318241 	 1800      
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.0242364 	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.0179755 	 918       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 0.0144221 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 0.0143932 	 2         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0137773 	 900       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.0126872 	 818       
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                              	 0.0107411 	 20        
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0089141 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.00587374	 1000      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.00567222	 918       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.00514276	 1310      
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                              	 0.00513768	 918       
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                       	 0.00501607	 818       
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00499312	 1818      
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.00490179	 18        
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00289872	 6372      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00121247	 5272      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.0011832 	 302       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.00091717	 102       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000425427	 100       
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.000139992	 818       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: L, orthoY: L
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m43->44  [0m[1;34m44->45  [0m[1;34m45->46  [0m[1;34m46->47  [0m[1;34m47->48  [0m[1;34m48->49  [0m[1;34m49->50  [0m[1;34m50->51  [0m[1;34m51->52  [0m[1;34m52->53  [0m[1;34m53->54  [0m[1;34m54->55  [0m[1;34m55->56  [0m[1;34m56->57  [0m[1;34m57->58  [0m[1;34m58->59  [0m[1;34m59->60  [0m[1;34m60->61  [0m[1;34m61->62  [0m[1;34m62->63  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 23393694570368 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 23393478895616 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 23393277569152 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 23393076242688 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 23392874916224 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 23392673589760 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 23392472263296 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 23392270936832 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 23392069610368 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 23391868283904 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 23391666957440 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 23391465630976 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 23391264304512 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 23391062978048 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 23390861651584 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 23390660325120 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 23390458998656 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 23390257672192 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 23390056345728 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 23389855019264 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 23389653692800 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 23389452366336 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 23389251039872 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 23389049713408 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 23388848386944 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 23388647060480 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 23388445734016 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 23388244407552 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 23388043081088 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 23387841754624 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 23387640428160 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 23387439101696 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 23387237771136 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 23387036444672 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 23386835118208 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 23386633791744 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 23386432465280 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 23386231138816 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 23386029812352 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 23385828485888 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 23385627159424 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 23385425832960 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 23385224506496 -> hwthread 43 - OK[0m[1;34m
[0m[1;34m	threadid 23385023180032 -> hwthread 44 - OK[0m[1;34m
[0m[1;34m	threadid 23384821853568 -> hwthread 45 - OK[0m[1;34m
[0m[1;34m	threadid 23384620527104 -> hwthread 46 - OK[0m[1;34m
[0m[1;34m	threadid 23384419200640 -> hwthread 47 - OK[0m[1;34m
[0m[1;34m	threadid 23384217874176 -> hwthread 48 - OK[0m[1;34m
[0m[1;34m	threadid 23384016547712 -> hwthread 49 - OK[0m[1;34m
[0m[1;34m	threadid 23383815221248 -> hwthread 50 - OK[0m[1;34m
[0m[1;34m	threadid 23383613894784 -> hwthread 51 - OK[0m[1;34m
[0m[1;34m	threadid 23383412568320 -> hwthread 52 - OK[0m[1;34m
[0m[1;34m	threadid 23383211241856 -> hwthread 53 - OK[0m[1;34m
[0m[1;34m	threadid 23383009915392 -> hwthread 54 - OK[0m[1;34m
[0m[1;34m	threadid 23382808588928 -> hwthread 55 - OK[0m[1;34m
[0m[1;34m	threadid 23382607262464 -> hwthread 56 - OK[0m[1;34m
[0m[1;34m	threadid 23382405936000 -> hwthread 57 - OK[0m[1;34m
[0m[1;34m	threadid 23382204609536 -> hwthread 58 - OK[0m[1;34m
[0m[1;34m	threadid 23382003283072 -> hwthread 59 - OK[0m[1;34m
[0m[1;34m	threadid 23381801956608 -> hwthread 60 - OK[0m[1;34m
[0m[1;34m	threadid 23381600630144 -> hwthread 61 - OK[0m[1;34m
[0m[1;34m	threadid 23381399303680 -> hwthread 62 - OK[0m[1;34m
[0m[1;34m	threadid 23381197977216 -> hwthread 63 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 23393588909824 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 23393582319360 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
Performance statistics:
function                                                                                                                                                                                                     	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 56, m: 56)                                                                	 0.282605  	 700       	 3.04495   	 0         	 0.187535  	 16.2367   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2800, cols: 56, reductionFactor: 37, colBlockingSize: 12)                 	 0.188141  	 600       	 57.5193   	 0         	 4.08041   	 14.0964   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 56, r: 56, r2: 2800, leftOrthog: 0)       	 0.16522   	 600       	 63.7755   	 0         	 13.8484   	 4.60526   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 56, n: 50, r: 56, r2: 56)            	 0.158383  	 600       	 66.5285   	 0         	 9.59911   	 6.93069   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 56)                                                                	 0.041686  	 100       	 2.35091   	 0         	 0.156407  	 15.0307   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                	 0.0366425 	 100       	 2.38793   	 0         	 0.164836  	 14.4868   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 56, reductionFactor: 37, colBlockingSize: 12)                 	 0.0335414 	 100       	 48.0117   	 0         	 3.41396   	 14.0634   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2800, cols: 50, reductionFactor: 37, colBlockingSize: 12)                 	 0.0264241 	 100       	 54.4139   	 0         	 4.31425   	 12.6126   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r: 56, r2: 56)            	 0.0242317 	 100       	 64.7086   	 0         	 9.34762   	 6.92247   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 56, r: 56, r2: 2500, leftOrthog: 0)       	 0.0227711 	 100       	 68.8593   	 0         	 14.9759   	 4.598     
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 2800, leftOrthog: 0)       	 0.0220582 	 100       	 63.4684   	 0         	 15.4138   	 4.11765   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 56, n: 50, r: 56, r2: 50)            	 0.0217267 	 100       	 72.1691   	 0         	 11.0316   	 6.54206   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 56, Qr2: 6)       	 0.0195862 	 700       	 0         	 0         	 85.3743   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 6, k: 2500)   	 0.0129385 	 800       	 92.7467   	 0         	 69.3992   	 1.33642   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2800, cols: 6, reductionFactor: 37, colBlockingSize: 12)                  	 0.0125602 	 700       	 11.5391   	 0         	 7.50636   	 1.53725   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2800, Xcols: 6, r: 6, streamingCols: 0)                    	 0.00948309	 700       	 7.44062   	 0         	 19.8523   	 0.374799  
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 56, reductionFactor: 37, colBlockingSize: 12)                   	 0.00888474	 100       	 3.62504   	 0         	 0.53449   	 6.78225   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 300, k: 6)  	 0.00859785	 800       	 16.7484   	 0         	 12.7288   	 1.31579   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 2500, m: 6, k: 50)	 0.00835592	 800       	 143.611   	 0         	 107.459   	 1.33642   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 50)          	 0.00486079	 8         	 20.5728   	 0         	 3.32456   	 6.18812   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2800, m: 6)                                                                       	 0.0039327 	 700       	 0         	 0         	 47.845    	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2800, m: 6)                                                              	 0.00365021	 700       	 0         	 0         	 51.5477   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 6, n: 50, r2: 6)                    	 0.00364897	 700       	 0         	 0         	 51.5652   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.00344193	 9         	 0.4358    	 0         	 0.157935  	 2.75937   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 6, n: 50, r2: 6)                                                                                          	 0.00283649	 808       	 0         	 0         	 8.20395   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                 	 0.00277786	 8         	 36.9719   	 0         	 2.93751   	 12.5861   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 50, Qr2: 6)       	 0.00254625	 100       	 0         	 0         	 87.9727   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 6, m: 6)                                                                   	 0.0024874 	 909       	 0.105247  	 0         	 0.333283  	 0.315789  
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 6, m: 300, k: 6)   	 0.00242944	 700       	 6.22366   	 0         	 8.38119   	 0.742574  
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 6, reductionFactor: 37, colBlockingSize: 12)                  	 0.0020048 	 100       	 9.22112   	 0         	 6.00001   	 1.53685   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                  	 0.00187349	 8         	 26.6882   	 0         	 8.58293   	 3.10945   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 56, r: 50, r2: 50, leftOrthog: 0)         	 0.00152597	 100       	 18.349    	 0         	 7.02505   	 2.61194   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 6, r: 6, streamingCols: 0)                    	 0.00136733	 100       	 6.58215   	 0         	 17.5629   	 0.374775  
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 50, r2: 50)             	 0.00105939	 100       	 23.5985   	 0         	 5.66364   	 4.16667   
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                  	 0.00082601	 100       	 0.60532   	 0         	 2.42128   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 0, n: 50, r2: 6)                    	 0.000814331	 100       	 0         	 0         	 29.472    	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 6, reductionFactor: 37, colBlockingSize: 12)                    	 0.000808062	 101       	 0.462127  	 0         	 0.335974  	 1.37548   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 6)                                                                                          	 0.000807106	 201       	 0         	 0         	 1.19538   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 6, n: 50, r2: 1)                                                                                          	 0.00074972	 201       	 0         	 0         	 1.28688   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 6)                                                                       	 0.000703247	 100       	 0         	 0         	 34.1274   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 6)   	 0.000697915	 100       	 4.29852   	 0         	 3.55344   	 1.20968   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 6)                                                              	 0.000645259	 100       	 0         	 0         	 37.1944   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                         	 0.000507456	 100       	 0         	 0         	 7.88246   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 6, n: 50, r2: 1)                    	 0.000456414	 100       	 0         	 0         	 9.81565   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 1, Xr2: 50, Qr1: 1, Qr2: 0)         	 0.000453822	 100       	 0         	 0         	 8.81403   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 6, k: 50)     	 0.000421588	 100       	 7.11595   	 0         	 5.88252   	 1.20968   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 1, r1low: 0, n: 50, r2: 6)                     	 0.000413662	 100       	 0         	 0         	 1.16037   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                           	 0.000401308	 100       	 1.24593   	 0         	 14.9511   	 0.0833333 
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                	 0.000399458	 101       	 0.632107  	 0         	 10.1137   	 0.0625    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 6, k: 50)  	 0.000374268	 100       	 8.01565   	 0         	 6.62627   	 1.20968   
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 6, n: 50, r2: 1)                                                                                 	 0.000363536	 101       	 0.083348  	 0         	 1.33357   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                	 0.000330768	 100       	 0.755817  	 0         	 12.0931   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 50)                                                                      	 0.000274718	 8         	 0         	 0         	 58.2415   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                             	 0.000234646	 8         	 0         	 0         	 68.1878   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 6)                                                                	 0.000200276	 101       	 0         	 0         	 2.42066   	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 6, m: 6, fromLeft: 0)                 	 0.000128225	 809       	 0         	 0         	 3.63411   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 300, Xcols: 6, r: 6, streamingCols: 0)                     	 0.000125284	 8         	 0.689633  	 0         	 1.84822   	 0.373134  
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                   	 0.000117333	 1         	 2.18827   	 0         	 0.34091   	 6.41892   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 300, cols: 6, reductionFactor: 37, colBlockingSize: 12)                   	 8.3013e-05	 8         	 2.13786   	 0         	 1.41549   	 1.51033   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 6, m: 50, k: 6)    	 5.312e-05 	 100       	 6.77711   	 0         	 9.57831   	 0.707547  
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 50, r: 50, streamingCols: 0)                    	 3.3181e-05	 1         	 3.76722   	 0         	 1.50689   	 2.5       
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 300, m: 6)                                                                        	 2.984e-05 	 8         	 0         	 0         	 7.72118   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 300, m: 6)                                                               	 2.9451e-05	 8         	 0         	 0         	 7.82316   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 6, r1_: 6, n: 50, r2: 6)             	 2.605e-05 	 8         	 6.6334    	 0         	 8.93298   	 0.742574  
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                               	 2.3871e-05	 1         	 0         	 0         	 1.67567   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 6, r: 6, streamingCols: 0)                      	 1.699e-05 	 1         	 0.105945  	 0         	 0.290995  	 0.364078  
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)           	 1.0321e-05	 1         	 24.2225   	 0         	 5.81339   	 4.16667   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 0)               	 9.92e-06  	 9         	 0         	 0         	 36.2903   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                  	 9.78e-06  	 1         	 0.511247  	 0         	 2.04499   	 0.25      
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 6, n: 50, r2: 1)                                                                                   	 9.44e-06  	 1         	 0.0635593 	 0         	 0.254237  	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 0, m: 300, k: 6)   	 7.461e-06 	 100       	 0         	 0         	 193.004   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                        	 4.45e-06  	 1         	 0         	 0         	 8.98876   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 6)                                                                         	 9.9e-07   	 1         	 0         	 0         	 4.84848   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 6, r1_: 6, n: 50, r2: 1)             	 7.7e-07   	 1         	 4.67532   	 0         	 6.60779   	 0.707547  
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 1.38967   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 1.38962   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                            	 1.27731   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                        	 1.27606   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 1.06339   	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 0.360934  	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 0.275342  	 1818      
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.257626  	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.211575  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.205401  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_leftOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                   	 0.11223   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.053001  	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.0225863 	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.0188547 	 918       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 0.0144493 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 0.0144194 	 2         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0133601 	 900       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.0128994 	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.0117858 	 1800      
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                              	 0.0107443 	 20        
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.00873019	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.00592933	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.00533338	 1000      
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.005191  	 1818      
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                       	 0.00494595	 818       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.00490077	 1310      
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.00489794	 18        
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                              	 0.00478372	 918       
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00306262	 6372      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00116686	 5272      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00109376	 302       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.00084523	 102       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000401308	 100       
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.000138145	 818       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: L, orthoY: L
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m43->44  [0m[1;34m44->45  [0m[1;34m45->46  [0m[1;34m46->47  [0m[1;34m47->48  [0m[1;34m48->49  [0m[1;34m49->50  [0m[1;34m50->51  [0m[1;34m51->52  [0m[1;34m52->53  [0m[1;34m53->54  [0m[1;34m54->55  [0m[1;34m55->56  [0m[1;34m56->57  [0m[1;34m57->58  [0m[1;34m58->59  [0m[1;34m59->60  [0m[1;34m60->61  [0m[1;34m61->62  [0m[1;34m62->63  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 23152970540928 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 23152759400448 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 23152558073984 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 23152356747520 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 23152155421056 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 23151954094592 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 23151752768128 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 23151551441664 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 23151350115200 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 23151148788736 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 23150947462272 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 23150746135808 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 23150544809344 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 23150343482880 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 23150142156416 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 23149940829952 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 23149739503488 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 23149538177024 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 23149336850560 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 23149135524096 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 23148934197632 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 23148732871168 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 23148531544704 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 23148330218240 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 23148128891776 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 23147927565312 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 23147726238848 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 23147524912384 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 23147323585920 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 23147122259456 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 23146920932992 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 23146719606528 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 23146518275968 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 23146316949504 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 23146115623040 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 23145914296576 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 23145712970112 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 23145511643648 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 23145310317184 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 23145108990720 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 23144907664256 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 23144706337792 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 23144505011328 -> hwthread 43 - OK[0m[1;34m
[0m[1;34m	threadid 23144303684864 -> hwthread 44 - OK[0m[1;34m
[0m[1;34m	threadid 23144102358400 -> hwthread 45 - OK[0m[1;34m
[0m[1;34m	threadid 23143901031936 -> hwthread 46 - OK[0m[1;34m
[0m[1;34m	threadid 23143699705472 -> hwthread 47 - OK[0m[1;34m
[0m[1;34m	threadid 23143498379008 -> hwthread 48 - OK[0m[1;34m
[0m[1;34m	threadid 23143297052544 -> hwthread 49 - OK[0m[1;34m
[0m[1;34m	threadid 23143095726080 -> hwthread 50 - OK[0m[1;34m
[0m[1;34m	threadid 23142894399616 -> hwthread 51 - OK[0m[1;34m
[0m[1;34m	threadid 23142693073152 -> hwthread 52 - OK[0m[1;34m
[0m[1;34m	threadid 23142491746688 -> hwthread 53 - OK[0m[1;34m
[0m[1;34m	threadid 23142290420224 -> hwthread 54 - OK[0m[1;34m
[0m[1;34m	threadid 23142089093760 -> hwthread 55 - OK[0m[1;34m
[0m[1;34m	threadid 23141887767296 -> hwthread 56 - OK[0m[1;34m
[0m[1;34m	threadid 23141686440832 -> hwthread 57 - OK[0m[1;34m
[0m[1;34m	threadid 23141485114368 -> hwthread 58 - OK[0m[1;34m
[0m[1;34m	threadid 23141283787904 -> hwthread 59 - OK[0m[1;34m
[0m[1;34m	threadid 23141082461440 -> hwthread 60 - OK[0m[1;34m
[0m[1;34m	threadid 23140881134976 -> hwthread 61 - OK[0m[1;34m
[0m[1;34m	threadid 23140679808512 -> hwthread 62 - OK[0m[1;34m
[0m[1;34m	threadid 23140478482048 -> hwthread 63 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 23152864880384 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 23152858289920 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
Performance statistics:
function                                                                                                                                                                                                     	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 57, m: 57)                                                                	 0.299812  	 700       	 3.02672   	 0         	 0.183123  	 16.5283   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2850, cols: 57, reductionFactor: 37, colBlockingSize: 12)                 	 0.193611  	 600       	 58.9423   	 0         	 4.108     	 14.3482   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 57, r: 57, r2: 2850, leftOrthog: 0)       	 0.171574  	 600       	 64.7626   	 0         	 13.816    	 4.6875    
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 57, n: 50, r: 57, r2: 57)            	 0.158559  	 600       	 70.0787   	 0         	 9.93397   	 7.05446   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 57)                                                                	 0.0444522 	 100       	 2.24398   	 0         	 0.148474  	 15.1136   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                	 0.0366133 	 100       	 2.38984   	 0         	 0.164967  	 14.4868   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 57, reductionFactor: 37, colBlockingSize: 12)                 	 0.0349537 	 100       	 47.7319   	 0         	 3.33582   	 14.3089   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2850, cols: 50, reductionFactor: 37, colBlockingSize: 12)                 	 0.0259348 	 100       	 56.4306   	 0         	 4.47276   	 12.6165   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 57, r: 57, r2: 2500, leftOrthog: 0)       	 0.0229543 	 100       	 70.7712   	 0         	 15.1257   	 4.67888   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r: 57, r2: 57)            	 0.0228475 	 100       	 71.1019   	 0         	 10.093    	 7.04469   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 2850, leftOrthog: 0)       	 0.0215758 	 100       	 66.0462   	 0         	 16.0365   	 4.1185    
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 57, n: 50, r: 57, r2: 50)            	 0.0214064 	 100       	 75.8887   	 0         	 11.5031   	 6.59722   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 57, Qr2: 7)       	 0.0205957 	 700       	 0         	 0         	 83.5824   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2850, cols: 7, reductionFactor: 37, colBlockingSize: 12)                  	 0.013466  	 700       	 14.9112   	 0         	 8.31685   	 1.79289   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 7, k: 2500)   	 0.0133497 	 800       	 104.871   	 0         	 68.4837   	 1.53133   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2850, Xcols: 7, r: 7, streamingCols: 0)                    	 0.0106578 	 700       	 9.17212   	 0         	 20.9777   	 0.437232  
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 2500, m: 7, k: 50)	 0.00858724	 800       	 163.032   	 0         	 106.465   	 1.53133   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 350, k: 7)  	 0.00803932	 800       	 24.3802   	 0         	 16.1606   	 1.50862   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 57, reductionFactor: 37, colBlockingSize: 12)                   	 0.00518426	 100       	 6.43642   	 0         	 0.941156  	 6.83885   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 50)          	 0.00484706	 8         	 20.631    	 0         	 3.33398   	 6.18812   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2850, m: 7)                                                                       	 0.00415036	 700       	 0         	 0         	 53.8363   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 7, n: 50, r2: 7)                    	 0.00413789	 700       	 0         	 0         	 53.9986   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 7, m: 350, k: 7)   	 0.00403638	 700       	 5.9484    	 0         	 6.86615   	 0.866337  
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2850, m: 7)                                                              	 0.00380757	 700       	 0         	 0         	 58.6831   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.00350816	 9         	 0.427573  	 0         	 0.154953  	 2.75937   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 7, n: 50, r2: 7)                                                                                          	 0.00294727	 808       	 0         	 0         	 10.7468   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                 	 0.00278764	 8         	 36.8422   	 0         	 2.92721   	 12.5861   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 50, Qr2: 7)       	 0.00272682	 100       	 0         	 0         	 83.6138   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 7, m: 7)                                                                   	 0.00264057	 909       	 0.156975  	 0         	 0.424109  	 0.37013   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 50, r2: 50)             	 0.0024274 	 100       	 10.2991   	 0         	 2.47178   	 4.16667   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 7, reductionFactor: 37, colBlockingSize: 12)                  	 0.00205018	 100       	 12.2732   	 0         	 6.8478    	 1.79228   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                  	 0.00187345	 8         	 26.6887   	 0         	 8.5831    	 3.10945   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 57, r: 50, r2: 50, leftOrthog: 0)         	 0.00156323	 100       	 18.2315   	 0         	 6.93435   	 2.62915   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 7, r: 7, streamingCols: 0)                    	 0.00147009	 100       	 8.33282   	 0         	 19.0598   	 0.437194  
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 0, n: 50, r2: 7)                    	 0.000904143	 100       	 0         	 0         	 30.9686   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 7)   	 0.000846199	 100       	 4.13614   	 0         	 3.02529   	 1.36719   
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                  	 0.000838056	 100       	 0.596619  	 0         	 2.38648   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 7)                                                                                          	 0.000835989	 201       	 0         	 0         	 1.34643   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 7, n: 50, r2: 1)                                                                                          	 0.000773889	 201       	 0         	 0         	 1.45447   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 7, reductionFactor: 37, colBlockingSize: 12)                    	 0.000753038	 101       	 0.674967  	 0         	 0.428122  	 1.57658   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 7)                                                                       	 0.000726832	 100       	 0         	 0         	 38.5233   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 7)                                                              	 0.000725149	 100       	 0         	 0         	 38.6128   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 7, k: 50)     	 0.000524016	 100       	 6.67919   	 0         	 4.88535   	 1.36719   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                         	 0.000521533	 100       	 0         	 0         	 7.6697    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 7, n: 50, r2: 1)                    	 0.000470329	 100       	 0         	 0         	 9.69534   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 1, Xr2: 50, Qr1: 1, Qr2: 0)         	 0.000455282	 100       	 0         	 0         	 8.78576   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 1, r1low: 0, n: 50, r2: 7)                     	 0.00041783	 100       	 0         	 0         	 1.34026   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                           	 0.000400193	 100       	 1.2494    	 0         	 14.9928   	 0.0833333 
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                	 0.000379307	 101       	 0.665688  	 0         	 10.651    	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 7, n: 50, r2: 1)                                                                                 	 0.000354009	 101       	 0.0998562 	 0         	 1.5977    	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                	 0.000337336	 100       	 0.741101  	 0         	 11.8576   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 50)                                                                      	 0.000274926	 8         	 0         	 0         	 58.1975   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                             	 0.000264206	 8         	 0         	 0         	 60.5588   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 7)                                                                	 0.000240016	 101       	 0         	 0         	 2.35651   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 7, k: 50)  	 0.000197825	 100       	 17.6924   	 0         	 12.9407   	 1.36719   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 7, m: 7, fromLeft: 0)                 	 0.000169708	 809       	 0         	 0         	 3.73734   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 350, Xcols: 7, r: 7, streamingCols: 0)                     	 0.000135525	 8         	 1.01236   	 0         	 2.32553   	 0.435323  
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                   	 0.000111093	 1         	 2.31119   	 0         	 0.360059  	 6.41892   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 350, cols: 7, reductionFactor: 37, colBlockingSize: 12)                   	 7.4452e-05	 8         	 3.78521   	 0         	 2.14818   	 1.76206   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 7, m: 50, k: 7)    	 6.4003e-05	 100       	 7.65589   	 0         	 9.36206   	 0.817757  
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 350, m: 7)                                                                        	 4.9521e-05	 8         	 0         	 0         	 6.33267   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 7, r1_: 7, n: 50, r2: 7)             	 3.685e-05 	 8         	 7.4464    	 0         	 8.59528   	 0.866337  
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 50, r: 50, streamingCols: 0)                    	 3.3161e-05	 1         	 3.76949   	 0         	 1.5078    	 2.5       
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 350, m: 7)                                                               	 3.0031e-05	 8         	 0         	 0         	 10.4425   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                               	 2.0281e-05	 1         	 0         	 0         	 1.97229   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 7, r: 7, streamingCols: 0)                      	 1.7631e-05	 1         	 0.13896   	 0         	 0.328739  	 0.422705  
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 0)               	 1.003e-05 	 9         	 0         	 0         	 35.8923   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)           	 9.951e-06 	 1         	 25.1231   	 0         	 6.02954   	 4.16667   
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                  	 9.49e-06  	 1         	 0.52687   	 0         	 2.10748   	 0.25      
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 7, n: 50, r2: 1)                                                                                   	 8.15e-06  	 1         	 0.0858896 	 0         	 0.343558  	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 0, m: 350, k: 7)   	 7.58e-06  	 100       	 0         	 0         	 258.575   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                        	 4.4e-06   	 1         	 0         	 0         	 9.09091   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 7, r1_: 7, n: 50, r2: 1)             	 1.14e-06  	 1         	 4.29825   	 0         	 5.25614   	 0.817757  
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 7)                                                                         	 9.7e-07   	 1         	 0         	 0         	 5.7732    	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 1.43387   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 1.43381   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                            	 1.31537   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                        	 1.31408   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 1.10178   	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 0.380877  	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 0.278926  	 1818      
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.260301  	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.217667  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.20524   	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_leftOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                   	 0.118365  	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.0559204 	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.0237778 	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.0196645 	 918       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 0.0145837 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 0.0145548 	 2         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.0141877 	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0138738 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.0129935 	 1800      
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                              	 0.0110233 	 20        
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.00878507	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.00614873	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.00593019	 1000      
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                       	 0.00520701	 818       
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                              	 0.00508725	 918       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.00507868	 1310      
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.00489501	 18        
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00483327	 1818      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.0028416 	 6372      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00124031	 5272      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00107065	 302       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000855696	 102       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000400193	 100       
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.000179738	 818       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: L, orthoY: L
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m43->44  [0m[1;34m44->45  [0m[1;34m45->46  [0m[1;34m46->47  [0m[1;34m47->48  [0m[1;34m48->49  [0m[1;34m49->50  [0m[1;34m50->51  [0m[1;34m51->52  [0m[1;34m52->53  [0m[1;34m53->54  [0m[1;34m54->55  [0m[1;34m55->56  [0m[1;34m56->57  [0m[1;34m57->58  [0m[1;34m58->59  [0m[1;34m59->60  [0m[1;34m60->61  [0m[1;34m61->62  [0m[1;34m62->63  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 23282373351296 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 23282145290240 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 23281943963776 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 23281742637312 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 23281541310848 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 23281339984384 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 23281138657920 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 23280937331456 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 23280736004992 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 23280534678528 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 23280333352064 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 23280132025600 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 23279930699136 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 23279729372672 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 23279528046208 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 23279326719744 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 23279125393280 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 23278924066816 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 23278722740352 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 23278521413888 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 23278320087424 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 23278118760960 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 23277917434496 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 23277716108032 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 23277514781568 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 23277313455104 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 23277112128640 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 23276910802176 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 23276709475712 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 23276508149248 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 23276306822784 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 23276105496320 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 23275904165760 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 23275702839296 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 23275501512832 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 23275300186368 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 23275098859904 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 23274897533440 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 23274696206976 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 23274494880512 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 23274293554048 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 23274092227584 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 23273890901120 -> hwthread 43 - OK[0m[1;34m
[0m[1;34m	threadid 23273689574656 -> hwthread 44 - OK[0m[1;34m
[0m[1;34m	threadid 23273488248192 -> hwthread 45 - OK[0m[1;34m
[0m[1;34m	threadid 23273286921728 -> hwthread 46 - OK[0m[1;34m
[0m[1;34m	threadid 23273085595264 -> hwthread 47 - OK[0m[1;34m
[0m[1;34m	threadid 23272884268800 -> hwthread 48 - OK[0m[1;34m
[0m[1;34m	threadid 23272682942336 -> hwthread 49 - OK[0m[1;34m
[0m[1;34m	threadid 23272481615872 -> hwthread 50 - OK[0m[1;34m
[0m[1;34m	threadid 23272280289408 -> hwthread 51 - OK[0m[1;34m
[0m[1;34m	threadid 23272078962944 -> hwthread 52 - OK[0m[1;34m
[0m[1;34m	threadid 23271877636480 -> hwthread 53 - OK[0m[1;34m
[0m[1;34m	threadid 23271676310016 -> hwthread 54 - OK[0m[1;34m
[0m[1;34m	threadid 23271474983552 -> hwthread 55 - OK[0m[1;34m
[0m[1;34m	threadid 23271273657088 -> hwthread 56 - OK[0m[1;34m
[0m[1;34m	threadid 23271072330624 -> hwthread 57 - OK[0m[1;34m
[0m[1;34m	threadid 23270871004160 -> hwthread 58 - OK[0m[1;34m
[0m[1;34m	threadid 23270669677696 -> hwthread 59 - OK[0m[1;34m
[0m[1;34m	threadid 23270468351232 -> hwthread 60 - OK[0m[1;34m
[0m[1;34m	threadid 23270267024768 -> hwthread 61 - OK[0m[1;34m
[0m[1;34m	threadid 23270065698304 -> hwthread 62 - OK[0m[1;34m
[0m[1;34m	threadid 23269864371840 -> hwthread 63 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 23282267690752 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 23282261100288 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
Performance statistics:
function                                                                                                                                                                                                     	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 58, m: 58)                                                                	 0.307449  	 700       	 3.10962   	 0         	 0.184876  	 16.82     
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2900, cols: 58, reductionFactor: 37, colBlockingSize: 12)                 	 0.203572  	 600       	 59.0609   	 0         	 4.04529   	 14.5999   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 58, r: 58, r2: 2900, leftOrthog: 0)       	 0.177378  	 600       	 65.9987   	 0         	 13.837    	 4.76974   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 58, n: 50, r: 58, r2: 58)            	 0.171907  	 600       	 68.0993   	 0         	 9.48694   	 7.17822   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 58)                                                                	 0.040948  	 100       	 2.47875   	 0         	 0.163134  	 15.1946   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                	 0.0356303 	 100       	 2.45577   	 0         	 0.169519  	 14.4868   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 58, reductionFactor: 37, colBlockingSize: 12)                 	 0.0355453 	 100       	 48.5988   	 0         	 3.33915   	 14.5542   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2900, cols: 50, reductionFactor: 37, colBlockingSize: 12)                 	 0.0260476 	 100       	 57.1719   	 0         	 4.53017   	 12.6202   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r: 58, r2: 58)            	 0.0237349 	 100       	 70.8661   	 0         	 9.88802   	 7.16686   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 58, r: 58, r2: 2500, leftOrthog: 0)       	 0.0230625 	 100       	 72.9321   	 0         	 15.3228   	 4.75972   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 2900, leftOrthog: 0)       	 0.0220034 	 100       	 65.8988   	 0         	 15.9975   	 4.11932   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 58, n: 50, r: 58, r2: 50)            	 0.0211754 	 100       	 79.4319   	 0         	 11.9422   	 6.65138   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 58, Qr2: 8)       	 0.0202847 	 700       	 0         	 0         	 87.3485   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2900, cols: 8, reductionFactor: 37, colBlockingSize: 12)                  	 0.0150702 	 700       	 17.708    	 0         	 8.64476   	 2.0484    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 8, k: 2500)   	 0.0139339 	 800       	 114.828   	 0         	 66.7839   	 1.71939   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2900, Xcols: 8, r: 8, streamingCols: 0)                    	 0.0120938 	 700       	 10.7427   	 0         	 21.5002   	 0.499655  
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 2500, m: 8, k: 50)	 0.00894534	 800       	 178.864   	 0         	 104.027   	 1.71939   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 400, k: 8)  	 0.00863717	 800       	 29.6394   	 0         	 17.4872   	 1.69492   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 8, m: 400, k: 8)   	 0.00610964	 700       	 5.86614   	 0         	 5.9248    	 0.990099  
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 58, reductionFactor: 37, colBlockingSize: 12)                   	 0.00520698	 100       	 6.63517   	 0         	 0.962401  	 6.89439   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 50)          	 0.00477487	 8         	 20.943    	 0         	 3.38438   	 6.18812   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2900, m: 8)                                                                       	 0.00441493	 700       	 0         	 0         	 58.8549   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 8, n: 50, r2: 8)                    	 0.00426857	 700       	 0         	 0         	 60.8728   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2900, m: 8)                                                              	 0.00423672	 700       	 0         	 0         	 61.3304   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.00356138	 9         	 0.421183  	 0         	 0.152637  	 2.75937   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 8, m: 8)                                                                   	 0.00326869	 909       	 0.18966   	 0         	 0.444949  	 0.42625   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 8, n: 50, r2: 8)                                                                                          	 0.00297842	 808       	 0         	 0         	 13.8898   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 50, Qr2: 8)       	 0.00274566	 100       	 0         	 0         	 84.4969   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                 	 0.00269828	 8         	 38.0623   	 0         	 3.02415   	 12.5861   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 8, reductionFactor: 37, colBlockingSize: 12)                  	 0.00236039	 100       	 13.9235   	 0         	 6.80022   	 2.0475    
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                  	 0.001785  	 8         	 28.0113   	 0         	 9.00842   	 3.10945   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 58, r: 50, r2: 50, leftOrthog: 0)         	 0.00174177	 100       	 16.6497   	 0         	 6.29246   	 2.64599   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 8, r: 8, streamingCols: 0)                    	 0.00161607	 100       	 9.90053   	 0         	 19.8169   	 0.4996    
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 50, r2: 50)             	 0.00105454	 100       	 23.7071   	 0         	 5.6897    	 4.16667   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 8, reductionFactor: 37, colBlockingSize: 12)                    	 0.000978377	 101       	 0.678542  	 0         	 0.383198  	 1.77074   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 0, n: 50, r2: 8)                    	 0.000965201	 100       	 0         	 0         	 33.1537   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                  	 0.000868506	 100       	 0.575701  	 0         	 2.30281   	 0.25      
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 8)                                                              	 0.000861136	 100       	 0         	 0         	 37.1602   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 8)                                                                       	 0.000780189	 100       	 0         	 0         	 41.0157   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 8)                                                                                          	 0.000777726	 201       	 0         	 0         	 1.65405   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 8, n: 50, r2: 1)                                                                                          	 0.000752749	 201       	 0         	 0         	 1.70894   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 8)   	 0.000676702	 100       	 5.91102   	 0         	 3.90127   	 1.51515   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 8, n: 50, r2: 1)                    	 0.000649963	 100       	 0         	 0         	 7.13887   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                         	 0.000522147	 100       	 0         	 0         	 7.66068   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 8, k: 50)     	 0.000449546	 100       	 8.89787   	 0         	 5.87259   	 1.51515   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 1, Xr2: 50, Qr1: 1, Qr2: 0)         	 0.000448698	 100       	 0         	 0         	 8.91468   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 1, r1low: 0, n: 50, r2: 8)                     	 0.000412328	 100       	 0         	 0         	 1.55216   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                           	 0.000401508	 100       	 1.24531   	 0         	 14.9437   	 0.0833333 
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                	 0.000397904	 101       	 0.634575  	 0         	 10.1532   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 8)                                                                	 0.000395626	 101       	 0         	 0         	 1.63387   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                   	 0.000354579	 1         	 0.724117  	 0         	 0.11281   	 6.41892   
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 8, n: 50, r2: 1)                                                                                 	 0.000344777	 101       	 0.117177  	 0         	 1.87484   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                	 0.000330581	 100       	 0.756244  	 0         	 12.0999   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 50)                                                                      	 0.000280026	 8         	 0         	 0         	 57.1376   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                             	 0.000220766	 8         	 0         	 0         	 72.4749   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 8, k: 50)  	 0.000194838	 100       	 20.5299   	 0         	 13.5497   	 1.51515   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 400, Xcols: 8, r: 8, streamingCols: 0)                     	 0.000135664	 8         	 1.50961   	 0         	 3.03432   	 0.497512  
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 8, m: 8, fromLeft: 0)                 	 0.000123314	 809       	 0         	 0         	 6.71794   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 400, cols: 8, reductionFactor: 37, colBlockingSize: 12)                   	 0.000110351	 8         	 3.81211   	 0         	 1.89301   	 2.01378   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 8, m: 50, k: 8)    	 7.769e-05 	 100       	 8.23787   	 0         	 8.8969    	 0.925926  
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 8, r1_: 8, n: 50, r2: 8)             	 3.8242e-05	 8         	 10.7107   	 0         	 10.8178   	 0.990099  
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 50, r: 50, streamingCols: 0)                    	 3.2431e-05	 1         	 3.85434   	 0         	 1.54173   	 2.5       
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 400, m: 8)                                                               	 3.1511e-05	 8         	 0         	 0         	 12.9986   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 400, m: 8)                                                                        	 3.044e-05 	 8         	 0         	 0         	 13.456    	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                               	 2.5151e-05	 1         	 0         	 0         	 1.59039   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 8, r: 8, streamingCols: 0)                      	 1.494e-05 	 1         	 0.21419   	 0         	 0.445515  	 0.480769  
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)           	 1.096e-05 	 1         	 22.8102   	 0         	 5.47445   	 4.16667   
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                  	 1.008e-05 	 1         	 0.496032  	 0         	 1.98413   	 0.25      
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 0)               	 9.932e-06 	 9         	 0         	 0         	 36.2465   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 8, n: 50, r2: 1)                                                                                   	 9.18e-06  	 1         	 0.087146  	 0         	 0.348584  	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 0, m: 400, k: 8)   	 7.64e-06  	 100       	 0         	 0         	 335.079   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                        	 4.34e-06  	 1         	 0         	 0         	 9.21659   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 8)                                                                         	 3.69e-06  	 1         	 0         	 0         	 1.73442   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 8, r1_: 8, n: 50, r2: 1)             	 1.18e-06  	 1         	 5.42373   	 0         	 5.85763   	 0.925926  
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 1.46788   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 1.46785   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                            	 1.33981   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                        	 1.33851   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 1.11346   	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 0.384027  	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 0.291944  	 1818      
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.270983  	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.224186  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.217871  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_leftOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                   	 0.127966  	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.061506  	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.0234791 	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.0220947 	 918       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.0156779 	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.0155088 	 1800      
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 0.0146403 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 0.0146101 	 2         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0143834 	 900       
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                              	 0.0105862 	 20        
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.00914018	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.00683007	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.00629606	 1000      
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                              	 0.00577091	 918       
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                       	 0.00551361	 818       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.00503104	 1310      
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00486936	 1818      
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.00482525	 18        
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00298182	 6372      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00120965	 5272      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00107326	 302       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000887766	 102       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000401508	 100       
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.000133246	 818       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: L, orthoY: L
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m43->44  [0m[1;34m44->45  [0m[1;34m45->46  [0m[1;34m46->47  [0m[1;34m47->48  [0m[1;34m48->49  [0m[1;34m49->50  [0m[1;34m50->51  [0m[1;34m51->52  [0m[1;34m52->53  [0m[1;34m53->54  [0m[1;34m54->55  [0m[1;34m55->56  [0m[1;34m56->57  [0m[1;34m57->58  [0m[1;34m58->59  [0m[1;34m59->60  [0m[1;34m60->61  [0m[1;34m61->62  [0m[1;34m62->63  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 22755149117312 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 22754938054656 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 22754736728192 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 22754535401728 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 22754334075264 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 22754132748800 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 22753931422336 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 22753730095872 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 22753528769408 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 22753327442944 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 22753126116480 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 22752924790016 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 22752723463552 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 22752522137088 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 22752320810624 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 22752119484160 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 22751918157696 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 22751716831232 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 22751515504768 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 22751314178304 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 22751112851840 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 22750911525376 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 22750710198912 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 22750508872448 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 22750307545984 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 22750106219520 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 22749904893056 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 22749703566592 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 22749502240128 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 22749300913664 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 22749099587200 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 22748898260736 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 22748696930176 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 22748495603712 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 22748294277248 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 22748092950784 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 22747891624320 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 22747690297856 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 22747488971392 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 22747287644928 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 22747086318464 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 22746884992000 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 22746683665536 -> hwthread 43 - OK[0m[1;34m
[0m[1;34m	threadid 22746482339072 -> hwthread 44 - OK[0m[1;34m
[0m[1;34m	threadid 22746281012608 -> hwthread 45 - OK[0m[1;34m
[0m[1;34m	threadid 22746079686144 -> hwthread 46 - OK[0m[1;34m
[0m[1;34m	threadid 22745878359680 -> hwthread 47 - OK[0m[1;34m
[0m[1;34m	threadid 22745677033216 -> hwthread 48 - OK[0m[1;34m
[0m[1;34m	threadid 22745475706752 -> hwthread 49 - OK[0m[1;34m
[0m[1;34m	threadid 22745274380288 -> hwthread 50 - OK[0m[1;34m
[0m[1;34m	threadid 22745073053824 -> hwthread 51 - OK[0m[1;34m
[0m[1;34m	threadid 22744871727360 -> hwthread 52 - OK[0m[1;34m
[0m[1;34m	threadid 22744670400896 -> hwthread 53 - OK[0m[1;34m
[0m[1;34m	threadid 22744469074432 -> hwthread 54 - OK[0m[1;34m
[0m[1;34m	threadid 22744267747968 -> hwthread 55 - OK[0m[1;34m
[0m[1;34m	threadid 22744066421504 -> hwthread 56 - OK[0m[1;34m
[0m[1;34m	threadid 22743865095040 -> hwthread 57 - OK[0m[1;34m
[0m[1;34m	threadid 22743663768576 -> hwthread 58 - OK[0m[1;34m
[0m[1;34m	threadid 22743462442112 -> hwthread 59 - OK[0m[1;34m
[0m[1;34m	threadid 22743261115648 -> hwthread 60 - OK[0m[1;34m
[0m[1;34m	threadid 22743059789184 -> hwthread 61 - OK[0m[1;34m
[0m[1;34m	threadid 22742858462720 -> hwthread 62 - OK[0m[1;34m
[0m[1;34m	threadid 22742657136256 -> hwthread 63 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 22755043456768 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 22755036866304 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
Performance statistics:
function                                                                                                                                                                                                     	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 59, m: 59)                                                                	 0.316025  	 700       	 3.18442   	 0         	 0.186097  	 17.1116   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2950, cols: 59, reductionFactor: 37, colBlockingSize: 12)                 	 0.209281  	 600       	 60.4726   	 0         	 4.07178   	 14.8516   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 59, r: 59, r2: 2950, leftOrthog: 0)       	 0.176517  	 600       	 69.8106   	 0         	 14.3881   	 4.85197   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 59, n: 50, r: 59, r2: 59)            	 0.170192  	 600       	 72.4048   	 0         	 9.91578   	 7.30198   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 59)                                                                	 0.0417283 	 100       	 2.47434   	 0         	 0.162     	 15.2737   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 59, reductionFactor: 37, colBlockingSize: 12)                 	 0.0365835 	 100       	 48.8619   	 0         	 3.30162   	 14.7994   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                	 0.0352838 	 100       	 2.47989   	 0         	 0.171183  	 14.4868   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2950, cols: 50, reductionFactor: 37, colBlockingSize: 12)                 	 0.0259895 	 100       	 58.2877   	 0         	 4.61726   	 12.6239   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 59, r: 59, r2: 2500, leftOrthog: 0)       	 0.0250806 	 100       	 69.3963   	 0         	 14.3366   	 4.84051   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r: 59, r2: 59)            	 0.0239753 	 100       	 72.5955   	 0         	 9.95961   	 7.28899   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 59, Qr2: 9)       	 0.022373  	 700       	 0         	 0         	 81.4982   	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 2950, leftOrthog: 0)       	 0.0221343 	 100       	 66.6386   	 0         	 16.174    	 4.12011   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 59, n: 50, r: 59, r2: 50)            	 0.0203556 	 100       	 85.5049   	 0         	 12.7533   	 6.70455   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2950, cols: 9, reductionFactor: 37, colBlockingSize: 12)                  	 0.0170945 	 700       	 20.0984   	 0         	 8.72409   	 2.30378   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2950, Xcols: 9, r: 9, streamingCols: 0)                    	 0.0146567 	 700       	 11.4122   	 0         	 20.3038   	 0.562071  
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 9, k: 2500)   	 0.0144001 	 800       	 124.999   	 0         	 65.755    	 1.90098   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 2500, m: 9, k: 50)	 0.00930334	 800       	 193.479   	 0         	 101.779   	 1.90098   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 450, k: 9)  	 0.00787866	 800       	 41.1238   	 0         	 21.9327   	 1.875     
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 9, m: 450, k: 9)   	 0.00693153	 700       	 7.36201   	 0         	 6.60945   	 1.11386   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 59, reductionFactor: 37, colBlockingSize: 12)                   	 0.00577183	 100       	 6.19402   	 0         	 0.891364  	 6.94892   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 50)          	 0.00492395	 8         	 20.3089   	 0         	 3.28192   	 6.18812   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 9, n: 50, r2: 9)                    	 0.00437666	 700       	 0         	 0         	 67.9423   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2950, m: 9)                                                                       	 0.00426815	 700       	 0         	 0         	 69.6695   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2950, m: 9)                                                              	 0.00392836	 700       	 0         	 0         	 75.6958   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.00351714	 9         	 0.426481  	 0         	 0.154557  	 2.75937   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 9, m: 9)                                                                   	 0.00343999	 909       	 0.256846  	 0         	 0.532718  	 0.482143  
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 9, n: 50, r2: 9)                                                                                          	 0.00311456	 808       	 0         	 0         	 16.8108   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 9, reductionFactor: 37, colBlockingSize: 12)                  	 0.0027256 	 100       	 15.2607   	 0         	 6.62783   	 2.30252   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                 	 0.00271033	 8         	 37.8931   	 0         	 3.0107    	 12.5861   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 50, Qr2: 9)       	 0.00268998	 100       	 0         	 0         	 87.7329   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                  	 0.00203815	 8         	 24.532    	 0         	 7.8895    	 3.10945   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 9, r: 9, streamingCols: 0)                    	 0.00179457	 100       	 11.284    	 0         	 20.0785   	 0.561994  
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 59, r: 50, r2: 50, leftOrthog: 0)         	 0.00148946	 100       	 19.8058   	 0         	 7.43892   	 2.66245   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 50, r2: 50)             	 0.00110651	 100       	 22.5936   	 0         	 5.42245   	 4.16667   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 9, reductionFactor: 37, colBlockingSize: 12)                    	 0.00101644	 101       	 0.82662   	 0         	 0.422108  	 1.95831   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 0, n: 50, r2: 9)                    	 0.000952919	 100       	 0         	 0         	 37.7787   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                  	 0.000911903	 100       	 0.548304  	 0         	 2.19322   	 0.25      
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 9)                                                                       	 0.000773365	 100       	 0         	 0         	 46.5498   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 9)                                                                                          	 0.000757598	 201       	 0         	 0         	 1.91025   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 9, n: 50, r2: 1)                                                                                          	 0.000738519	 201       	 0         	 0         	 1.9596    	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 9)                                                              	 0.000700338	 100       	 0         	 0         	 51.4038   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 9)   	 0.000680481	 100       	 6.61297   	 0         	 3.99717   	 1.65441   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                         	 0.000519401	 100       	 0         	 0         	 7.70118   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 9, k: 50)     	 0.000482345	 100       	 9.32942   	 0         	 5.63912   	 1.65441   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 9, n: 50, r2: 1)                    	 0.000451393	 100       	 0         	 0         	 10.4565   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 1, Xr2: 50, Qr1: 1, Qr2: 0)         	 0.000439758	 100       	 0         	 0         	 9.09591   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 1, r1low: 0, n: 50, r2: 9)                     	 0.000418422	 100       	 0         	 0         	 1.72075   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                           	 0.000404609	 100       	 1.23576   	 0         	 14.8291   	 0.0833333 
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                	 0.000391281	 101       	 0.645316  	 0         	 10.3251   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 9)                                                                	 0.000360256	 101       	 0         	 0         	 2.01856   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 9, n: 50, r2: 1)                                                                                 	 0.000359815	 101       	 0.126315  	 0         	 2.02104   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                	 0.000332559	 100       	 0.751746  	 0         	 12.0279   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                             	 0.000274028	 8         	 0         	 0         	 58.3882   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 50)                                                                      	 0.000256825	 8         	 0         	 0         	 62.2992   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 9, k: 50)  	 0.000208387	 100       	 21.5944   	 0         	 13.0526   	 1.65441   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 9, m: 9, fromLeft: 0)                 	 0.000203073	 809       	 0         	 0         	 5.16299   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 450, Xcols: 9, r: 9, streamingCols: 0)                     	 0.000118174	 8         	 2.46755   	 0         	 4.40869   	 0.559701  
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 450, cols: 9, reductionFactor: 37, colBlockingSize: 12)                   	 0.000106742	 8         	 5.61131   	 0         	 2.47685   	 2.2655    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                   	 0.000105743	 1         	 2.42812   	 0         	 0.378276  	 6.41892   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 9, m: 50, k: 9)    	 7.97e-05  	 100       	 10.1631   	 0         	 9.84693   	 1.03211   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 9, r1_: 9, n: 50, r2: 9)             	 5.9171e-05	 8         	 9.85618   	 0         	 8.84866   	 1.11386   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 50, r: 50, streamingCols: 0)                    	 3.5181e-05	 1         	 3.55305   	 0         	 1.42122   	 2.5       
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 450, m: 9)                                                               	 3.4462e-05	 8         	 0         	 0         	 15.0427   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 450, m: 9)                                                                        	 3.3021e-05	 8         	 0         	 0         	 15.6991   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 9, r: 9, streamingCols: 0)                      	 2.5041e-05	 1         	 0.161735  	 0         	 0.300467  	 0.538278  
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                               	 1.997e-05 	 1         	 0         	 0         	 2.003     	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)           	 1.032e-05 	 1         	 24.2248   	 0         	 5.81395   	 4.16667   
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 9, n: 50, r2: 1)                                                                                   	 1.025e-05 	 1         	 0.0878049 	 0         	 0.35122   	 0.25      
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 0)               	 9.89e-06  	 9         	 0         	 0         	 36.4004   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                  	 9.011e-06 	 1         	 0.554877  	 0         	 2.21951   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 0, m: 450, k: 9)   	 7.4e-06   	 100       	 0         	 0         	 437.838   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                        	 4.72e-06  	 1         	 0         	 0         	 8.47458   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 9)                                                                         	 3.87e-06  	 1         	 0         	 0         	 1.86047   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 9, r1_: 9, n: 50, r2: 1)             	 1.71e-06  	 1         	 4.73684   	 0         	 4.58947   	 1.03211   
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 1.5228    	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 1.52277   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                            	 1.38668   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                        	 1.38534   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 1.16198   	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 0.393037  	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 0.301386  	 1818      
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.278343  	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.225221  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.21563   	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_leftOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                   	 0.13601   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.0664531 	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.0255027 	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.0242317 	 918       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.0186678 	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.0155778 	 1800      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0148825 	 900       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 0.014803  	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 0.0147723 	 2         
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                              	 0.0108148 	 20        
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.00951173	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.00695713	 918       
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.0062027 	 1818      
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.00619939	 1000      
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                       	 0.00533995	 818       
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                              	 0.00531741	 918       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.00513008	 1310      
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.00499515	 18        
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00295858	 6372      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00118525	 5272      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00108365	 302       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000931164	 102       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000404609	 100       
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.000212963	 818       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: L, orthoY: L
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m43->44  [0m[1;34m44->45  [0m[1;34m45->46  [0m[1;34m46->47  [0m[1;34m47->48  [0m[1;34m48->49  [0m[1;34m49->50  [0m[1;34m50->51  [0m[1;34m51->52  [0m[1;34m52->53  [0m[1;34m53->54  [0m[1;34m54->55  [0m[1;34m55->56  [0m[1;34m56->57  [0m[1;34m57->58  [0m[1;34m58->59  [0m[1;34m59->60  [0m[1;34m60->61  [0m[1;34m61->62  [0m[1;34m62->63  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 22493453277056 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 22493280593920 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 22493079267456 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 22492877940992 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 22492676614528 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 22492475288064 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 22492273961600 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 22492072635136 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 22491871308672 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 22491669982208 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 22491468655744 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 22491267329280 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 22491066002816 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 22490864676352 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 22490663349888 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 22490462023424 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 22490260696960 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 22490059370496 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 22489858044032 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 22489656717568 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 22489455391104 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 22489254064640 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 22489052738176 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 22488851411712 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 22488650085248 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 22488448758784 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 22488247432320 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 22488046105856 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 22487844779392 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 22487643452928 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 22487442126464 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 22487240800000 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 22487039469440 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 22486838142976 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 22486636816512 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 22486435490048 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 22486234163584 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 22486032837120 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 22485831510656 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 22485630184192 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 22485428857728 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 22485227531264 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 22485026204800 -> hwthread 43 - OK[0m[1;34m
[0m[1;34m	threadid 22484824878336 -> hwthread 44 - OK[0m[1;34m
[0m[1;34m	threadid 22484623551872 -> hwthread 45 - OK[0m[1;34m
[0m[1;34m	threadid 22484422225408 -> hwthread 46 - OK[0m[1;34m
[0m[1;34m	threadid 22484220898944 -> hwthread 47 - OK[0m[1;34m
[0m[1;34m	threadid 22484019572480 -> hwthread 48 - OK[0m[1;34m
[0m[1;34m	threadid 22483818246016 -> hwthread 49 - OK[0m[1;34m
[0m[1;34m	threadid 22483616919552 -> hwthread 50 - OK[0m[1;34m
[0m[1;34m	threadid 22483415593088 -> hwthread 51 - OK[0m[1;34m
[0m[1;34m	threadid 22483214266624 -> hwthread 52 - OK[0m[1;34m
[0m[1;34m	threadid 22483012940160 -> hwthread 53 - OK[0m[1;34m
[0m[1;34m	threadid 22482811613696 -> hwthread 54 - OK[0m[1;34m
[0m[1;34m	threadid 22482610287232 -> hwthread 55 - OK[0m[1;34m
[0m[1;34m	threadid 22482408960768 -> hwthread 56 - OK[0m[1;34m
[0m[1;34m	threadid 22482207634304 -> hwthread 57 - OK[0m[1;34m
[0m[1;34m	threadid 22482006307840 -> hwthread 58 - OK[0m[1;34m
[0m[1;34m	threadid 22481804981376 -> hwthread 59 - OK[0m[1;34m
[0m[1;34m	threadid 22481603654912 -> hwthread 60 - OK[0m[1;34m
[0m[1;34m	threadid 22481402328448 -> hwthread 61 - OK[0m[1;34m
[0m[1;34m	threadid 22481201001984 -> hwthread 62 - OK[0m[1;34m
[0m[1;34m	threadid 22480999675520 -> hwthread 63 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 22493175232256 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 22493169051392 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 60, m: 60)                                                                 	 0.314336  	 700       	 3.3671    	 0         	 0.193474  	 17.4033   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3000, cols: 60, reductionFactor: 37, colBlockingSize: 12)                  	 0.21476   	 600       	 61.9774   	 0         	 4.10356   	 15.1033   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 60, n: 50, r: 60, r2: 60)             	 0.173785  	 600       	 74.575    	 0         	 10.0428   	 7.42574   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 60, r: 60, r2: 3000, leftOrthog: 0)        	 0.1692    	 600       	 76.5957   	 0         	 15.5234   	 4.93421   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 60)                                                                 	 0.0408205 	 100       	 2.57223   	 0         	 0.167563  	 15.3509   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 60, reductionFactor: 37, colBlockingSize: 12)                  	 0.0382623 	 100       	 48.3152   	 0         	 3.21152   	 15.0443   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0348558 	 100       	 2.51035   	 0         	 0.173286  	 14.4868   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r: 60, r2: 60)             	 0.0274185 	 100       	 65.6491   	 0         	 8.85825   	 7.41107   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 60, r: 60, r2: 2500, leftOrthog: 0)        	 0.0258942 	 100       	 69.5137   	 0         	 14.1252   	 4.92126   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3000, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0257476 	 100       	 59.8324   	 0         	 4.73831   	 12.6274   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 60, Qr2: 10)       	 0.022972  	 700       	 0         	 0         	 81.6646   	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 3000, leftOrthog: 0)        	 0.0225736 	 100       	 66.4494   	 0         	 16.1251   	 4.12088   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 60, n: 50, r: 60, r2: 50)             	 0.0223895 	 100       	 80.3948   	 0         	 11.8984   	 6.75676   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3000, cols: 10, reductionFactor: 37, colBlockingSize: 12)                  	 0.0186365 	 700       	 23.1455   	 0         	 9.04462   	 2.55904   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 3000, Xcols: 10, r: 10, streamingCols: 0)                   	 0.0159418 	 700       	 13.1729   	 0         	 21.0942   	 0.62448   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 10, k: 2500)   	 0.014525  	 800       	 137.694   	 0         	 66.3134   	 2.07641   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 2500, m: 10, k: 50)	 0.0100453 	 800       	 199.098   	 0         	 95.8857   	 2.07641   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 500, k: 10)  	 0.00933455	 800       	 42.8516   	 0         	 20.9116   	 2.04918   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 10, m: 500, k: 10)  	 0.00919671	 700       	 7.61142   	 0         	 6.15003   	 1.23762   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 60, reductionFactor: 37, colBlockingSize: 12)                    	 0.00561941	 100       	 6.57951   	 0         	 0.9396    	 7.00246   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 10, n: 50, r2: 10)                   	 0.00485264	 700       	 0         	 0         	 69.2407   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 50)           	 0.00483288	 8         	 20.6916   	 0         	 3.34376   	 6.18812   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 3000, m: 10)                                                                       	 0.00439038	 700       	 0         	 0         	 76.531    	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 3000, m: 10)                                                              	 0.00428933	 700       	 0         	 0         	 78.3339   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 10, m: 10)                                                                  	 0.0038878 	 909       	 0.311433  	 0         	 0.579845  	 0.537097  
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00351376	 9         	 0.426892  	 0         	 0.154706  	 2.75937   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 10, n: 50, r2: 10)                                                                                         	 0.00322086	 808       	 0         	 0         	 20.0691   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 10, reductionFactor: 37, colBlockingSize: 12)                  	 0.00316454	 100       	 16.2271   	 0         	 6.34532   	 2.55734   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 50, Qr2: 10)       	 0.00291267	 100       	 0         	 0         	 82.3986   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.00282611	 8         	 36.3406   	 0         	 2.88736   	 12.5861   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 10, r: 10, streamingCols: 0)                   	 0.00197238	 100       	 12.6751   	 0         	 20.3004   	 0.624376  
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                   	 0.00170582	 8         	 29.3114   	 0         	 9.42654   	 3.10945   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 60, r: 50, r2: 50, leftOrthog: 0)          	 0.00162423	 100       	 18.4703   	 0         	 6.89557   	 2.67857   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 50, r2: 50)              	 0.00116355	 100       	 21.486    	 0         	 5.15664   	 4.16667   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 10, reductionFactor: 37, colBlockingSize: 12)                    	 0.00098657	 101       	 1.05142   	 0         	 0.491399  	 2.13964   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 0, n: 50, r2: 10)                    	 0.000951717	 100       	 0         	 0         	 42.0293   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 10)                                                                       	 0.000917068	 100       	 0         	 0         	 43.6173   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                   	 0.000811524	 100       	 0.616125  	 0         	 2.4645    	 0.25      
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 10)                                                              	 0.000767939	 100       	 0         	 0         	 52.0875   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 10, n: 50, r2: 1)                                                                                          	 0.000762154	 201       	 0         	 0         	 2.10981   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 10)                                                                                          	 0.000759077	 201       	 0         	 0         	 2.11836   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 10)   	 0.000692419	 100       	 7.22106   	 0         	 4.04379   	 1.78571   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                          	 0.000523115	 100       	 0         	 0         	 7.6465    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 10, k: 50)     	 0.000479135	 100       	 10.4355   	 0         	 5.84386   	 1.78571   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 10, n: 50, r2: 1)                    	 0.000446543	 100       	 0         	 0         	 10.7492   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 1, Xr2: 50, Qr1: 1, Qr2: 0)          	 0.000438122	 100       	 0         	 0         	 9.12988   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 1, r1low: 0, n: 50, r2: 10)                     	 0.000401781	 100       	 0         	 0         	 1.99113   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000397168	 101       	 0.635751  	 0         	 10.172    	 0.0625    
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                            	 0.000387222	 100       	 1.29125   	 0         	 15.495    	 0.0833333 
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 10)                                                                	 0.000365571	 101       	 0         	 0         	 2.21024   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000339708	 100       	 0.735926  	 0         	 11.7748   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 10, n: 50, r2: 1)                                                                                 	 0.000335142	 101       	 0.150682  	 0         	 2.41092   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 50)                                                                       	 0.000275468	 8         	 0         	 0         	 58.083    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 10, k: 50)  	 0.000244019	 100       	 20.4902   	 0         	 11.4745   	 1.78571   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                              	 0.000198076	 8         	 0         	 0         	 80.7771   	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 10, m: 10, fromLeft: 0)                	 0.000179854	 809       	 0         	 0         	 7.19695   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 500, Xcols: 10, r: 10, streamingCols: 0)                    	 0.000163184	 8         	 2.45122   	 0         	 3.94156   	 0.621891  
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 500, cols: 10, reductionFactor: 37, colBlockingSize: 12)                   	 0.000144203	 8         	 5.69767   	 0         	 2.26348   	 2.51722   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.000110643	 1         	 2.32059   	 0         	 0.361523  	 6.41892   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 10, m: 50, k: 10)   	 8.8842e-05	 100       	 11.2559   	 0         	 9.90523   	 1.13636   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 10, r1_: 10, n: 50, r2: 10)           	 6.6202e-05	 8         	 12.0842   	 0         	 9.76406   	 1.23762   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 500, m: 10)                                                                        	 3.7011e-05	 8         	 0         	 0         	 17.2922   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 500, m: 10)                                                               	 3.489e-05 	 8         	 0         	 0         	 18.3434   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 50, r: 50, streamingCols: 0)                     	 3.2991e-05	 1         	 3.78891   	 0         	 1.51556   	 2.5       
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                                	 2.3671e-05	 1         	 0         	 0         	 1.68983   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 10, r: 10, streamingCols: 0)                     	 2.045e-05 	 1         	 0.244499  	 0         	 0.410758  	 0.595238  
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 9.871e-06 	 1         	 25.3267   	 0         	 6.07841   	 4.16667   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 0)                	 9.81e-06  	 9         	 0         	 0         	 36.6972   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 10, n: 50, r2: 1)                                                                                   	 9.52e-06  	 1         	 0.105042  	 0         	 0.420168  	 0.25      
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 7.85e-06  	 1         	 0.636943  	 0         	 2.54777   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 0, m: 500, k: 10)   	 6.661e-06 	 100       	 0         	 0         	 600.51    	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                         	 4.38e-06  	 1         	 0         	 0         	 9.13242   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 10)                                                                         	 3.28e-06  	 1         	 0         	 0         	 2.43902   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 10, r1_: 10, n: 50, r2: 1)            	 2.4e-06   	 1         	 4.16667   	 0         	 3.66667   	 1.13636   
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 1.52314   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 1.52309   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                            	 1.37593   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                        	 1.37468   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 1.14506   	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 0.390012  	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 0.310258  	 1818      
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.285055  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.224756  	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.219292  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_leftOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                   	 0.147089  	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.0707314 	 918       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.0263786 	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.0263228 	 900       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.0198366 	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.0193192 	 1800      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0150041 	 900       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 0.0145287 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 0.0145004 	 2         
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                              	 0.0113684 	 20        
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0102893 	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.00740156	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.00665268	 1000      
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                              	 0.00567948	 918       
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                       	 0.00562759	 818       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.00526521	 1310      
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.00491136	 18        
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.0033401 	 1818      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00290487	 6372      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.0011766 	 5272      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00107202	 302       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000828894	 102       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000387222	 100       
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.000189664	 818       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: L, orthoY: L
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m43->44  [0m[1;34m44->45  [0m[1;34m45->46  [0m[1;34m46->47  [0m[1;34m47->48  [0m[1;34m48->49  [0m[1;34m49->50  [0m[1;34m50->51  [0m[1;34m51->52  [0m[1;34m52->53  [0m[1;34m53->54  [0m[1;34m54->55  [0m[1;34m55->56  [0m[1;34m56->57  [0m[1;34m57->58  [0m[1;34m58->59  [0m[1;34m59->60  [0m[1;34m60->61  [0m[1;34m61->62  [0m[1;34m62->63  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 22487914530688 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 22487710558208 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 22487509231744 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 22487307905280 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 22487106578816 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 22486905252352 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 22486703925888 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 22486502599424 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 22486301272960 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 22486099946496 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 22485898620032 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 22485697293568 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 22485495967104 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 22485294640640 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 22485093314176 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 22484891987712 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 22484690661248 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 22484489334784 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 22484288008320 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 22484086681856 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 22483885355392 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 22483684028928 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 22483482702464 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 22483281376000 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 22483080049536 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 22482878723072 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 22482677396608 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 22482476070144 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 22482274743680 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 22482073417216 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 22481872090752 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 22481670764288 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 22481469433728 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 22481268107264 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 22481066780800 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 22480865454336 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 22480664127872 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 22480462801408 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 22480261474944 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 22480060148480 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 22479858822016 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 22479657495552 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 22479456169088 -> hwthread 43 - OK[0m[1;34m
[0m[1;34m	threadid 22479254842624 -> hwthread 44 - OK[0m[1;34m
[0m[1;34m	threadid 22479053516160 -> hwthread 45 - OK[0m[1;34m
[0m[1;34m	threadid 22478852189696 -> hwthread 46 - OK[0m[1;34m
[0m[1;34m	threadid 22478650863232 -> hwthread 47 - OK[0m[1;34m
[0m[1;34m	threadid 22478449536768 -> hwthread 48 - OK[0m[1;34m
[0m[1;34m	threadid 22478248210304 -> hwthread 49 - OK[0m[1;34m
[0m[1;34m	threadid 22478046883840 -> hwthread 50 - OK[0m[1;34m
[0m[1;34m	threadid 22477845557376 -> hwthread 51 - OK[0m[1;34m
[0m[1;34m	threadid 22477644230912 -> hwthread 52 - OK[0m[1;34m
[0m[1;34m	threadid 22477442904448 -> hwthread 53 - OK[0m[1;34m
[0m[1;34m	threadid 22477241577984 -> hwthread 54 - OK[0m[1;34m
[0m[1;34m	threadid 22477040251520 -> hwthread 55 - OK[0m[1;34m
[0m[1;34m	threadid 22476838925056 -> hwthread 56 - OK[0m[1;34m
[0m[1;34m	threadid 22476637598592 -> hwthread 57 - OK[0m[1;34m
[0m[1;34m	threadid 22476436272128 -> hwthread 58 - OK[0m[1;34m
[0m[1;34m	threadid 22476234945664 -> hwthread 59 - OK[0m[1;34m
[0m[1;34m	threadid 22476033619200 -> hwthread 60 - OK[0m[1;34m
[0m[1;34m	threadid 22475832292736 -> hwthread 61 - OK[0m[1;34m
[0m[1;34m	threadid 22475630966272 -> hwthread 62 - OK[0m[1;34m
[0m[1;34m	threadid 22475429639808 -> hwthread 63 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 22487808870144 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 22487802279680 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 61, m: 61)                                                                 	 0.338048  	 700       	 3.29008   	 0         	 0.185933  	 17.695    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3050, cols: 61, reductionFactor: 37, colBlockingSize: 12)                  	 0.224925  	 600       	 62.1848   	 0         	 4.04979   	 15.3551   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 61, r: 61, r2: 3050, leftOrthog: 0)        	 0.19314   	 600       	 70.5129   	 0         	 14.0563   	 5.01645   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 61, n: 50, r: 61, r2: 61)             	 0.177091  	 600       	 76.903    	 0         	 10.1865   	 7.5495    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 11, k: 2500)   	 0.0560485 	 800       	 39.2517   	 0         	 17.4763   	 2.246     
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 61)                                                                 	 0.0419691 	 100       	 2.54354   	 0         	 0.164883  	 15.4263   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 61, reductionFactor: 37, colBlockingSize: 12)                  	 0.0400511 	 100       	 47.7087   	 0         	 3.12044   	 15.2891   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0349798 	 100       	 2.50144   	 0         	 0.172671  	 14.4868   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 11, m: 550, k: 11)  	 0.0285122 	 700       	 3.26772   	 0         	 2.40029   	 1.36139   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3050, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0258119 	 100       	 60.6782   	 0         	 4.80399   	 12.6308   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 61, r: 61, r2: 2500, leftOrthog: 0)        	 0.0252979 	 100       	 73.5436   	 0         	 14.7029   	 5.00197   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 3050, leftOrthog: 0)        	 0.0250686 	 100       	 60.8332   	 0         	 14.7595   	 4.12162   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r: 61, r2: 61)             	 0.0250169 	 100       	 74.3696   	 0         	 9.87238   	 7.5331    
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 61, Qr2: 11)       	 0.023181  	 700       	 0         	 0         	 83.2474   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3050, cols: 11, reductionFactor: 37, colBlockingSize: 12)                  	 0.0230863 	 700       	 22.9848   	 0         	 8.16751   	 2.81417   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 61, n: 50, r: 61, r2: 50)             	 0.0207877 	 100       	 89.5      	 0         	 13.1462   	 6.80804   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 3050, Xcols: 11, r: 11, streamingCols: 0)                   	 0.0182183 	 700       	 14.1799   	 0         	 20.644    	 0.686881  
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 2500, m: 11, k: 50)	 0.0105929 	 800       	 207.687   	 0         	 92.4698   	 2.246     
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 11, n: 50, r2: 11)                   	 0.00679342	 700       	 0         	 0         	 55.3123   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 550, k: 11)  	 0.00673331	 800       	 71.8815   	 0         	 32.412    	 2.21774   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 3050, m: 11)                                                                       	 0.00623431	 700       	 0         	 0         	 60.2729   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 61, reductionFactor: 37, colBlockingSize: 12)                    	 0.00558488	 100       	 6.8427    	 0         	 0.969905  	 7.05503   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 50)           	 0.00492142	 8         	 20.3194   	 0         	 3.28361   	 6.18812   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 11, m: 11)                                                                  	 0.00480291	 909       	 0.335748  	 0         	 0.566267  	 0.592914  
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 3050, m: 11)                                                              	 0.00448823	 700       	 0         	 0         	 83.7211   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 11, reductionFactor: 37, colBlockingSize: 12)                  	 0.00360756	 100       	 17.2236   	 0         	 6.12514   	 2.81195   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00342456	 9         	 0.438011  	 0         	 0.158736  	 2.75937   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 11, n: 50, r2: 11)                                                                                         	 0.00337793	 808       	 0         	 0         	 23.1545   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.00271907	 8         	 37.7713   	 0         	 3.00103   	 12.5861   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 50, Qr2: 11)       	 0.00265353	 100       	 0         	 0         	 91.9531   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 11, r: 11, streamingCols: 0)                   	 0.00235563	 100       	 12.8416   	 0         	 18.6992   	 0.686745  
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                   	 0.00208205	 8         	 24.0148   	 0         	 7.72315   	 3.10945   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 61, r: 50, r2: 50, leftOrthog: 0)          	 0.00163362	 100       	 18.6701   	 0         	 6.92938   	 2.69435   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 50, r2: 50)              	 0.00119599	 100       	 20.9032   	 0         	 5.01676   	 4.16667   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 11, reductionFactor: 37, colBlockingSize: 12)                    	 0.00112672	 101       	 1.11396   	 0         	 0.48119   	 2.31502   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 0, n: 50, r2: 11)                    	 0.00107166	 100       	 0         	 0         	 41.0579   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 11)                                                                       	 0.000906982	 100       	 0         	 0         	 48.5125   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 11)                                                              	 0.000797546	 100       	 0         	 0         	 55.1692   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                   	 0.000791551	 100       	 0.631671  	 0         	 2.52668   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 11)                                                                                          	 0.000766362	 201       	 0         	 0         	 2.30805   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 11, n: 50, r2: 1)                                                                                          	 0.000765832	 201       	 0         	 0         	 2.30964   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 11)   	 0.000704169	 100       	 7.81063   	 0         	 4.08993   	 1.90972   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 11, n: 50, r2: 1)                    	 0.000656357	 100       	 0         	 0         	 7.43498   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                            	 0.000571118	 100       	 0.875476  	 0         	 10.5057   	 0.0833333 
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                          	 0.000541266	 100       	 0         	 0         	 7.39008   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 11, k: 50)     	 0.000480872	 100       	 11.4376   	 0         	 5.98912   	 1.90972   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 550, m: 11)                                                               	 0.000470122	 8         	 0         	 0         	 1.64723   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 1, Xr2: 50, Qr1: 1, Qr2: 0)          	 0.000440678	 100       	 0         	 0         	 9.07692   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 1, r1low: 0, n: 50, r2: 11)                     	 0.000408087	 100       	 0         	 0         	 2.1564    	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000393301	 101       	 0.642002  	 0         	 10.272    	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 11, r1_: 11, n: 50, r2: 11)           	 0.000375489	 8         	 2.83577   	 0         	 2.083     	 1.36139   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 11)                                                                	 0.000373524	 101       	 0         	 0         	 2.3795    	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 11, n: 50, r2: 1)                                                                                 	 0.000363607	 101       	 0.152775  	 0         	 2.4444    	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000321825	 100       	 0.77682   	 0         	 12.4291   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 11, m: 11, fromLeft: 0)                	 0.000315195	 809       	 0         	 0         	 4.96906   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 50)                                                                       	 0.000275527	 8         	 0         	 0         	 58.0705   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                              	 0.000242335	 8         	 0         	 0         	 66.0243   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 11, k: 50)  	 0.000226863	 100       	 24.2437   	 0         	 12.6949   	 1.90972   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 550, cols: 11, reductionFactor: 37, colBlockingSize: 12)                   	 0.000206905	 8         	 5.28541   	 0         	 1.90882   	 2.76895   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 550, Xcols: 11, r: 11, streamingCols: 0)                    	 0.000123512	 8         	 4.31051   	 0         	 6.30119   	 0.68408   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.000123403	 1         	 2.08064   	 0         	 0.324141  	 6.41892   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 11, m: 50, k: 11)   	 9.3096e-05	 100       	 12.9973   	 0         	 10.4924   	 1.23874   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 550, m: 11)                                                                        	 4.3143e-05	 8         	 0         	 0         	 17.9496   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 50, r: 50, streamingCols: 0)                     	 3.4701e-05	 1         	 3.6022    	 0         	 1.44088   	 2.5       
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                                	 2.492e-05 	 1         	 0         	 0         	 1.60514   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 11, r: 11, streamingCols: 0)                     	 1.976e-05 	 1         	 0.306174  	 0         	 0.469838  	 0.651659  
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 11, r1_: 11, n: 50, r2: 1)            	 1.127e-05 	 1         	 1.07365   	 0         	 0.866726  	 1.23874   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 1.0271e-05	 1         	 24.3404   	 0         	 5.84169   	 4.16667   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 0)                	 9.971e-06 	 9         	 0         	 0         	 36.1047   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 9e-06     	 1         	 0.555556  	 0         	 2.22222   	 0.25      
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 11, n: 50, r2: 1)                                                                                   	 7.67e-06  	 1         	 0.143416  	 0         	 0.573664  	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 0, m: 550, k: 11)   	 7.47e-06  	 100       	 0         	 0         	 647.925   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                         	 4.77e-06  	 1         	 0         	 0         	 8.38574   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 11)                                                                         	 3.61e-06  	 1         	 0         	 0         	 2.43767   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 1.69125   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 1.6912    	 100       
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                            	 1.47248   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                        	 1.47125   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 1.237     	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 0.414997  	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 0.327243  	 1818      
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.297005  	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.24514   	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.224092  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_leftOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                   	 0.218654  	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.0825264 	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0565294 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.0360502 	 1800      
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.0313782 	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.0262752 	 900       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.022834  	 818       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 0.0156601 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 0.0156324 	 2         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0108197 	 900       
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                              	 0.0108196 	 20        
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.00892953	 1000      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.00822747	 918       
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                       	 0.00746834	 818       
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00685744	 1818      
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                              	 0.00639668	 918       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.00545139	 1310      
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.00531845	 18        
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00319435	 6372      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00129767	 5272      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00107873	 302       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000808221	 102       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000571118	 100       
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.000325166	 818       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: L, orthoY: L
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m43->44  [0m[1;34m44->45  [0m[1;34m45->46  [0m[1;34m46->47  [0m[1;34m47->48  [0m[1;34m48->49  [0m[1;34m49->50  [0m[1;34m50->51  [0m[1;34m51->52  [0m[1;34m52->53  [0m[1;34m53->54  [0m[1;34m54->55  [0m[1;34m55->56  [0m[1;34m56->57  [0m[1;34m57->58  [0m[1;34m58->59  [0m[1;34m59->60  [0m[1;34m60->61  [0m[1;34m61->62  [0m[1;34m62->63  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 23415568861056 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 23415356385280 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 23415155058816 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 23414953732352 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 23414752405888 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 23414551079424 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 23414349752960 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 23414148426496 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 23413947100032 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 23413745773568 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 23413544447104 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 23413343120640 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 23413141794176 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 23412940467712 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 23412739141248 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 23412537814784 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 23412336488320 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 23412135161856 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 23411933835392 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 23411732508928 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 23411531182464 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 23411329856000 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 23411128529536 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 23410927203072 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 23410725876608 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 23410524550144 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 23410323223680 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 23410121897216 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 23409920570752 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 23409719244288 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 23409517917824 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 23409316591360 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 23409115260800 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 23408913934336 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 23408712607872 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 23408511281408 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 23408309954944 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 23408108628480 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 23407907302016 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 23407705975552 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 23407504649088 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 23407303322624 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 23407101996160 -> hwthread 43 - OK[0m[1;34m
[0m[1;34m	threadid 23406900669696 -> hwthread 44 - OK[0m[1;34m
[0m[1;34m	threadid 23406699343232 -> hwthread 45 - OK[0m[1;34m
[0m[1;34m	threadid 23406498016768 -> hwthread 46 - OK[0m[1;34m
[0m[1;34m	threadid 23406296690304 -> hwthread 47 - OK[0m[1;34m
[0m[1;34m	threadid 23406095363840 -> hwthread 48 - OK[0m[1;34m
[0m[1;34m	threadid 23405894037376 -> hwthread 49 - OK[0m[1;34m
[0m[1;34m	threadid 23405692710912 -> hwthread 50 - OK[0m[1;34m
[0m[1;34m	threadid 23405491384448 -> hwthread 51 - OK[0m[1;34m
[0m[1;34m	threadid 23405290057984 -> hwthread 52 - OK[0m[1;34m
[0m[1;34m	threadid 23405088731520 -> hwthread 53 - OK[0m[1;34m
[0m[1;34m	threadid 23404887405056 -> hwthread 54 - OK[0m[1;34m
[0m[1;34m	threadid 23404686078592 -> hwthread 55 - OK[0m[1;34m
[0m[1;34m	threadid 23404484752128 -> hwthread 56 - OK[0m[1;34m
[0m[1;34m	threadid 23404283425664 -> hwthread 57 - OK[0m[1;34m
[0m[1;34m	threadid 23404082099200 -> hwthread 58 - OK[0m[1;34m
[0m[1;34m	threadid 23403880772736 -> hwthread 59 - OK[0m[1;34m
[0m[1;34m	threadid 23403679446272 -> hwthread 60 - OK[0m[1;34m
[0m[1;34m	threadid 23403478119808 -> hwthread 61 - OK[0m[1;34m
[0m[1;34m	threadid 23403276793344 -> hwthread 62 - OK[0m[1;34m
[0m[1;34m	threadid 23403075466880 -> hwthread 63 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 23415463200512 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 23415456610048 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 62, m: 62)                                                                 	 0.333608  	 700       	 3.50054   	 0         	 0.194619  	 17.9866   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3100, cols: 62, reductionFactor: 37, colBlockingSize: 12)                  	 0.22997   	 600       	 63.8611   	 0         	 4.09188   	 15.6068   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 62, r: 62, r2: 3100, leftOrthog: 0)        	 0.193576  	 600       	 73.8711   	 0         	 14.4883   	 5.09868   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 62, n: 50, r: 62, r2: 62)             	 0.181669  	 600       	 78.7129   	 0         	 10.2581   	 7.67327   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 62, reductionFactor: 37, colBlockingSize: 12)                  	 0.0400561 	 100       	 49.2796   	 0         	 3.17243   	 15.5337   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 62)                                                                 	 0.0394142 	 100       	 2.75281   	 0         	 0.177601  	 15.5      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0345611 	 100       	 2.53175   	 0         	 0.174763  	 14.4868   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3100, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0257942 	 100       	 61.7151   	 0         	 4.88482   	 12.6341   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 62, Qr2: 12)       	 0.025785  	 700       	 0         	 0         	 76.9689   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3100, cols: 12, reductionFactor: 37, colBlockingSize: 12)                  	 0.0252753 	 700       	 25.3944   	 0         	 8.27394   	 3.0692    
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r: 62, r2: 62)             	 0.0252028 	 100       	 76.2614   	 0         	 9.9622    	 7.65508   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 62, r: 62, r2: 2500, leftOrthog: 0)        	 0.0244434 	 100       	 78.6308   	 0         	 15.4705   	 5.08263   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 3100, Xcols: 12, r: 12, streamingCols: 0)                   	 0.0223899 	 700       	 13.9563   	 0         	 18.6264   	 0.749275  
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 62, n: 50, r: 62, r2: 50)             	 0.021901  	 100       	 87.7585   	 0         	 12.7958   	 6.85841   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 3100, leftOrthog: 0)        	 0.0218731 	 100       	 70.8634   	 0         	 17.1901   	 4.12234   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 12, k: 2500)   	 0.0158679 	 800       	 151.249   	 0         	 62.7582   	 2.41003   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 2500, m: 12, k: 50)	 0.0102567 	 800       	 233.993   	 0         	 97.0913   	 2.41003   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 600, k: 12)  	 0.00673893	 800       	 85.4735   	 0         	 35.8989   	 2.38095   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 12, m: 600, k: 12)  	 0.00656066	 700       	 18.4372   	 0         	 12.4144   	 1.48515   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 12, n: 50, r2: 12)                   	 0.0056461 	 700       	 0         	 0         	 73.7926   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 62, reductionFactor: 37, colBlockingSize: 12)                    	 0.00554529	 100       	 7.11936   	 0         	 1.00179   	 7.10666   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 3100, m: 12)                                                                       	 0.00515894	 700       	 0         	 0         	 80.7607   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 12, m: 12)                                                                  	 0.00496356	 909       	 0.421942  	 0         	 0.650494  	 0.648649  
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 50)           	 0.00492751	 8         	 20.2942   	 0         	 3.27954   	 6.18812   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 3100, m: 12)                                                              	 0.00438021	 700       	 0         	 0         	 95.1188   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 12, reductionFactor: 37, colBlockingSize: 12)                  	 0.00374254	 100       	 19.7582   	 0         	 6.44355   	 3.06636   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00354416	 9         	 0.42323   	 0         	 0.153379  	 2.75937   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 12, n: 50, r2: 12)                                                                                         	 0.00351737	 808       	 0         	 0         	 26.4634   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 50, Qr2: 12)       	 0.00282926	 100       	 0         	 0         	 87.6555   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.00267105	 8         	 38.4504   	 0         	 3.05498   	 12.5861   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 12, r: 12, streamingCols: 0)                   	 0.0025477 	 100       	 14.1304   	 0         	 18.8631   	 0.749101  
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                   	 0.00187634	 8         	 26.6476   	 0         	 8.56988   	 3.10945   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 62, r: 50, r2: 50, leftOrthog: 0)          	 0.00140446	 100       	 22.0725   	 0         	 8.14547   	 2.70979   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 12, reductionFactor: 37, colBlockingSize: 12)                    	 0.0010954 	 101       	 1.36362   	 0         	 0.548795  	 2.48474   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 0, n: 50, r2: 12)                    	 0.00106534	 100       	 0         	 0         	 45.0562   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 50, r2: 50)              	 0.00105065	 100       	 23.7949   	 0         	 5.71078   	 4.16667   
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                   	 0.000876036	 100       	 0.570753  	 0         	 2.28301   	 0.25      
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 12)                                                                       	 0.000875299	 100       	 0         	 0         	 54.8384   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 12)                                                                                          	 0.000804444	 201       	 0         	 0         	 2.39868   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 12)                                                              	 0.000780608	 100       	 0         	 0         	 61.4905   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 12, n: 50, r2: 1)                                                                                          	 0.000739787	 201       	 0         	 0         	 2.60832   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 12, k: 50)     	 0.000529835	 100       	 11.3243   	 0         	 5.58664   	 2.02703   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                          	 0.000521076	 100       	 0         	 0         	 7.67642   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 12)   	 0.00051648	 100       	 11.6171   	 0         	 5.7311    	 2.02703   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 12, n: 50, r2: 1)                    	 0.000434613	 100       	 0         	 0         	 11.4125   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 1, Xr2: 50, Qr1: 1, Qr2: 0)          	 0.000423832	 100       	 0         	 0         	 9.4377    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 1, r1low: 0, n: 50, r2: 12)                     	 0.000417524	 100       	 0         	 0         	 2.29927   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                            	 0.000412058	 100       	 1.21342   	 0         	 14.5611   	 0.0833333 
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000395233	 101       	 0.638864  	 0         	 10.2218   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 12)                                                                	 0.000385884	 101       	 0         	 0         	 2.51267   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 12, n: 50, r2: 1)                                                                                 	 0.000345718	 101       	 0.175287  	 0         	 2.8046    	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000337569	 100       	 0.740589  	 0         	 11.8494   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 50)                                                                       	 0.000271207	 8         	 0         	 0         	 58.9955   	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 12, m: 12, fromLeft: 0)                	 0.000248204	 809       	 0         	 0         	 7.50969   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 12, k: 50)  	 0.000221438	 100       	 27.0956   	 0         	 13.3672   	 2.02703   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                              	 0.000201065	 8         	 0         	 0         	 79.5763   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 600, cols: 12, reductionFactor: 37, colBlockingSize: 12)                   	 0.000175407	 8         	 8.0941    	 0         	 2.67957   	 3.02067   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 600, Xcols: 12, r: 12, streamingCols: 0)                    	 0.000135554	 8         	 5.09907   	 0         	 6.83276   	 0.746269  
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.000114633	 1         	 2.23982   	 0         	 0.34894   	 6.41892   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 12, m: 50, k: 12)   	 9.1703e-05	 100       	 15.7029   	 0         	 11.7248   	 1.33929   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 12, r1_: 12, n: 50, r2: 12)           	 6.143e-05 	 8         	 22.5037   	 0         	 15.1525   	 1.48515   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 600, m: 12)                                                               	 4.3581e-05	 8         	 0         	 0         	 21.1468   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 600, m: 12)                                                                        	 3.891e-05 	 8         	 0         	 0         	 23.6854   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 50, r: 50, streamingCols: 0)                     	 3.3911e-05	 1         	 3.68612   	 0         	 1.47445   	 2.5       
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                                	 2.1791e-05	 1         	 0         	 0         	 1.83562   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 12, r: 12, streamingCols: 0)                     	 1.8161e-05	 1         	 0.396454  	 0         	 0.560322  	 0.707547  
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 12, r1_: 12, n: 50, r2: 1)            	 1.3071e-05	 1         	 1.10168   	 0         	 0.822584  	 1.33929   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 1.017e-05 	 1         	 24.5821   	 0         	 5.89971   	 4.16667   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 0)                	 1.011e-05 	 9         	 0         	 0         	 35.6083   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 12, n: 50, r2: 1)                                                                                   	 9.01e-06  	 1         	 0.133185  	 0         	 0.532741  	 0.25      
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 8.06e-06  	 1         	 0.620347  	 0         	 2.48139   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 0, m: 600, k: 12)   	 7.831e-06 	 100       	 0         	 0         	 735.538   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                         	 4.27e-06  	 1         	 0         	 0         	 9.36768   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 12)                                                                         	 3.97e-06  	 1         	 0         	 0         	 2.41814   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 1.61426   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 1.61424   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                            	 1.45178   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                        	 1.45048   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 1.21331   	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 0.407583  	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 0.33444   	 1818      
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.301964  	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.241297  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.229823  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_leftOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                   	 0.162376  	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.0869082 	 918       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.033546  	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.0290381 	 900       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.0270016 	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0163977 	 900       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 0.0146882 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 0.0146597 	 2         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.0139156 	 1800      
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                              	 0.0111526 	 20        
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0104782 	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.00850772	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.00756357	 1000      
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                       	 0.0063526 	 818       
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                              	 0.00581313	 918       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.00558268	 1310      
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00545552	 1818      
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.00501218	 18        
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00302643	 6372      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00137584	 5272      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00107852	 302       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000893106	 102       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000412058	 100       
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.000258314	 818       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: L, orthoY: L
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m43->44  [0m[1;34m44->45  [0m[1;34m45->46  [0m[1;34m46->47  [0m[1;34m47->48  [0m[1;34m48->49  [0m[1;34m49->50  [0m[1;34m50->51  [0m[1;34m51->52  [0m[1;34m52->53  [0m[1;34m53->54  [0m[1;34m54->55  [0m[1;34m55->56  [0m[1;34m56->57  [0m[1;34m57->58  [0m[1;34m58->59  [0m[1;34m59->60  [0m[1;34m60->61  [0m[1;34m61->62  [0m[1;34m62->63  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 22949434017664 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 22949218215936 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 22949016889472 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 22948815563008 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 22948614236544 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 22948412910080 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 22948211583616 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 22948010257152 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 22947808930688 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 22947607604224 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 22947406277760 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 22947204951296 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 22947003624832 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 22946802298368 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 22946600971904 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 22946399645440 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 22946198318976 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 22945996992512 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 22945795666048 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 22945594339584 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 22945393013120 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 22945191686656 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 22944990360192 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 22944789033728 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 22944587707264 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 22944386380800 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 22944185054336 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 22943983727872 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 22943782401408 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 22943581074944 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 22943379748480 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 22943178422016 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 22942977091456 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 22942775764992 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 22942574438528 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 22942373112064 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 22942171785600 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 22941970459136 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 22941769132672 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 22941567806208 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 22941366479744 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 22941165153280 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 22940963826816 -> hwthread 43 - OK[0m[1;34m
[0m[1;34m	threadid 22940762500352 -> hwthread 44 - OK[0m[1;34m
[0m[1;34m	threadid 22940561173888 -> hwthread 45 - OK[0m[1;34m
[0m[1;34m	threadid 22940359847424 -> hwthread 46 - OK[0m[1;34m
[0m[1;34m	threadid 22940158520960 -> hwthread 47 - OK[0m[1;34m
[0m[1;34m	threadid 22939957194496 -> hwthread 48 - OK[0m[1;34m
[0m[1;34m	threadid 22939755868032 -> hwthread 49 - OK[0m[1;34m
[0m[1;34m	threadid 22939554541568 -> hwthread 50 - OK[0m[1;34m
[0m[1;34m	threadid 22939353215104 -> hwthread 51 - OK[0m[1;34m
[0m[1;34m	threadid 22939151888640 -> hwthread 52 - OK[0m[1;34m
[0m[1;34m	threadid 22938950562176 -> hwthread 53 - OK[0m[1;34m
[0m[1;34m	threadid 22938749235712 -> hwthread 54 - OK[0m[1;34m
[0m[1;34m	threadid 22938547909248 -> hwthread 55 - OK[0m[1;34m
[0m[1;34m	threadid 22938346582784 -> hwthread 56 - OK[0m[1;34m
[0m[1;34m	threadid 22938145256320 -> hwthread 57 - OK[0m[1;34m
[0m[1;34m	threadid 22937943929856 -> hwthread 58 - OK[0m[1;34m
[0m[1;34m	threadid 22937742603392 -> hwthread 59 - OK[0m[1;34m
[0m[1;34m	threadid 22937541276928 -> hwthread 60 - OK[0m[1;34m
[0m[1;34m	threadid 22937339950464 -> hwthread 61 - OK[0m[1;34m
[0m[1;34m	threadid 22937138624000 -> hwthread 62 - OK[0m[1;34m
[0m[1;34m	threadid 22936937297536 -> hwthread 63 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 22949328357120 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 22949321766656 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 63, m: 63)                                                                 	 0.345898  	 700       	 3.54217   	 0         	 0.193791  	 18.2783   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3150, cols: 63, reductionFactor: 37, colBlockingSize: 12)                  	 0.227948  	 600       	 67.5957   	 0         	 4.26243   	 15.8585   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 63, r: 63, r2: 3150, leftOrthog: 0)        	 0.200858  	 600       	 74.6938   	 0         	 14.4171   	 5.18092   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 63, n: 50, r: 63, r2: 63)             	 0.187612  	 600       	 79.9673   	 0         	 10.2561   	 7.79703   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 63)                                                                 	 0.0412995 	 100       	 2.66952   	 0         	 0.171431  	 15.572    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 63, reductionFactor: 37, colBlockingSize: 12)                  	 0.040586  	 100       	 50.2176   	 0         	 3.18275   	 15.7781   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0342642 	 100       	 2.55368   	 0         	 0.176277  	 14.4868   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3150, cols: 13, reductionFactor: 37, colBlockingSize: 12)                  	 0.0274963 	 700       	 27.8377   	 0         	 8.37444   	 3.32412   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 63, Qr2: 13)       	 0.0256419 	 700       	 0         	 0         	 79.5821   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3150, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0254772 	 100       	 63.4909   	 0         	 5.02411   	 12.6372   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r: 63, r2: 63)             	 0.0247273 	 100       	 80.2553   	 0         	 10.3196   	 7.77701   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 63, r: 63, r2: 2500, leftOrthog: 0)        	 0.0239895 	 100       	 82.7238   	 0         	 16.0216   	 5.16326   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 3150, leftOrthog: 0)        	 0.0230313 	 100       	 68.3853   	 0         	 16.5861   	 4.12304   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 63, n: 50, r: 63, r2: 50)             	 0.0221602 	 100       	 89.5524   	 0         	 12.9638   	 6.90789   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 3150, Xcols: 13, r: 13, streamingCols: 0)                   	 0.0196596 	 700       	 18.9549   	 0         	 23.3531   	 0.811663  
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 13, k: 2500)   	 0.0164157 	 800       	 158.385   	 0         	 61.658    	 2.56876   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 2500, m: 13, k: 50)	 0.0109075 	 800       	 238.368   	 0         	 92.7949   	 2.56876   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 50)           	 0.00822055	 8         	 12.1646   	 0         	 1.96581   	 6.18812   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 650, k: 13)  	 0.00651791	 800       	 103.714   	 0         	 40.8475   	 2.53906   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 13, m: 650, k: 13)  	 0.00602969	 700       	 25.5054   	 0         	 15.8526   	 1.60891   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 13, m: 13)                                                                  	 0.00575507	 909       	 0.462471  	 0         	 0.657063  	 0.703846  
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 3150, m: 13)                                                                       	 0.00563754	 700       	 0         	 0         	 81.3546   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 13, n: 50, r2: 13)                   	 0.00539408	 700       	 0         	 0         	 85.0265   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 63, reductionFactor: 37, colBlockingSize: 12)                    	 0.00467644	 100       	 8.7166    	 0         	 1.21785   	 7.15738   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 13, reductionFactor: 37, colBlockingSize: 12)                  	 0.00404918	 100       	 21.4324   	 0         	 6.45444   	 3.32057   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 3150, m: 13)                                                              	 0.00402886	 700       	 0         	 0         	 113.839   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 13, n: 50, r2: 13)                                                                                         	 0.00386322	 808       	 0         	 0         	 28.2773   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00350901	 9         	 0.427469  	 0         	 0.154915  	 2.75937   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 50, Qr2: 13)       	 0.00288023	 100       	 0         	 0         	 87.4931   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.00280358	 8         	 36.6327   	 0         	 2.91056   	 12.5861   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 13, r: 13, streamingCols: 0)                   	 0.00267026	 100       	 15.8224   	 0         	 19.499    	 0.811445  
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                   	 0.00207649	 8         	 24.0791   	 0         	 7.74383   	 3.10945   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 63, r: 50, r2: 50, leftOrthog: 0)          	 0.0019013 	 100       	 16.5676   	 0         	 6.08004   	 2.72491   
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.00170877	 100       	 0.146304  	 0         	 2.34087   	 0.0625    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 13, reductionFactor: 37, colBlockingSize: 12)                    	 0.00129035	 101       	 1.35858   	 0         	 0.512848  	 2.64908   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 13)                                                                       	 0.00103671	 100       	 0         	 0         	 50.1585   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 50, r2: 50)              	 0.00102554	 100       	 24.3775   	 0         	 5.85059   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 0, n: 50, r2: 13)                    	 0.00101422	 100       	 0         	 0         	 51.2711   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                   	 0.000871526	 100       	 0.573706  	 0         	 2.29483   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 13)                                                                                          	 0.000808104	 201       	 0         	 0         	 2.5868    	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 13)                                                              	 0.000808025	 100       	 0         	 0         	 64.3544   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 13, n: 50, r2: 1)                                                                                          	 0.000785108	 201       	 0         	 0         	 2.66256   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 13, k: 50)     	 0.000577864	 100       	 11.2483   	 0         	 5.26075   	 2.13816   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                          	 0.000534182	 100       	 0         	 0         	 7.48808   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 13)   	 0.000467673	 100       	 13.8986   	 0         	 6.50027   	 2.13816   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 13, n: 50, r2: 1)                    	 0.000445562	 100       	 0         	 0         	 11.3116   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 1, Xr2: 50, Qr1: 1, Qr2: 0)          	 0.000445557	 100       	 0         	 0         	 8.97753   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 1, r1low: 0, n: 50, r2: 13)                     	 0.000433864	 100       	 0         	 0         	 2.39706   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                            	 0.00041246	 100       	 1.21224   	 0         	 14.5469   	 0.0833333 
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000407621	 101       	 0.619448  	 0         	 9.91117   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 13)                                                                	 0.000388658	 101       	 0         	 0         	 2.70263   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 13, n: 50, r2: 1)                                                                                 	 0.00034851	 101       	 0.188373  	 0         	 3.01397   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 13, m: 13, fromLeft: 0)                	 0.000341534	 809       	 0         	 0         	 6.40503   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 50)                                                                       	 0.000311288	 8         	 0         	 0         	 51.3993   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                              	 0.000305728	 8         	 0         	 0         	 52.3341   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 13, k: 50)  	 0.000253253	 100       	 25.666    	 0         	 12.0038   	 2.13816   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 650, cols: 13, reductionFactor: 37, colBlockingSize: 12)                   	 0.000230675	 8         	 7.82531   	 0         	 2.39131   	 3.27239   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 650, Xcols: 13, r: 13, streamingCols: 0)                    	 0.000143044	 8         	 6.14356   	 0         	 7.59912   	 0.808458  
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 13, r1_: 13, n: 50, r2: 13)           	 0.000122043	 8         	 14.4015   	 0         	 8.95107   	 1.60891   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.000119303	 1         	 2.15214   	 0         	 0.335281  	 6.41892   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 13, m: 50, k: 13)   	 0.000115533	 100       	 14.6279   	 0         	 10.172    	 1.43805   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 650, m: 13)                                                               	 4.5052e-05	 8         	 0         	 0         	 24.0078   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 650, m: 13)                                                                        	 4.466e-05 	 8         	 0         	 0         	 24.2185   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 50, r: 50, streamingCols: 0)                     	 3.4521e-05	 1         	 3.62098   	 0         	 1.44839   	 2.5       
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                                	 2.2681e-05	 1         	 0         	 0         	 1.76359   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 13, r1_: 13, n: 50, r2: 1)            	 1.485e-05 	 1         	 1.13805   	 0         	 0.79138   	 1.43805   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 13, r: 13, streamingCols: 0)                     	 1.374e-05 	 1         	 0.614993  	 0         	 0.806114  	 0.762911  
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 0)                	 1.024e-05 	 9         	 0         	 0         	 35.1562   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 9.93e-06  	 1         	 0.503525  	 0         	 2.0141    	 0.25      
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 9.311e-06 	 1         	 26.85     	 0         	 6.44399   	 4.16667   
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 13, n: 50, r2: 1)                                                                                   	 8.841e-06 	 1         	 0.147042  	 0         	 0.588169  	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 0, m: 650, k: 13)   	 7.66e-06  	 100       	 0         	 0         	 882.507   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                         	 4.37e-06  	 1         	 0         	 0         	 9.15332   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 13)                                                                         	 3.53e-06  	 1         	 0         	 0         	 2.94618   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 1.66783   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 1.6678    	 100       
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                            	 1.50462   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                        	 1.50195   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 1.25661   	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 0.421462  	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 0.334677  	 1818      
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.299152  	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.24978   	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.235525  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_leftOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                   	 0.163102  	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.089057  	 918       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.0365352 	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.0289677 	 900       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.0245977 	 818       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 0.0185706 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 0.0185405 	 2         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0169936 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.0131385 	 1800      
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                              	 0.0113007 	 20        
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0111608 	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.00926408	 918       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.00836675	 18        
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.00728772	 1000      
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                       	 0.0070381 	 818       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.00599062	 1310      
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00565868	 1818      
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                              	 0.005599  	 918       
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00317159	 6372      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.0024649 	 302       
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00132327	 5272      
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000890297	 102       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.00041246	 100       
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.000351774	 818       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: L, orthoY: L
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m43->44  [0m[1;34m44->45  [0m[1;34m45->46  [0m[1;34m46->47  [0m[1;34m47->48  [0m[1;34m48->49  [0m[1;34m49->50  [0m[1;34m50->51  [0m[1;34m51->52  [0m[1;34m52->53  [0m[1;34m53->54  [0m[1;34m54->55  [0m[1;34m55->56  [0m[1;34m56->57  [0m[1;34m57->58  [0m[1;34m58->59  [0m[1;34m59->60  [0m[1;34m60->61  [0m[1;34m61->62  [0m[1;34m62->63  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 22647261484928 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 22647027001344 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 22646825674880 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 22646624348416 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 22646423021952 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 22646221695488 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 22646020369024 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 22645819042560 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 22645617716096 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 22645416389632 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 22645215063168 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 22645013736704 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 22644812410240 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 22644611083776 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 22644409757312 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 22644208430848 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 22644007104384 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 22643805777920 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 22643604451456 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 22643403124992 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 22643201798528 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 22643000472064 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 22642799145600 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 22642597819136 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 22642396492672 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 22642195166208 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 22641993839744 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 22641792513280 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 22641591186816 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 22641389860352 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 22641188533888 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 22640987207424 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 22640785876864 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 22640584550400 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 22640383223936 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 22640181897472 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 22639980571008 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 22639779244544 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 22639577918080 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 22639376591616 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 22639175265152 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 22638973938688 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 22638772612224 -> hwthread 43 - OK[0m[1;34m
[0m[1;34m	threadid 22638571285760 -> hwthread 44 - OK[0m[1;34m
[0m[1;34m	threadid 22638369959296 -> hwthread 45 - OK[0m[1;34m
[0m[1;34m	threadid 22638168632832 -> hwthread 46 - OK[0m[1;34m
[0m[1;34m	threadid 22637967306368 -> hwthread 47 - OK[0m[1;34m
[0m[1;34m	threadid 22637765979904 -> hwthread 48 - OK[0m[1;34m
[0m[1;34m	threadid 22637564653440 -> hwthread 49 - OK[0m[1;34m
[0m[1;34m	threadid 22637363326976 -> hwthread 50 - OK[0m[1;34m
[0m[1;34m	threadid 22637162000512 -> hwthread 51 - OK[0m[1;34m
[0m[1;34m	threadid 22636960674048 -> hwthread 52 - OK[0m[1;34m
[0m[1;34m	threadid 22636759347584 -> hwthread 53 - OK[0m[1;34m
[0m[1;34m	threadid 22636558021120 -> hwthread 54 - OK[0m[1;34m
[0m[1;34m	threadid 22636356694656 -> hwthread 55 - OK[0m[1;34m
[0m[1;34m	threadid 22636155368192 -> hwthread 56 - OK[0m[1;34m
[0m[1;34m	threadid 22635954041728 -> hwthread 57 - OK[0m[1;34m
[0m[1;34m	threadid 22635752715264 -> hwthread 58 - OK[0m[1;34m
[0m[1;34m	threadid 22635551388800 -> hwthread 59 - OK[0m[1;34m
[0m[1;34m	threadid 22635350062336 -> hwthread 60 - OK[0m[1;34m
[0m[1;34m	threadid 22635148735872 -> hwthread 61 - OK[0m[1;34m
[0m[1;34m	threadid 22634947409408 -> hwthread 62 - OK[0m[1;34m
[0m[1;34m	threadid 22634746082944 -> hwthread 63 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 22647155824384 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 22647149233920 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 64, m: 64)                                                                 	 0.347289  	 700       	 3.69867   	 0         	 0.199175  	 18.5699   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3200, cols: 64, reductionFactor: 37, colBlockingSize: 12)                  	 0.235168  	 600       	 68.6902   	 0         	 4.26376   	 16.1102   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 64, r: 64, r2: 3200, leftOrthog: 0)        	 0.205837  	 600       	 76.4131   	 0         	 14.5185   	 5.26316   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 64, n: 50, r: 64, r2: 64)             	 0.195399  	 600       	 80.4948   	 0         	 10.1625   	 7.92079   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 64, reductionFactor: 37, colBlockingSize: 12)                  	 0.0401941 	 100       	 52.3299   	 0         	 3.26608   	 16.0223   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 64)                                                                 	 0.0401572 	 100       	 2.78904   	 0         	 0.178299  	 15.6425   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0348723 	 100       	 2.50916   	 0         	 0.173204  	 14.4868   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3200, cols: 14, reductionFactor: 37, colBlockingSize: 12)                  	 0.0294556 	 700       	 30.616    	 0         	 8.55448   	 3.57894   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3200, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0289724 	 100       	 56.7175   	 0         	 4.48702   	 12.6403   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 64, r: 64, r2: 2500, leftOrthog: 0)        	 0.0275256 	 100       	 74.4033   	 0         	 14.1887   	 5.24384   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r: 64, r2: 64)             	 0.0264277 	 100       	 77.4944   	 0         	 9.81079   	 7.89889   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 64, Qr2: 14)       	 0.0254129 	 700       	 0         	 0         	 82.5469   	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 3200, leftOrthog: 0)        	 0.0247137 	 100       	 64.7415   	 0         	 15.6998   	 4.12371   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 64, n: 50, r: 64, r2: 50)             	 0.0211288 	 100       	 96.9295   	 0         	 13.9336   	 6.95652   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 3200, Xcols: 14, r: 14, streamingCols: 0)                   	 0.0210883 	 700       	 20.8191   	 0         	 23.8193   	 0.874044  
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 14, k: 2500)   	 0.0167305 	 800       	 167.359   	 0         	 61.4732   	 2.72246   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 2500, m: 14, k: 50)	 0.0112485 	 800       	 248.922   	 0         	 91.4325   	 2.72246   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 700, k: 14)  	 0.00654098	 800       	 119.86    	 0         	 44.5193   	 2.69231   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 14, m: 14)                                                                  	 0.00630203	 909       	 0.527627  	 0         	 0.694656  	 0.759551  
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 14, m: 700, k: 14)  	 0.00591576	 700       	 32.4692   	 0         	 18.7394   	 1.73267   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 64, reductionFactor: 37, colBlockingSize: 12)                    	 0.00588224	 100       	 7.15153   	 0         	 0.992274  	 7.20721   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 3200, m: 14)                                                                       	 0.00582353	 700       	 0         	 0         	 86.1608   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 14, n: 50, r2: 14)                   	 0.00537908	 700       	 0         	 0         	 93.2798   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 50)           	 0.0049975 	 8         	 20.01     	 0         	 3.23362   	 6.18812   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 14, reductionFactor: 37, colBlockingSize: 12)                  	 0.00430501	 100       	 23.3794   	 0         	 6.54048   	 3.57458   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 14, n: 50, r2: 14)                                                                                         	 0.00404531	 808       	 0         	 0         	 31.3188   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 3200, m: 14)                                                              	 0.00379268	 700       	 0         	 0         	 132.297   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.003443  	 9         	 0.435665  	 0         	 0.157886  	 2.75937   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 50, Qr2: 14)       	 0.00284433	 100       	 0         	 0         	 90.0036   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0027878 	 8         	 36.8401   	 0         	 2.92704   	 12.5861   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 14, r: 14, streamingCols: 0)                   	 0.00271852	 100       	 18.0245   	 0         	 20.6283   	 0.873777  
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                   	 0.00188295	 8         	 26.5541   	 0         	 8.5398    	 3.10945   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 64, r: 50, r2: 50, leftOrthog: 0)          	 0.00154773	 100       	 20.6754   	 0         	 7.54652   	 2.73973   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 14, reductionFactor: 37, colBlockingSize: 12)                    	 0.00121072	 101       	 1.67925   	 0         	 0.597966  	 2.80828   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 14)                                                                       	 0.00112902	 100       	 0         	 0         	 49.6005   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 0, n: 50, r2: 14)                    	 0.00112891	 100       	 0         	 0         	 49.6054   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 50, r2: 50)              	 0.00102293	 100       	 24.4396   	 0         	 5.8655    	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 14)                                                                                          	 0.000962373	 201       	 0         	 0         	 2.33922   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                   	 0.00088815	 100       	 0.562968  	 0         	 2.25187   	 0.25      
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 14)                                                              	 0.000870934	 100       	 0         	 0         	 64.2988   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 14, n: 50, r2: 1)                                                                                          	 0.000761463	 201       	 0         	 0         	 2.95641   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 14, n: 50, r2: 1)                    	 0.000718571	 100       	 0         	 0         	 7.12525   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 14, k: 50)     	 0.000581942	 100       	 12.0287   	 0         	 5.36136   	 2.24359   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                          	 0.00049919	 100       	 0         	 0         	 8.01298   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 14)   	 0.00048439	 100       	 14.4512   	 0         	 6.44109   	 2.24359   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 1, Xr2: 50, Qr1: 1, Qr2: 0)          	 0.00043684	 100       	 0         	 0         	 9.15667   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 1, r1low: 0, n: 50, r2: 14)                     	 0.000423092	 100       	 0         	 0         	 2.64718   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                            	 0.000398627	 100       	 1.25431   	 0         	 15.0517   	 0.0833333 
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 14)                                                                	 0.000384907	 101       	 0         	 0         	 2.93889   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000379982	 101       	 0.664505  	 0         	 10.6321   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 14, n: 50, r2: 1)                                                                                 	 0.000342928	 101       	 0.206166  	 0         	 3.29865   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000332305	 100       	 0.752321  	 0         	 12.0371   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 14, m: 14, fromLeft: 0)                	 0.000307599	 809       	 0         	 0         	 8.24783   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 50)                                                                       	 0.000284778	 8         	 0         	 0         	 56.1841   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 14, k: 50)  	 0.000268808	 100       	 26.0409   	 0         	 11.6068   	 2.24359   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 700, cols: 14, reductionFactor: 37, colBlockingSize: 12)                   	 0.000246018	 8         	 9.16408   	 0         	 2.6004    	 3.52411   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                              	 0.000179717	 8         	 0         	 0         	 89.0289   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 700, Xcols: 14, r: 14, streamingCols: 0)                    	 0.000166834	 8         	 6.57899   	 0         	 7.55645   	 0.870647  
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 14, r1_: 14, n: 50, r2: 14)           	 0.000137576	 8         	 15.9563   	 0         	 9.20905   	 1.73267   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 14, m: 50, k: 14)   	 0.000128797	 100       	 15.2177   	 0         	 9.91327   	 1.53509   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.000123043	 1         	 2.08672   	 0         	 0.32509   	 6.41892   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 700, m: 14)                                                               	 4.652e-05 	 8         	 0         	 0         	 26.9647   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 700, m: 14)                                                                        	 4.568e-05 	 8         	 0         	 0         	 27.4606   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 50, r: 50, streamingCols: 0)                     	 3.4271e-05	 1         	 3.6474    	 0         	 1.45896   	 2.5       
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                                	 2.7551e-05	 1         	 0         	 0         	 1.45185   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 14, r: 14, streamingCols: 0)                     	 1.386e-05 	 1         	 0.707071  	 0         	 0.864646  	 0.817757  
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 14, r1_: 14, n: 50, r2: 1)            	 1.3271e-05	 1         	 1.4769    	 0         	 0.962098  	 1.53509   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 1.0291e-05	 1         	 24.2931   	 0         	 5.83034   	 4.16667   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 0)                	 1.015e-05 	 9         	 0         	 0         	 35.468    	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 9.4e-06   	 1         	 0.531915  	 0         	 2.12766   	 0.25      
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 14, n: 50, r2: 1)                                                                                   	 8.3e-06   	 1         	 0.168675  	 0         	 0.674699  	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 0, m: 700, k: 14)   	 7.871e-06 	 100       	 0         	 0         	 996.061   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                         	 4.83e-06  	 1         	 0         	 0         	 8.28157   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 14)                                                                         	 3.86e-06  	 1         	 0         	 0         	 2.90155   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 1.79317   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 1.79314   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                            	 1.62359   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                        	 1.62225   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 1.36922   	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 0.422318  	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 0.348345  	 1818      
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.310817  	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.259624  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.243979  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_leftOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                   	 0.169477  	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.0928754 	 918       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.0386135 	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.0286941 	 900       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.0259048 	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0173125 	 900       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 0.0149521 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 0.0149236 	 2         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.0130778 	 1800      
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                              	 0.011525  	 20        
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0115173 	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.00974503	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.00764966	 1000      
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                       	 0.0072917 	 818       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.00626834	 1310      
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.0060064 	 1818      
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                              	 0.00530231	 918       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.00515864	 18        
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00313226	 6372      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00120048	 5272      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00105521	 302       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.00090585	 102       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000398627	 100       
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.000317749	 818       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: L, orthoY: L
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m43->44  [0m[1;34m44->45  [0m[1;34m45->46  [0m[1;34m46->47  [0m[1;34m47->48  [0m[1;34m48->49  [0m[1;34m49->50  [0m[1;34m50->51  [0m[1;34m51->52  [0m[1;34m52->53  [0m[1;34m53->54  [0m[1;34m54->55  [0m[1;34m55->56  [0m[1;34m56->57  [0m[1;34m57->58  [0m[1;34m58->59  [0m[1;34m59->60  [0m[1;34m60->61  [0m[1;34m61->62  [0m[1;34m62->63  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 22817690142592 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 22817483515904 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 22817282189440 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 22817080862976 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 22816879536512 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 22816678210048 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 22816476883584 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 22816275557120 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 22816074230656 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 22815872904192 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 22815671577728 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 22815470251264 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 22815268924800 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 22815067598336 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 22814866271872 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 22814664945408 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 22814463618944 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 22814262292480 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 22814060966016 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 22813859639552 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 22813658313088 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 22813456986624 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 22813255660160 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 22813054333696 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 22812853007232 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 22812651680768 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 22812450354304 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 22812249027840 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 22812047701376 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 22811846374912 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 22811645048448 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 22811443721984 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 22811242391424 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 22811041064960 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 22810839738496 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 22810638412032 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 22810437085568 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 22810235759104 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 22810034432640 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 22809833106176 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 22809631779712 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 22809430453248 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 22809229126784 -> hwthread 43 - OK[0m[1;34m
[0m[1;34m	threadid 22809027800320 -> hwthread 44 - OK[0m[1;34m
[0m[1;34m	threadid 22808826473856 -> hwthread 45 - OK[0m[1;34m
[0m[1;34m	threadid 22808625147392 -> hwthread 46 - OK[0m[1;34m
[0m[1;34m	threadid 22808423820928 -> hwthread 47 - OK[0m[1;34m
[0m[1;34m	threadid 22808222494464 -> hwthread 48 - OK[0m[1;34m
[0m[1;34m	threadid 22808021168000 -> hwthread 49 - OK[0m[1;34m
[0m[1;34m	threadid 22807819841536 -> hwthread 50 - OK[0m[1;34m
[0m[1;34m	threadid 22807618515072 -> hwthread 51 - OK[0m[1;34m
[0m[1;34m	threadid 22807417188608 -> hwthread 52 - OK[0m[1;34m
[0m[1;34m	threadid 22807215862144 -> hwthread 53 - OK[0m[1;34m
[0m[1;34m	threadid 22807014535680 -> hwthread 54 - OK[0m[1;34m
[0m[1;34m	threadid 22806813209216 -> hwthread 55 - OK[0m[1;34m
[0m[1;34m	threadid 22806611882752 -> hwthread 56 - OK[0m[1;34m
[0m[1;34m	threadid 22806410556288 -> hwthread 57 - OK[0m[1;34m
[0m[1;34m	threadid 22806209229824 -> hwthread 58 - OK[0m[1;34m
[0m[1;34m	threadid 22806007903360 -> hwthread 59 - OK[0m[1;34m
[0m[1;34m	threadid 22805806576896 -> hwthread 60 - OK[0m[1;34m
[0m[1;34m	threadid 22805605250432 -> hwthread 61 - OK[0m[1;34m
[0m[1;34m	threadid 22805403923968 -> hwthread 62 - OK[0m[1;34m
[0m[1;34m	threadid 22805202597504 -> hwthread 63 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 22817584482048 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 22817577891584 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 65, m: 65)                                                                 	 0.372156  	 700       	 3.61586   	 0         	 0.191705  	 18.8616   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3250, cols: 65, reductionFactor: 37, colBlockingSize: 12)                  	 0.24119   	 600       	 70.1641   	 0         	 4.28825   	 16.362    
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 65, n: 50, r: 65, r2: 65)             	 0.206063  	 600       	 79.9635   	 0         	 9.94008   	 8.04455   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 65, r: 65, r2: 3250, leftOrthog: 0)        	 0.176957  	 600       	 93.1157   	 0         	 17.4198   	 5.34539   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 65, reductionFactor: 37, colBlockingSize: 12)                  	 0.0429851 	 100       	 50.4732   	 0         	 3.10294   	 16.2663   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 65)                                                                 	 0.0409184 	 100       	 2.77993   	 0         	 0.176938  	 15.7113   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0350109 	 100       	 2.49922   	 0         	 0.172518  	 14.4868   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3250, cols: 15, reductionFactor: 37, colBlockingSize: 12)                  	 0.031696  	 700       	 33.172    	 0         	 8.65284   	 3.83366   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r: 65, r2: 65)             	 0.026386  	 100       	 80.0615   	 0         	 9.98182   	 8.02073   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3250, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0254141 	 100       	 65.669    	 0         	 5.19397   	 12.6433   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 65, Qr2: 15)       	 0.0249615 	 700       	 0         	 0         	 86.3729   	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 3250, leftOrthog: 0)        	 0.0244833 	 100       	 66.3717   	 0         	 16.0926   	 4.12437   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 65, r: 65, r2: 2500, leftOrthog: 0)        	 0.0240154 	 100       	 87.9643   	 0         	 16.5211   	 5.32438   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 3250, Xcols: 15, r: 15, streamingCols: 0)                   	 0.0217146 	 700       	 23.5729   	 0         	 25.1734   	 0.93642   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 65, n: 50, r: 65, r2: 50)             	 0.0198469 	 100       	 106.44    	 0         	 15.1963   	 7.00431   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 15, k: 2500)   	 0.0176072 	 800       	 170.385   	 0         	 59.3395   	 2.87136   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 2500, m: 15, k: 50)	 0.0116589 	 800       	 257.315   	 0         	 89.6142   	 2.87136   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 750, k: 15)  	 0.00682395	 800       	 131.888   	 0         	 46.4247   	 2.84091   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 15, n: 50, r2: 15)                   	 0.00653244	 700       	 0         	 0         	 83.5829   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 15, m: 15)                                                                  	 0.00648732	 909       	 0.630538  	 0         	 0.77346   	 0.815217  
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 3250, m: 15)                                                                       	 0.00616356	 700       	 0         	 0         	 88.5851   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 15, m: 750, k: 15)  	 0.00596998	 700       	 39.573    	 0         	 21.3167   	 1.85644   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 50)           	 0.00502562	 8         	 19.8981   	 0         	 3.21552   	 6.18812   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 65, reductionFactor: 37, colBlockingSize: 12)                    	 0.00498936	 100       	 8.69689   	 0         	 1.19855   	 7.25617   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 3250, m: 15)                                                              	 0.00498573	 700       	 0         	 0         	 109.513   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 15, reductionFactor: 37, colBlockingSize: 12)                  	 0.0044441 	 100       	 25.9987   	 0         	 6.79103   	 3.82838   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 15, n: 50, r2: 15)                                                                                         	 0.00440255	 808       	 0         	 0         	 33.0354   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00353994	 9         	 0.423734  	 0         	 0.153562  	 2.75937   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 15, r: 15, streamingCols: 0)                   	 0.00288237	 100       	 19.5152   	 0         	 20.8474   	 0.936096  
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.00283219	 8         	 36.2626   	 0         	 2.88116   	 12.5861   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 50, Qr2: 15)       	 0.00276252	 100       	 0         	 0         	 94.1169   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                   	 0.00213246	 8         	 23.4471   	 0         	 7.54057   	 3.10945   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 65, r: 50, r2: 50, leftOrthog: 0)          	 0.00159254	 100       	 20.4076   	 0         	 7.40954   	 2.75424   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 15, reductionFactor: 37, colBlockingSize: 12)                    	 0.0012583 	 101       	 1.85481   	 0         	 0.626081  	 2.96258   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 15)                                                                       	 0.00119203	 100       	 0         	 0         	 50.3342   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 0, n: 50, r2: 15)                    	 0.00117471	 100       	 0         	 0         	 51.0766   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 50, r2: 50)              	 0.00105286	 100       	 23.7448   	 0         	 5.69876   	 4.16667   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 15)                                                              	 0.00100944	 100       	 0         	 0         	 59.4388   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 15)                                                                                          	 0.000775146	 201       	 0         	 0         	 3.11167   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                   	 0.00075164	 100       	 0.665212  	 0         	 2.66085   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 15, n: 50, r2: 1)                                                                                          	 0.000746225	 201       	 0         	 0         	 3.23227   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 15, k: 50)     	 0.000577284	 100       	 12.9919   	 0         	 5.5432    	 2.34375   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                          	 0.00051524	 100       	 0         	 0         	 7.76337   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 1, Xr2: 50, Qr1: 1, Qr2: 0)          	 0.000467603	 100       	 0         	 0         	 8.55427   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 15)   	 0.000465577	 100       	 16.109    	 0         	 6.87319   	 2.34375   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 15, n: 50, r2: 1)                    	 0.000456398	 100       	 0         	 0         	 11.3936   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 1, r1low: 0, n: 50, r2: 15)                     	 0.000418973	 100       	 0         	 0         	 2.86415   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                            	 0.000405305	 100       	 1.23364   	 0         	 14.8037   	 0.0833333 
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                              	 0.000390642	 8         	 0         	 0         	 40.9582   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.00038593	 101       	 0.654264  	 0         	 10.4682   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 15)                                                                	 0.000370808	 101       	 0         	 0         	 3.26854   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 15, n: 50, r2: 1)                                                                                 	 0.000358828	 101       	 0.211104  	 0         	 3.37766   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000329075	 100       	 0.759705  	 0         	 12.1553   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 15, m: 15, fromLeft: 0)                	 0.000316048	 809       	 0         	 0         	 9.21506   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 15, k: 50)  	 0.000283598	 100       	 26.4459   	 0         	 11.2836   	 2.34375   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 750, cols: 15, reductionFactor: 37, colBlockingSize: 12)                   	 0.000277157	 8         	 10.0051   	 0         	 2.64976   	 3.77583   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 50)                                                                       	 0.000212155	 8         	 0         	 0         	 75.4166   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 750, Xcols: 15, r: 15, streamingCols: 0)                    	 0.000167144	 8         	 8.07687   	 0         	 8.6584    	 0.932836  
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 15, r1_: 15, n: 50, r2: 15)           	 0.000144873	 8         	 18.637    	 0         	 10.0391   	 1.85644   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 15, m: 50, k: 15)   	 0.000120773	 100       	 18.63     	 0         	 11.4264   	 1.63043   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.000114783	 1         	 2.23689   	 0         	 0.348484  	 6.41892   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 750, m: 15)                                                               	 5.3342e-05	 8         	 0         	 0         	 26.9956   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 750, m: 15)                                                                        	 4.9631e-05	 8         	 0         	 0         	 29.0141   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 50, r: 50, streamingCols: 0)                     	 3.3231e-05	 1         	 3.76155   	 0         	 1.50462   	 2.5       
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                                	 2.4231e-05	 1         	 0         	 0         	 1.65078   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 15, r1_: 15, n: 50, r2: 1)            	 1.2701e-05	 1         	 1.77151   	 0         	 1.08653   	 1.63043   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 15, r: 15, streamingCols: 0)                     	 1.253e-05 	 1         	 0.897845  	 0         	 1.02953   	 0.872093  
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 0)                	 1.033e-05 	 9         	 0         	 0         	 34.85     	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 9.95e-06  	 1         	 25.1256   	 0         	 6.03015   	 4.16667   
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 15, n: 50, r2: 1)                                                                                   	 8.64e-06  	 1         	 0.173611  	 0         	 0.694444  	 0.25      
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 8.21e-06  	 1         	 0.609013  	 0         	 2.43605   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 0, m: 750, k: 15)   	 7.54e-06  	 100       	 0         	 0         	 1193.63   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                         	 4.39e-06  	 1         	 0         	 0         	 9.11162   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 15)                                                                         	 3.86e-06  	 1         	 0         	 0         	 3.10881   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 1.70674   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 1.70669   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                            	 1.53087   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                        	 1.52969   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 1.27372   	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 0.448085  	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 0.355201  	 1818      
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.315239  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.253349  	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.227049  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_leftOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                   	 0.175748  	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.0992162 	 918       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.0411088 	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.0281917 	 900       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.0269423 	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0181844 	 900       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 0.0156708 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 0.0156426 	 2         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.0133878 	 1800      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0119425 	 900       
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                              	 0.0115989 	 20        
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.0100273 	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.00858252	 1000      
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                       	 0.00762563	 818       
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                              	 0.00683419	 918       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.00643916	 1310      
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.00519314	 18        
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00273819	 6372      
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00271896	 1818      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.0011521 	 5272      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00107383	 302       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.00076849	 102       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000405305	 100       
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.000326378	 818       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: L, orthoY: L
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m43->44  [0m[1;34m44->45  [0m[1;34m45->46  [0m[1;34m46->47  [0m[1;34m47->48  [0m[1;34m48->49  [0m[1;34m49->50  [0m[1;34m50->51  [0m[1;34m51->52  [0m[1;34m52->53  [0m[1;34m53->54  [0m[1;34m54->55  [0m[1;34m55->56  [0m[1;34m56->57  [0m[1;34m57->58  [0m[1;34m58->59  [0m[1;34m59->60  [0m[1;34m60->61  [0m[1;34m61->62  [0m[1;34m62->63  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 23323424962432 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 23323215915008 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 23323014588544 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 23322813262080 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 23322611935616 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 23322410609152 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 23322209282688 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 23322007956224 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 23321806629760 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 23321605303296 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 23321403976832 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 23321202650368 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 23321001323904 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 23320799997440 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 23320598670976 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 23320397344512 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 23320196018048 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 23319994691584 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 23319793365120 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 23319592038656 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 23319390712192 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 23319189385728 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 23318988059264 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 23318786732800 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 23318585406336 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 23318384079872 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 23318182753408 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 23317981426944 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 23317780100480 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 23317578774016 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 23317377447552 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 23317176121088 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 23316974790528 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 23316773464064 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 23316572137600 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 23316370811136 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 23316169484672 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 23315968158208 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 23315766831744 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 23315565505280 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 23315364178816 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 23315162852352 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 23314961525888 -> hwthread 43 - OK[0m[1;34m
[0m[1;34m	threadid 23314760199424 -> hwthread 44 - OK[0m[1;34m
[0m[1;34m	threadid 23314558872960 -> hwthread 45 - OK[0m[1;34m
[0m[1;34m	threadid 23314357546496 -> hwthread 46 - OK[0m[1;34m
[0m[1;34m	threadid 23314156220032 -> hwthread 47 - OK[0m[1;34m
[0m[1;34m	threadid 23313954893568 -> hwthread 48 - OK[0m[1;34m
[0m[1;34m	threadid 23313753567104 -> hwthread 49 - OK[0m[1;34m
[0m[1;34m	threadid 23313552240640 -> hwthread 50 - OK[0m[1;34m
[0m[1;34m	threadid 23313350914176 -> hwthread 51 - OK[0m[1;34m
[0m[1;34m	threadid 23313149587712 -> hwthread 52 - OK[0m[1;34m
[0m[1;34m	threadid 23312948261248 -> hwthread 53 - OK[0m[1;34m
[0m[1;34m	threadid 23312746934784 -> hwthread 54 - OK[0m[1;34m
[0m[1;34m	threadid 23312545608320 -> hwthread 55 - OK[0m[1;34m
[0m[1;34m	threadid 23312344281856 -> hwthread 56 - OK[0m[1;34m
[0m[1;34m	threadid 23312142955392 -> hwthread 57 - OK[0m[1;34m
[0m[1;34m	threadid 23311941628928 -> hwthread 58 - OK[0m[1;34m
[0m[1;34m	threadid 23311740302464 -> hwthread 59 - OK[0m[1;34m
[0m[1;34m	threadid 23311538976000 -> hwthread 60 - OK[0m[1;34m
[0m[1;34m	threadid 23311337649536 -> hwthread 61 - OK[0m[1;34m
[0m[1;34m	threadid 23311136323072 -> hwthread 62 - OK[0m[1;34m
[0m[1;34m	threadid 23310934996608 -> hwthread 63 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 23323319301888 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 23323312711424 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 66, m: 66)                                                                 	 0.361943  	 700       	 3.89214   	 0         	 0.20321   	 19.1533   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3300, cols: 66, reductionFactor: 37, colBlockingSize: 12)                  	 0.245212  	 600       	 72.2475   	 0         	 4.34868   	 16.6137   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 66, n: 50, r: 66, r2: 66)             	 0.206181  	 600       	 83.6634   	 0         	 10.2424   	 8.16832   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 66, r: 66, r2: 3300, leftOrthog: 0)        	 0.188269  	 600       	 91.6229   	 0         	 16.8808   	 5.42763   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 66, reductionFactor: 37, colBlockingSize: 12)                  	 0.0424837 	 100       	 52.6523   	 0         	 3.1891    	 16.5101   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 66)                                                                 	 0.0393782 	 100       	 2.93309   	 0         	 0.18589   	 15.7787   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0342724 	 100       	 2.55308   	 0         	 0.176235  	 14.4868   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3300, cols: 16, reductionFactor: 37, colBlockingSize: 12)                  	 0.0316737 	 700       	 38.35     	 0         	 9.38046   	 4.08829   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 66, Qr2: 16)       	 0.0281539 	 700       	 0         	 0         	 78.6876   	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 3300, leftOrthog: 0)        	 0.025745  	 100       	 64.0901   	 0         	 15.537    	 4.125     
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r: 66, r2: 66)             	 0.0256151 	 100       	 85.0279   	 0         	 10.4425   	 8.14252   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 66, r: 66, r2: 2500, leftOrthog: 0)        	 0.0255008 	 100       	 85.4091   	 0         	 15.8022   	 5.40487   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3300, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.025068  	 100       	 67.6      	 0         	 5.34547   	 12.6462   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 3300, Xcols: 16, r: 16, streamingCols: 0)                   	 0.0239623 	 700       	 24.6788   	 0         	 24.7087   	 0.998789  
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 66, n: 50, r: 66, r2: 50)             	 0.0216747 	 100       	 100.486   	 0         	 14.2507   	 7.05128   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 16, k: 2500)   	 0.0188735 	 800       	 169.55    	 0         	 56.2227   	 3.01568   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 2500, m: 16, k: 50)	 0.012129  	 800       	 263.83    	 0         	 87.4861   	 3.01568   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 16, n: 50, r2: 16)                   	 0.0111302 	 700       	 0         	 0         	 53.1313   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 3300, m: 16)                                                                       	 0.00787277	 700       	 0         	 0         	 75.1146   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 800, k: 16)  	 0.0072463 	 800       	 141.313   	 0         	 47.34     	 2.98507   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 16, m: 16)                                                                  	 0.00629837	 909       	 0.788004  	 0         	 0.905194  	 0.870536  
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 16, m: 800, k: 16)  	 0.00591185	 700       	 48.4992   	 0         	 24.4921   	 1.9802    
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 50)           	 0.00493191	 8         	 20.2761   	 0         	 3.27662   	 6.18812   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 66, reductionFactor: 37, colBlockingSize: 12)                    	 0.00484778	 100       	 9.22841   	 0         	 1.26342   	 7.30429   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 16, n: 50, r2: 16)                                                                                         	 0.00479258	 808       	 0         	 0         	 34.528    	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 16, reductionFactor: 37, colBlockingSize: 12)                  	 0.00443632	 100       	 29.6325   	 0         	 7.25935   	 4.08198   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 3300, m: 16)                                                              	 0.00428878	 700       	 0         	 0         	 137.885   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00351274	 9         	 0.427015  	 0         	 0.154751  	 2.75937   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 16, r: 16, streamingCols: 0)                   	 0.00301793	 100       	 21.2066   	 0         	 21.2405   	 0.998403  
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 50, Qr2: 16)       	 0.00300289	 100       	 0         	 0         	 87.9153   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.00280821	 8         	 36.5723   	 0         	 2.90577   	 12.5861   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                   	 0.00186639	 8         	 26.7897   	 0         	 8.61557   	 3.10945   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 66, r: 50, r2: 50, leftOrthog: 0)          	 0.00153587	 100       	 21.4862   	 0         	 7.76108   	 2.76846   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 16, reductionFactor: 37, colBlockingSize: 12)                    	 0.00127701	 101       	 2.07946   	 0         	 0.668163  	 3.1122    
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 16)                                                                       	 0.00114265	 100       	 0         	 0         	 56.0102   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 16)                                                              	 0.00109057	 100       	 0         	 0         	 58.685    	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 50, r2: 50)              	 0.00104642	 100       	 23.8909   	 0         	 5.73381   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 0, n: 50, r2: 16)                    	 0.000880089	 100       	 0         	 0         	 72.7199   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 16)                                                                                          	 0.000818611	 201       	 0         	 0         	 3.14288   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                   	 0.000799478	 100       	 0.625408  	 0         	 2.50163   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 16, n: 50, r2: 1)                                                                                          	 0.000777869	 201       	 0         	 0         	 3.3075    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 16, k: 50)     	 0.000630164	 100       	 12.6951   	 0         	 5.20499   	 2.43902   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                          	 0.000531713	 100       	 0         	 0         	 7.52286   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 16, n: 50, r2: 1)                    	 0.000477475	 100       	 0         	 0         	 11.0582   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 16)   	 0.000474813	 100       	 16.8487   	 0         	 6.90798   	 2.43902   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 1, Xr2: 50, Qr1: 1, Qr2: 0)          	 0.000444431	 100       	 0         	 0         	 9.00027   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 1, r1low: 0, n: 50, r2: 16)                     	 0.000420212	 100       	 0         	 0         	 3.04608   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                            	 0.000419433	 100       	 1.19209   	 0         	 14.305    	 0.0833333 
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000385792	 101       	 0.654498  	 0         	 10.472    	 0.0625    
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 16)                                                                	 0.00037558	 101       	 0         	 0         	 3.44214   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 16, n: 50, r2: 1)                                                                                 	 0.000355354	 101       	 0.227379  	 0         	 3.63806   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                              	 0.000344901	 8         	 0         	 0         	 46.3901   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000339705	 100       	 0.735933  	 0         	 11.7749   	 0.0625    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 16, k: 50)  	 0.00029605	 100       	 27.0225   	 0         	 11.0792   	 2.43902   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 800, cols: 16, reductionFactor: 37, colBlockingSize: 12)                   	 0.000275948	 8         	 12.1956   	 0         	 3.02805   	 4.02756   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 50)                                                                       	 0.000209964	 8         	 0         	 0         	 76.2035   	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 16, m: 16, fromLeft: 0)                	 0.000191836	 809       	 0         	 0         	 17.2734   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 16, r1_: 16, n: 50, r2: 16)           	 0.000161335	 8         	 20.3105   	 0         	 10.2568   	 1.9802    
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 800, Xcols: 16, r: 16, streamingCols: 0)                    	 0.000147995	 8         	 11.0706   	 0         	 11.126    	 0.995025  
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.000120263	 1         	 2.13496   	 0         	 0.332604  	 6.41892   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 16, m: 50, k: 16)   	 0.000117243	 100       	 21.835    	 0         	 12.6643   	 1.72414   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 800, m: 16)                                                               	 5.38e-05  	 8         	 0         	 0         	 30.4535   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 800, m: 16)                                                                        	 5.3391e-05	 8         	 0         	 0         	 30.6868   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 50, r: 50, streamingCols: 0)                     	 3.3361e-05	 1         	 3.74689   	 0         	 1.49876   	 2.5       
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 0)                	 2.735e-05 	 9         	 0         	 0         	 13.1627   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                                	 2.5311e-05	 1         	 0         	 0         	 1.58034   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 16, r1_: 16, n: 50, r2: 1)            	 1.285e-05 	 1         	 1.99222   	 0         	 1.15549   	 1.72414   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 16, r: 16, streamingCols: 0)                     	 1.207e-05 	 1         	 1.06048   	 0         	 1.14532   	 0.925926  
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 1.046e-05 	 1         	 23.9006   	 0         	 5.73614   	 4.16667   
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 16, n: 50, r2: 1)                                                                                   	 9.45e-06  	 1         	 0.169312  	 0         	 0.677249  	 0.25      
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 8.59e-06  	 1         	 0.582072  	 0         	 2.32829   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 0, m: 800, k: 16)   	 7.57e-06  	 100       	 0         	 0         	 1352.71   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                         	 4.77e-06  	 1         	 0         	 0         	 8.38574   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 16)                                                                         	 3.86e-06  	 1         	 0         	 0         	 3.31606   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 1.71827   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 1.71822   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                            	 1.52936   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                        	 1.52811   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 1.27077   	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 0.435593  	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 0.358203  	 1818      
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.318246  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.254517  	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.241051  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_leftOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                   	 0.188788  	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.101414  	 918       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.0410402 	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.0316012 	 900       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.02904   	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0195037 	 900       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 0.0151683 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 0.0151394 	 2         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.0137578 	 1800      
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0129079 	 1000      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0124251 	 900       
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                              	 0.0113105 	 20        
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.00981111	 918       
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                       	 0.0092874 	 818       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.00692078	 1310      
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                              	 0.00617894	 918       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.00511655	 18        
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00331879	 1818      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00283087	 6372      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00119673	 5272      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00108085	 302       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000817518	 102       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000419433	 100       
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.000219186	 818       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: L, orthoY: L
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m43->44  [0m[1;34m44->45  [0m[1;34m45->46  [0m[1;34m46->47  [0m[1;34m47->48  [0m[1;34m48->49  [0m[1;34m49->50  [0m[1;34m50->51  [0m[1;34m51->52  [0m[1;34m52->53  [0m[1;34m53->54  [0m[1;34m54->55  [0m[1;34m55->56  [0m[1;34m56->57  [0m[1;34m57->58  [0m[1;34m58->59  [0m[1;34m59->60  [0m[1;34m60->61  [0m[1;34m61->62  [0m[1;34m62->63  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 22485594949504 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 22485361747968 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 22485160421504 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 22484959095040 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 22484757768576 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 22484556442112 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 22484355115648 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 22484153789184 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 22483952462720 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 22483751136256 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 22483549809792 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 22483348483328 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 22483147156864 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 22482945830400 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 22482744503936 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 22482543177472 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 22482341851008 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 22482140524544 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 22481939198080 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 22481737871616 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 22481536545152 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 22481335218688 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 22481133892224 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 22480932565760 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 22480731239296 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 22480529912832 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 22480328586368 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 22480127259904 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 22479925933440 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 22479724606976 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 22479523280512 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 22479321954048 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 22479120623488 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 22478919297024 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 22478717970560 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 22478516644096 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 22478315317632 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 22478113991168 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 22477912664704 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 22477711338240 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 22477510011776 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 22477308685312 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 22477107358848 -> hwthread 43 - OK[0m[1;34m
[0m[1;34m	threadid 22476906032384 -> hwthread 44 - OK[0m[1;34m
[0m[1;34m	threadid 22476704705920 -> hwthread 45 - OK[0m[1;34m
[0m[1;34m	threadid 22476503379456 -> hwthread 46 - OK[0m[1;34m
[0m[1;34m	threadid 22476302052992 -> hwthread 47 - OK[0m[1;34m
[0m[1;34m	threadid 22476100726528 -> hwthread 48 - OK[0m[1;34m
[0m[1;34m	threadid 22475899400064 -> hwthread 49 - OK[0m[1;34m
[0m[1;34m	threadid 22475698073600 -> hwthread 50 - OK[0m[1;34m
[0m[1;34m	threadid 22475496747136 -> hwthread 51 - OK[0m[1;34m
[0m[1;34m	threadid 22475295420672 -> hwthread 52 - OK[0m[1;34m
[0m[1;34m	threadid 22475094094208 -> hwthread 53 - OK[0m[1;34m
[0m[1;34m	threadid 22474892767744 -> hwthread 54 - OK[0m[1;34m
[0m[1;34m	threadid 22474691441280 -> hwthread 55 - OK[0m[1;34m
[0m[1;34m	threadid 22474490114816 -> hwthread 56 - OK[0m[1;34m
[0m[1;34m	threadid 22474288788352 -> hwthread 57 - OK[0m[1;34m
[0m[1;34m	threadid 22474087461888 -> hwthread 58 - OK[0m[1;34m
[0m[1;34m	threadid 22473886135424 -> hwthread 59 - OK[0m[1;34m
[0m[1;34m	threadid 22473684808960 -> hwthread 60 - OK[0m[1;34m
[0m[1;34m	threadid 22473483482496 -> hwthread 61 - OK[0m[1;34m
[0m[1;34m	threadid 22473282156032 -> hwthread 62 - OK[0m[1;34m
[0m[1;34m	threadid 22473080829568 -> hwthread 63 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 22485489288960 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 22485482698496 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 67, m: 67)                                                                 	 0.371595  	 700       	 3.96598   	 0         	 0.203959  	 19.4449   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3350, cols: 67, reductionFactor: 37, colBlockingSize: 12)                  	 0.249671  	 600       	 74.2317   	 0         	 4.40142   	 16.8654   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 67, n: 50, r: 67, r2: 67)             	 0.210054  	 600       	 85.9103   	 0         	 10.3605   	 8.29208   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 67, r: 67, r2: 3350, leftOrthog: 0)        	 0.191056  	 600       	 94.4531   	 0         	 17.1425   	 5.50987   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 67, reductionFactor: 37, colBlockingSize: 12)                  	 0.0431236 	 100       	 53.4547   	 0         	 3.19062   	 16.7537   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 67)                                                                 	 0.0418281 	 100       	 2.80314   	 0         	 0.176914  	 15.8446   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0355107 	 100       	 2.46405   	 0         	 0.17009   	 14.4868   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3350, cols: 17, reductionFactor: 37, colBlockingSize: 12)                  	 0.0342234 	 700       	 40.6752   	 0         	 9.36606   	 4.34283   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 67, Qr2: 17)       	 0.0279013 	 700       	 0         	 0         	 81.5676   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r: 67, r2: 67)             	 0.0261713 	 100       	 85.762    	 0         	 10.3775   	 8.26426   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 3350, Xcols: 17, r: 17, streamingCols: 0)                   	 0.0260293 	 700       	 26.0362   	 0         	 24.5358   	 1.06115   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3350, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0250763 	 100       	 68.6014   	 0         	 5.42344   	 12.649    
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 67, r: 67, r2: 2500, leftOrthog: 0)        	 0.0248712 	 100       	 90.2448   	 0         	 16.452    	 5.48533   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 3350, leftOrthog: 0)        	 0.0241931 	 100       	 69.2346   	 0         	 16.7816   	 4.12562   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 67, n: 50, r: 67, r2: 50)             	 0.0212352 	 100       	 105.697   	 0         	 14.8922   	 7.09746   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 17, k: 2500)   	 0.0181301 	 800       	 187.534   	 0         	 59.4283   	 3.15563   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 2500, m: 17, k: 50)	 0.0126417 	 800       	 268.951   	 0         	 85.2288   	 3.15563   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 17, m: 17)                                                                  	 0.00799335	 909       	 0.744863  	 0         	 0.804225  	 0.926188  
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 3350, m: 17)                                                                       	 0.00771868	 700       	 0         	 0         	 82.6359   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 850, k: 17)  	 0.00747855	 800       	 154.575   	 0         	 49.4641   	 3.125     
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 67, reductionFactor: 37, colBlockingSize: 12)                    	 0.00695367	 100       	 6.63006   	 0         	 0.901854  	 7.35158   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 17, n: 50, r2: 17)                   	 0.00669132	 700       	 0         	 0         	 95.3235   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 17, m: 850, k: 17)  	 0.00665851	 700       	 51.6497   	 0         	 24.5488   	 2.10396   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 3350, m: 17)                                                              	 0.00528855	 700       	 0         	 0         	 120.608   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 17, n: 50, r2: 17)                                                                                         	 0.00507115	 808       	 0         	 0         	 36.8377   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 50)           	 0.00491817	 8         	 20.3328   	 0         	 3.28578   	 6.18812   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 17, reductionFactor: 37, colBlockingSize: 12)                  	 0.00483008	 100       	 30.7253   	 0         	 7.08709   	 4.33538   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00350402	 9         	 0.428078  	 0         	 0.155136  	 2.75937   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 17, r: 17, streamingCols: 0)                   	 0.00310254	 100       	 23.2874   	 0         	 21.9548   	 1.0607    
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 50, Qr2: 17)       	 0.00301379	 100       	 0         	 0         	 88.9245   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.00278112	 8         	 36.9286   	 0         	 2.93407   	 12.5861   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                   	 0.00188202	 8         	 26.5672   	 0         	 8.54402   	 3.10945   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 17)                                                                       	 0.00163215	 100       	 0         	 0         	 41.6628   	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 67, r: 50, r2: 50, leftOrthog: 0)          	 0.00159299	 100       	 21.0296   	 0         	 7.55812   	 2.78239   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 0, n: 50, r2: 17)                    	 0.00141136	 100       	 0         	 0         	 48.1805   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 17)                                                              	 0.00130647	 100       	 0         	 0         	 52.0485   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 17, reductionFactor: 37, colBlockingSize: 12)                    	 0.00130179	 101       	 2.30282   	 0         	 0.706958  	 3.25736   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 50, r2: 50)              	 0.00106837	 100       	 23.4001   	 0         	 5.61603   	 4.16667   
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                   	 0.000878826	 100       	 0.568941  	 0         	 2.27576   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 17)                                                                                          	 0.000823602	 201       	 0         	 0         	 3.31908   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 17, n: 50, r2: 1)                                                                                          	 0.00075124	 201       	 0         	 0         	 3.63878   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 17, k: 50)     	 0.00068608	 100       	 12.3892   	 0         	 4.89739   	 2.52976   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                          	 0.000518405	 100       	 0         	 0         	 7.71597   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 17, n: 50, r2: 1)                    	 0.000468455	 100       	 0         	 0         	 11.4419   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 17)   	 0.00046636	 100       	 18.2263   	 0         	 7.20473   	 2.52976   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 1, Xr2: 50, Qr1: 1, Qr2: 0)          	 0.000455989	 100       	 0         	 0         	 8.77214   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 1, r1low: 0, n: 50, r2: 17)                     	 0.000427948	 100       	 0         	 0         	 3.17796   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000410999	 101       	 0.614357  	 0         	 9.82971   	 0.0625    
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                            	 0.000397016	 100       	 1.2594    	 0         	 15.1127   	 0.0833333 
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 17)                                                                	 0.000396566	 101       	 0         	 0         	 3.46374   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 17, n: 50, r2: 1)                                                                                 	 0.000359259	 101       	 0.238964  	 0         	 3.82343   	 0.0625    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 17, k: 50)  	 0.000342357	 100       	 24.8279   	 0         	 9.81432   	 2.52976   
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000334386	 100       	 0.747639  	 0         	 11.9622   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 17, m: 17, fromLeft: 0)                	 0.000323936	 809       	 0         	 0         	 11.548    	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 50)                                                                       	 0.000302216	 8         	 0         	 0         	 52.9423   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 850, cols: 17, reductionFactor: 37, colBlockingSize: 12)                   	 0.000279268	 8         	 14.4543   	 0         	 3.37774   	 4.27928   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                              	 0.000263178	 8         	 0         	 0         	 60.7954   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 17, r1_: 17, n: 50, r2: 17)           	 0.000189074	 8         	 20.7876   	 0         	 9.88024   	 2.10396   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 17, m: 50, k: 17)   	 0.000162385	 100       	 17.7972   	 0         	 9.79893   	 1.81624   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.000149503	 1         	 1.7174    	 0         	 0.267553  	 6.41892   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 850, Xcols: 17, r: 17, streamingCols: 0)                    	 0.000146943	 8         	 13.3739   	 0         	 12.6501   	 1.05721   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 850, m: 17)                                                                        	 5.4532e-05	 8         	 0         	 0         	 33.9177   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 850, m: 17)                                                               	 5.0491e-05	 8         	 0         	 0         	 36.6323   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 50, r: 50, streamingCols: 0)                     	 3.3041e-05	 1         	 3.78318   	 0         	 1.51327   	 2.5       
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                                	 1.964e-05 	 1         	 0         	 0         	 2.03666   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 17, r1_: 17, n: 50, r2: 1)            	 1.4171e-05	 1         	 2.03938   	 0         	 1.12286   	 1.81624   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 17, r: 17, streamingCols: 0)                     	 1.1911e-05	 1         	 1.21316   	 0         	 1.23885   	 0.979263  
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 0)                	 1.027e-05 	 9         	 0         	 0         	 35.0536   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 1.017e-05 	 1         	 24.5821   	 0         	 5.89971   	 4.16667   
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 9.89e-06  	 1         	 0.505561  	 0         	 2.02224   	 0.25      
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 17, n: 50, r2: 1)                                                                                   	 8.58e-06  	 1         	 0.198135  	 0         	 0.792541  	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 0, m: 850, k: 17)   	 7.71e-06  	 100       	 0         	 0         	 1499.35   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                         	 5.22e-06  	 1         	 0         	 0         	 7.66284   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 17)                                                                         	 3.58e-06  	 1         	 0         	 0         	 3.79888   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 1.7703    	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 1.77027   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                            	 1.57531   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                        	 1.574     	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 1.31247   	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 0.448934  	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 0.36839   	 1818      
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.325346  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.258529  	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.241713  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_leftOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                   	 0.194885  	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.110645  	 918       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.0440824 	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.0313711 	 900       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.0312058 	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0188162 	 900       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 0.015165  	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 0.0151356 	 2         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.0147735 	 1800      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0129841 	 900       
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                              	 0.0118483 	 20        
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.0114974 	 918       
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                       	 0.00971637	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.00899909	 1000      
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                              	 0.0073249 	 918       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0071644 	 1310      
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.00513158	 18        
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00288843	 1818      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00283689	 6372      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00127096	 5272      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00110464	 302       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000897296	 102       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000397016	 100       
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.000334206	 818       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: L, orthoY: L
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m43->44  [0m[1;34m44->45  [0m[1;34m45->46  [0m[1;34m46->47  [0m[1;34m47->48  [0m[1;34m48->49  [0m[1;34m49->50  [0m[1;34m50->51  [0m[1;34m51->52  [0m[1;34m52->53  [0m[1;34m53->54  [0m[1;34m54->55  [0m[1;34m55->56  [0m[1;34m56->57  [0m[1;34m57->58  [0m[1;34m58->59  [0m[1;34m59->60  [0m[1;34m60->61  [0m[1;34m61->62  [0m[1;34m62->63  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 22781315368832 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 22781110511616 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 22780909185152 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 22780707858688 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 22780506532224 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 22780305205760 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 22780103879296 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 22779902552832 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 22779701226368 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 22779499899904 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 22779298573440 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 22779097246976 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 22778895920512 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 22778694594048 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 22778493267584 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 22778291941120 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 22778090614656 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 22777889288192 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 22777687961728 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 22777486635264 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 22777285308800 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 22777083982336 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 22776882655872 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 22776681329408 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 22776480002944 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 22776278676480 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 22776077350016 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 22775876023552 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 22775674697088 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 22775473370624 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 22775272044160 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 22775070717696 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 22774869387136 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 22774668060672 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 22774466734208 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 22774265407744 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 22774064081280 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 22773862754816 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 22773661428352 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 22773460101888 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 22773258775424 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 22773057448960 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 22772856122496 -> hwthread 43 - OK[0m[1;34m
[0m[1;34m	threadid 22772654796032 -> hwthread 44 - OK[0m[1;34m
[0m[1;34m	threadid 22772453469568 -> hwthread 45 - OK[0m[1;34m
[0m[1;34m	threadid 22772252143104 -> hwthread 46 - OK[0m[1;34m
[0m[1;34m	threadid 22772050816640 -> hwthread 47 - OK[0m[1;34m
[0m[1;34m	threadid 22771849490176 -> hwthread 48 - OK[0m[1;34m
[0m[1;34m	threadid 22771648163712 -> hwthread 49 - OK[0m[1;34m
[0m[1;34m	threadid 22771446837248 -> hwthread 50 - OK[0m[1;34m
[0m[1;34m	threadid 22771245510784 -> hwthread 51 - OK[0m[1;34m
[0m[1;34m	threadid 22771044184320 -> hwthread 52 - OK[0m[1;34m
[0m[1;34m	threadid 22770842857856 -> hwthread 53 - OK[0m[1;34m
[0m[1;34m	threadid 22770641531392 -> hwthread 54 - OK[0m[1;34m
[0m[1;34m	threadid 22770440204928 -> hwthread 55 - OK[0m[1;34m
[0m[1;34m	threadid 22770238878464 -> hwthread 56 - OK[0m[1;34m
[0m[1;34m	threadid 22770037552000 -> hwthread 57 - OK[0m[1;34m
[0m[1;34m	threadid 22769836225536 -> hwthread 58 - OK[0m[1;34m
[0m[1;34m	threadid 22769634899072 -> hwthread 59 - OK[0m[1;34m
[0m[1;34m	threadid 22769433572608 -> hwthread 60 - OK[0m[1;34m
[0m[1;34m	threadid 22769232246144 -> hwthread 61 - OK[0m[1;34m
[0m[1;34m	threadid 22769030919680 -> hwthread 62 - OK[0m[1;34m
[0m[1;34m	threadid 22768829593216 -> hwthread 63 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 22781209708288 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 22781203117824 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 68, m: 68)                                                                 	 0.374053  	 700       	 4.11898   	 0         	 0.208698  	 19.7366   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3400, cols: 68, reductionFactor: 37, colBlockingSize: 12)                  	 0.255127  	 600       	 75.9456   	 0         	 4.43682   	 17.1171   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 68, n: 50, r: 68, r2: 68)             	 0.213716  	 600       	 88.2758   	 0         	 10.4892   	 8.41584   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 68, r: 68, r2: 3400, leftOrthog: 0)        	 0.189013  	 600       	 99.8128   	 0         	 17.8489   	 5.59211   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 68, reductionFactor: 37, colBlockingSize: 12)                  	 0.0446692 	 100       	 53.1571   	 0         	 3.12742   	 16.9971   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3400, cols: 18, reductionFactor: 37, colBlockingSize: 12)                  	 0.0421769 	 700       	 37.5542   	 0         	 8.16879   	 4.59728   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 68)                                                                 	 0.0416342 	 100       	 2.85823   	 0         	 0.17966   	 15.9091   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0340859 	 100       	 2.56704   	 0         	 0.177199  	 14.4868   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 68, Qr2: 18)       	 0.0288952 	 700       	 0         	 0         	 80.8936   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3400, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0271083 	 100       	 64.4063   	 0         	 5.09069   	 12.6518   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r: 68, r2: 68)             	 0.0267918 	 100       	 86.295    	 0         	 10.2904   	 8.38595   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 3400, Xcols: 18, r: 18, streamingCols: 0)                   	 0.0259551 	 700       	 29.7098   	 0         	 26.4436   	 1.12351   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 68, r: 68, r2: 2500, leftOrthog: 0)        	 0.025466  	 100       	 90.7877   	 0         	 16.3119   	 5.56574   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 3400, leftOrthog: 0)        	 0.0253099 	 100       	 67.1673   	 0         	 16.2782   	 4.12621   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 68, n: 50, r: 68, r2: 50)             	 0.0212326 	 100       	 108.889   	 0         	 15.2445   	 7.14286   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 18, k: 2500)   	 0.0193181 	 800       	 186.354   	 0         	 56.6184   	 3.2914    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 2500, m: 18, k: 50)	 0.0128758 	 800       	 279.595   	 0         	 84.9472   	 3.2914    
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 18, n: 50, r2: 18)                   	 0.0101324 	 700       	 0         	 0         	 67.6485   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 18, m: 18)                                                                  	 0.00850525	 909       	 0.831061  	 0         	 0.846451  	 0.981818  
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 900, k: 18)  	 0.00780305	 800       	 166.089   	 0         	 50.9339   	 3.26087   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 3400, m: 18)                                                                       	 0.0074026 	 700       	 0         	 0         	 92.5944   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 18, m: 900, k: 18)  	 0.00607898	 700       	 67.156    	 0         	 30.1456   	 2.22772   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 18, n: 50, r2: 18)                                                                                         	 0.00551436	 808       	 0         	 0         	 37.9796   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 18, reductionFactor: 37, colBlockingSize: 12)                  	 0.00529862	 100       	 31.4003   	 0         	 6.84314   	 4.58858   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 50)           	 0.00497721	 8         	 20.0916   	 0         	 3.2468    	 6.18812   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 3400, m: 18)                                                              	 0.00470184	 700       	 0         	 0         	 145.781   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 68, reductionFactor: 37, colBlockingSize: 12)                    	 0.00451459	 100       	 10.5192   	 0         	 1.42188   	 7.39808   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00352999	 9         	 0.424929  	 0         	 0.153995  	 2.75937   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 18, r: 18, streamingCols: 0)                   	 0.00324142	 100       	 24.9891   	 0         	 22.2525   	 1.12298   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 50, Qr2: 18)       	 0.00317835	 100       	 0         	 0         	 85.5791   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.00285413	 8         	 35.9839   	 0         	 2.85901   	 12.5861   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                   	 0.00212858	 8         	 23.4898   	 0         	 7.55432   	 3.10945   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 68, r: 50, r2: 50, leftOrthog: 0)          	 0.0015377 	 100       	 22.1109   	 0         	 7.9079    	 2.79605   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 18, reductionFactor: 37, colBlockingSize: 12)                    	 0.00148031	 101       	 2.27036   	 0         	 0.668096  	 3.39825   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 18)                                                                       	 0.00128818	 100       	 0         	 0         	 55.8926   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 0, n: 50, r2: 18)                    	 0.0011497 	 100       	 0         	 0         	 62.6253   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 50, r2: 50)              	 0.00103143	 100       	 24.2382   	 0         	 5.81718   	 4.16667   
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                   	 0.000819466	 100       	 0.610153  	 0         	 2.44061   	 0.25      
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 18)                                                              	 0.000812127	 100       	 0         	 0         	 88.6561   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 18)                                                                                          	 0.000797777	 201       	 0         	 0         	 3.62808   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 18, n: 50, r2: 1)                                                                                          	 0.000767175	 201       	 0         	 0         	 3.7728    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 18, k: 50)     	 0.000673603	 100       	 13.361    	 0         	 5.10687   	 2.61628   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                          	 0.000533171	 100       	 0         	 0         	 7.50228   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 18)   	 0.000501357	 100       	 17.9513   	 0         	 6.86138   	 2.61628   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 18, n: 50, r2: 1)                    	 0.000473658	 100       	 0         	 0         	 11.4851   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 1, Xr2: 50, Qr1: 1, Qr2: 0)          	 0.000444693	 100       	 0         	 0         	 8.99497   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 1, r1low: 0, n: 50, r2: 18)                     	 0.000422998	 100       	 0         	 0         	 3.40427   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                            	 0.000399657	 100       	 1.25107   	 0         	 15.0129   	 0.0833333 
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 18)                                                                	 0.000373412	 101       	 0         	 0         	 3.89489   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000372645	 101       	 0.677589  	 0         	 10.8414   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000361848	 100       	 0.690898  	 0         	 11.0544   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 18, n: 50, r2: 1)                                                                                 	 0.000338563	 101       	 0.268488  	 0         	 4.2958    	 0.0625    
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 18, m: 18, fromLeft: 0)                	 0.000314854	 809       	 0         	 0         	 13.32     	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 18, k: 50)  	 0.000305059	 100       	 29.5025   	 0         	 11.2765   	 2.61628   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 900, cols: 18, reductionFactor: 37, colBlockingSize: 12)                   	 0.000303388	 8         	 15.794    	 0         	 3.48575   	 4.531     
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 50)                                                                       	 0.000287266	 8         	 0         	 0         	 55.6975   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                              	 0.000207995	 8         	 0         	 0         	 76.9249   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 18, r1_: 18, n: 50, r2: 18)           	 0.000207844	 8         	 22.4476   	 0         	 10.0765   	 2.22772   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 18, m: 50, k: 18)   	 0.000169933	 100       	 19.0663   	 0         	 9.99923   	 1.90678   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 900, Xcols: 18, r: 18, streamingCols: 0)                    	 0.000147533	 8         	 15.8121   	 0         	 14.1254   	 1.1194    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.000111783	 1         	 2.29692   	 0         	 0.357836  	 6.41892   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 900, m: 18)                                                                        	 5.4332e-05	 8         	 0         	 0         	 38.1654   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 900, m: 18)                                                               	 4.9092e-05	 8         	 0         	 0         	 42.2391   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 50, r: 50, streamingCols: 0)                     	 3.472e-05 	 1         	 3.60023   	 0         	 1.44009   	 2.5       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 2.8711e-05	 1         	 8.70746   	 0         	 2.08979   	 4.16667   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 18, r1_: 18, n: 50, r2: 1)            	 2.633e-05 	 1         	 1.23054   	 0         	 0.645348  	 1.90678   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                                	 2.055e-05 	 1         	 0         	 0         	 1.94647   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 18, r: 18, streamingCols: 0)                     	 1.4551e-05	 1         	 1.11333   	 0         	 1.07869   	 1.03211   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 0)                	 9.771e-06 	 9         	 0         	 0         	 36.8437   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 18, n: 50, r2: 1)                                                                                   	 9.111e-06 	 1         	 0.197563  	 0         	 0.790254  	 0.25      
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 8.84e-06  	 1         	 0.565611  	 0         	 2.26244   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 0, m: 900, k: 18)   	 6.97e-06  	 100       	 0         	 0         	 1859.4    	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                         	 4.501e-06 	 1         	 0         	 0         	 8.88691   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 18)                                                                         	 3.63e-06  	 1         	 0         	 0         	 3.96694   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 1.79338   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 1.79333   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                            	 1.58607   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                        	 1.58478   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 1.31935   	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 0.449773  	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 0.383645  	 1818      
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.332075  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.262772  	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.241327  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_leftOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                   	 0.207189  	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.11804   	 918       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.0527183 	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.0325183 	 900       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.0315219 	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0199917 	 900       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 0.0155553 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 0.0155263 	 2         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.0145603 	 1800      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0131808 	 900       
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                              	 0.0126417 	 20        
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0121787 	 1000      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.0120352 	 918       
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                       	 0.00904052	 818       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.00761249	 1310      
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                              	 0.00616502	 918       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.00524009	 18        
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00312597	 1818      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00274551	 6372      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00124266	 5272      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00107306	 302       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000837417	 102       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000399657	 100       
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.000324625	 818       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: L, orthoY: L
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m43->44  [0m[1;34m44->45  [0m[1;34m45->46  [0m[1;34m46->47  [0m[1;34m47->48  [0m[1;34m48->49  [0m[1;34m49->50  [0m[1;34m50->51  [0m[1;34m51->52  [0m[1;34m52->53  [0m[1;34m53->54  [0m[1;34m54->55  [0m[1;34m55->56  [0m[1;34m56->57  [0m[1;34m57->58  [0m[1;34m58->59  [0m[1;34m59->60  [0m[1;34m60->61  [0m[1;34m61->62  [0m[1;34m62->63  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 22834647615360 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 22834462058496 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 22834260732032 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 22834059405568 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 22833858079104 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 22833656752640 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 22833455426176 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 22833254099712 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 22833052773248 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 22832851446784 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 22832650120320 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 22832448793856 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 22832247467392 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 22832046140928 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 22831844814464 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 22831643488000 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 22831442161536 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 22831240835072 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 22831039508608 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 22830838182144 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 22830636855680 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 22830435529216 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 22830234202752 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 22830032876288 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 22829831549824 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 22829630223360 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 22829428896896 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 22829227570432 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 22829026243968 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 22828824917504 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 22828623591040 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 22828422264576 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 22828220934016 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 22828019607552 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 22827818281088 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 22827616954624 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 22827415628160 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 22827214301696 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 22827012975232 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 22826811648768 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 22826610322304 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 22826408995840 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 22826207669376 -> hwthread 43 - OK[0m[1;34m
[0m[1;34m	threadid 22826006342912 -> hwthread 44 - OK[0m[1;34m
[0m[1;34m	threadid 22825805016448 -> hwthread 45 - OK[0m[1;34m
[0m[1;34m	threadid 22825603689984 -> hwthread 46 - OK[0m[1;34m
[0m[1;34m	threadid 22825402363520 -> hwthread 47 - OK[0m[1;34m
[0m[1;34m	threadid 22825201037056 -> hwthread 48 - OK[0m[1;34m
[0m[1;34m	threadid 22824999710592 -> hwthread 49 - OK[0m[1;34m
[0m[1;34m	threadid 22824798384128 -> hwthread 50 - OK[0m[1;34m
[0m[1;34m	threadid 22824597057664 -> hwthread 51 - OK[0m[1;34m
[0m[1;34m	threadid 22824395731200 -> hwthread 52 - OK[0m[1;34m
[0m[1;34m	threadid 22824194404736 -> hwthread 53 - OK[0m[1;34m
[0m[1;34m	threadid 22823993078272 -> hwthread 54 - OK[0m[1;34m
[0m[1;34m	threadid 22823791751808 -> hwthread 55 - OK[0m[1;34m
[0m[1;34m	threadid 22823590425344 -> hwthread 56 - OK[0m[1;34m
[0m[1;34m	threadid 22823389098880 -> hwthread 57 - OK[0m[1;34m
[0m[1;34m	threadid 22823187772416 -> hwthread 58 - OK[0m[1;34m
[0m[1;34m	threadid 22822986445952 -> hwthread 59 - OK[0m[1;34m
[0m[1;34m	threadid 22822785119488 -> hwthread 60 - OK[0m[1;34m
[0m[1;34m	threadid 22822583793024 -> hwthread 61 - OK[0m[1;34m
[0m[1;34m	threadid 22822382466560 -> hwthread 62 - OK[0m[1;34m
[0m[1;34m	threadid 22822181140096 -> hwthread 63 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 22834541954816 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 22834535364352 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 69, m: 69)                                                                 	 0.39381   	 700       	 4.08749   	 0         	 0.204086  	 20.0282   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3450, cols: 69, reductionFactor: 37, colBlockingSize: 12)                  	 0.257198  	 600       	 78.7068   	 0         	 4.5315    	 17.3688   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 69, n: 50, r: 69, r2: 69)             	 0.226521  	 600       	 87.0142   	 0         	 10.1895   	 8.5396    
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 69, r: 69, r2: 3450, leftOrthog: 0)        	 0.195217  	 600       	 100.967   	 0         	 17.7937   	 5.67434   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 69, reductionFactor: 37, colBlockingSize: 12)                  	 0.0446303 	 100       	 54.7798   	 0         	 3.17741   	 17.2404   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 69)                                                                 	 0.0420261 	 100       	 2.87321   	 0         	 0.179888  	 15.9722   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3450, cols: 19, reductionFactor: 37, colBlockingSize: 12)                  	 0.0390967 	 700       	 45.8032   	 0         	 9.44073   	 4.85166   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0346672 	 100       	 2.524     	 0         	 0.174228  	 14.4868   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 69, Qr2: 19)       	 0.0301317 	 700       	 0         	 0         	 79.6557   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 3450, Xcols: 19, r: 19, streamingCols: 0)                   	 0.027352  	 700       	 31.8738   	 0         	 26.8781   	 1.18587   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r: 69, r2: 69)             	 0.0266189 	 100       	 89.4289   	 0         	 10.5116   	 8.5076    
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 69, r: 69, r2: 2500, leftOrthog: 0)        	 0.0261565 	 100       	 91.01     	 0         	 16.1191   	 5.64611   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3450, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0252213 	 100       	 70.243    	 0         	 5.55086   	 12.6544   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 3450, leftOrthog: 0)        	 0.0243448 	 100       	 70.8571   	 0         	 17.17     	 4.12679   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 69, n: 50, r: 69, r2: 50)             	 0.0209971 	 100       	 113.373   	 0         	 15.7736   	 7.1875    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 19, k: 2500)   	 0.0205643 	 800       	 184.786   	 0         	 53.9809   	 3.42318   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 2500, m: 19, k: 50)	 0.0134525 	 800       	 282.475   	 0         	 82.5184   	 3.42318   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 19, m: 19)                                                                  	 0.00912345	 909       	 0.911048  	 0         	 0.878368  	 1.03721   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 950, k: 19)  	 0.00845685	 800       	 170.749   	 0         	 50.3261   	 3.39286   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 3450, m: 19)                                                                       	 0.008167  	 700       	 0         	 0         	 89.8934   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 19, n: 50, r2: 19)                   	 0.00619931	 700       	 0         	 0         	 118.426   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 19, n: 50, r2: 19)                                                                                         	 0.00582388	 808       	 0         	 0         	 40.0678   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 19, reductionFactor: 37, colBlockingSize: 12)                  	 0.00548916	 100       	 33.7717   	 0         	 6.97534   	 4.84158   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 3450, m: 19)                                                              	 0.00496544	 700       	 0         	 0         	 147.854   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 19, m: 950, k: 19)  	 0.00491388	 700       	 97.709    	 0         	 41.5521   	 2.35149   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 50)           	 0.0048782 	 8         	 20.4994   	 0         	 3.3127    	 6.18812   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 69, reductionFactor: 37, colBlockingSize: 12)                    	 0.00483393	 100       	 10.1153   	 0         	 1.35889   	 7.44379   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00353995	 9         	 0.423733  	 0         	 0.153561  	 2.75937   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 19, r: 19, streamingCols: 0)                   	 0.00329073	 100       	 27.4255   	 0         	 23.139    	 1.18525   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 50, Qr2: 19)       	 0.00313075	 100       	 0         	 0         	 88.1579   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.00271772	 8         	 37.79     	 0         	 3.00252   	 12.5861   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                   	 0.00172505	 8         	 28.9848   	 0         	 9.3215    	 3.10945   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 69, r: 50, r2: 50, leftOrthog: 0)          	 0.00163049	 100       	 21.1593   	 0         	 7.53148   	 2.80945   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 19)                                                                       	 0.00140577	 100       	 0         	 0         	 54.0628   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 19, reductionFactor: 37, colBlockingSize: 12)                    	 0.00137218	 101       	 2.72898   	 0         	 0.771976  	 3.53506   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 0, n: 50, r2: 19)                    	 0.00127404	 100       	 0         	 0         	 59.6529   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 50, r2: 50)              	 0.0010529 	 100       	 23.7439   	 0         	 5.69854   	 4.16667   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 19)                                                              	 0.000970324	 100       	 0         	 0         	 78.3244   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                   	 0.000867594	 100       	 0.576306  	 0         	 2.30523   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 19)                                                                                          	 0.00076692	 201       	 0         	 0         	 3.98373   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 19, n: 50, r2: 1)                                                                                          	 0.000758482	 201       	 0         	 0         	 4.02805   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 19, k: 50)     	 0.000666411	 100       	 14.2555   	 0         	 5.28203   	 2.69886   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                          	 0.000528063	 100       	 0         	 0         	 7.57485   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 19, n: 50, r2: 1)                    	 0.000496289	 100       	 0         	 0         	 11.1226   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 19)   	 0.000489575	 100       	 19.4046   	 0         	 7.18991   	 2.69886   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 1, Xr2: 50, Qr1: 1, Qr2: 0)          	 0.000438679	 100       	 0         	 0         	 9.11828   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 1, r1low: 0, n: 50, r2: 19)                     	 0.000426667	 100       	 0         	 0         	 3.5625    	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 19, m: 19, fromLeft: 0)                	 0.000416021	 809       	 0         	 0         	 11.2321   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 19, k: 50)  	 0.000410502	 100       	 23.1424   	 0         	 8.57487   	 2.69886   
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000406992	 101       	 0.620405  	 0         	 9.92649   	 0.0625    
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                            	 0.000399139	 100       	 1.2527    	 0         	 15.0324   	 0.0833333 
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 19)                                                                	 0.000373879	 101       	 0         	 0         	 4.10614   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 19, n: 50, r2: 1)                                                                                 	 0.000350727	 101       	 0.273575  	 0         	 4.37719   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000329397	 100       	 0.758963  	 0         	 12.1434   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                              	 0.000326337	 8         	 0         	 0         	 49.0291   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 950, cols: 19, reductionFactor: 37, colBlockingSize: 12)                   	 0.000324669	 8         	 17.3577   	 0         	 3.62925   	 4.78272   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 19, r1_: 19, n: 50, r2: 19)           	 0.000232372	 8         	 23.6139   	 0         	 10.0421   	 2.35149   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 50)                                                                       	 0.000197526	 8         	 0         	 0         	 81.002    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 19, m: 50, k: 19)   	 0.000169639	 100       	 21.2805   	 0         	 10.6626   	 1.9958    
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 950, Xcols: 19, r: 19, streamingCols: 0)                    	 0.000159811	 8         	 17.1678   	 0         	 14.5294   	 1.18159   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.000133683	 1         	 1.92064   	 0         	 0.299215  	 6.41892   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 950, m: 19)                                                               	 6.6204e-05	 8         	 0         	 0         	 34.8982   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 950, m: 19)                                                                        	 5.4574e-05	 8         	 0         	 0         	 42.3352   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 50, r: 50, streamingCols: 0)                     	 3.4331e-05	 1         	 3.64102   	 0         	 1.45641   	 2.5       
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                                	 2.2241e-05	 1         	 0         	 0         	 1.79848   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 19, r: 19, streamingCols: 0)                     	 1.505e-05 	 1         	 1.19934   	 0         	 1.10591   	 1.08447   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 19, r1_: 19, n: 50, r2: 1)            	 1.4491e-05	 1         	 2.4912    	 0         	 1.24822   	 1.9958    
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 1.0881e-05	 1         	 22.9758   	 0         	 5.5142    	 4.16667   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 0)                	 1.011e-05 	 9         	 0         	 0         	 35.6083   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 19, n: 50, r2: 1)                                                                                   	 9.84e-06  	 1         	 0.193089  	 0         	 0.772358  	 0.25      
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 8.6e-06   	 1         	 0.581395  	 0         	 2.32558   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 0, m: 950, k: 19)   	 8.02e-06  	 100       	 0         	 0         	 1800.5    	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                         	 4.69e-06  	 1         	 0         	 0         	 8.52878   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 19)                                                                         	 3.68e-06  	 1         	 0         	 0         	 4.13043   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 1.85167   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 1.85164   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                            	 1.6449    	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                        	 1.6436    	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 1.36542   	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 0.470504  	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 0.381018  	 1818      
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.332519  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.27519   	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.247349  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_leftOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                   	 0.206666  	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.118272  	 918       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.0496806 	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.0337011 	 900       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.032577  	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0212307 	 900       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 0.0150868 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 0.015056  	 2         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.014038  	 1800      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.013863  	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.0126634 	 918       
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                              	 0.0122211 	 20        
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                       	 0.00983325	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.00839631	 1000      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.00787735	 1310      
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                              	 0.00672442	 918       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.00513595	 18        
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00275977	 1818      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00274944	 6372      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00121133	 5272      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00108712	 302       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000886034	 102       
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.000426131	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000399139	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: L, orthoY: L
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m43->44  [0m[1;34m44->45  [0m[1;34m45->46  [0m[1;34m46->47  [0m[1;34m47->48  [0m[1;34m48->49  [0m[1;34m49->50  [0m[1;34m50->51  [0m[1;34m51->52  [0m[1;34m52->53  [0m[1;34m53->54  [0m[1;34m54->55  [0m[1;34m55->56  [0m[1;34m56->57  [0m[1;34m57->58  [0m[1;34m58->59  [0m[1;34m59->60  [0m[1;34m60->61  [0m[1;34m61->62  [0m[1;34m62->63  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 23309246707584 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 23309055944704 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 23308854618240 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 23308653291776 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 23308451965312 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 23308250638848 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 23308049312384 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 23307847985920 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 23307646659456 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 23307445332992 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 23307244006528 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 23307042680064 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 23306841353600 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 23306640027136 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 23306438700672 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 23306237374208 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 23306036047744 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 23305834721280 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 23305633394816 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 23305432068352 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 23305230741888 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 23305029415424 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 23304828088960 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 23304626762496 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 23304425436032 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 23304224109568 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 23304022783104 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 23303821456640 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 23303620130176 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 23303418803712 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 23303217477248 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 23303016150784 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 23302814820224 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 23302613493760 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 23302412167296 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 23302210840832 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 23302009514368 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 23301808187904 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 23301606861440 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 23301405534976 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 23301204208512 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 23301002882048 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 23300801555584 -> hwthread 43 - OK[0m[1;34m
[0m[1;34m	threadid 23300600229120 -> hwthread 44 - OK[0m[1;34m
[0m[1;34m	threadid 23300398902656 -> hwthread 45 - OK[0m[1;34m
[0m[1;34m	threadid 23300197576192 -> hwthread 46 - OK[0m[1;34m
[0m[1;34m	threadid 23299996249728 -> hwthread 47 - OK[0m[1;34m
[0m[1;34m	threadid 23299794923264 -> hwthread 48 - OK[0m[1;34m
[0m[1;34m	threadid 23299593596800 -> hwthread 49 - OK[0m[1;34m
[0m[1;34m	threadid 23299392270336 -> hwthread 50 - OK[0m[1;34m
[0m[1;34m	threadid 23299190943872 -> hwthread 51 - OK[0m[1;34m
[0m[1;34m	threadid 23298989617408 -> hwthread 52 - OK[0m[1;34m
[0m[1;34m	threadid 23298788290944 -> hwthread 53 - OK[0m[1;34m
[0m[1;34m	threadid 23298586964480 -> hwthread 54 - OK[0m[1;34m
[0m[1;34m	threadid 23298385638016 -> hwthread 55 - OK[0m[1;34m
[0m[1;34m	threadid 23298184311552 -> hwthread 56 - OK[0m[1;34m
[0m[1;34m	threadid 23297982985088 -> hwthread 57 - OK[0m[1;34m
[0m[1;34m	threadid 23297781658624 -> hwthread 58 - OK[0m[1;34m
[0m[1;34m	threadid 23297580332160 -> hwthread 59 - OK[0m[1;34m
[0m[1;34m	threadid 23297379005696 -> hwthread 60 - OK[0m[1;34m
[0m[1;34m	threadid 23297177679232 -> hwthread 61 - OK[0m[1;34m
[0m[1;34m	threadid 23296976352768 -> hwthread 62 - OK[0m[1;34m
[0m[1;34m	threadid 23296775026304 -> hwthread 63 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 23309141047040 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 23309134456576 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 70, m: 70)                                                                 	 0.398091  	 700       	 4.2219    	 0         	 0.207772  	 20.3199   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3500, cols: 70, reductionFactor: 37, colBlockingSize: 12)                  	 0.261963  	 600       	 80.6841   	 0         	 4.57897   	 17.6206   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 70, n: 50, r: 70, r2: 70)             	 0.231097  	 600       	 89.0534   	 0         	 10.2793   	 8.66337   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 70, r: 70, r2: 3500, leftOrthog: 0)        	 0.209127  	 600       	 98.409    	 0         	 17.095    	 5.75658   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 70, reductionFactor: 37, colBlockingSize: 12)                  	 0.0451131 	 100       	 55.7757   	 0         	 3.1902    	 17.4834   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 70)                                                                 	 0.0423098 	 100       	 2.89531   	 0         	 0.180573  	 16.034    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3500, cols: 20, reductionFactor: 37, colBlockingSize: 12)                  	 0.0422236 	 700       	 47.6741   	 0         	 9.33696   	 5.10596   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0351994 	 100       	 2.48584   	 0         	 0.171594  	 14.4868   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 70, Qr2: 20)       	 0.0310055 	 700       	 0         	 0         	 79.4697   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 3500, Xcols: 20, r: 20, streamingCols: 0)                   	 0.0293235 	 700       	 33.4203   	 0         	 26.7744   	 1.24822   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 3500, leftOrthog: 0)        	 0.0274701 	 100       	 63.7056   	 0         	 15.4349   	 4.12736   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r: 70, r2: 70)             	 0.0270963 	 100       	 90.4184   	 0         	 10.4782   	 8.62919   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 70, r: 70, r2: 2500, leftOrthog: 0)        	 0.0261694 	 100       	 93.6208   	 0         	 16.3489   	 5.72644   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0251641 	 100       	 71.4231   	 0         	 5.64296   	 12.657    
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 70, n: 50, r: 70, r2: 50)             	 0.0224709 	 100       	 109.03    	 0         	 15.0773   	 7.2314    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 20, k: 2500)   	 0.0205354 	 800       	 194.785   	 0         	 54.8516   	 3.55114   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 2500, m: 20, k: 50)	 0.0141594 	 800       	 282.497   	 0         	 79.5511   	 3.55114   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 3500, m: 20)                                                                       	 0.00978223	 700       	 0         	 0         	 80.1454   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 20, m: 20)                                                                  	 0.0091383 	 909       	 1.06096   	 0         	 0.970841  	 1.09283   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 1000, k: 20) 	 0.00831454	 800       	 192.434   	 0         	 54.6512   	 3.52113   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 20, n: 50, r2: 20)                   	 0.00704525	 700       	 0         	 0         	 111.281   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 20, n: 50, r2: 20)                                                                                         	 0.00637065	 808       	 0         	 0         	 40.5861   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 3500, m: 20)                                                              	 0.00617878	 700       	 0         	 0         	 126.886   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 20, reductionFactor: 37, colBlockingSize: 12)                  	 0.00566939	 100       	 36.2306   	 0         	 7.11187   	 5.09438   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 20, m: 1000, k: 20) 	 0.00516952	 700       	 108.327   	 0         	 43.7642   	 2.47525   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 50)           	 0.00486569	 8         	 20.552    	 0         	 3.32121   	 6.18812   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 70, reductionFactor: 37, colBlockingSize: 12)                    	 0.00476717	 100       	 10.5564   	 0         	 1.40964   	 7.48874   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00354999	 9         	 0.422535  	 0         	 0.153127  	 2.75937   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 20, r: 20, streamingCols: 0)                   	 0.00350226	 100       	 28.553    	 0         	 22.8881   	 1.2475    
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 50, Qr2: 20)       	 0.00316843	 100       	 0         	 0         	 88.3717   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.00268864	 8         	 38.1988   	 0         	 3.03499   	 12.5861   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                   	 0.00209051	 8         	 23.9176   	 0         	 7.69189   	 3.10945   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 20)                                                                       	 0.00186085	 100       	 0         	 0         	 42.991    	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 70, r: 50, r2: 50, leftOrthog: 0)          	 0.00166306	 100       	 21.0455   	 0         	 7.45613   	 2.82258   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 20)                                                              	 0.00145759	 100       	 0         	 0         	 54.8851   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 0, n: 50, r2: 20)                    	 0.00142975	 100       	 0         	 0         	 55.9537   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 20, reductionFactor: 37, colBlockingSize: 12)                    	 0.00135489	 101       	 3.06238   	 0         	 0.834902  	 3.66795   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 50, r2: 50)              	 0.00105615	 100       	 23.6709   	 0         	 5.68102   	 4.16667   
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                   	 0.000894686	 100       	 0.558855  	 0         	 2.23542   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 20)                                                                                          	 0.000831488	 201       	 0         	 0         	 3.86776   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 20, n: 50, r2: 1)                                                                                          	 0.000783122	 201       	 0         	 0         	 4.10664   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 20, k: 50)     	 0.000684709	 100       	 14.6047   	 0         	 5.25771   	 2.77778   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                          	 0.000528022	 100       	 0         	 0         	 7.57544   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 20)   	 0.00047667	 100       	 20.9789   	 0         	 7.55239   	 2.77778   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 20, n: 50, r2: 1)                    	 0.00047034	 100       	 0         	 0         	 11.9063   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 1, Xr2: 50, Qr1: 1, Qr2: 0)          	 0.000454842	 100       	 0         	 0         	 8.79426   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 1, r1low: 0, n: 50, r2: 20)                     	 0.00043744	 100       	 0         	 0         	 3.65764   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 20)                                                                	 0.000420319	 101       	 0         	 0         	 3.8447    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 20, k: 50)  	 0.00041458	 100       	 24.1208   	 0         	 8.68349   	 2.77778   
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000396439	 101       	 0.63692   	 0         	 10.1907   	 0.0625    
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                            	 0.000389766	 100       	 1.28282   	 0         	 15.3939   	 0.0833333 
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.00034547	 100       	 0.723652  	 0         	 11.5784   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 20, n: 50, r2: 1)                                                                                 	 0.00034355	 101       	 0.293989  	 0         	 4.70383   	 0.0625    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 1000, cols: 20, reductionFactor: 37, colBlockingSize: 12)                  	 0.000339808	 8         	 19.3432   	 0         	 3.84217   	 5.03445   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                              	 0.000316448	 8         	 0         	 0         	 50.5612   	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 20, m: 20, fromLeft: 0)                	 0.000259848	 809       	 0         	 0         	 19.9255   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 20, r1_: 20, n: 50, r2: 20)           	 0.000252436	 8         	 25.353    	 0         	 10.2426   	 2.47525   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 50)                                                                       	 0.000219934	 8         	 0         	 0         	 72.7491   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 1000, Xcols: 20, r: 20, streamingCols: 0)                   	 0.000172965	 8         	 18.5009   	 0         	 14.8747   	 1.24378   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 20, m: 50, k: 20)   	 0.000169502	 100       	 23.5985   	 0         	 11.3273   	 2.08333   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.000124823	 1         	 2.05697   	 0         	 0.320454  	 6.41892   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 1000, m: 20)                                                                       	 6.1071e-05	 8         	 0         	 0         	 41.9184   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 1000, m: 20)                                                              	 5.099e-05 	 8         	 0         	 0         	 50.2059   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 50, r: 50, streamingCols: 0)                     	 3.1971e-05	 1         	 3.90979   	 0         	 1.56392   	 2.5       
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                                	 2.3271e-05	 1         	 0         	 0         	 1.71888   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 20, r1_: 20, n: 50, r2: 1)            	 1.3331e-05	 1         	 3.00053   	 0         	 1.44025   	 2.08333   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 20, r: 20, streamingCols: 0)                     	 1.305e-05 	 1         	 1.53257   	 0         	 1.34866   	 1.13636   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 1.0641e-05	 1         	 23.494    	 0         	 5.63857   	 4.16667   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 0)                	 1.013e-05 	 9         	 0         	 0         	 35.538    	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 20, n: 50, r2: 1)                                                                                   	 9.36e-06  	 1         	 0.213675  	 0         	 0.854701  	 0.25      
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 8.57e-06  	 1         	 0.583431  	 0         	 2.33372   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 0, m: 1000, k: 20)  	 7.471e-06 	 100       	 0         	 0         	 2141.61   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                         	 4.04e-06  	 1         	 0         	 0         	 9.90099   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 20)                                                                         	 3.29e-06  	 1         	 0         	 0         	 4.86322   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 1.89336   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 1.89333   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                            	 1.67427   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                        	 1.67293   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 1.38723   	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 0.4756    	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 0.389408  	 1818      
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.337645  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.281721  	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.26443   	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_leftOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                   	 0.218988  	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.127786  	 918       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.05295   	 918       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.0351343 	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.0346288 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0212201 	 900       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 0.0154766 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 0.0154475 	 2         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.014574  	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.0141377 	 1800      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.0126883 	 918       
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                              	 0.0120423 	 20        
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                       	 0.0119314 	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.00938278	 1000      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.00851328	 1310      
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                              	 0.0084474 	 918       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.0051421 	 18        
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00363842	 1818      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00268055	 6372      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00125272	 5272      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00108546	 302       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000912616	 102       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000389766	 100       
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.000269978	 818       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: L, orthoY: L
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m43->44  [0m[1;34m44->45  [0m[1;34m45->46  [0m[1;34m46->47  [0m[1;34m47->48  [0m[1;34m48->49  [0m[1;34m49->50  [0m[1;34m50->51  [0m[1;34m51->52  [0m[1;34m52->53  [0m[1;34m53->54  [0m[1;34m54->55  [0m[1;34m55->56  [0m[1;34m56->57  [0m[1;34m57->58  [0m[1;34m58->59  [0m[1;34m59->60  [0m[1;34m60->61  [0m[1;34m61->62  [0m[1;34m62->63  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 22989331105664 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 22989147990016 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 22988946663552 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 22988745337088 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 22988544010624 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 22988342684160 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 22988141357696 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 22987940031232 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 22987738704768 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 22987537378304 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 22987336051840 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 22987134725376 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 22986933398912 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 22986732072448 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 22986530745984 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 22986329419520 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 22986128093056 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 22985926766592 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 22985725440128 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 22985524113664 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 22985322787200 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 22985121460736 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 22984920134272 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 22984718807808 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 22984517481344 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 22984316154880 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 22984114828416 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 22983913501952 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 22983712175488 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 22983510849024 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 22983309522560 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 22983108196096 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 22982906865536 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 22982705539072 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 22982504212608 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 22982302886144 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 22982101559680 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 22981900233216 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 22981698906752 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 22981497580288 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 22981296253824 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 22981094927360 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 22980893600896 -> hwthread 43 - OK[0m[1;34m
[0m[1;34m	threadid 22980692274432 -> hwthread 44 - OK[0m[1;34m
[0m[1;34m	threadid 22980490947968 -> hwthread 45 - OK[0m[1;34m
[0m[1;34m	threadid 22980289621504 -> hwthread 46 - OK[0m[1;34m
[0m[1;34m	threadid 22980088295040 -> hwthread 47 - OK[0m[1;34m
[0m[1;34m	threadid 22979886968576 -> hwthread 48 - OK[0m[1;34m
[0m[1;34m	threadid 22979685642112 -> hwthread 49 - OK[0m[1;34m
[0m[1;34m	threadid 22979484315648 -> hwthread 50 - OK[0m[1;34m
[0m[1;34m	threadid 22979282989184 -> hwthread 51 - OK[0m[1;34m
[0m[1;34m	threadid 22979081662720 -> hwthread 52 - OK[0m[1;34m
[0m[1;34m	threadid 22978880336256 -> hwthread 53 - OK[0m[1;34m
[0m[1;34m	threadid 22978679009792 -> hwthread 54 - OK[0m[1;34m
[0m[1;34m	threadid 22978477683328 -> hwthread 55 - OK[0m[1;34m
[0m[1;34m	threadid 22978276356864 -> hwthread 56 - OK[0m[1;34m
[0m[1;34m	threadid 22978075030400 -> hwthread 57 - OK[0m[1;34m
[0m[1;34m	threadid 22977873703936 -> hwthread 58 - OK[0m[1;34m
[0m[1;34m	threadid 22977672377472 -> hwthread 59 - OK[0m[1;34m
[0m[1;34m	threadid 22977471051008 -> hwthread 60 - OK[0m[1;34m
[0m[1;34m	threadid 22977269724544 -> hwthread 61 - OK[0m[1;34m
[0m[1;34m	threadid 22977068398080 -> hwthread 62 - OK[0m[1;34m
[0m[1;34m	threadid 22976867071616 -> hwthread 63 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 22989225445120 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 22989218854656 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 71, m: 71)                                                                 	 0.409418  	 700       	 4.28355   	 0         	 0.207823  	 20.6116   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3550, cols: 71, reductionFactor: 37, colBlockingSize: 12)                  	 0.266509  	 600       	 82.7555   	 0         	 4.63038   	 17.8723   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 71, n: 50, r: 71, r2: 71)             	 0.23551   	 600       	 91.1836   	 0         	 10.377    	 8.78713   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 71, r: 71, r2: 3550, leftOrthog: 0)        	 0.220872  	 600       	 97.2269   	 0         	 16.6518   	 5.83882   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 71, reductionFactor: 37, colBlockingSize: 12)                  	 0.0466387 	 100       	 55.5038   	 0         	 3.13115   	 17.7263   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3550, cols: 21, reductionFactor: 37, colBlockingSize: 12)                  	 0.0464184 	 700       	 48.4938   	 0         	 9.04704   	 5.36018   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 71)                                                                 	 0.0428349 	 100       	 2.90067   	 0         	 0.180227  	 16.0946   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0362176 	 100       	 2.41595   	 0         	 0.16677   	 14.4868   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 71, Qr2: 21)       	 0.0326805 	 700       	 0         	 0         	 77.3843   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 3550, Xcols: 21, r: 21, streamingCols: 0)                   	 0.0312752 	 700       	 35.0401   	 0         	 26.7367   	 1.31056   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r: 71, r2: 71)             	 0.0272992 	 100       	 92.3288   	 0         	 10.551    	 8.75074   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 71, r: 71, r2: 2500, leftOrthog: 0)        	 0.0266257 	 100       	 94.6641   	 0         	 16.3025   	 5.80673   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3550, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0250875 	 100       	 72.6645   	 0         	 5.7399    	 12.6595   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 71, n: 50, r: 71, r2: 50)             	 0.0240039 	 100       	 105.004   	 0         	 14.4343   	 7.27459   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 3550, leftOrthog: 0)        	 0.0234907 	 100       	 75.5617   	 0         	 18.3051   	 4.12791   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 21, k: 2500)   	 0.0214024 	 800       	 196.24    	 0         	 53.3922   	 3.67544   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 2500, m: 21, k: 50)	 0.0144303 	 800       	 291.055   	 0         	 79.1891   	 3.67544   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 21, m: 21)                                                                  	 0.0103474 	 909       	 1.08475   	 0         	 0.944546  	 1.14844   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 3550, m: 21)                                                                       	 0.00951233	 700       	 0         	 0         	 87.7766   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 1050, k: 21) 	 0.00870118	 800       	 202.731   	 0         	 55.6063   	 3.64583   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 21, n: 50, r2: 21)                   	 0.00724818	 700       	 0         	 0         	 115.196   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 21, n: 50, r2: 21)                                                                                         	 0.00659421	 808       	 0         	 0         	 43.2292   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 21, reductionFactor: 37, colBlockingSize: 12)                  	 0.00649771	 100       	 34.8522   	 0         	 6.51811   	 5.34698   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 3550, m: 21)                                                              	 0.00593054	 700       	 0         	 0         	 140.79    	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 71, reductionFactor: 37, colBlockingSize: 12)                    	 0.00587429	 100       	 8.8134    	 0         	 1.16998   	 7.53295   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 21, m: 1050, k: 21) 	 0.00538022	 700       	 120.491   	 0         	 46.3605   	 2.59901   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 50)           	 0.00486769	 8         	 20.5436   	 0         	 3.31985   	 6.18812   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 21, r: 21, streamingCols: 0)                   	 0.00361282	 100       	 30.5163   	 0         	 23.2994   	 1.30975   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00350376	 9         	 0.42811   	 0         	 0.155148  	 2.75937   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 50, Qr2: 21)       	 0.00315987	 100       	 0         	 0         	 89.8771   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.00263925	 8         	 38.9136   	 0         	 3.09179   	 12.5861   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 71, r: 50, r2: 50, leftOrthog: 0)          	 0.00214065	 100       	 16.5838   	 0         	 5.8487    	 2.83546   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 21)                                                                       	 0.00185734	 100       	 0         	 0         	 45.226    	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                   	 0.00173902	 8         	 28.7519   	 0         	 9.24661   	 3.10945   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 21, reductionFactor: 37, colBlockingSize: 12)                    	 0.00165033	 101       	 2.77187   	 0         	 0.729994  	 3.79711   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 0, n: 50, r2: 21)                    	 0.00163944	 100       	 0         	 0         	 51.237    	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 21)                                                              	 0.00155699	 100       	 0         	 0         	 53.9504   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 50, r2: 50)              	 0.0010268 	 100       	 24.3475   	 0         	 5.84339   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 21)                                                                                          	 0.000809264	 201       	 0         	 0         	 4.17268   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                   	 0.000808528	 100       	 0.618408  	 0         	 2.47363   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 21, n: 50, r2: 1)                                                                                          	 0.000784218	 201       	 0         	 0         	 4.30595   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 21, k: 50)     	 0.000681646	 100       	 15.4039   	 0         	 5.3987    	 2.85326   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                          	 0.000526171	 100       	 0         	 0         	 7.60209   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 21)   	 0.00046708	 100       	 22.4801   	 0         	 7.87874   	 2.85326   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 21, k: 50)  	 0.0004586 	 100       	 22.8958   	 0         	 8.02442   	 2.85326   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 21, n: 50, r2: 1)                    	 0.000451482	 100       	 0         	 0         	 12.5808   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 1, Xr2: 50, Qr1: 1, Qr2: 0)          	 0.000434795	 100       	 0         	 0         	 9.19974   	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 21, m: 21, fromLeft: 0)                	 0.000415044	 809       	 0         	 0         	 13.7535   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 1, r1low: 0, n: 50, r2: 21)                     	 0.000401757	 100       	 0         	 0         	 4.18163   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                            	 0.000388701	 100       	 1.28634   	 0         	 15.436    	 0.0833333 
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 1050, cols: 21, reductionFactor: 37, colBlockingSize: 12)                  	 0.000382811	 8         	 19.8767   	 0         	 3.76014   	 5.28617   
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000372953	 101       	 0.677029  	 0         	 10.8325   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 21)                                                                	 0.000363727	 101       	 0         	 0         	 4.66504   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 21, n: 50, r2: 1)                                                                                 	 0.000339738	 101       	 0.312152  	 0         	 4.99444   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                              	 0.000328036	 8         	 0         	 0         	 48.7751   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000323172	 100       	 0.773582  	 0         	 12.3773   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 21, r1_: 21, n: 50, r2: 21)           	 0.000292908	 8         	 25.2939   	 0         	 9.73215   	 2.59901   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 50)                                                                       	 0.000227867	 8         	 0         	 0         	 70.2164   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 21, m: 50, k: 21)   	 0.000218305	 100       	 20.2011   	 0         	 9.31174   	 2.16942   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 1050, Xcols: 21, r: 21, streamingCols: 0)                   	 0.000181195	 8         	 20.4443   	 0         	 15.6545   	 1.30597   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.000123593	 1         	 2.07744   	 0         	 0.323643  	 6.41892   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 1050, m: 21)                                                                       	 5.9161e-05	 8         	 0         	 0         	 47.7071   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 1050, m: 21)                                                              	 5.533e-05 	 8         	 0         	 0         	 51.0103   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 50, r: 50, streamingCols: 0)                     	 4.3821e-05	 1         	 2.85251   	 0         	 1.14101   	 2.5       
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                                	 2.2591e-05	 1         	 0         	 0         	 1.77062   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 21, r: 21, streamingCols: 0)                     	 1.5331e-05	 1         	 1.43826   	 0         	 1.21088   	 1.18778   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 21, r1_: 21, n: 50, r2: 1)            	 1.482e-05 	 1         	 2.97571   	 0         	 1.37166   	 2.16942   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 1.116e-05 	 1         	 22.4014   	 0         	 5.37634   	 4.16667   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 0)                	 1.012e-05 	 9         	 0         	 0         	 35.5731   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 9.8e-06   	 1         	 0.510204  	 0         	 2.04082   	 0.25      
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 21, n: 50, r2: 1)                                                                                   	 8.66e-06  	 1         	 0.242494  	 0         	 0.969977  	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 0, m: 1050, k: 21)  	 7.38e-06  	 100       	 0         	 0         	 2390.24   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                         	 4.37e-06  	 1         	 0         	 0         	 9.15332   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 21)                                                                         	 3.58e-06  	 1         	 0         	 0         	 4.69274   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 1.96493   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 1.96487   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                            	 1.73376   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                        	 1.73253   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 1.43997   	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 0.488471  	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 0.401821  	 1818      
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.344717  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.28784   	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.273129  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_leftOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                   	 0.231045  	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.135433  	 918       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.0582369 	 918       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.0368673 	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.0362752 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.022084  	 900       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 0.015179  	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 0.0151498 	 2         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0148889 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.0147742 	 1800      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.0138511 	 918       
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                              	 0.0127296 	 20        
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                       	 0.0116646 	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.00974086	 1000      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.00871386	 1310      
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                              	 0.00825721	 918       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.00518658	 18        
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00359298	 1818      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00271111	 6372      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00125945	 5272      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00103586	 302       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000826988	 102       
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.000425164	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000388701	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: L, orthoY: L
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m43->44  [0m[1;34m44->45  [0m[1;34m45->46  [0m[1;34m46->47  [0m[1;34m47->48  [0m[1;34m48->49  [0m[1;34m49->50  [0m[1;34m50->51  [0m[1;34m51->52  [0m[1;34m52->53  [0m[1;34m53->54  [0m[1;34m54->55  [0m[1;34m55->56  [0m[1;34m56->57  [0m[1;34m57->58  [0m[1;34m58->59  [0m[1;34m59->60  [0m[1;34m60->61  [0m[1;34m61->62  [0m[1;34m62->63  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 22748364937088 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 22748160059392 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 22747958732928 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 22747757406464 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 22747556080000 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 22747354753536 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 22747153427072 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 22746952100608 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 22746750774144 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 22746549447680 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 22746348121216 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 22746146794752 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 22745945468288 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 22745744141824 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 22745542815360 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 22745341488896 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 22745140162432 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 22744938835968 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 22744737509504 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 22744536183040 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 22744334856576 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 22744133530112 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 22743932203648 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 22743730877184 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 22743529550720 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 22743328224256 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 22743126897792 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 22742925571328 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 22742724244864 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 22742522918400 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 22742321591936 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 22742120265472 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 22741918934912 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 22741717608448 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 22741516281984 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 22741314955520 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 22741113629056 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 22740912302592 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 22740710976128 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 22740509649664 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 22740308323200 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 22740106996736 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 22739905670272 -> hwthread 43 - OK[0m[1;34m
[0m[1;34m	threadid 22739704343808 -> hwthread 44 - OK[0m[1;34m
[0m[1;34m	threadid 22739503017344 -> hwthread 45 - OK[0m[1;34m
[0m[1;34m	threadid 22739301690880 -> hwthread 46 - OK[0m[1;34m
[0m[1;34m	threadid 22739100364416 -> hwthread 47 - OK[0m[1;34m
[0m[1;34m	threadid 22738899037952 -> hwthread 48 - OK[0m[1;34m
[0m[1;34m	threadid 22738697711488 -> hwthread 49 - OK[0m[1;34m
[0m[1;34m	threadid 22738496385024 -> hwthread 50 - OK[0m[1;34m
[0m[1;34m	threadid 22738295058560 -> hwthread 51 - OK[0m[1;34m
[0m[1;34m	threadid 22738093732096 -> hwthread 52 - OK[0m[1;34m
[0m[1;34m	threadid 22737892405632 -> hwthread 53 - OK[0m[1;34m
[0m[1;34m	threadid 22737691079168 -> hwthread 54 - OK[0m[1;34m
[0m[1;34m	threadid 22737489752704 -> hwthread 55 - OK[0m[1;34m
[0m[1;34m	threadid 22737288426240 -> hwthread 56 - OK[0m[1;34m
[0m[1;34m	threadid 22737087099776 -> hwthread 57 - OK[0m[1;34m
[0m[1;34m	threadid 22736885773312 -> hwthread 58 - OK[0m[1;34m
[0m[1;34m	threadid 22736684446848 -> hwthread 59 - OK[0m[1;34m
[0m[1;34m	threadid 22736483120384 -> hwthread 60 - OK[0m[1;34m
[0m[1;34m	threadid 22736281793920 -> hwthread 61 - OK[0m[1;34m
[0m[1;34m	threadid 22736080467456 -> hwthread 62 - OK[0m[1;34m
[0m[1;34m	threadid 22735879140992 -> hwthread 63 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 22748259276544 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 22748252686080 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 72, m: 72)                                                                 	 0.410209  	 700       	 4.4585    	 0         	 0.213292  	 20.9032   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3600, cols: 72, reductionFactor: 37, colBlockingSize: 12)                  	 0.279061  	 600       	 82.4198   	 0         	 4.54755   	 18.124    
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 72, n: 50, r: 72, r2: 72)             	 0.250142  	 600       	 89.5286   	 0         	 10.0471   	 8.91089   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 72, r: 72, r2: 3600, leftOrthog: 0)        	 0.222037  	 600       	 100.861   	 0         	 17.0343   	 5.92105   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3600, cols: 22, reductionFactor: 37, colBlockingSize: 12)                  	 0.0500857 	 700       	 50.02     	 0         	 8.90934   	 5.61434   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 72, reductionFactor: 37, colBlockingSize: 12)                  	 0.0478747 	 100       	 55.6046   	 0         	 3.09448   	 17.969    
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 72)                                                                 	 0.046207  	 100       	 2.72686   	 0         	 0.168806  	 16.1538   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0384084 	 100       	 2.27815   	 0         	 0.157257  	 14.4868   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 72, Qr2: 22)       	 0.0337962 	 700       	 0         	 0         	 76.785    	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 3600, Xcols: 22, r: 22, streamingCols: 0)                   	 0.0322319 	 700       	 37.8407   	 0         	 27.5626   	 1.3729    
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 72, r: 72, r2: 2500, leftOrthog: 0)        	 0.0290595 	 100       	 89.1963   	 0         	 15.1515   	 5.88697   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r: 72, r2: 72)             	 0.0280839 	 100       	 92.2949   	 0         	 10.4027   	 8.87224   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 3600, leftOrthog: 0)        	 0.0257502 	 100       	 69.9023   	 0         	 16.9319   	 4.12844   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3600, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0253264 	 100       	 72.9929   	 0         	 5.76473   	 12.662    
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 72, n: 50, r: 72, r2: 50)             	 0.0242606 	 100       	 106.84    	 0         	 14.6014   	 7.31707   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 22, k: 2500)   	 0.0220469 	 800       	 199.574   	 0         	 52.5715   	 3.79625   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 2500, m: 22, k: 50)	 0.0150943 	 800       	 291.501   	 0         	 76.7867   	 3.79625   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 22, m: 22)                                                                  	 0.0103272 	 909       	 1.24953   	 0         	 1.03793   	 1.20387   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 3600, m: 22)                                                                       	 0.00940256	 700       	 0         	 0         	 94.3403   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 1100, k: 22) 	 0.0084208 	 800       	 229.907   	 0         	 61.0299   	 3.76712   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 22, n: 50, r2: 22)                   	 0.00747917	 700       	 0         	 0         	 118.601   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 22, n: 50, r2: 22)                                                                                         	 0.00709092	 808       	 0         	 0         	 44.1209   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 22, reductionFactor: 37, colBlockingSize: 12)                  	 0.00668152	 100       	 37.1982   	 0         	 6.64327   	 5.59937   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 22, m: 1100, k: 22) 	 0.00574118	 700       	 129.827   	 0         	 47.6819   	 2.72277   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 3600, m: 22)                                                              	 0.00554458	 700       	 0         	 0         	 159.983   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 50)           	 0.0052042 	 8         	 19.2152   	 0         	 3.10518   	 6.18812   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 72, reductionFactor: 37, colBlockingSize: 12)                    	 0.00498786	 100       	 10.6741   	 0         	 1.40886   	 7.57643   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 22, r: 22, streamingCols: 0)                   	 0.00381199	 100       	 31.742    	 0         	 23.1358   	 1.37198   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00356244	 9         	 0.421058  	 0         	 0.152592  	 2.75937   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 50, Qr2: 22)       	 0.00334042	 100       	 0         	 0         	 86.2167   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.00274975	 8         	 37.3498   	 0         	 2.96754   	 12.5861   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                   	 0.00183153	 8         	 27.2997   	 0         	 8.77957   	 3.10945   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 22)                                                                       	 0.00168093	 100       	 0         	 0         	 52.3519   	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 72, r: 50, r2: 50, leftOrthog: 0)          	 0.00160526	 100       	 22.4263   	 0         	 7.87412   	 2.8481    
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 0, n: 50, r2: 22)                    	 0.00154359	 100       	 0         	 0         	 57.0098   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 22, reductionFactor: 37, colBlockingSize: 12)                    	 0.00152916	 101       	 3.28318   	 0         	 0.836974  	 3.92267   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 50, r2: 50)              	 0.00107531	 100       	 23.2491   	 0         	 5.57978   	 4.16667   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 22)                                                              	 0.000980016	 100       	 0         	 0         	 89.7945   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                   	 0.000869835	 100       	 0.574822  	 0         	 2.29929   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 22)                                                                                          	 0.000814437	 201       	 0         	 0         	 4.34361   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 22, n: 50, r2: 1)                                                                                          	 0.00077525	 201       	 0         	 0         	 4.56317   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 22, k: 50)     	 0.000740771	 100       	 14.8494   	 0         	 5.07579   	 2.92553   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                          	 0.000504268	 100       	 0         	 0         	 7.93229   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 22)   	 0.000496463	 100       	 22.1567   	 0         	 7.57358   	 2.92553   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 22, n: 50, r2: 1)                    	 0.000462116	 100       	 0         	 0         	 12.4644   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 1, Xr2: 50, Qr1: 1, Qr2: 0)          	 0.00045591	 100       	 0         	 0         	 8.77366   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 1, r1low: 0, n: 50, r2: 22)                     	 0.000448249	 100       	 0         	 0         	 3.92639   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 22, k: 50)  	 0.000439256	 100       	 25.0423   	 0         	 8.55993   	 2.92553   
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000405473	 101       	 0.62273   	 0         	 9.96367   	 0.0625    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 1100, cols: 22, reductionFactor: 37, colBlockingSize: 12)                  	 0.000393279	 8         	 22.2453   	 0         	 4.01693   	 5.53789   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                            	 0.000390311	 100       	 1.28103   	 0         	 15.3724   	 0.0833333 
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 22)                                                                	 0.000379385	 101       	 0         	 0         	 4.68548   	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 22, m: 22, fromLeft: 0)                	 0.000354471	 809       	 0         	 0         	 17.6739   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 22, n: 50, r2: 1)                                                                                 	 0.000348877	 101       	 0.31845   	 0         	 5.09521   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000323684	 100       	 0.772358  	 0         	 12.3577   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 22, r1_: 22, n: 50, r2: 22)           	 0.000313096	 8         	 27.207    	 0         	 9.99239   	 2.72277   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 50)                                                                       	 0.000295097	 8         	 0         	 0         	 54.2195   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                              	 0.000247176	 8         	 0         	 0         	 64.7312   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 1100, Xcols: 22, r: 22, streamingCols: 0)                   	 0.000207516	 8         	 20.5247   	 0         	 15.0017   	 1.36816   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 22, m: 50, k: 22)   	 0.000206123	 100       	 23.4811   	 0         	 10.4171   	 2.2541    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.000130143	 1         	 1.97288   	 0         	 0.307354  	 6.41892   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 1100, m: 22)                                                                       	 6.0951e-05	 8         	 0         	 0         	 50.8212   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 1100, m: 22)                                                              	 5.8543e-05	 8         	 0         	 0         	 52.9115   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 50, r: 50, streamingCols: 0)                     	 3.3541e-05	 1         	 3.72678   	 0         	 1.49071   	 2.5       
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                                	 2.3641e-05	 1         	 0         	 0         	 1.69198   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 22, r: 22, streamingCols: 0)                     	 2.0961e-05	 1         	 1.15453   	 0         	 0.932017  	 1.23874   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 22, r1_: 22, n: 50, r2: 1)            	 1.416e-05 	 1         	 3.41808   	 0         	 1.51638   	 2.2541    
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 1.1841e-05	 1         	 21.1131   	 0         	 5.06714   	 4.16667   
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 22, n: 50, r2: 1)                                                                                   	 1.017e-05 	 1         	 0.216323  	 0         	 0.86529   	 0.25      
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 0)                	 1.005e-05 	 9         	 0         	 0         	 35.8209   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 9.44e-06  	 1         	 0.529661  	 0         	 2.11864   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 0, m: 1100, k: 22)  	 7.45e-06  	 100       	 0         	 0         	 2598.66   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                         	 4.7e-06   	 1         	 0         	 0         	 8.51064   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 22)                                                                         	 3.52e-06  	 1         	 0         	 0         	 5         	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 2.01427   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 2.01423   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                            	 1.77433   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                        	 1.77303   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 1.4664    	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 0.494824  	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 0.41882   	 1818      
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.357951  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.303562  	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.278452  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_leftOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                   	 0.239834  	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.139754  	 918       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.0620382 	 918       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.0381375 	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.0375925 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0227877 	 900       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 0.0157681 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 0.0157383 	 2         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0155335 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.014872  	 1800      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.0138897 	 918       
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                              	 0.0126484 	 20        
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                       	 0.0114478 	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.00993313	 1000      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.00918488	 1310      
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                              	 0.00723334	 918       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.0055433 	 18        
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00340779	 1818      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00288355	 6372      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00122453	 5272      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00107803	 302       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000889445	 102       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000390311	 100       
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.000364521	 818       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: L, orthoY: L
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m43->44  [0m[1;34m44->45  [0m[1;34m45->46  [0m[1;34m46->47  [0m[1;34m47->48  [0m[1;34m48->49  [0m[1;34m49->50  [0m[1;34m50->51  [0m[1;34m51->52  [0m[1;34m52->53  [0m[1;34m53->54  [0m[1;34m54->55  [0m[1;34m55->56  [0m[1;34m56->57  [0m[1;34m57->58  [0m[1;34m58->59  [0m[1;34m59->60  [0m[1;34m60->61  [0m[1;34m61->62  [0m[1;34m62->63  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 23056378533760 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 23056189745152 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 23055988418688 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 23055787092224 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 23055585765760 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 23055384439296 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 23055183112832 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 23054981786368 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 23054780459904 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 23054579133440 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 23054377806976 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 23054176480512 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 23053975154048 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 23053773827584 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 23053572501120 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 23053371174656 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 23053169848192 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 23052968521728 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 23052767195264 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 23052565868800 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 23052364542336 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 23052163215872 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 23051961889408 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 23051760562944 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 23051559236480 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 23051357910016 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 23051156583552 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 23050955257088 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 23050753930624 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 23050552604160 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 23050351277696 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 23050149951232 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 23049948620672 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 23049747294208 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 23049545967744 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 23049344641280 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 23049143314816 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 23048941988352 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 23048740661888 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 23048539335424 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 23048338008960 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 23048136682496 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 23047935356032 -> hwthread 43 - OK[0m[1;34m
[0m[1;34m	threadid 23047734029568 -> hwthread 44 - OK[0m[1;34m
[0m[1;34m	threadid 23047532703104 -> hwthread 45 - OK[0m[1;34m
[0m[1;34m	threadid 23047331376640 -> hwthread 46 - OK[0m[1;34m
[0m[1;34m	threadid 23047130050176 -> hwthread 47 - OK[0m[1;34m
[0m[1;34m	threadid 23046928723712 -> hwthread 48 - OK[0m[1;34m
[0m[1;34m	threadid 23046727397248 -> hwthread 49 - OK[0m[1;34m
[0m[1;34m	threadid 23046526070784 -> hwthread 50 - OK[0m[1;34m
[0m[1;34m	threadid 23046324744320 -> hwthread 51 - OK[0m[1;34m
[0m[1;34m	threadid 23046123417856 -> hwthread 52 - OK[0m[1;34m
[0m[1;34m	threadid 23045922091392 -> hwthread 53 - OK[0m[1;34m
[0m[1;34m	threadid 23045720764928 -> hwthread 54 - OK[0m[1;34m
[0m[1;34m	threadid 23045519438464 -> hwthread 55 - OK[0m[1;34m
[0m[1;34m	threadid 23045318112000 -> hwthread 56 - OK[0m[1;34m
[0m[1;34m	threadid 23045116785536 -> hwthread 57 - OK[0m[1;34m
[0m[1;34m	threadid 23044915459072 -> hwthread 58 - OK[0m[1;34m
[0m[1;34m	threadid 23044714132608 -> hwthread 59 - OK[0m[1;34m
[0m[1;34m	threadid 23044512806144 -> hwthread 60 - OK[0m[1;34m
[0m[1;34m	threadid 23044311479680 -> hwthread 61 - OK[0m[1;34m
[0m[1;34m	threadid 23044110153216 -> hwthread 62 - OK[0m[1;34m
[0m[1;34m	threadid 23043908826752 -> hwthread 63 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 23056272873216 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 23056266282752 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 73, m: 73)                                                                 	 0.4346    	 700       	 4.38606   	 0         	 0.20694   	 21.1949   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3650, cols: 73, reductionFactor: 37, colBlockingSize: 12)                  	 0.292122  	 600       	 82.0612   	 0         	 4.46574   	 18.3757   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 73, n: 50, r: 73, r2: 73)             	 0.252465  	 600       	 92.4526   	 0         	 10.2331   	 9.03465   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 73, r: 73, r2: 3650, leftOrthog: 0)        	 0.230189  	 600       	 101.399   	 0         	 16.8906   	 6.00329   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3650, cols: 23, reductionFactor: 37, colBlockingSize: 12)                  	 0.0541299 	 700       	 51.2887   	 0         	 8.73977   	 5.86843   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 73, reductionFactor: 37, colBlockingSize: 12)                  	 0.0486825 	 100       	 56.2114   	 0         	 3.08659   	 18.2115   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 73)                                                                 	 0.0452265 	 100       	 2.82467   	 0         	 0.174234  	 16.2119   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0440154 	 100       	 1.98794   	 0         	 0.137225  	 14.4868   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 73, Qr2: 23)       	 0.0356527 	 700       	 0         	 0         	 74.6714   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 3650, Xcols: 23, r: 23, streamingCols: 0)                   	 0.0343221 	 700       	 39.3797   	 0         	 27.4377   	 1.43524   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r: 73, r2: 73)             	 0.0290264 	 100       	 91.7958   	 0         	 10.2067   	 8.99369   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 3650, leftOrthog: 0)        	 0.028984  	 100       	 62.9658   	 0         	 15.2498   	 4.12896   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 73, r: 73, r2: 2500, leftOrthog: 0)        	 0.0276348 	 100       	 96.4182   	 0         	 16.1581   	 5.96717   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3650, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0251263 	 100       	 74.5962   	 0         	 5.89025   	 12.6644   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 23, k: 2500)   	 0.0240342 	 800       	 191.394   	 0         	 48.9037   	 3.91369   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 73, n: 50, r: 73, r2: 50)             	 0.0232724 	 100       	 114.492   	 0         	 15.5584   	 7.35887   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 2500, m: 23, k: 50)	 0.0155048 	 800       	 296.681   	 0         	 75.806    	 3.91369   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 23, m: 23)                                                                  	 0.0112726 	 909       	 1.30811   	 0         	 1.03862   	 1.25947   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 3650, m: 23)                                                                       	 0.010267  	 700       	 0         	 0         	 91.5787   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 1150, k: 23) 	 0.00848805	 800       	 249.292   	 0         	 64.1655   	 3.88514   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 23, n: 50, r2: 23)                                                                                         	 0.00739615	 808       	 0         	 0         	 46.2329   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 23, reductionFactor: 37, colBlockingSize: 12)                  	 0.00718886	 100       	 37.7875   	 0         	 6.45766   	 5.85157   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 3650, m: 23)                                                              	 0.00699896	 700       	 0         	 0         	 134.34    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 23, n: 50, r2: 23)                   	 0.00692585	 700       	 0         	 0         	 135.758   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 23, m: 1150, k: 23) 	 0.0054126 	 700       	 157.353   	 0         	 55.2789   	 2.84653   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 73, reductionFactor: 37, colBlockingSize: 12)                    	 0.00528258	 100       	 10.3605   	 0         	 1.35979   	 7.6192    
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 50)           	 0.00482046	 8         	 20.7449   	 0         	 3.35238   	 6.18812   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 23, r: 23, streamingCols: 0)                   	 0.00392285	 100       	 33.7128   	 0         	 23.5063   	 1.4342    
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00352221	 9         	 0.425868  	 0         	 0.154335  	 2.75937   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 50, Qr2: 23)       	 0.00330154	 100       	 0         	 0         	 88.4437   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.00274551	 8         	 37.4075   	 0         	 2.97213   	 12.5861   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 23)                                                                       	 0.00196911	 100       	 0         	 0         	 46.7215   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                   	 0.00177499	 8         	 28.1693   	 0         	 9.05923   	 3.10945   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 73, r: 50, r2: 50, leftOrthog: 0)          	 0.00166052	 100       	 21.9811   	 0         	 7.68434   	 2.8605    
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 0, n: 50, r2: 23)                    	 0.00163988	 100       	 0         	 0         	 56.1017   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 23)                                                              	 0.00162512	 100       	 0         	 0         	 56.6112   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 23, reductionFactor: 37, colBlockingSize: 12)                    	 0.00150066	 101       	 3.65658   	 0         	 0.904021  	 4.0448    
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 50, r2: 50)              	 0.00105532	 100       	 23.6894   	 0         	 5.68546   	 4.16667   
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                   	 0.000866153	 100       	 0.577265  	 0         	 2.30906   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 23, n: 50, r2: 1)                                                                                          	 0.000859384	 201       	 0         	 0         	 4.30355   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 23)                                                                                          	 0.000809319	 201       	 0         	 0         	 4.56977   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 23, k: 50)     	 0.000786943	 100       	 14.6135   	 0         	 4.87964   	 2.99479   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                          	 0.000515983	 100       	 0         	 0         	 7.75219   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 23)   	 0.000509679	 100       	 22.5632   	 0         	 7.53415   	 2.99479   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 23, k: 50)  	 0.000464292	 100       	 24.7689   	 0         	 8.27066   	 2.99479   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 23, n: 50, r2: 1)                    	 0.000458462	 100       	 0         	 0         	 12.7382   	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 23, m: 23, fromLeft: 0)                	 0.000450447	 809       	 0         	 0         	 15.2013   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 1, Xr2: 50, Qr1: 1, Qr2: 0)          	 0.00044834	 100       	 0         	 0         	 8.9218    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 1, r1low: 0, n: 50, r2: 23)                     	 0.00043694	 100       	 0         	 0         	 4.2111    	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 1150, cols: 23, reductionFactor: 37, colBlockingSize: 12)                  	 0.000435459	 8         	 22.9566   	 0         	 3.96514   	 5.78961   
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000396699	 101       	 0.636503  	 0         	 10.184    	 0.0625    
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                            	 0.000393242	 100       	 1.27148   	 0         	 15.2578   	 0.0833333 
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 23)                                                                	 0.000383107	 101       	 0         	 0         	 4.85086   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 23, n: 50, r2: 1)                                                                                 	 0.00035532	 101       	 0.326888  	 0         	 5.23022   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 23, r1_: 23, n: 50, r2: 23)           	 0.000334079	 8         	 29.1356   	 0         	 10.2355   	 2.84653   
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000332877	 100       	 0.751028  	 0         	 12.0165   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                              	 0.000242145	 8         	 0         	 0         	 66.0761   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 50)                                                                       	 0.000231125	 8         	 0         	 0         	 69.2266   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 1150, Xcols: 23, r: 23, streamingCols: 0)                   	 0.000214463	 8         	 22.693    	 0         	 15.8653   	 1.43035   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 23, m: 50, k: 23)   	 0.000199416	 100       	 26.5275   	 0         	 11.3491   	 2.3374    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.000141344	 1         	 1.81654   	 0         	 0.282998  	 6.41892   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 1150, m: 23)                                                                       	 8.3243e-05	 8         	 0         	 0         	 40.6713   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 1150, m: 23)                                                              	 5.0351e-05	 8         	 0         	 0         	 67.24     	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 50, r: 50, streamingCols: 0)                     	 3.3611e-05	 1         	 3.71902   	 0         	 1.48761   	 2.5       
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                                	 2.261e-05 	 1         	 0         	 0         	 1.76913   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 23, r: 23, streamingCols: 0)                     	 1.7671e-05	 1         	 1.4968    	 0         	 1.161     	 1.28924   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 23, r1_: 23, n: 50, r2: 1)            	 1.5931e-05	 1         	 3.32057   	 0         	 1.42063   	 2.3374    
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 0)                	 1.0151e-05	 9         	 0         	 0         	 35.4645   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 1.0011e-05	 1         	 24.9725   	 0         	 5.99341   	 4.16667   
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 9.84e-06  	 1         	 0.50813   	 0         	 2.03252   	 0.25      
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 23, n: 50, r2: 1)                                                                                   	 9.11e-06  	 1         	 0.25247   	 0         	 1.00988   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 0, m: 1150, k: 23)  	 7.92e-06  	 100       	 0         	 0         	 2671.72   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                         	 4.6e-06   	 1         	 0         	 0         	 8.69565   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 23)                                                                         	 3.8e-06   	 1         	 0         	 0         	 4.84211   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 2.11018   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 2.11015   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                            	 1.85622   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                        	 1.85492   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 1.54398   	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 0.523842  	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 0.437355  	 1818      
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.371819  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.305819  	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.288469  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_leftOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                   	 0.253861  	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.151222  	 918       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.0668416 	 918       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.0402857 	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.0394026 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0248211 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0159691 	 900       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 0.0153045 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 0.0152739 	 2         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.0147948 	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.0146177 	 1800      
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                       	 0.0125589 	 818       
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                              	 0.012531  	 20        
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.00958084	 1310      
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.00946113	 1000      
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                              	 0.00932229	 918       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.00518048	 18        
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00451775	 1818      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00278999	 6372      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.0016844 	 5272      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.0010849 	 302       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000885103	 102       
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.000460598	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000393242	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: L, orthoY: L
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m43->44  [0m[1;34m44->45  [0m[1;34m45->46  [0m[1;34m46->47  [0m[1;34m47->48  [0m[1;34m48->49  [0m[1;34m49->50  [0m[1;34m50->51  [0m[1;34m51->52  [0m[1;34m52->53  [0m[1;34m53->54  [0m[1;34m54->55  [0m[1;34m55->56  [0m[1;34m56->57  [0m[1;34m57->58  [0m[1;34m58->59  [0m[1;34m59->60  [0m[1;34m60->61  [0m[1;34m61->62  [0m[1;34m62->63  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 22358030522240 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 22357854906368 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 22357653579904 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 22357452253440 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 22357250926976 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 22357049600512 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 22356848274048 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 22356646947584 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 22356445621120 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 22356244294656 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 22356042968192 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 22355841641728 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 22355640315264 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 22355438988800 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 22355237662336 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 22355036335872 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 22354835009408 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 22354633682944 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 22354432356480 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 22354231030016 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 22354029703552 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 22353828377088 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 22353627050624 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 22353425724160 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 22353224397696 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 22353023071232 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 22352821744768 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 22352620418304 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 22352419091840 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 22352217765376 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 22352016438912 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 22351815112448 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 22351613781888 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 22351412455424 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 22351211128960 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 22351009802496 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 22350808476032 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 22350607149568 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 22350405823104 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 22350204496640 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 22350003170176 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 22349801843712 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 22349600517248 -> hwthread 43 - OK[0m[1;34m
[0m[1;34m	threadid 22349399190784 -> hwthread 44 - OK[0m[1;34m
[0m[1;34m	threadid 22349197864320 -> hwthread 45 - OK[0m[1;34m
[0m[1;34m	threadid 22348996537856 -> hwthread 46 - OK[0m[1;34m
[0m[1;34m	threadid 22348795211392 -> hwthread 47 - OK[0m[1;34m
[0m[1;34m	threadid 22348593884928 -> hwthread 48 - OK[0m[1;34m
[0m[1;34m	threadid 22348392558464 -> hwthread 49 - OK[0m[1;34m
[0m[1;34m	threadid 22348191232000 -> hwthread 50 - OK[0m[1;34m
[0m[1;34m	threadid 22347989905536 -> hwthread 51 - OK[0m[1;34m
[0m[1;34m	threadid 22347788579072 -> hwthread 52 - OK[0m[1;34m
[0m[1;34m	threadid 22347587252608 -> hwthread 53 - OK[0m[1;34m
[0m[1;34m	threadid 22347385926144 -> hwthread 54 - OK[0m[1;34m
[0m[1;34m	threadid 22347184599680 -> hwthread 55 - OK[0m[1;34m
[0m[1;34m	threadid 22346983273216 -> hwthread 56 - OK[0m[1;34m
[0m[1;34m	threadid 22346781946752 -> hwthread 57 - OK[0m[1;34m
[0m[1;34m	threadid 22346580620288 -> hwthread 58 - OK[0m[1;34m
[0m[1;34m	threadid 22346379293824 -> hwthread 59 - OK[0m[1;34m
[0m[1;34m	threadid 22346177967360 -> hwthread 60 - OK[0m[1;34m
[0m[1;34m	threadid 22345976640896 -> hwthread 61 - OK[0m[1;34m
[0m[1;34m	threadid 22345775314432 -> hwthread 62 - OK[0m[1;34m
[0m[1;34m	threadid 22345573987968 -> hwthread 63 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 22357924861696 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 22357746280192 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 74, m: 74)                                                                 	 0.42962   	 700       	 4.62176   	 0         	 0.2151    	 21.4865   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3700, cols: 74, reductionFactor: 37, colBlockingSize: 12)                  	 0.294257  	 600       	 84.8597   	 0         	 4.55563   	 18.6275   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 74, n: 50, r: 74, r2: 74)             	 0.253346  	 600       	 95.9695   	 0         	 10.4788   	 9.15842   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 74, r: 74, r2: 3700, leftOrthog: 0)        	 0.240931  	 600       	 100.915   	 0         	 16.5827   	 6.08553   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3700, cols: 24, reductionFactor: 37, colBlockingSize: 12)                  	 0.0565375 	 700       	 54.1998   	 0         	 8.85263   	 6.12245   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 74, reductionFactor: 37, colBlockingSize: 12)                  	 0.0498369 	 100       	 56.424    	 0         	 3.05759   	 18.4538   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 74)                                                                 	 0.048128  	 100       	 2.69074   	 0         	 0.165392  	 16.2688   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0391699 	 100       	 2.23386   	 0         	 0.1542    	 14.4868   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 74, Qr2: 24)       	 0.0364132 	 700       	 0         	 0         	 74.9881   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 3700, Xcols: 24, r: 24, streamingCols: 0)                   	 0.0359604 	 700       	 41.4856   	 0         	 27.7019   	 1.49757   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 3700, leftOrthog: 0)        	 0.0295678 	 100       	 62.5681   	 0         	 15.1516   	 4.12946   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r: 74, r2: 74)             	 0.0289432 	 100       	 94.5991   	 0         	 10.3783   	 9.1151    
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 74, r: 74, r2: 2500, leftOrthog: 0)        	 0.0265535 	 100       	 103.113   	 0         	 17.0509   	 6.04733   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3700, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0256249 	 100       	 74.1467   	 0         	 5.85368   	 12.6667   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 74, n: 50, r: 74, r2: 50)             	 0.0245424 	 100       	 111.562   	 0         	 15.0759   	 7.4       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 24, k: 2500)   	 0.0243556 	 800       	 197.08    	 0         	 48.9284   	 4.02793   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 2500, m: 24, k: 50)	 0.0163239 	 800       	 294.048   	 0         	 73.0023   	 4.02793   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 24, m: 24)                                                                  	 0.0111797 	 909       	 1.49867   	 0         	 1.13961   	 1.31507   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 3700, m: 24)                                                                       	 0.0107319 	 700       	 0         	 0         	 92.6735   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 3700, m: 24)                                                              	 0.00966167	 700       	 0         	 0         	 102.939   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 1200, k: 24) 	 0.00933967	 800       	 246.69    	 0         	 61.6724   	 4         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 24, n: 50, r2: 24)                   	 0.00811058	 700       	 0         	 0         	 122.625   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 24, n: 50, r2: 24)                                                                                         	 0.00794548	 808       	 0         	 0         	 46.8602   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 24, reductionFactor: 37, colBlockingSize: 12)                  	 0.00788822	 100       	 37.4969   	 0         	 6.14344   	 6.10357   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 74, reductionFactor: 37, colBlockingSize: 12)                    	 0.00706018	 100       	 7.9658    	 0         	 1.03975   	 7.66129   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 24, m: 1200, k: 24) 	 0.00584602	 700       	 165.528   	 0         	 55.7278   	 2.9703    
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 50)           	 0.00479747	 8         	 20.8443   	 0         	 3.36844   	 6.18812   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 24, r: 24, streamingCols: 0)                   	 0.00403645	 100       	 35.6749   	 0         	 23.8404   	 1.49641   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00358735	 9         	 0.418134  	 0         	 0.151532  	 2.75937   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 50, Qr2: 24)       	 0.0032772 	 100       	 0         	 0         	 90.3209   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.00278161	 8         	 36.922    	 0         	 2.93355   	 12.5861   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                   	 0.00220754	 8         	 22.6497   	 0         	 7.28414   	 3.10945   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 24)                                                                       	 0.00195689	 100       	 0         	 0         	 49.0573   	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 74, r: 50, r2: 50, leftOrthog: 0)          	 0.00166205	 100       	 22.2617   	 0         	 7.74948   	 2.87267   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 24, reductionFactor: 37, colBlockingSize: 12)                    	 0.0016373 	 101       	 3.6492    	 0         	 0.876447  	 4.16362   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 0, n: 50, r2: 24)                    	 0.00156609	 100       	 0         	 0         	 61.2993   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 24)                                                              	 0.00138446	 100       	 0         	 0         	 69.341    	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 50, r2: 50)              	 0.00106855	 100       	 23.3962   	 0         	 5.61509   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 24, k: 50)     	 0.000860439	 100       	 13.9464   	 0         	 4.55581   	 3.06122   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 24, n: 50, r2: 1)                                                                                          	 0.000818574	 201       	 0         	 0         	 4.71454   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 24)                                                                                          	 0.000813374	 201       	 0         	 0         	 4.74468   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                   	 0.000797363	 100       	 0.627067  	 0         	 2.50827   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 24)   	 0.000535386	 100       	 22.4137   	 0         	 7.32182   	 3.06122   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 1200, cols: 24, reductionFactor: 37, colBlockingSize: 12)                  	 0.000525233	 8         	 21.6249   	 0         	 3.57949   	 6.04134   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                          	 0.000511198	 100       	 0         	 0         	 7.82476   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 24, k: 50)  	 0.000503336	 100       	 23.8409   	 0         	 7.78804   	 3.06122   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 24, n: 50, r2: 1)                    	 0.000471272	 100       	 0         	 0         	 12.5617   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 1, Xr2: 50, Qr1: 1, Qr2: 0)          	 0.000463898	 100       	 0         	 0         	 8.62259   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 1, r1low: 0, n: 50, r2: 24)                     	 0.000426917	 100       	 0         	 0         	 4.49736   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                            	 0.000393273	 100       	 1.27138   	 0         	 15.2566   	 0.0833333 
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.00039076	 101       	 0.646177  	 0         	 10.3388   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 24)                                                                	 0.000372647	 101       	 0         	 0         	 5.20385   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 24, n: 50, r2: 1)                                                                                 	 0.0003483 	 101       	 0.347976  	 0         	 5.56761   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 24, r1_: 24, n: 50, r2: 24)           	 0.000347678	 8         	 31.8087   	 0         	 10.7089   	 2.9703    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000346458	 100       	 0.721588  	 0         	 11.5454   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 24, m: 24, fromLeft: 0)                	 0.000281675	 809       	 0         	 0         	 26.4693   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 50)                                                                       	 0.000278398	 8         	 0         	 0         	 57.4717   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                              	 0.000275975	 8         	 0         	 0         	 57.9763   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 1200, Xcols: 24, r: 24, streamingCols: 0)                   	 0.000236006	 8         	 23.4299   	 0         	 15.698    	 1.49254   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 24, m: 50, k: 24)   	 0.000196424	 100       	 29.3243   	 0         	 12.1207   	 2.41935   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.000117733	 1         	 2.18084   	 0         	 0.339752  	 6.41892   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 1200, m: 24)                                                                       	 6.9561e-05	 8         	 0         	 0         	 52.9952   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 1200, m: 24)                                                              	 5.8312e-05	 8         	 0         	 0         	 63.2185   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 50, r: 50, streamingCols: 0)                     	 3.1501e-05	 1         	 3.96813   	 0         	 1.58725   	 2.5       
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                                	 2.3541e-05	 1         	 0         	 0         	 1.69916   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 24, r1_: 24, n: 50, r2: 1)            	 1.5001e-05	 1         	 3.83974   	 0         	 1.58709   	 2.41935   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 24, r: 24, streamingCols: 0)                     	 1.2641e-05	 1         	 2.2783    	 0         	 1.70113   	 1.33929   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 1.058e-05 	 1         	 23.6295   	 0         	 5.67108   	 4.16667   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 0)                	 9.99e-06  	 9         	 0         	 0         	 36.036    	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 24, n: 50, r2: 1)                                                                                   	 9.08e-06  	 1         	 0.264317  	 0         	 1.05727   	 0.25      
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 8.89e-06  	 1         	 0.56243   	 0         	 2.24972   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 0, m: 1200, k: 24)  	 7.15e-06  	 100       	 0         	 0         	 3222.38   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                         	 4.08e-06  	 1         	 0         	 0         	 9.80392   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 24)                                                                         	 3.64e-06  	 1         	 0         	 0         	 5.27473   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 2.11793   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 2.1179    	 100       
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                            	 1.85295   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                        	 1.85169   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 1.53667   	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 0.516918  	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 0.446267  	 1818      
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.377398  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.3079    	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.298714  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_leftOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                   	 0.264887  	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.159339  	 918       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.069942  	 918       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.0424846 	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.0401543 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.025216  	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0168272 	 900       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 0.0159984 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 0.0159692 	 2         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.0159246 	 1800      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.0147671 	 918       
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                              	 0.0130722 	 20        
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                       	 0.0130444 	 818       
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                              	 0.0117766 	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0105749 	 1000      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0100886 	 1310      
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.00517073	 18        
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00482282	 1818      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00309717	 6372      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00126798	 5272      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00108552	 302       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000815333	 102       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000393273	 100       
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.000291665	 818       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: L, orthoY: L
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m43->44  [0m[1;34m44->45  [0m[1;34m45->46  [0m[1;34m46->47  [0m[1;34m47->48  [0m[1;34m48->49  [0m[1;34m49->50  [0m[1;34m50->51  [0m[1;34m51->52  [0m[1;34m52->53  [0m[1;34m53->54  [0m[1;34m54->55  [0m[1;34m55->56  [0m[1;34m56->57  [0m[1;34m57->58  [0m[1;34m58->59  [0m[1;34m59->60  [0m[1;34m60->61  [0m[1;34m61->62  [0m[1;34m62->63  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 22640497575808 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 22640316114944 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 22640114788480 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 22639913462016 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 22639712135552 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 22639510809088 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 22639309482624 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 22639108156160 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 22638906829696 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 22638705503232 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 22638504176768 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 22638302850304 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 22638101523840 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 22637900197376 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 22637698870912 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 22637497544448 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 22637296217984 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 22637094891520 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 22636893565056 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 22636692238592 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 22636490912128 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 22636289585664 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 22636088259200 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 22635886932736 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 22635685606272 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 22635484279808 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 22635282953344 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 22635081626880 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 22634880300416 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 22634678973952 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 22634477647488 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 22634276321024 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 22634074990464 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 22633873664000 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 22633672337536 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 22633471011072 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 22633269684608 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 22633068358144 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 22632867031680 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 22632665705216 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 22632464378752 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 22632263052288 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 22632061725824 -> hwthread 43 - OK[0m[1;34m
[0m[1;34m	threadid 22631860399360 -> hwthread 44 - OK[0m[1;34m
[0m[1;34m	threadid 22631659072896 -> hwthread 45 - OK[0m[1;34m
[0m[1;34m	threadid 22631457746432 -> hwthread 46 - OK[0m[1;34m
[0m[1;34m	threadid 22631256419968 -> hwthread 47 - OK[0m[1;34m
[0m[1;34m	threadid 22631055093504 -> hwthread 48 - OK[0m[1;34m
[0m[1;34m	threadid 22630853767040 -> hwthread 49 - OK[0m[1;34m
[0m[1;34m	threadid 22630652440576 -> hwthread 50 - OK[0m[1;34m
[0m[1;34m	threadid 22630451114112 -> hwthread 51 - OK[0m[1;34m
[0m[1;34m	threadid 22630249787648 -> hwthread 52 - OK[0m[1;34m
[0m[1;34m	threadid 22630048461184 -> hwthread 53 - OK[0m[1;34m
[0m[1;34m	threadid 22629847134720 -> hwthread 54 - OK[0m[1;34m
[0m[1;34m	threadid 22629645808256 -> hwthread 55 - OK[0m[1;34m
[0m[1;34m	threadid 22629444481792 -> hwthread 56 - OK[0m[1;34m
[0m[1;34m	threadid 22629243155328 -> hwthread 57 - OK[0m[1;34m
[0m[1;34m	threadid 22629041828864 -> hwthread 58 - OK[0m[1;34m
[0m[1;34m	threadid 22628840502400 -> hwthread 59 - OK[0m[1;34m
[0m[1;34m	threadid 22628639175936 -> hwthread 60 - OK[0m[1;34m
[0m[1;34m	threadid 22628437849472 -> hwthread 61 - OK[0m[1;34m
[0m[1;34m	threadid 22628236523008 -> hwthread 62 - OK[0m[1;34m
[0m[1;34m	threadid 22628035196544 -> hwthread 63 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 22640391915264 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 22640211252992 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 75, m: 75)                                                                 	 0.442734  	 700       	 4.66914   	 0         	 0.214395  	 21.7782   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3750, cols: 75, reductionFactor: 37, colBlockingSize: 12)                  	 0.30303   	 600       	 85.789    	 0         	 4.54411   	 18.8792   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 75, n: 50, r: 75, r2: 75)             	 0.263633  	 600       	 96.0143   	 0         	 10.3439   	 9.28218   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 75, r: 75, r2: 3750, leftOrthog: 0)        	 0.240236  	 600       	 105.365   	 0         	 17.0832   	 6.16776   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3750, cols: 25, reductionFactor: 37, colBlockingSize: 12)                  	 0.0591517 	 700       	 56.971    	 0         	 8.93465   	 6.37641   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 75, reductionFactor: 37, colBlockingSize: 12)                  	 0.049775  	 100       	 58.0314   	 0         	 3.10397   	 18.6959   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 75)                                                                 	 0.0457321 	 100       	 2.86997   	 0         	 0.175806  	 16.3246   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 75, Qr2: 25)       	 0.0387531 	 700       	 0         	 0         	 72.2524   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0383781 	 100       	 2.27995   	 0         	 0.157381  	 14.4868   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 3750, Xcols: 25, r: 25, streamingCols: 0)                   	 0.0372853 	 700       	 44.0019   	 0         	 28.2081   	 1.5599    
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r: 75, r2: 75)             	 0.029637  	 100       	 94.8983   	 0         	 10.2743   	 9.23645   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3750, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0296098 	 100       	 65.0351   	 0         	 5.13343   	 12.6689   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 75, r: 75, r2: 2500, leftOrthog: 0)        	 0.0276497 	 100       	 101.719   	 0         	 16.6005   	 6.12745   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 75, n: 50, r: 75, r2: 50)             	 0.0257196 	 100       	 109.353   	 0         	 14.697    	 7.44048   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 25, k: 2500)   	 0.0236224 	 800       	 211.664   	 0         	 51.138    	 4.13907   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 3750, leftOrthog: 0)        	 0.0204296 	 100       	 91.7785   	 0         	 22.2226   	 4.12996   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 2500, m: 25, k: 50)	 0.0164637 	 800       	 303.699   	 0         	 73.3736   	 4.13907   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 25, m: 25)                                                                  	 0.0132082 	 909       	 1.43368   	 0         	 1.04608   	 1.37053   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 3750, m: 25)                                                                       	 0.0110791 	 700       	 0         	 0         	 94.7734   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 1250, k: 25) 	 0.00884382	 800       	 282.683   	 0         	 68.7486   	 4.11184   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 25, reductionFactor: 37, colBlockingSize: 12)                  	 0.00855726	 100       	 37.5057   	 0         	 5.90142   	 6.35537   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 25, n: 50, r2: 25)                                                                                         	 0.00828376	 808       	 0         	 0         	 48.7701   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 25, n: 50, r2: 25)                   	 0.00784656	 700       	 0         	 0         	 133.817   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 3750, m: 25)                                                              	 0.00587764	 700       	 0         	 0         	 178.643   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 25, m: 1250, k: 25) 	 0.00577733	 700       	 189.318   	 0         	 61.1875   	 3.09406   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 75, reductionFactor: 37, colBlockingSize: 12)                    	 0.0056505 	 100       	 10.2239   	 0         	 1.32732   	 7.7027    
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 50)           	 0.00486921	 8         	 20.5372   	 0         	 3.31882   	 6.18812   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 25, r: 25, streamingCols: 0)                   	 0.00416585	 100       	 37.5073   	 0         	 24.0647   	 1.5586    
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00356614	 9         	 0.420621  	 0         	 0.152434  	 2.75937   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 50, Qr2: 25)       	 0.00353025	 100       	 0         	 0         	 84.9797   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.00266734	 8         	 38.5038   	 0         	 3.05923   	 12.5861   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 25)                                                                       	 0.0021054 	 100       	 0         	 0         	 47.4969   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                   	 0.0017641 	 8         	 28.343    	 0         	 9.11511   	 3.10945   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 75, r: 50, r2: 50, leftOrthog: 0)          	 0.00174384	 100       	 21.5042   	 0         	 7.4548    	 2.88462   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 25, reductionFactor: 37, colBlockingSize: 12)                    	 0.00170782	 101       	 3.79612   	 0         	 0.887094  	 4.27928   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 25)                                                              	 0.00170209	 100       	 0         	 0         	 58.7512   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 0, n: 50, r2: 25)                    	 0.00151659	 100       	 0         	 0         	 65.9374   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 50, r2: 50)              	 0.00106629	 100       	 23.4457   	 0         	 5.62697   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 25, k: 50)     	 0.000796254	 100       	 15.6985   	 0         	 5.02352   	 3.125     
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 25)                                                                                          	 0.000790845	 201       	 0         	 0         	 5.08317   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                   	 0.000790152	 100       	 0.63279   	 0         	 2.53116   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 25, n: 50, r2: 1)                                                                                          	 0.000772063	 201       	 0         	 0         	 5.20683   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 1250, cols: 25, reductionFactor: 37, colBlockingSize: 12)                  	 0.000545753	 8         	 23.5232   	 0         	 3.73795   	 6.29306   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                          	 0.00051904	 100       	 0         	 0         	 7.70654   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 25)   	 0.000515637	 100       	 24.2419   	 0         	 7.7574    	 3.125     
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 25, m: 25, fromLeft: 0)                	 0.000510529	 809       	 0         	 0         	 15.8463   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 25, k: 50)  	 0.000509199	 100       	 24.5484   	 0         	 7.85547   	 3.125     
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 25, n: 50, r2: 1)                    	 0.000466705	 100       	 0         	 0         	 12.8561   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 1, Xr2: 50, Qr1: 1, Qr2: 0)          	 0.000456192	 100       	 0         	 0         	 8.76824   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 1, r1low: 0, n: 50, r2: 25)                     	 0.00044093	 100       	 0         	 0         	 4.53587   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000398472	 101       	 0.633671  	 0         	 10.1387   	 0.0625    
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                            	 0.000396791	 100       	 1.26011   	 0         	 15.1213   	 0.0833333 
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 25, r1_: 25, n: 50, r2: 25)           	 0.000379331	 8         	 32.9528   	 0         	 10.6503   	 3.09406   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 25)                                                                	 0.000379017	 101       	 0         	 0         	 5.32958   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 50)                                                                       	 0.000360858	 8         	 0         	 0         	 44.3388   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 25, n: 50, r2: 1)                                                                                 	 0.000346137	 101       	 0.36474   	 0         	 5.83584   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000341994	 100       	 0.731007  	 0         	 11.6961   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                              	 0.000332297	 8         	 0         	 0         	 48.1497   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 1250, Xcols: 25, r: 25, streamingCols: 0)                   	 0.000250217	 8         	 24.9783   	 0         	 16.0661   	 1.55473   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 25, m: 50, k: 25)   	 0.000222714	 100       	 28.0629   	 0         	 11.2252   	 2.5       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.000122763	 1         	 2.09148   	 0         	 0.325831  	 6.41892   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 1250, m: 25)                                                                       	 7.8552e-05	 8         	 0         	 0         	 50.9217   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 1250, m: 25)                                                              	 5.0051e-05	 8         	 0         	 0         	 79.9185   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 50, r: 50, streamingCols: 0)                     	 3.5191e-05	 1         	 3.55204   	 0         	 1.42082   	 2.5       
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                                	 2.341e-05 	 1         	 0         	 0         	 1.70867   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 25, r: 25, streamingCols: 0)                     	 1.8581e-05	 1         	 1.68183   	 0         	 1.21091   	 1.38889   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 25, r1_: 25, n: 50, r2: 1)            	 1.571e-05 	 1         	 3.97836   	 0         	 1.59134   	 2.5       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 1.0681e-05	 1         	 23.406    	 0         	 5.61745   	 4.16667   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 0)                	 1.0211e-05	 9         	 0         	 0         	 35.2561   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 25, n: 50, r2: 1)                                                                                   	 9.42e-06  	 1         	 0.265393  	 0         	 1.06157   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 0, m: 1250, k: 25)  	 7.48e-06  	 100       	 0         	 0         	 3342.25   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 6.86e-06  	 1         	 0.728863  	 0         	 2.91545   	 0.25      
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                         	 4.17e-06  	 1         	 0         	 0         	 9.59233   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 25)                                                                         	 3.73e-06  	 1         	 0         	 0         	 5.36193   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 2.17158   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 2.1715    	 100       
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                            	 1.90277   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                        	 1.90153   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 1.57489   	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 0.526844  	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 0.460818  	 1818      
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.388785  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.320055  	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.290059  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_leftOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                   	 0.268657  	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.162822  	 918       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.0732386 	 918       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.0435193 	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.0427395 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0244186 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0169729 	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.0167743 	 918       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 0.0158175 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 0.0157899 	 2         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.015367  	 1800      
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                       	 0.0136318 	 818       
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                              	 0.0134809 	 20        
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0103657 	 1310      
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0102708 	 1000      
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                              	 0.00836451	 918       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.00527493	 18        
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00355903	 1818      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00275355	 6372      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00129256	 5272      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.0010866 	 302       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000806432	 102       
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.00052074	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000396791	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: L, orthoY: L
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m43->44  [0m[1;34m44->45  [0m[1;34m45->46  [0m[1;34m46->47  [0m[1;34m47->48  [0m[1;34m48->49  [0m[1;34m49->50  [0m[1;34m50->51  [0m[1;34m51->52  [0m[1;34m52->53  [0m[1;34m53->54  [0m[1;34m54->55  [0m[1;34m55->56  [0m[1;34m56->57  [0m[1;34m57->58  [0m[1;34m58->59  [0m[1;34m59->60  [0m[1;34m60->61  [0m[1;34m61->62  [0m[1;34m62->63  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 22414290474880 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 22414092134400 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 22413890807936 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 22413689481472 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 22413488155008 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 22413286828544 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 22413085502080 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 22412884175616 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 22412682849152 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 22412481522688 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 22412280196224 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 22412078869760 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 22411877543296 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 22411676216832 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 22411474890368 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 22411273563904 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 22411072237440 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 22410870910976 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 22410669584512 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 22410468258048 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 22410266931584 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 22410065605120 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 22409864278656 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 22409662952192 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 22409461625728 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 22409260299264 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 22409058972800 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 22408857646336 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 22408656319872 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 22408454993408 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 22408253666944 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 22408052340480 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 22407851009920 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 22407649683456 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 22407448356992 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 22407247030528 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 22407045704064 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 22406844377600 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 22406643051136 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 22406441724672 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 22406240398208 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 22406039071744 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 22405837745280 -> hwthread 43 - OK[0m[1;34m
[0m[1;34m	threadid 22405636418816 -> hwthread 44 - OK[0m[1;34m
[0m[1;34m	threadid 22405435092352 -> hwthread 45 - OK[0m[1;34m
[0m[1;34m	threadid 22405233765888 -> hwthread 46 - OK[0m[1;34m
[0m[1;34m	threadid 22405032439424 -> hwthread 47 - OK[0m[1;34m
[0m[1;34m	threadid 22404831112960 -> hwthread 48 - OK[0m[1;34m
[0m[1;34m	threadid 22404629786496 -> hwthread 49 - OK[0m[1;34m
[0m[1;34m	threadid 22404428460032 -> hwthread 50 - OK[0m[1;34m
[0m[1;34m	threadid 22404227133568 -> hwthread 51 - OK[0m[1;34m
[0m[1;34m	threadid 22404025807104 -> hwthread 52 - OK[0m[1;34m
[0m[1;34m	threadid 22403824480640 -> hwthread 53 - OK[0m[1;34m
[0m[1;34m	threadid 22403623154176 -> hwthread 54 - OK[0m[1;34m
[0m[1;34m	threadid 22403421827712 -> hwthread 55 - OK[0m[1;34m
[0m[1;34m	threadid 22403220501248 -> hwthread 56 - OK[0m[1;34m
[0m[1;34m	threadid 22403019174784 -> hwthread 57 - OK[0m[1;34m
[0m[1;34m	threadid 22402817848320 -> hwthread 58 - OK[0m[1;34m
[0m[1;34m	threadid 22402616521856 -> hwthread 59 - OK[0m[1;34m
[0m[1;34m	threadid 22402415195392 -> hwthread 60 - OK[0m[1;34m
[0m[1;34m	threadid 22402213868928 -> hwthread 61 - OK[0m[1;34m
[0m[1;34m	threadid 22402012542464 -> hwthread 62 - OK[0m[1;34m
[0m[1;34m	threadid 22401811216000 -> hwthread 63 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 22414184814336 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 22414178223872 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 76, m: 76)                                                                 	 0.450397  	 700       	 4.77575   	 0         	 0.216392  	 22.0699   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3800, cols: 76, reductionFactor: 37, colBlockingSize: 12)                  	 0.308219  	 600       	 87.7635   	 0         	 4.58753   	 19.1309   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 76, n: 50, r: 76, r2: 76)             	 0.270823  	 600       	 97.2538   	 0         	 10.3396   	 9.40594   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 76, r: 76, r2: 3800, leftOrthog: 0)        	 0.247209  	 600       	 106.544   	 0         	 17.047    	 6.25      
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3800, cols: 26, reductionFactor: 37, colBlockingSize: 12)                  	 0.0643382 	 700       	 57.4078   	 0         	 8.65839   	 6.63031   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 76, reductionFactor: 37, colBlockingSize: 12)                  	 0.0515089 	 100       	 57.5834   	 0         	 3.04066   	 18.9378   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 76)                                                                 	 0.0461482 	 100       	 2.88202   	 0         	 0.175955  	 16.3793   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 3800, Xcols: 26, r: 26, streamingCols: 0)                   	 0.0383227 	 700       	 46.9215   	 0         	 28.9242   	 1.62223   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0383076 	 100       	 2.28414   	 0         	 0.157671  	 14.4868   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 76, Qr2: 26)       	 0.0364583 	 700       	 0         	 0         	 78.7355   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r: 76, r2: 76)             	 0.0293711 	 100       	 98.3281   	 0         	 10.5076   	 9.35776   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 3800, leftOrthog: 0)        	 0.0277831 	 100       	 68.387    	 0         	 16.5568   	 4.13043   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 76, r: 76, r2: 2500, leftOrthog: 0)        	 0.0276236 	 100       	 104.548   	 0         	 16.8422   	 6.20753   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3800, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0262723 	 100       	 74.2742   	 0         	 5.86169   	 12.6711   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 76, n: 50, r: 76, r2: 50)             	 0.0253415 	 100       	 113.963   	 0         	 15.2351   	 7.48031   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 26, k: 2500)   	 0.0249941 	 800       	 208.049   	 0         	 48.9844   	 4.24726   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 2500, m: 26, k: 50)	 0.0162037 	 800       	 320.915   	 0         	 75.5582   	 4.24726   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 26, m: 26)                                                                  	 0.0132661 	 909       	 1.6057    	 0         	 1.12593   	 1.42612   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 3800, m: 26)                                                                       	 0.0118592 	 700       	 0         	 0         	 93.3082   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 1300, k: 26) 	 0.00929491	 800       	 290.912   	 0         	 68.9237   	 4.22078   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 26, reductionFactor: 37, colBlockingSize: 12)                  	 0.00858617	 100       	 40.4295   	 0         	 6.11923   	 6.60696   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 26, n: 50, r2: 26)                                                                                         	 0.00857306	 808       	 0         	 0         	 50.9697   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 26, n: 50, r2: 26)                   	 0.00811681	 700       	 0         	 0         	 136.329   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 26, m: 1300, k: 26) 	 0.00692658	 700       	 177.623   	 0         	 55.1997   	 3.21782   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 3800, m: 26)                                                              	 0.00637211	 700       	 0         	 0         	 173.657   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 76, reductionFactor: 37, colBlockingSize: 12)                    	 0.00508737	 100       	 11.6605   	 0         	 1.50585   	 7.74346   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 50)           	 0.00502024	 8         	 19.9194   	 0         	 3.21897   	 6.18812   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 26, r: 26, streamingCols: 0)                   	 0.00428549	 100       	 39.4354   	 0         	 24.331    	 1.62079   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00349459	 9         	 0.429233  	 0         	 0.155555  	 2.75937   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 50, Qr2: 26)       	 0.00333521	 100       	 0         	 0         	 91.1488   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.00274215	 8         	 37.4533   	 0         	 2.97577   	 12.5861   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 26)                                                                       	 0.00250372	 100       	 0         	 0         	 41.5381   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 26)                                                              	 0.00190825	 100       	 0         	 0         	 54.5003   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 0, n: 50, r2: 26)                    	 0.00186674	 100       	 0         	 0         	 55.7121   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 26, reductionFactor: 37, colBlockingSize: 12)                    	 0.00176974	 101       	 3.96224   	 0         	 0.902172  	 4.39189   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 76, r: 50, r2: 50, leftOrthog: 0)          	 0.0015875 	 100       	 23.937    	 0         	 8.26457   	 2.89634   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                   	 0.00156676	 8         	 31.913    	 0         	 10.2632   	 3.10945   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 50, r2: 50)              	 0.00104482	 100       	 23.9275   	 0         	 5.7426    	 4.16667   
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                   	 0.000852551	 100       	 0.586475  	 0         	 2.3459    	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 26)                                                                                          	 0.000811872	 201       	 0         	 0         	 5.14958   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 26, n: 50, r2: 1)                                                                                          	 0.000801595	 201       	 0         	 0         	 5.2156    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 26, k: 50)     	 0.000713319	 100       	 18.2247   	 0         	 5.71974   	 3.18627   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 1300, cols: 26, reductionFactor: 37, colBlockingSize: 12)                  	 0.000568795	 8         	 25.3884   	 0         	 3.87919   	 6.54478   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 26, k: 50)  	 0.000554196	 100       	 23.4574   	 0         	 7.36202   	 3.18627   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                          	 0.00053797	 100       	 0         	 0         	 7.43536   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 26)   	 0.000507002	 100       	 25.6409   	 0         	 8.04731   	 3.18627   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 26, n: 50, r2: 1)                    	 0.000473673	 100       	 0         	 0         	 12.8359   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 1, r1low: 0, n: 50, r2: 26)                     	 0.000449815	 100       	 0         	 0         	 4.62412   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 1, Xr2: 50, Qr1: 1, Qr2: 0)          	 0.00044114	 100       	 0         	 0         	 9.06742   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 26, r1_: 26, n: 50, r2: 26)           	 0.000438769	 8         	 32.046    	 0         	 9.95892   	 3.21782   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 26)                                                                	 0.000402975	 101       	 0         	 0         	 5.21323   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                            	 0.000401172	 100       	 1.24635   	 0         	 14.9562   	 0.0833333 
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 26, m: 26, fromLeft: 0)                	 0.000393368	 809       	 0         	 0         	 22.2442   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000391286	 101       	 0.645308  	 0         	 10.3249   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 26, n: 50, r2: 1)                                                                                 	 0.000361767	 101       	 0.362941  	 0         	 5.80705   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000341658	 100       	 0.731726  	 0         	 11.7076   	 0.0625    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 26, m: 50, k: 26)   	 0.000319176	 100       	 21.1795   	 0         	 8.21114   	 2.57937   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                              	 0.000295787	 8         	 0         	 0         	 54.093    	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 1300, Xcols: 26, r: 26, streamingCols: 0)                   	 0.000270765	 8         	 25.965    	 0         	 16.0583   	 1.61692   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 50)                                                                       	 0.000195063	 8         	 0         	 0         	 82.0248   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.000137154	 1         	 1.87203   	 0         	 0.291643  	 6.41892   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 1300, m: 26)                                                                       	 8.0115e-05	 8         	 0         	 0         	 54.0024   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 1300, m: 26)                                                              	 7.0592e-05	 8         	 0         	 0         	 61.2874   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 50, r: 50, streamingCols: 0)                     	 3.4721e-05	 1         	 3.60013   	 0         	 1.44005   	 2.5       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 26, r: 26, streamingCols: 0)                     	 3.0341e-05	 1         	 1.114     	 0         	 0.774661  	 1.43805   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                                	 2.3271e-05	 1         	 0         	 0         	 1.71888   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 26, r1_: 26, n: 50, r2: 1)            	 1.529e-05 	 1         	 4.42119   	 0         	 1.71406   	 2.57937   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 1.0451e-05	 1         	 23.9212   	 0         	 5.74108   	 4.16667   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 0)                	 1.036e-05 	 9         	 0         	 0         	 34.749    	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 26, n: 50, r2: 1)                                                                                   	 9.76e-06  	 1         	 0.266393  	 0         	 1.06557   	 0.25      
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 8.76e-06  	 1         	 0.570776  	 0         	 2.28311   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 0, m: 1300, k: 26)  	 7.65e-06  	 100       	 0         	 0         	 3534.64   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                         	 4.3e-06   	 1         	 0         	 0         	 9.30233   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 26)                                                                         	 3.67e-06  	 1         	 0         	 0         	 5.66757   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 2.2088    	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 2.20876   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                            	 1.93045   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                        	 1.92917   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 1.59706   	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 0.534853  	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 0.46923   	 1818      
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.391746  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.32658   	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.304203  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_leftOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                   	 0.278236  	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.170469  	 918       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.0786874 	 918       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.0445108 	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.0402346 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0257074 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.0170553 	 1800      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.0167607 	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0167579 	 900       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 0.0156383 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 0.0156083 	 2         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                       	 0.0146461 	 818       
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                              	 0.0131806 	 20        
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.010907  	 1000      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0107245 	 1310      
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                              	 0.00907298	 918       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.00548475	 18        
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00415071	 1818      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00283766	 6372      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.0012703 	 5272      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00109471	 302       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000871071	 102       
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.000403728	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000401172	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: L, orthoY: L
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m43->44  [0m[1;34m44->45  [0m[1;34m45->46  [0m[1;34m46->47  [0m[1;34m47->48  [0m[1;34m48->49  [0m[1;34m49->50  [0m[1;34m50->51  [0m[1;34m51->52  [0m[1;34m52->53  [0m[1;34m53->54  [0m[1;34m54->55  [0m[1;34m55->56  [0m[1;34m56->57  [0m[1;34m57->58  [0m[1;34m58->59  [0m[1;34m59->60  [0m[1;34m60->61  [0m[1;34m61->62  [0m[1;34m62->63  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 22403722106752 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 22403488933888 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 22403287607424 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 22403086280960 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 22402884954496 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 22402683628032 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 22402482301568 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 22402280975104 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 22402079648640 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 22401878322176 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 22401676995712 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 22401475669248 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 22401274342784 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 22401073016320 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 22400871689856 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 22400670363392 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 22400469036928 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 22400267710464 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 22400066384000 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 22399865057536 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 22399663731072 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 22399462404608 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 22399261078144 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 22399059751680 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 22398858425216 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 22398657098752 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 22398455772288 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 22398254445824 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 22398053119360 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 22397851792896 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 22397650466432 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 22397449139968 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 22397247809408 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 22397046482944 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 22396845156480 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 22396643830016 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 22396442503552 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 22396241177088 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 22396039850624 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 22395838524160 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 22395637197696 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 22395435871232 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 22395234544768 -> hwthread 43 - OK[0m[1;34m
[0m[1;34m	threadid 22395033218304 -> hwthread 44 - OK[0m[1;34m
[0m[1;34m	threadid 22394831891840 -> hwthread 45 - OK[0m[1;34m
[0m[1;34m	threadid 22394630565376 -> hwthread 46 - OK[0m[1;34m
[0m[1;34m	threadid 22394429238912 -> hwthread 47 - OK[0m[1;34m
[0m[1;34m	threadid 22394227912448 -> hwthread 48 - OK[0m[1;34m
[0m[1;34m	threadid 22394026585984 -> hwthread 49 - OK[0m[1;34m
[0m[1;34m	threadid 22393825259520 -> hwthread 50 - OK[0m[1;34m
[0m[1;34m	threadid 22393623933056 -> hwthread 51 - OK[0m[1;34m
[0m[1;34m	threadid 22393422606592 -> hwthread 52 - OK[0m[1;34m
[0m[1;34m	threadid 22393221280128 -> hwthread 53 - OK[0m[1;34m
[0m[1;34m	threadid 22393019953664 -> hwthread 54 - OK[0m[1;34m
[0m[1;34m	threadid 22392818627200 -> hwthread 55 - OK[0m[1;34m
[0m[1;34m	threadid 22392617300736 -> hwthread 56 - OK[0m[1;34m
[0m[1;34m	threadid 22392415974272 -> hwthread 57 - OK[0m[1;34m
[0m[1;34m	threadid 22392214647808 -> hwthread 58 - OK[0m[1;34m
[0m[1;34m	threadid 22392013321344 -> hwthread 59 - OK[0m[1;34m
[0m[1;34m	threadid 22391811994880 -> hwthread 60 - OK[0m[1;34m
[0m[1;34m	threadid 22391610668416 -> hwthread 61 - OK[0m[1;34m
[0m[1;34m	threadid 22391409341952 -> hwthread 62 - OK[0m[1;34m
[0m[1;34m	threadid 22391208015488 -> hwthread 63 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 22403616446208 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 22403609855744 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 77, m: 77)                                                                 	 0.471235  	 700       	 4.74713   	 0         	 0.21229   	 22.3615   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3850, cols: 77, reductionFactor: 37, colBlockingSize: 12)                  	 0.313492  	 600       	 89.7385   	 0         	 4.62984   	 19.3826   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 77, n: 50, r: 77, r2: 77)             	 0.281417  	 600       	 97.3359   	 0         	 10.2139   	 9.5297    
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 77, r: 77, r2: 3850, leftOrthog: 0)        	 0.255092  	 600       	 107.381   	 0         	 16.9578   	 6.33224   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3850, cols: 27, reductionFactor: 37, colBlockingSize: 12)                  	 0.0635851 	 700       	 63.4663   	 0         	 9.21918   	 6.88415   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 77, reductionFactor: 37, colBlockingSize: 12)                  	 0.0524756 	 100       	 58.0197   	 0         	 3.02508   	 19.1795   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 77)                                                                 	 0.0456645 	 100       	 2.95087   	 0         	 0.179571  	 16.4329   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 3850, Xcols: 27, r: 27, streamingCols: 0)                   	 0.0400868 	 700       	 49.01     	 0         	 29.0939   	 1.68455   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0385682 	 100       	 2.26871   	 0         	 0.156606  	 14.4868   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 77, Qr2: 27)       	 0.0374177 	 700       	 0         	 0         	 78.6323   	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 77, r: 77, r2: 2500, leftOrthog: 0)        	 0.0293833 	 100       	 100.891   	 0         	 16.0461   	 6.28756   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r: 77, r2: 77)             	 0.029151  	 100       	 101.695   	 0         	 10.7284   	 9.47902   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 3850, leftOrthog: 0)        	 0.0271591 	 100       	 70.8788   	 0         	 17.1582   	 4.1309    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3850, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0252668 	 100       	 78.246    	 0         	 6.1741    	 12.6733   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 77, n: 50, r: 77, r2: 50)             	 0.0251417 	 100       	 117.912   	 0         	 15.6807   	 7.51953   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 27, k: 2500)   	 0.0249132 	 800       	 216.753   	 0         	 49.7986   	 4.35259   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 2500, m: 27, k: 50)	 0.0166207 	 800       	 324.895   	 0         	 74.6441   	 4.35259   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 27, m: 27)                                                                  	 0.0140572 	 909       	 1.69706   	 0         	 1.14534   	 1.48171   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 3850, m: 27)                                                                       	 0.0119338 	 700       	 0         	 0         	 97.5579   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 1350, k: 27) 	 0.0103245 	 800       	 282.434   	 0         	 65.2736   	 4.32692   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 27, reductionFactor: 37, colBlockingSize: 12)                  	 0.00913633	 100       	 40.9739   	 0         	 5.97431   	 6.85836   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 27, n: 50, r2: 27)                                                                                         	 0.00912093	 808       	 0         	 0         	 51.6642   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 27, n: 50, r2: 27)                   	 0.00862326	 700       	 0         	 0         	 135.012   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 77, reductionFactor: 37, colBlockingSize: 12)                    	 0.00762658	 100       	 7.98424   	 0         	 1.02578   	 7.78357   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 3850, m: 27)                                                              	 0.00701732	 700       	 0         	 0         	 165.91    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 27, m: 1350, k: 27) 	 0.00663522	 700       	 207.651   	 0         	 62.1415   	 3.34158   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 50)           	 0.0048485 	 8         	 20.6249   	 0         	 3.33299   	 6.18812   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 27, r: 27, streamingCols: 0)                   	 0.00437969	 100       	 41.6125   	 0         	 24.7259   	 1.68296   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00350102	 9         	 0.428445  	 0         	 0.155269  	 2.75937   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 50, Qr2: 27)       	 0.00336912	 100       	 0         	 0         	 91.4186   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.00268274	 8         	 38.2828   	 0         	 3.04167   	 12.5861   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 27)                                                                       	 0.00236964	 100       	 0         	 0         	 45.5766   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 0, n: 50, r2: 27)                    	 0.00198672	 100       	 0         	 0         	 54.361    	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 27, reductionFactor: 37, colBlockingSize: 12)                    	 0.0019364 	 101       	 3.90514   	 0         	 0.867504  	 4.50158   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 27)                                                              	 0.00190686	 100       	 0         	 0         	 56.6378   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                   	 0.00190158	 8         	 26.2939   	 0         	 8.45613   	 3.10945   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 77, r: 50, r2: 50, leftOrthog: 0)          	 0.00172933	 100       	 22.263    	 0         	 7.65617   	 2.90785   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 50, r2: 50)              	 0.00111586	 100       	 22.4043   	 0         	 5.37704   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 27)                                                                                          	 0.000800422	 201       	 0         	 0         	 5.42414   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                   	 0.000787659	 100       	 0.634792  	 0         	 2.53917   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 27, n: 50, r2: 1)                                                                                          	 0.000771455	 201       	 0         	 0         	 5.62781   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 27, k: 50)     	 0.000697006	 100       	 19.3686   	 0         	 5.96838   	 3.24519   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 1350, cols: 27, reductionFactor: 37, colBlockingSize: 12)                  	 0.000620516	 8         	 26.0621   	 0         	 3.83464   	 6.7965    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 27, k: 50)  	 0.000594223	 100       	 22.7187   	 0         	 7.00074   	 3.24519   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 27, m: 27, fromLeft: 0)                	 0.000571345	 809       	 0         	 0         	 16.5157   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 27)   	 0.00057113	 100       	 23.6374   	 0         	 7.28381   	 3.24519   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                          	 0.000544771	 100       	 0         	 0         	 7.34253   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 27, n: 50, r2: 1)                    	 0.000466325	 100       	 0         	 0         	 13.2097   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 27, r1_: 27, n: 50, r2: 27)           	 0.000465832	 8         	 33.8027   	 0         	 10.1158   	 3.34158   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 1, Xr2: 50, Qr1: 1, Qr2: 0)          	 0.000432646	 100       	 0         	 0         	 9.24543   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 1, r1low: 0, n: 50, r2: 27)                     	 0.000431724	 100       	 0         	 0         	 5.0032    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                            	 0.000405241	 100       	 1.23383   	 0         	 14.806    	 0.0833333 
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 27)                                                                	 0.000399156	 101       	 0         	 0         	 5.46553   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000378152	 101       	 0.667721  	 0         	 10.6835   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 27, n: 50, r2: 1)                                                                                 	 0.000341798	 101       	 0.39892   	 0         	 6.38272   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000334777	 100       	 0.746766  	 0         	 11.9483   	 0.0625    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 27, m: 50, k: 27)   	 0.000322251	 100       	 22.6221   	 0         	 8.51262   	 2.65748   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                              	 0.000309006	 8         	 0         	 0         	 51.7789   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 1350, Xcols: 27, r: 27, streamingCols: 0)                   	 0.000281299	 8         	 27.9887   	 0         	 16.6688   	 1.6791    
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 50)                                                                       	 0.000257466	 8         	 0         	 0         	 62.1441   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.000123314	 1         	 2.08214   	 0         	 0.324375  	 6.41892   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 1350, m: 27)                                                                       	 8.4532e-05	 8         	 0         	 0         	 55.1933   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 1350, m: 27)                                                              	 6.2783e-05	 8         	 0         	 0         	 74.3131   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 50, r: 50, streamingCols: 0)                     	 3.358e-05 	 1         	 3.72245   	 0         	 1.48898   	 2.5       
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                                	 2.328e-05 	 1         	 0         	 0         	 1.71821   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 27, r1_: 27, n: 50, r2: 1)            	 1.5861e-05	 1         	 4.59618   	 0         	 1.72953   	 2.65748   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 27, r: 27, streamingCols: 0)                     	 1.545e-05 	 1         	 2.35922   	 0         	 1.5868    	 1.48678   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 1.076e-05 	 1         	 23.2342   	 0         	 5.57621   	 4.16667   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 0)                	 1.013e-05 	 9         	 0         	 0         	 35.538    	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 9.54e-06  	 1         	 0.524109  	 0         	 2.09644   	 0.25      
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 27, n: 50, r2: 1)                                                                                   	 7.97e-06  	 1         	 0.33877   	 0         	 1.35508   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 0, m: 1350, k: 27)  	 7.67e-06  	 100       	 0         	 0         	 3801.83   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                         	 4.551e-06 	 1         	 0         	 0         	 8.78928   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 27)                                                                         	 3.76e-06  	 1         	 0         	 0         	 5.74468   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 2.29561   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 2.29557   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                            	 2.00965   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                        	 2.00844   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 1.66404   	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 0.555467  	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 0.476945  	 1818      
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.399521  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.336826  	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.313364  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_leftOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                   	 0.285838  	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.174819  	 918       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.0785723 	 918       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.0466984 	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.0412195 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0256102 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.0178608 	 1800      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.0175582 	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.017215  	 900       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 0.0158903 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 0.0158616 	 2         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                       	 0.0146538 	 818       
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                              	 0.0136586 	 20        
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.011508  	 1000      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0112376 	 1310      
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                              	 0.0097184 	 918       
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00536328	 1818      
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.00534096	 18        
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00300943	 6372      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00122554	 5272      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00105473	 302       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000805169	 102       
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.000581475	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000405241	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: L, orthoY: L
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m43->44  [0m[1;34m44->45  [0m[1;34m45->46  [0m[1;34m46->47  [0m[1;34m47->48  [0m[1;34m48->49  [0m[1;34m49->50  [0m[1;34m50->51  [0m[1;34m51->52  [0m[1;34m52->53  [0m[1;34m53->54  [0m[1;34m54->55  [0m[1;34m55->56  [0m[1;34m56->57  [0m[1;34m57->58  [0m[1;34m58->59  [0m[1;34m59->60  [0m[1;34m60->61  [0m[1;34m61->62  [0m[1;34m62->63  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 23439145109376 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 23438911596544 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 23438710270080 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 23438508943616 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 23438307617152 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 23438106290688 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 23437904964224 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 23437703637760 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 23437502311296 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 23437300984832 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 23437099658368 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 23436898331904 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 23436697005440 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 23436495678976 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 23436294352512 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 23436093026048 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 23435891699584 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 23435690373120 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 23435489046656 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 23435287720192 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 23435086393728 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 23434885067264 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 23434683740800 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 23434482414336 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 23434281087872 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 23434079761408 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 23433878434944 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 23433677108480 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 23433475782016 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 23433274455552 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 23433073129088 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 23432871802624 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 23432670472064 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 23432469145600 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 23432267819136 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 23432066492672 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 23431865166208 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 23431663839744 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 23431462513280 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 23431261186816 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 23431059860352 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 23430858533888 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 23430657207424 -> hwthread 43 - OK[0m[1;34m
[0m[1;34m	threadid 23430455880960 -> hwthread 44 - OK[0m[1;34m
[0m[1;34m	threadid 23430254554496 -> hwthread 45 - OK[0m[1;34m
[0m[1;34m	threadid 23430053228032 -> hwthread 46 - OK[0m[1;34m
[0m[1;34m	threadid 23429851901568 -> hwthread 47 - OK[0m[1;34m
[0m[1;34m	threadid 23429650575104 -> hwthread 48 - OK[0m[1;34m
[0m[1;34m	threadid 23429449248640 -> hwthread 49 - OK[0m[1;34m
[0m[1;34m	threadid 23429247922176 -> hwthread 50 - OK[0m[1;34m
[0m[1;34m	threadid 23429046595712 -> hwthread 51 - OK[0m[1;34m
[0m[1;34m	threadid 23428845269248 -> hwthread 52 - OK[0m[1;34m
[0m[1;34m	threadid 23428643942784 -> hwthread 53 - OK[0m[1;34m
[0m[1;34m	threadid 23428442616320 -> hwthread 54 - OK[0m[1;34m
[0m[1;34m	threadid 23428241289856 -> hwthread 55 - OK[0m[1;34m
[0m[1;34m	threadid 23428039963392 -> hwthread 56 - OK[0m[1;34m
[0m[1;34m	threadid 23427838636928 -> hwthread 57 - OK[0m[1;34m
[0m[1;34m	threadid 23427637310464 -> hwthread 58 - OK[0m[1;34m
[0m[1;34m	threadid 23427435984000 -> hwthread 59 - OK[0m[1;34m
[0m[1;34m	threadid 23427234657536 -> hwthread 60 - OK[0m[1;34m
[0m[1;34m	threadid 23427033331072 -> hwthread 61 - OK[0m[1;34m
[0m[1;34m	threadid 23426832004608 -> hwthread 62 - OK[0m[1;34m
[0m[1;34m	threadid 23426630678144 -> hwthread 63 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 23439039448832 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 23439032858368 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 78, m: 78)                                                                 	 0.472885  	 700       	 4.91727   	 0         	 0.217068  	 22.6532   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3900, cols: 78, reductionFactor: 37, colBlockingSize: 12)                  	 0.32319   	 600       	 90.4812   	 0         	 4.60831   	 19.6343   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 78, n: 50, r: 78, r2: 78)             	 0.293349  	 600       	 97.0621   	 0         	 10.0546   	 9.65347   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 78, r: 78, r2: 3900, leftOrthog: 0)        	 0.27378   	 600       	 104       	 0         	 16.2133   	 6.41447   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3900, cols: 28, reductionFactor: 37, colBlockingSize: 12)                  	 0.0706568 	 700       	 62.221    	 0         	 8.71693   	 7.13794   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 78, reductionFactor: 37, colBlockingSize: 12)                  	 0.0531299 	 100       	 58.8034   	 0         	 3.02781   	 19.4211   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 78)                                                                 	 0.0447616 	 100       	 3.04949   	 0         	 0.18498   	 16.4855   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 3900, Xcols: 28, r: 28, streamingCols: 0)                   	 0.0422414 	 700       	 50.6688   	 0         	 29.0056   	 1.74686   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 78, Qr2: 28)       	 0.037688  	 700       	 0         	 0         	 80.0001   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0375507 	 100       	 2.33018   	 0         	 0.160849  	 14.4868   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r: 78, r2: 78)             	 0.0299632 	 100       	 101.524   	 0         	 10.5752   	 9.60024   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3900, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0297262 	 100       	 67.3717   	 0         	 5.31518   	 12.6753   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 78, r: 78, r2: 2500, leftOrthog: 0)        	 0.0296907 	 100       	 102.456   	 0         	 16.0904   	 6.36755   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 3900, leftOrthog: 0)        	 0.026779  	 100       	 72.8182   	 0         	 17.6257   	 4.13136   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 28, k: 2500)   	 0.026562  	 800       	 210.827   	 0         	 47.3217   	 4.45519   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 78, n: 50, r: 78, r2: 50)             	 0.0258213 	 100       	 117.81    	 0         	 15.5871   	 7.55814   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 2500, m: 28, k: 50)	 0.0169209 	 800       	 330.951   	 0         	 74.2842   	 4.45519   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 28, m: 28)                                                                  	 0.0143757 	 909       	 1.85067   	 0         	 1.20394   	 1.53718   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 3900, m: 28)                                                                       	 0.0129403 	 700       	 0         	 0         	 94.5141   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 1400, k: 28) 	 0.0104632 	 800       	 299.716   	 0         	 67.6503   	 4.43038   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 28, n: 50, r2: 28)                                                                                         	 0.00945487	 808       	 0         	 0         	 53.5996   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 28, reductionFactor: 37, colBlockingSize: 12)                  	 0.00944152	 100       	 42.6408   	 0         	 5.99768   	 7.10956   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 3900, m: 28)                                                              	 0.00875266	 700       	 0         	 0         	 139.733   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 28, n: 50, r2: 28)                   	 0.00782847	 700       	 0         	 0         	 156.23    	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 78, reductionFactor: 37, colBlockingSize: 12)                    	 0.0075202 	 100       	 8.30887   	 0         	 1.0621    	 7.82306   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 28, m: 1400, k: 28) 	 0.00616947	 700       	 249.072   	 0         	 71.875    	 3.46535   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 50)           	 0.00487881	 8         	 20.4968   	 0         	 3.31228   	 6.18812   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 28, r: 28, streamingCols: 0)                   	 0.00453545	 100       	 43.2151   	 0         	 24.7635   	 1.74511   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00355078	 9         	 0.422441  	 0         	 0.153093  	 2.75937   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 50, Qr2: 28)       	 0.00350539	 100       	 0         	 0         	 89.0058   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.00265032	 8         	 38.7511   	 0         	 3.07887   	 12.5861   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 28)                                                                       	 0.00229722	 100       	 0         	 0         	 48.7545   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 0, n: 50, r2: 28)                    	 0.00198604	 100       	 0         	 0         	 56.3936   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 28)                                                              	 0.00192662	 100       	 0         	 0         	 58.133    	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 28, reductionFactor: 37, colBlockingSize: 12)                    	 0.00177697	 101       	 4.57656   	 0         	 0.99308   	 4.60845   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                   	 0.00171757	 8         	 29.1108   	 0         	 9.36205   	 3.10945   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 78, r: 50, r2: 50, leftOrthog: 0)          	 0.00165266	 100       	 23.5983   	 0         	 8.08392   	 2.91916   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 50, r2: 50)              	 0.00105305	 100       	 23.7407   	 0         	 5.69776   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 28)                                                                                          	 0.00081732	 201       	 0         	 0         	 5.50874   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                   	 0.000781458	 100       	 0.63983   	 0         	 2.55932   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 28, n: 50, r2: 1)                                                                                          	 0.000757506	 201       	 0         	 0         	 5.94372   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 28, k: 50)     	 0.000706324	 100       	 19.8209   	 0         	 6.00291   	 3.30189   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 1400, cols: 28, reductionFactor: 37, colBlockingSize: 12)                  	 0.000668037	 8         	 26.9989   	 0         	 3.83059   	 7.04822   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 28, k: 50)  	 0.000667645	 100       	 20.9692   	 0         	 6.35068   	 3.30189   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 28)   	 0.000533573	 100       	 26.2382   	 0         	 7.94643   	 3.30189   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                          	 0.000513911	 100       	 0         	 0         	 7.78345   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 28, r1_: 28, n: 50, r2: 28)           	 0.000478633	 8         	 36.6912   	 0         	 10.588    	 3.46535   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 28, n: 50, r2: 1)                    	 0.000471521	 100       	 0         	 0         	 13.2338   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 1, r1low: 0, n: 50, r2: 28)                     	 0.000440411	 100       	 0         	 0         	 5.08616   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 1, Xr2: 50, Qr1: 1, Qr2: 0)          	 0.000426731	 100       	 0         	 0         	 9.37359   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                            	 0.000400399	 100       	 1.24875   	 0         	 14.9851   	 0.0833333 
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 28)                                                                	 0.000398386	 101       	 0         	 0         	 5.67891   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000387111	 101       	 0.652268  	 0         	 10.4363   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 28, n: 50, r2: 1)                                                                                 	 0.000362838	 101       	 0.389706  	 0         	 6.23529   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000346129	 100       	 0.722274  	 0         	 11.5564   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 28, m: 28, fromLeft: 0)                	 0.00033066	 809       	 0         	 0         	 30.6904   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 1400, Xcols: 28, r: 28, streamingCols: 0)                   	 0.000329448	 8         	 26.6531   	 0         	 15.3065   	 1.74129   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 28, m: 50, k: 28)   	 0.000307734	 100       	 25.4765   	 0         	 9.31714   	 2.73438   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 50)                                                                       	 0.000276619	 8         	 0         	 0         	 57.8413   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                              	 0.000206494	 8         	 0         	 0         	 77.4841   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.000133424	 1         	 1.92437   	 0         	 0.299796  	 6.41892   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 1400, m: 28)                                                                       	 8.3001e-05	 8         	 0         	 0         	 60.4523   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 1400, m: 28)                                                              	 6.012e-05 	 8         	 0         	 0         	 83.4597   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 50, r: 50, streamingCols: 0)                     	 3.4331e-05	 1         	 3.64102   	 0         	 1.45641   	 2.5       
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                                	 2.009e-05 	 1         	 0         	 0         	 1.99104   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 28, r1_: 28, n: 50, r2: 1)            	 1.5331e-05	 1         	 5.11382   	 0         	 1.8702    	 2.73438   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 28, r: 28, streamingCols: 0)                     	 1.415e-05 	 1         	 2.77032   	 0         	 1.80466   	 1.53509   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 0)                	 1.036e-05 	 9         	 0         	 0         	 34.749    	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 9.53e-06  	 1         	 26.2329   	 0         	 6.29591   	 4.16667   
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 28, n: 50, r2: 1)                                                                                   	 8.19e-06  	 1         	 0.34188   	 0         	 1.36752   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 0, m: 1400, k: 28)  	 7.691e-06 	 100       	 0         	 0         	 4077.49   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 6.64e-06  	 1         	 0.753012  	 0         	 3.01205   	 0.25      
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                         	 4.01e-06  	 1         	 0         	 0         	 9.97506   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 28)                                                                         	 3.34e-06  	 1         	 0         	 0         	 6.70659   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 2.3397    	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 2.33965   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                            	 2.03979   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                        	 2.03856   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 1.68131   	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 0.555197  	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 0.498894  	 1818      
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.41423   	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.350187  	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.331903  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_leftOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                   	 0.299793  	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.187182  	 918       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.0858386 	 918       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.0488723 	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.0416201 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0272684 	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.0179264 	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0175886 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.0174817 	 1800      
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 0.01578   	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 0.0157537 	 2         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                       	 0.0156045 	 818       
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                              	 0.0140545 	 20        
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0115436 	 1310      
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                              	 0.0113644 	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0107264 	 1000      
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.00538231	 18        
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00429163	 1818      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00316325	 6372      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00119102	 5272      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00109608	 302       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000796288	 102       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000400399	 100       
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.00034102	 818       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: L, orthoY: L
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m43->44  [0m[1;34m44->45  [0m[1;34m45->46  [0m[1;34m46->47  [0m[1;34m47->48  [0m[1;34m48->49  [0m[1;34m49->50  [0m[1;34m50->51  [0m[1;34m51->52  [0m[1;34m52->53  [0m[1;34m53->54  [0m[1;34m54->55  [0m[1;34m55->56  [0m[1;34m56->57  [0m[1;34m57->58  [0m[1;34m58->59  [0m[1;34m59->60  [0m[1;34m60->61  [0m[1;34m61->62  [0m[1;34m62->63  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 23058492675968 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 23058270119936 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 23058068793472 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 23057867467008 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 23057666140544 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 23057464814080 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 23057263487616 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 23057062161152 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 23056860834688 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 23056659508224 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 23056458181760 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 23056256855296 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 23056055528832 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 23055854202368 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 23055652875904 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 23055451549440 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 23055250222976 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 23055048896512 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 23054847570048 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 23054646243584 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 23054444917120 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 23054243590656 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 23054042264192 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 23053840937728 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 23053639611264 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 23053438284800 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 23053236958336 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 23053035631872 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 23052834305408 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 23052632978944 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 23052431652480 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 23052230326016 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 23052028995456 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 23051827668992 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 23051626342528 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 23051425016064 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 23051223689600 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 23051022363136 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 23050821036672 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 23050619710208 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 23050418383744 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 23050217057280 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 23050015730816 -> hwthread 43 - OK[0m[1;34m
[0m[1;34m	threadid 23049814404352 -> hwthread 44 - OK[0m[1;34m
[0m[1;34m	threadid 23049613077888 -> hwthread 45 - OK[0m[1;34m
[0m[1;34m	threadid 23049411751424 -> hwthread 46 - OK[0m[1;34m
[0m[1;34m	threadid 23049210424960 -> hwthread 47 - OK[0m[1;34m
[0m[1;34m	threadid 23049009098496 -> hwthread 48 - OK[0m[1;34m
[0m[1;34m	threadid 23048807772032 -> hwthread 49 - OK[0m[1;34m
[0m[1;34m	threadid 23048606445568 -> hwthread 50 - OK[0m[1;34m
[0m[1;34m	threadid 23048405119104 -> hwthread 51 - OK[0m[1;34m
[0m[1;34m	threadid 23048203792640 -> hwthread 52 - OK[0m[1;34m
[0m[1;34m	threadid 23048002466176 -> hwthread 53 - OK[0m[1;34m
[0m[1;34m	threadid 23047801139712 -> hwthread 54 - OK[0m[1;34m
[0m[1;34m	threadid 23047599813248 -> hwthread 55 - OK[0m[1;34m
[0m[1;34m	threadid 23047398486784 -> hwthread 56 - OK[0m[1;34m
[0m[1;34m	threadid 23047197160320 -> hwthread 57 - OK[0m[1;34m
[0m[1;34m	threadid 23046995833856 -> hwthread 58 - OK[0m[1;34m
[0m[1;34m	threadid 23046794507392 -> hwthread 59 - OK[0m[1;34m
[0m[1;34m	threadid 23046593180928 -> hwthread 60 - OK[0m[1;34m
[0m[1;34m	threadid 23046391854464 -> hwthread 61 - OK[0m[1;34m
[0m[1;34m	threadid 23046190528000 -> hwthread 62 - OK[0m[1;34m
[0m[1;34m	threadid 23045989201536 -> hwthread 63 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 23058387015424 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 23058380424960 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 79, m: 79)                                                                 	 0.477339  	 700       	 5.06117   	 0         	 0.22058   	 22.9448   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3950, cols: 79, reductionFactor: 37, colBlockingSize: 12)                  	 0.32316   	 600       	 94.0148   	 0         	 4.72768   	 19.8861   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 79, n: 50, r: 79, r2: 79)             	 0.293221  	 600       	 100.888   	 0         	 10.3186   	 9.77723   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 79, r: 79, r2: 3950, leftOrthog: 0)        	 0.271461  	 600       	 108.975   	 0         	 16.7738   	 6.49671   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3950, cols: 29, reductionFactor: 37, colBlockingSize: 12)                  	 0.0735666 	 700       	 64.9265   	 0         	 8.78373   	 7.39168   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 79, reductionFactor: 37, colBlockingSize: 12)                  	 0.0540358 	 100       	 59.3095   	 0         	 3.01638   	 19.6625   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 79)                                                                 	 0.0451188 	 100       	 3.06413   	 0         	 0.185289  	 16.5371   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 3950, Xcols: 29, r: 29, streamingCols: 0)                   	 0.0429412 	 700       	 54.1523   	 0         	 29.932    	 1.80918   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 79, Qr2: 29)       	 0.0390104 	 700       	 0         	 0         	 79.1829   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0372631 	 100       	 2.34817   	 0         	 0.162091  	 14.4868   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r: 79, r2: 79)             	 0.0355892 	 100       	 87.681    	 0         	 9.01938   	 9.7214    
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 3950, leftOrthog: 0)        	 0.0297148 	 100       	 66.4652   	 0         	 16.0863   	 4.1318    
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 79, r: 79, r2: 2500, leftOrthog: 0)        	 0.0295407 	 100       	 105.634   	 0         	 16.3837   	 6.44751   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 29, k: 2500)   	 0.026347  	 800       	 220.139   	 0         	 48.3273   	 4.55516   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3950, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0255655 	 100       	 79.3406   	 0         	 6.25844   	 12.6774   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 79, n: 50, r: 79, r2: 50)             	 0.0255035 	 100       	 122.356   	 0         	 16.1076   	 7.59615   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 2500, m: 29, k: 50)	 0.0178299 	 800       	 325.296   	 0         	 71.4125   	 4.55516   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 29, m: 29)                                                                  	 0.0160658 	 909       	 1.83986   	 0         	 1.15513   	 1.59277   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 3950, m: 29)                                                                       	 0.0134883 	 700       	 0         	 0         	 95.1163   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 29, reductionFactor: 37, colBlockingSize: 12)                  	 0.0108579 	 100       	 39.7742   	 0         	 5.40369   	 7.36056   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 29, n: 50, r2: 29)                                                                                         	 0.00982903	 808       	 0         	 0         	 55.3079   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 1450, k: 29) 	 0.00981852	 800       	 342.618   	 0         	 75.6122   	 4.53125   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 29, n: 50, r2: 29)                   	 0.0087297 	 700       	 0         	 0         	 146.965   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 3950, m: 29)                                                              	 0.00797158	 700       	 0         	 0         	 160.942   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 29, m: 1450, k: 29) 	 0.00703397	 700       	 242.712   	 0         	 67.6246   	 3.58911   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 79, reductionFactor: 37, colBlockingSize: 12)                    	 0.00580618	 100       	 11.0394   	 0         	 1.40416   	 7.86193   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 50)           	 0.00498338	 8         	 20.0667   	 0         	 3.24278   	 6.18812   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 29, r: 29, streamingCols: 0)                   	 0.00463894	 100       	 45.3228   	 0         	 25.0782   	 1.80726   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00350987	 9         	 0.427364  	 0         	 0.154877  	 2.75937   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 50, Qr2: 29)       	 0.00341561	 100       	 0         	 0         	 92.5164   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.00274565	 8         	 37.4056   	 0         	 2.97198   	 12.5861   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 29)                                                                       	 0.00265913	 100       	 0         	 0         	 43.6234   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 29)                                                              	 0.00244666	 100       	 0         	 0         	 47.4115   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 0, n: 50, r2: 29)                    	 0.00234597	 100       	 0         	 0         	 49.4465   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                   	 0.00208731	 8         	 23.9542   	 0         	 7.70368   	 3.10945   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 29, reductionFactor: 37, colBlockingSize: 12)                    	 0.0017295 	 101       	 5.04404   	 0         	 1.07032   	 4.71262   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 79, r: 50, r2: 50, leftOrthog: 0)          	 0.00170927	 100       	 23.1093   	 0         	 7.88643   	 2.93027   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 50, r2: 50)              	 0.00105505	 100       	 23.6956   	 0         	 5.68693   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 29)                                                                                          	 0.000798063	 201       	 0         	 0         	 5.84315   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 29, n: 50, r2: 1)                                                                                          	 0.000764327	 201       	 0         	 0         	 6.10105   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 29, k: 50)     	 0.000718276	 100       	 20.1872   	 0         	 6.0144    	 3.35648   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 1450, cols: 29, reductionFactor: 37, colBlockingSize: 12)                  	 0.000703357	 8         	 28.4898   	 0         	 3.90275   	 7.29995   
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                   	 0.000689585	 100       	 0.725074  	 0         	 2.9003    	 0.25      
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 29, m: 29, fromLeft: 0)                	 0.000602538	 809       	 0         	 0         	 18.0668   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 29, k: 50)  	 0.000570028	 100       	 25.4373   	 0         	 7.57858   	 3.35648   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 29)   	 0.000553633	 100       	 26.1906   	 0         	 7.803     	 3.35648   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 29, r1_: 29, n: 50, r2: 29)           	 0.000520272	 8         	 37.5019   	 0         	 10.4488   	 3.58911   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                          	 0.000512434	 100       	 0         	 0         	 7.80588   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 29, n: 50, r2: 1)                    	 0.000491579	 100       	 0         	 0         	 12.8565   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 1, r1low: 0, n: 50, r2: 29)                     	 0.000442249	 100       	 0         	 0         	 5.24591   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 1, Xr2: 50, Qr1: 1, Qr2: 0)          	 0.000435361	 100       	 0         	 0         	 9.18778   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                            	 0.000402431	 100       	 1.24245   	 0         	 14.9094   	 0.0833333 
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 29)                                                                	 0.000393791	 101       	 0         	 0         	 5.95036   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 29, m: 50, k: 29)   	 0.000389434	 100       	 21.5954   	 0         	 7.685     	 2.81008   
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000380969	 101       	 0.662784  	 0         	 10.6045   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 29, n: 50, r2: 1)                                                                                 	 0.000346456	 101       	 0.422709  	 0         	 6.76334   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000328035	 100       	 0.762114  	 0         	 12.1938   	 0.0625    
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 1450, Xcols: 29, r: 29, streamingCols: 0)                   	 0.000305818	 8         	 31.9      	 0         	 17.688    	 1.80348   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                              	 0.000264387	 8         	 0         	 0         	 60.5173   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 50)                                                                       	 0.000234157	 8         	 0         	 0         	 68.3302   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.000113133	 1         	 2.26951   	 0         	 0.353566  	 6.41892   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 1450, m: 29)                                                                       	 9.5414e-05	 8         	 0         	 0         	 56.411    	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 1450, m: 29)                                                              	 4.9113e-05	 8         	 0         	 0         	 109.592   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 50, r: 50, streamingCols: 0)                     	 3.2761e-05	 1         	 3.81551   	 0         	 1.5262    	 2.5       
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                                	 2.427e-05 	 1         	 0         	 0         	 1.64813   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 29, r1_: 29, n: 50, r2: 1)            	 1.6181e-05	 1         	 5.19745   	 0         	 1.84958   	 2.81008   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 29, r: 29, streamingCols: 0)                     	 1.6051e-05	 1         	 2.61977   	 0         	 1.65497   	 1.58297   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 1.0611e-05	 1         	 23.5605   	 0         	 5.65451   	 4.16667   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 0)                	 1.01e-05  	 9         	 0         	 0         	 35.6436   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 29, n: 50, r2: 1)                                                                                   	 8.38e-06  	 1         	 0.346062  	 0         	 1.38425   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 0, m: 1450, k: 29)  	 7.801e-06 	 100       	 0         	 0         	 4312.27   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 7.55e-06  	 1         	 0.662252  	 0         	 2.64901   	 0.25      
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                         	 4.3e-06   	 1         	 0         	 0         	 9.30233   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 29)                                                                         	 3.54e-06  	 1         	 0         	 0         	 6.55367   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 2.3865    	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 2.38646   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                            	 2.07473   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                        	 2.07361   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 1.7117    	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 0.55972   	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 0.498284  	 1818      
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.409215  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.355369  	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.332426  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_leftOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                   	 0.311665  	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.19517   	 918       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.0902156 	 918       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.0500221 	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.0428614 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0270653 	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.0195757 	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0184    	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.0178034 	 1800      
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                       	 0.0164849 	 818       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 0.0163656 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 0.0163384 	 2         
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                              	 0.0144494 	 20        
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0120095 	 1000      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0119039 	 1310      
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                              	 0.0111498 	 918       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.00553044	 18        
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00441554	 1818      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00308588	 6372      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00129644	 5272      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00105546	 302       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000705515	 102       
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.000612638	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000402431	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: L, orthoY: L
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m43->44  [0m[1;34m44->45  [0m[1;34m45->46  [0m[1;34m46->47  [0m[1;34m47->48  [0m[1;34m48->49  [0m[1;34m49->50  [0m[1;34m50->51  [0m[1;34m51->52  [0m[1;34m52->53  [0m[1;34m53->54  [0m[1;34m54->55  [0m[1;34m55->56  [0m[1;34m56->57  [0m[1;34m57->58  [0m[1;34m58->59  [0m[1;34m59->60  [0m[1;34m60->61  [0m[1;34m61->62  [0m[1;34m62->63  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 22486692398976 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 22486502598656 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 22486301272192 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 22486099945728 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 22485898619264 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 22485697292800 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 22485495966336 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 22485294639872 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 22485093313408 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 22484891986944 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 22484690660480 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 22484489334016 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 22484288007552 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 22484086681088 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 22483885354624 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 22483684028160 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 22483482701696 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 22483281375232 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 22483080048768 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 22482878722304 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 22482677395840 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 22482476069376 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 22482274742912 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 22482073416448 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 22481872089984 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 22481670763520 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 22481469437056 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 22481268110592 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 22481066784128 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 22480865457664 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 22480664131200 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 22480462804736 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 22480261474176 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 22480060147712 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 22479858821248 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 22479657494784 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 22479456168320 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 22479254841856 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 22479053515392 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 22478852188928 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 22478650862464 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 22478449536000 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 22478248209536 -> hwthread 43 - OK[0m[1;34m
[0m[1;34m	threadid 22478046883072 -> hwthread 44 - OK[0m[1;34m
[0m[1;34m	threadid 22477845556608 -> hwthread 45 - OK[0m[1;34m
[0m[1;34m	threadid 22477644230144 -> hwthread 46 - OK[0m[1;34m
[0m[1;34m	threadid 22477442903680 -> hwthread 47 - OK[0m[1;34m
[0m[1;34m	threadid 22477241577216 -> hwthread 48 - OK[0m[1;34m
[0m[1;34m	threadid 22477040250752 -> hwthread 49 - OK[0m[1;34m
[0m[1;34m	threadid 22476838924288 -> hwthread 50 - OK[0m[1;34m
[0m[1;34m	threadid 22476637597824 -> hwthread 51 - OK[0m[1;34m
[0m[1;34m	threadid 22476436271360 -> hwthread 52 - OK[0m[1;34m
[0m[1;34m	threadid 22476234944896 -> hwthread 53 - OK[0m[1;34m
[0m[1;34m	threadid 22476033618432 -> hwthread 54 - OK[0m[1;34m
[0m[1;34m	threadid 22475832291968 -> hwthread 55 - OK[0m[1;34m
[0m[1;34m	threadid 22475630965504 -> hwthread 56 - OK[0m[1;34m
[0m[1;34m	threadid 22475429639040 -> hwthread 57 - OK[0m[1;34m
[0m[1;34m	threadid 22475228312576 -> hwthread 58 - OK[0m[1;34m
[0m[1;34m	threadid 22475026986112 -> hwthread 59 - OK[0m[1;34m
[0m[1;34m	threadid 22474825659648 -> hwthread 60 - OK[0m[1;34m
[0m[1;34m	threadid 22474624333184 -> hwthread 61 - OK[0m[1;34m
[0m[1;34m	threadid 22474423006720 -> hwthread 62 - OK[0m[1;34m
[0m[1;34m	threadid 22474221680256 -> hwthread 63 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 22486586738432 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 22486580147968 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 80, m: 80)                                                                 	 0.480597  	 700       	 5.22018   	 0         	 0.224654  	 23.2365   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4000, cols: 80, reductionFactor: 37, colBlockingSize: 12)                  	 0.332906  	 600       	 94.7722   	 0         	 4.70619   	 20.1378   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 80, n: 50, r: 80, r2: 80)             	 0.302701  	 600       	 101.486   	 0         	 10.2501   	 9.90099   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 80, r: 80, r2: 4000, leftOrthog: 0)        	 0.299461  	 600       	 102.584   	 0         	 15.5928   	 6.57895   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4000, cols: 30, reductionFactor: 37, colBlockingSize: 12)                  	 0.0756506 	 700       	 68.4227   	 0         	 8.94956   	 7.64536   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 80, reductionFactor: 37, colBlockingSize: 12)                  	 0.0551449 	 100       	 59.5973   	 0         	 2.99429   	 19.9036   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 80)                                                                 	 0.0463554 	 100       	 3.02014   	 0         	 0.182072  	 16.5877   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 4000, Xcols: 30, r: 30, streamingCols: 0)                   	 0.0453316 	 700       	 55.5904   	 0         	 29.7038   	 1.87149   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 80, Qr2: 30)       	 0.0408738 	 700       	 0         	 0         	 77.409    	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0367413 	 100       	 2.38152   	 0         	 0.164393  	 14.4868   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 4000, leftOrthog: 0)        	 0.0312983 	 100       	 63.9013   	 0         	 15.4641   	 4.13223   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 80, r: 80, r2: 2500, leftOrthog: 0)        	 0.0311877 	 100       	 102.604   	 0         	 15.719    	 6.52742   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r: 80, r2: 80)             	 0.0307256 	 100       	 104.148   	 0         	 10.5814   	 9.84252   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 80, n: 50, r: 80, r2: 50)             	 0.0272    	 100       	 117.647   	 0         	 15.4118   	 7.63359   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 30, k: 2500)   	 0.0266302 	 800       	 225.308   	 0         	 48.4263   	 4.65261   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4000, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0249995 	 100       	 82.1639   	 0         	 6.48013   	 12.6793   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 2500, m: 30, k: 50)	 0.0176261 	 800       	 340.404   	 0         	 73.1641   	 4.65261   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 30, m: 30)                                                                  	 0.0156334 	 909       	 2.09321   	 0         	 1.26988   	 1.64835   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 4000, m: 30)                                                                       	 0.0132662 	 700       	 0         	 0         	 101.31    	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 30, reductionFactor: 37, colBlockingSize: 12)                  	 0.0103768 	 100       	 44.5381   	 0         	 5.85152   	 7.61137   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 30, n: 50, r2: 30)                                                                                         	 0.00993674	 808       	 0         	 0         	 58.5463   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 1500, k: 30) 	 0.00920164	 800       	 391.235   	 0         	 84.5067   	 4.62963   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 30, n: 50, r2: 30)                   	 0.0087845 	 700       	 0         	 0         	 152.997   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 4000, m: 30)                                                              	 0.00747243	 700       	 0         	 0         	 179.861   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 30, m: 1500, k: 30) 	 0.00713826	 700       	 264.77    	 0         	 71.3115   	 3.71287   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 80, reductionFactor: 37, colBlockingSize: 12)                    	 0.00593494	 100       	 11.0751   	 0         	 1.40187   	 7.90021   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 30, r: 30, streamingCols: 0)                   	 0.00495332	 100       	 45.4241   	 0         	 24.2988   	 1.86939   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 50)           	 0.00479041	 8         	 20.875    	 0         	 3.37341   	 6.18812   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 50, Qr2: 30)       	 0.0036167 	 100       	 0         	 0         	 88.4785   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00354939	 9         	 0.422606  	 0         	 0.153153  	 2.75937   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.00274113	 8         	 37.4673   	 0         	 2.97687   	 12.5861   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 30)                                                                       	 0.00247169	 100       	 0         	 0         	 48.5497   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 30, reductionFactor: 37, colBlockingSize: 12)                    	 0.00233356	 101       	 4.00062   	 0         	 0.831006  	 4.81419   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 0, n: 50, r2: 30)                    	 0.00195255	 100       	 0         	 0         	 61.4581   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                   	 0.00191551	 8         	 26.1027   	 0         	 8.39464   	 3.10945   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 80, r: 50, r2: 50, leftOrthog: 0)          	 0.00172567	 100       	 23.1794   	 0         	 7.88098   	 2.94118   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 30)                                                              	 0.00154758	 100       	 0         	 0         	 77.5404   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 50, r2: 50)              	 0.00103253	 100       	 24.2123   	 0         	 5.81095   	 4.16667   
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                   	 0.000868255	 100       	 0.575868  	 0         	 2.30347   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 30)                                                                                          	 0.000842922	 201       	 0         	 0         	 5.72295   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 30, k: 50)     	 0.000805859	 100       	 18.6137   	 0         	 5.46001   	 3.40909   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 30, n: 50, r2: 1)                                                                                          	 0.000769332	 201       	 0         	 0         	 6.27037   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 1500, cols: 30, reductionFactor: 37, colBlockingSize: 12)                  	 0.000724807	 8         	 30.6065   	 0         	 4.05294   	 7.55167   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 30, k: 50)  	 0.000652142	 100       	 23.0011   	 0         	 6.747     	 3.40909   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 30)   	 0.000585834	 100       	 25.6045   	 0         	 7.51066   	 3.40909   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 30, r1_: 30, n: 50, r2: 30)           	 0.000541765	 8         	 39.8697   	 0         	 10.7382   	 3.71287   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                          	 0.00052178	 100       	 0         	 0         	 7.66607   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 30, n: 50, r2: 1)                    	 0.000487822	 100       	 0         	 0         	 13.1195   	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 30, m: 30, fromLeft: 0)                	 0.000456102	 809       	 0         	 0         	 25.5417   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 1, r1low: 0, n: 50, r2: 30)                     	 0.000449178	 100       	 0         	 0         	 5.34309   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 1, Xr2: 50, Qr1: 1, Qr2: 0)          	 0.000435634	 100       	 0         	 0         	 9.18202   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 30)                                                                	 0.000409605	 101       	 0         	 0         	 5.9179    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                            	 0.000408026	 100       	 1.22541   	 0         	 14.7049   	 0.0833333 
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 30, m: 50, k: 30)   	 0.000391657	 100       	 22.9793   	 0         	 7.96615   	 2.88462   
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000385785	 101       	 0.65451   	 0         	 10.4722   	 0.0625    
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 1500, Xcols: 30, r: 30, streamingCols: 0)                   	 0.000349407	 8         	 30.9095   	 0         	 16.5675   	 1.86567   
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 30, n: 50, r2: 1)                                                                                 	 0.00034077	 101       	 0.444581  	 0         	 7.1133    	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000328237	 100       	 0.761645  	 0         	 12.1863   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 50)                                                                       	 0.000278087	 8         	 0         	 0         	 57.536    	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                              	 0.000237405	 8         	 0         	 0         	 67.3954   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.000132454	 1         	 1.93846   	 0         	 0.301992  	 6.41892   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 1500, m: 30)                                                                       	 9.2172e-05	 8         	 0         	 0         	 62.4919   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 1500, m: 30)                                                              	 5.7411e-05	 8         	 0         	 0         	 100.329   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 50, r: 50, streamingCols: 0)                     	 5.4622e-05	 1         	 2.28846   	 0         	 0.915382  	 2.5       
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                                	 2.308e-05 	 1         	 0         	 0         	 1.7331    	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 30, r1_: 30, n: 50, r2: 1)            	 1.457e-05 	 1         	 6.17708   	 0         	 2.14139   	 2.88462   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 30, r: 30, streamingCols: 0)                     	 1.2511e-05	 1         	 3.59683   	 0         	 2.20606   	 1.63043   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 0)                	 1.108e-05 	 9         	 0         	 0         	 32.491    	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 1.01e-05  	 1         	 0.49505   	 0         	 1.9802    	 0.25      
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 1.0031e-05	 1         	 24.9227   	 0         	 5.98146   	 4.16667   
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 30, n: 50, r2: 1)                                                                                   	 8.13e-06  	 1         	 0.369004  	 0         	 1.47601   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 0, m: 1500, k: 30)  	 7.62e-06  	 100       	 0         	 0         	 4724.41   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                         	 4.95e-06  	 1         	 0         	 0         	 8.08081   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 30)                                                                         	 4.11e-06  	 1         	 0         	 0         	 5.83942   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 2.45624   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 2.4562    	 100       
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                            	 2.1405    	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                        	 2.13921   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 1.76683   	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 0.563693  	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 0.510945  	 1818      
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.419496  	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.363672  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.361659  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_leftOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                   	 0.315629  	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.197707  	 918       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.0924674 	 918       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.0526169 	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.0449261 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.027436  	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.0191828 	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0182783 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.017325  	 1800      
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 0.016186  	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 0.0161556 	 2         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                       	 0.0161172 	 818       
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                              	 0.0143619 	 20        
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0120708 	 1310      
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0116741 	 1000      
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                              	 0.00974751	 918       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.00535678	 18        
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00359269	 1818      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00338392	 6372      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00127463	 5272      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00105479	 302       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000886485	 102       
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.000467182	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000408026	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: L, orthoY: L
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m43->44  [0m[1;34m44->45  [0m[1;34m45->46  [0m[1;34m46->47  [0m[1;34m47->48  [0m[1;34m48->49  [0m[1;34m49->50  [0m[1;34m50->51  [0m[1;34m51->52  [0m[1;34m52->53  [0m[1;34m53->54  [0m[1;34m54->55  [0m[1;34m55->56  [0m[1;34m56->57  [0m[1;34m57->58  [0m[1;34m58->59  [0m[1;34m59->60  [0m[1;34m60->61  [0m[1;34m61->62  [0m[1;34m62->63  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 22838660384640 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 22838421481472 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 22838220155008 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 22838018828544 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 22837817502080 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 22837616175616 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 22837414849152 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 22837213522688 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 22837012196224 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 22836810869760 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 22836609543296 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 22836408216832 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 22836206890368 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 22836005563904 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 22835804237440 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 22835602910976 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 22835401584512 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 22835200258048 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 22834998931584 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 22834797605120 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 22834596278656 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 22834394952192 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 22834193625728 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 22833992299264 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 22833790972800 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 22833589646336 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 22833388319872 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 22833186993408 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 22832985666944 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 22832784340480 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 22832583014016 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 22832381687552 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 22832180356992 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 22831979030528 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 22831777704064 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 22831576377600 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 22831375051136 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 22831173724672 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 22830972398208 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 22830771071744 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 22830569745280 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 22830368418816 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 22830167092352 -> hwthread 43 - OK[0m[1;34m
[0m[1;34m	threadid 22829965765888 -> hwthread 44 - OK[0m[1;34m
[0m[1;34m	threadid 22829764439424 -> hwthread 45 - OK[0m[1;34m
[0m[1;34m	threadid 22829563112960 -> hwthread 46 - OK[0m[1;34m
[0m[1;34m	threadid 22829361786496 -> hwthread 47 - OK[0m[1;34m
[0m[1;34m	threadid 22829160460032 -> hwthread 48 - OK[0m[1;34m
[0m[1;34m	threadid 22828959133568 -> hwthread 49 - OK[0m[1;34m
[0m[1;34m	threadid 22828757807104 -> hwthread 50 - OK[0m[1;34m
[0m[1;34m	threadid 22828556480640 -> hwthread 51 - OK[0m[1;34m
[0m[1;34m	threadid 22828355154176 -> hwthread 52 - OK[0m[1;34m
[0m[1;34m	threadid 22828153827712 -> hwthread 53 - OK[0m[1;34m
[0m[1;34m	threadid 22827952501248 -> hwthread 54 - OK[0m[1;34m
[0m[1;34m	threadid 22827751174784 -> hwthread 55 - OK[0m[1;34m
[0m[1;34m	threadid 22827549848320 -> hwthread 56 - OK[0m[1;34m
[0m[1;34m	threadid 22827348521856 -> hwthread 57 - OK[0m[1;34m
[0m[1;34m	threadid 22827147195392 -> hwthread 58 - OK[0m[1;34m
[0m[1;34m	threadid 22826945868928 -> hwthread 59 - OK[0m[1;34m
[0m[1;34m	threadid 22826744542464 -> hwthread 60 - OK[0m[1;34m
[0m[1;34m	threadid 22826543216000 -> hwthread 61 - OK[0m[1;34m
[0m[1;34m	threadid 22826341889536 -> hwthread 62 - OK[0m[1;34m
[0m[1;34m	threadid 22826140563072 -> hwthread 63 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 22838554724096 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 22838548133632 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 81, m: 81)                                                                 	 0.52874   	 700       	 4.92503   	 0         	 0.209325  	 23.5282   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4050, cols: 81, reductionFactor: 37, colBlockingSize: 12)                  	 0.349291  	 600       	 93.7564   	 0         	 4.59827   	 20.3895   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 81, n: 50, r: 81, r2: 81)             	 0.313832  	 600       	 101.604   	 0         	 10.1353   	 10.0248   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 81, r: 81, r2: 4050, leftOrthog: 0)        	 0.293957  	 600       	 108.473   	 0         	 16.2844   	 6.66118   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4050, cols: 31, reductionFactor: 37, colBlockingSize: 12)                  	 0.0845975 	 700       	 66.1501   	 0         	 8.3745    	 7.899     
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 81, reductionFactor: 37, colBlockingSize: 12)                  	 0.057222  	 100       	 58.8788   	 0         	 2.92281   	 20.1446   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 4050, Xcols: 31, r: 31, streamingCols: 0)                   	 0.0471557 	 700       	 57.7753   	 0         	 29.8766   	 1.9338    
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 81)                                                                 	 0.0450131 	 100       	 3.14908   	 0         	 0.189278  	 16.6373   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 81, Qr2: 31)       	 0.0427387 	 700       	 0         	 0         	 75.8133   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0371698 	 100       	 2.35406   	 0         	 0.162498  	 14.4868   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 81, r: 81, r2: 2500, leftOrthog: 0)        	 0.0309179 	 100       	 106.104   	 0         	 16.0586   	 6.60728   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r: 81, r2: 81)             	 0.0308055 	 100       	 106.491   	 0         	 10.688    	 9.96359   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 4050, leftOrthog: 0)        	 0.0294626 	 100       	 68.7312   	 0         	 16.6313   	 4.13265   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 31, k: 2500)   	 0.0281938 	 800       	 219.907   	 0         	 46.3194   	 4.74761   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 81, n: 50, r: 81, r2: 50)             	 0.0257458 	 100       	 127.419   	 0         	 16.6116   	 7.67045   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4050, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0253622 	 100       	 82.0012   	 0         	 6.46632   	 12.6813   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 2500, m: 31, k: 50)	 0.0186631 	 800       	 332.205   	 0         	 69.9732   	 4.74761   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 31, m: 31)                                                                  	 0.0170481 	 909       	 2.11786   	 0         	 1.24299   	 1.70384   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 4050, m: 31)                                                                       	 0.0152665 	 700       	 0         	 0         	 92.1078   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 31, reductionFactor: 37, colBlockingSize: 12)                  	 0.0116768 	 100       	 42.2622   	 0         	 5.37552   	 7.86197   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 31, n: 50, r2: 31)                                                                                         	 0.0103178 	 808       	 0         	 0         	 60.2057   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 1550, k: 31) 	 0.0095351 	 800       	 403.142   	 0         	 85.3101   	 4.72561   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 31, n: 50, r2: 31)                   	 0.00903115	 700       	 0         	 0         	 155.701   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 31, m: 1550, k: 31) 	 0.00810117	 700       	 257.416   	 0         	 67.0942   	 3.83663   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 81, reductionFactor: 37, colBlockingSize: 12)                    	 0.00629044	 100       	 10.712    	 0         	 1.34948   	 7.9379    
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 4050, m: 31)                                                              	 0.00597967	 700       	 0         	 0         	 235.157   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 31, r: 31, streamingCols: 0)                   	 0.00502401	 100       	 47.8203   	 0         	 24.758    	 1.93151   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 50)           	 0.00481584	 8         	 20.7648   	 0         	 3.35559   	 6.18812   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00357108	 9         	 0.420039  	 0         	 0.152223  	 2.75937   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 50, Qr2: 31)       	 0.00355992	 100       	 0         	 0         	 91.0132   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 31)                                                                       	 0.00284092	 100       	 0         	 0         	 43.6478   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.00278355	 8         	 36.8963   	 0         	 2.93151   	 12.5861   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 31)                                                              	 0.00214526	 100       	 0         	 0         	 57.802    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 0, n: 50, r2: 31)                    	 0.00211489	 100       	 0         	 0         	 58.6318   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 31, reductionFactor: 37, colBlockingSize: 12)                    	 0.00193184	 101       	 5.16007   	 0         	 1.05024   	 4.91325   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                   	 0.00186452	 8         	 26.8166   	 0         	 8.62422   	 3.10945   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 81, r: 50, r2: 50, leftOrthog: 0)          	 0.0016683 	 100       	 24.2763   	 0         	 8.22396   	 2.9519    
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 50, r2: 50)              	 0.00103947	 100       	 24.0507   	 0         	 5.77217   	 4.16667   
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                   	 0.000882267	 100       	 0.566722  	 0         	 2.26689   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 31)                                                                                          	 0.000815247	 201       	 0         	 0         	 6.11447   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 31, k: 50)     	 0.000805038	 100       	 19.2537   	 0         	 5.56495   	 3.45982   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 31, n: 50, r2: 1)                                                                                          	 0.000771196	 201       	 0         	 0         	 6.46373   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 1550, cols: 31, reductionFactor: 37, colBlockingSize: 12)                  	 0.00075763	 8         	 32.3072   	 0         	 4.14015   	 7.80339   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 31, k: 50)  	 0.000660517	 100       	 23.4665   	 0         	 6.78257   	 3.45982   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 31, r1_: 31, n: 50, r2: 31)           	 0.000611683	 8         	 38.9627   	 0         	 10.1554   	 3.83663   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 31)   	 0.000601371	 100       	 25.7744   	 0         	 7.44964   	 3.45982   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 31, m: 31, fromLeft: 0)                	 0.000586494	 809       	 0         	 0         	 21.2094   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                          	 0.000502606	 100       	 0         	 0         	 7.95852   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 31, n: 50, r2: 1)                    	 0.000471698	 100       	 0         	 0         	 13.7376   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 1, Xr2: 50, Qr1: 1, Qr2: 0)          	 0.000448046	 100       	 0         	 0         	 8.92765   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 1, r1low: 0, n: 50, r2: 31)                     	 0.000444821	 100       	 0         	 0         	 5.57528   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 31)                                                                	 0.000414869	 101       	 0         	 0         	 6.03757   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                            	 0.000402437	 100       	 1.24243   	 0         	 14.9092   	 0.0833333 
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000391096	 101       	 0.645622  	 0         	 10.3299   	 0.0625    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 31, m: 50, k: 31)   	 0.000385427	 100       	 24.9334   	 0         	 8.42909   	 2.95802   
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 31, n: 50, r2: 1)                                                                                 	 0.000361182	 101       	 0.433438  	 0         	 6.93501   	 0.0625    
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 1550, Xcols: 31, r: 31, streamingCols: 0)                   	 0.000337898	 8         	 35.2663   	 0         	 18.293    	 1.92786   
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000326137	 100       	 0.766549  	 0         	 12.2648   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                              	 0.000283707	 8         	 0         	 0         	 56.3962   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 50)                                                                       	 0.000256547	 8         	 0         	 0         	 62.3667   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.000137993	 1         	 1.86065   	 0         	 0.28987   	 6.41892   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 1550, m: 31)                                                                       	 8.9422e-05	 8         	 0         	 0         	 68.7795   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 1550, m: 31)                                                              	 5.5471e-05	 8         	 0         	 0         	 110.876   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 50, r: 50, streamingCols: 0)                     	 3.4971e-05	 1         	 3.57439   	 0         	 1.42976   	 2.5       
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                                	 2.3971e-05	 1         	 0         	 0         	 1.66868   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 31, r: 31, streamingCols: 0)                     	 2.04e-05  	 1         	 2.35539   	 0         	 1.40412   	 1.67749   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 31, r1_: 31, n: 50, r2: 1)            	 1.5521e-05	 1         	 6.19161   	 0         	 2.09316   	 2.95802   
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 1.0421e-05	 1         	 0.4798    	 0         	 1.9192    	 0.25      
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 1.028e-05 	 1         	 24.3191   	 0         	 5.83658   	 4.16667   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 0)                	 9.94e-06  	 9         	 0         	 0         	 36.2173   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 31, n: 50, r2: 1)                                                                                   	 8.67e-06  	 1         	 0.357555  	 0         	 1.43022   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 0, m: 1550, k: 31)  	 8.02e-06  	 100       	 0         	 0         	 4793.02   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                         	 4.56e-06  	 1         	 0         	 0         	 8.77193   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 31)                                                                         	 3.89e-06  	 1         	 0         	 0         	 6.37532   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 2.55963   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 2.5596    	 100       
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                            	 2.22318   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                        	 2.22188   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 1.84215   	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 0.610923  	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 0.540051  	 1818      
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.43879   	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.371422  	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.356005  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_leftOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                   	 0.336348  	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.212935  	 918       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.102421  	 918       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.0544375 	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.0467466 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0289988 	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.0206192 	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0193237 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.0186311 	 1800      
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                       	 0.0184618 	 818       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 0.0163947 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 0.0163642 	 2         
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                              	 0.0144003 	 20        
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0124068 	 1310      
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0120626 	 1000      
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                              	 0.00890295	 918       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.00545333	 18        
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00532235	 1818      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00287197	 6372      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00148893	 5272      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00107842	 302       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000901358	 102       
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.000596434	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000402437	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: L, orthoY: L
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m43->44  [0m[1;34m44->45  [0m[1;34m45->46  [0m[1;34m46->47  [0m[1;34m47->48  [0m[1;34m48->49  [0m[1;34m49->50  [0m[1;34m50->51  [0m[1;34m51->52  [0m[1;34m52->53  [0m[1;34m53->54  [0m[1;34m54->55  [0m[1;34m55->56  [0m[1;34m56->57  [0m[1;34m57->58  [0m[1;34m58->59  [0m[1;34m59->60  [0m[1;34m60->61  [0m[1;34m61->62  [0m[1;34m62->63  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 22772607981440 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 22772386359296 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 22772185032832 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 22771983706368 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 22771782379904 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 22771581053440 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 22771379726976 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 22771178400512 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 22770977074048 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 22770775747584 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 22770574421120 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 22770373094656 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 22770171768192 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 22769970441728 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 22769769115264 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 22769567788800 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 22769366462336 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 22769165135872 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 22768963809408 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 22768762482944 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 22768561156480 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 22768359830016 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 22768158503552 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 22767957177088 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 22767755850624 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 22767554524160 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 22767353197696 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 22767151871232 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 22766950544768 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 22766749218304 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 22766547891840 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 22766346565376 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 22766145234816 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 22765943908352 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 22765742581888 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 22765541255424 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 22765339928960 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 22765138602496 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 22764937276032 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 22764735949568 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 22764534623104 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 22764333296640 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 22764131970176 -> hwthread 43 - OK[0m[1;34m
[0m[1;34m	threadid 22763930643712 -> hwthread 44 - OK[0m[1;34m
[0m[1;34m	threadid 22763729317248 -> hwthread 45 - OK[0m[1;34m
[0m[1;34m	threadid 22763527990784 -> hwthread 46 - OK[0m[1;34m
[0m[1;34m	threadid 22763326664320 -> hwthread 47 - OK[0m[1;34m
[0m[1;34m	threadid 22763125337856 -> hwthread 48 - OK[0m[1;34m
[0m[1;34m	threadid 22762924011392 -> hwthread 49 - OK[0m[1;34m
[0m[1;34m	threadid 22762722684928 -> hwthread 50 - OK[0m[1;34m
[0m[1;34m	threadid 22762521358464 -> hwthread 51 - OK[0m[1;34m
[0m[1;34m	threadid 22762320032000 -> hwthread 52 - OK[0m[1;34m
[0m[1;34m	threadid 22762118705536 -> hwthread 53 - OK[0m[1;34m
[0m[1;34m	threadid 22761917379072 -> hwthread 54 - OK[0m[1;34m
[0m[1;34m	threadid 22761716052608 -> hwthread 55 - OK[0m[1;34m
[0m[1;34m	threadid 22761514726144 -> hwthread 56 - OK[0m[1;34m
[0m[1;34m	threadid 22761313399680 -> hwthread 57 - OK[0m[1;34m
[0m[1;34m	threadid 22761112073216 -> hwthread 58 - OK[0m[1;34m
[0m[1;34m	threadid 22760910746752 -> hwthread 59 - OK[0m[1;34m
[0m[1;34m	threadid 22760709420288 -> hwthread 60 - OK[0m[1;34m
[0m[1;34m	threadid 22760508093824 -> hwthread 61 - OK[0m[1;34m
[0m[1;34m	threadid 22760306767360 -> hwthread 62 - OK[0m[1;34m
[0m[1;34m	threadid 22760105440896 -> hwthread 63 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 22772502320896 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 22772495730432 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 82, m: 82)                                                                 	 0.543543  	 700       	 4.97055   	 0         	 0.208673  	 23.8198   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4100, cols: 82, reductionFactor: 37, colBlockingSize: 12)                  	 0.348507  	 600       	 97.4908   	 0         	 4.72311   	 20.6412   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 82, n: 50, r: 82, r2: 82)             	 0.313743  	 600       	 105.443   	 0         	 10.39     	 10.1485   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 82, r: 82, r2: 4100, leftOrthog: 0)        	 0.301217  	 600       	 109.828   	 0         	 16.2867   	 6.74342   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4100, cols: 32, reductionFactor: 37, colBlockingSize: 12)                  	 0.0858474 	 700       	 70.318    	 0         	 8.62524   	 8.15259   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 82, reductionFactor: 37, colBlockingSize: 12)                  	 0.0615729 	 100       	 56.0776   	 0         	 2.75087   	 20.3854   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 4100, Xcols: 32, r: 32, streamingCols: 0)                   	 0.0499043 	 700       	 58.8903   	 0         	 29.5026   	 1.99611   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 82)                                                                 	 0.0464066 	 100       	 3.09223   	 0         	 0.185319  	 16.686    
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 82, Qr2: 32)       	 0.0436571 	 700       	 0         	 0         	 75.9885   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0364135 	 100       	 2.40295   	 0         	 0.165872  	 14.4868   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 82, r: 82, r2: 2500, leftOrthog: 0)        	 0.0315961 	 100       	 106.406   	 0         	 15.9121   	 6.68711   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r: 82, r2: 82)             	 0.0313086 	 100       	 107.383   	 0         	 10.6482   	 10.0846   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 4100, leftOrthog: 0)        	 0.0309118 	 100       	 66.3176   	 0         	 16.0456   	 4.13306   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 32, k: 2500)   	 0.0294261 	 800       	 217.494   	 0         	 44.9343   	 4.84027   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 82, n: 50, r: 82, r2: 50)             	 0.0260986 	 100       	 128.819   	 0         	 16.7151   	 7.70677   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4100, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0254088 	 100       	 82.8611   	 0         	 6.53316   	 12.6832   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 2500, m: 32, k: 50)	 0.0189073 	 800       	 338.494   	 0         	 69.9329   	 4.84027   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 4100, m: 32)                                                                       	 0.0168629 	 700       	 0         	 0         	 87.1403   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 32, m: 32)                                                                  	 0.0168324 	 909       	 2.35939   	 0         	 1.341     	 1.75942   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 32, reductionFactor: 37, colBlockingSize: 12)                  	 0.0116919 	 100       	 44.9747   	 0         	 5.54396   	 8.11238   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 4100, m: 32)                                                              	 0.0108735 	 700       	 0         	 0         	 135.139   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 32, n: 50, r2: 32)                                                                                         	 0.0106491 	 808       	 0         	 0         	 62.157    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 1600, k: 32) 	 0.0101878 	 800       	 402.049   	 0         	 83.4252   	 4.81928   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 32, n: 50, r2: 32)                   	 0.00927258	 700       	 0         	 0         	 158.472   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 32, m: 1600, k: 32) 	 0.00724151	 700       	 316.752   	 0         	 79.9798   	 3.9604    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 82, reductionFactor: 37, colBlockingSize: 12)                    	 0.00643352	 100       	 10.734    	 0         	 1.34595   	 7.97502   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 32, r: 32, streamingCols: 0)                   	 0.00553596	 100       	 46.2431   	 0         	 23.1956   	 1.99362   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 50)           	 0.00480737	 8         	 20.8014   	 0         	 3.3615    	 6.18812   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 50, Qr2: 32)       	 0.00369576	 100       	 0         	 0         	 88.7504   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00355411	 9         	 0.422045  	 0         	 0.15295   	 2.75937   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 32)                                                                       	 0.00303855	 100       	 0         	 0         	 42.1254   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 0, n: 50, r2: 32)                    	 0.00300826	 100       	 0         	 0         	 42.5495   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 32)                                                              	 0.00282477	 100       	 0         	 0         	 45.3134   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.00279926	 8         	 36.6892   	 0         	 2.91506   	 12.5861   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                   	 0.0021596 	 8         	 23.1525   	 0         	 7.44584   	 3.10945   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 32, reductionFactor: 37, colBlockingSize: 12)                    	 0.00190303	 101       	 5.58157   	 0         	 1.11411   	 5.00989   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 82, r: 50, r2: 50, leftOrthog: 0)          	 0.00167336	 100       	 24.5016   	 0         	 8.27077   	 2.96243   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 50, r2: 50)              	 0.00106216	 100       	 23.537    	 0         	 5.64889   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 32, n: 50, r2: 1)                                                                                          	 0.00101798	 201       	 0         	 0         	 5.05471   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                   	 0.000888979	 100       	 0.562443  	 0         	 2.24977   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 32, k: 50)     	 0.000819435	 100       	 19.5256   	 0         	 5.56481   	 3.50877   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 32)                                                                                          	 0.000811254	 201       	 0         	 0         	 6.34277   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 1600, cols: 32, reductionFactor: 37, colBlockingSize: 12)                  	 0.000793039	 8         	 33.949    	 0         	 4.21459   	 8.05511   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 32, k: 50)  	 0.000657058	 100       	 24.351    	 0         	 6.94003   	 3.50877   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 32, r1_: 32, n: 50, r2: 32)           	 0.000633816	 8         	 41.3596   	 0         	 10.4433   	 3.9604    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000587112	 101       	 0.430071  	 0         	 6.88114   	 0.0625    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 32)   	 0.000583221	 100       	 27.4339   	 0         	 7.81865   	 3.50877   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                          	 0.000517732	 100       	 0         	 0         	 7.726     	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 32, n: 50, r2: 1)                    	 0.000477029	 100       	 0         	 0         	 13.7518   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 1, r1low: 0, n: 50, r2: 32)                     	 0.00046684	 100       	 0         	 0         	 5.48368   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 1, Xr2: 50, Qr1: 1, Qr2: 0)          	 0.000437831	 100       	 0         	 0         	 9.13595   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 32)                                                                	 0.000421828	 101       	 0         	 0         	 6.12951   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                            	 0.000414239	 100       	 1.20703   	 0         	 14.4844   	 0.0833333 
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 32, m: 32, fromLeft: 0)                	 0.000358289	 809       	 0         	 0         	 36.9943   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 32, n: 50, r2: 1)                                                                                 	 0.000354908	 101       	 0.455329  	 0         	 7.28527   	 0.0625    
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 1600, Xcols: 32, r: 32, streamingCols: 0)                   	 0.000348538	 8         	 37.6062   	 0         	 18.8971   	 1.99005   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 32, m: 50, k: 32)   	 0.000333509	 100       	 30.7038   	 0         	 10.1323   	 3.0303    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000328485	 100       	 0.76107   	 0         	 12.1771   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                              	 0.000277237	 8         	 0         	 0         	 57.7124   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 50)                                                                       	 0.000263606	 8         	 0         	 0         	 60.6966   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.000125813	 1         	 2.04078   	 0         	 0.317932  	 6.41892   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 1600, m: 32)                                                                       	 9.6803e-05	 8         	 0         	 0         	 67.7004   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 1600, m: 32)                                                              	 5.2231e-05	 8         	 0         	 0         	 125.473   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 50, r: 50, streamingCols: 0)                     	 3.3961e-05	 1         	 3.68069   	 0         	 1.47228   	 2.5       
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                                	 2.254e-05 	 1         	 0         	 0         	 1.77462   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 32, r: 32, streamingCols: 0)                     	 1.885e-05 	 1         	 2.71618   	 0         	 1.57538   	 1.72414   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 32, r1_: 32, n: 50, r2: 1)            	 1.6151e-05	 1         	 6.34016   	 0         	 2.09225   	 3.0303    
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 1.086e-05 	 1         	 23.0203   	 0         	 5.52486   	 4.16667   
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 1.0251e-05	 1         	 0.487757  	 0         	 1.95103   	 0.25      
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 0)                	 9.76e-06  	 9         	 0         	 0         	 36.8852   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 32, n: 50, r2: 1)                                                                                   	 9.4e-06   	 1         	 0.340426  	 0         	 1.3617    	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 0, m: 1600, k: 32)  	 7.51e-06  	 100       	 0         	 0         	 5454.06   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                         	 4.28e-06  	 1         	 0         	 0         	 9.34579   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 32)                                                                         	 3.88e-06  	 1         	 0         	 0         	 6.59794   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 2.58383   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 2.5838    	 100       
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                            	 2.23074   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                        	 2.22942   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 1.84985   	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 0.626363  	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 0.545082  	 1818      
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.442449  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.372212  	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.365398  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_leftOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                   	 0.352993  	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.225998  	 918       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.103688  	 918       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.0580012 	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.0477907 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0302455 	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.0203865 	 918       
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                       	 0.02027   	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0195643 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.0183536 	 1800      
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 0.0167146 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 0.0166834 	 2         
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                              	 0.0150249 	 20        
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                              	 0.0144721 	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0132247 	 1000      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.012996  	 1310      
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.0054682 	 18        
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00506419	 1818      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00311322	 6372      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00127905	 5272      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00127051	 302       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.00090863	 102       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000414239	 100       
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.000368049	 818       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: L, orthoY: L
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m43->44  [0m[1;34m44->45  [0m[1;34m45->46  [0m[1;34m46->47  [0m[1;34m47->48  [0m[1;34m48->49  [0m[1;34m49->50  [0m[1;34m50->51  [0m[1;34m51->52  [0m[1;34m52->53  [0m[1;34m53->54  [0m[1;34m54->55  [0m[1;34m55->56  [0m[1;34m56->57  [0m[1;34m57->58  [0m[1;34m58->59  [0m[1;34m59->60  [0m[1;34m60->61  [0m[1;34m61->62  [0m[1;34m62->63  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 23428344514432 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 23428107069440 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 23427905742976 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 23427704416512 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 23427503090048 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 23427301763584 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 23427100437120 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 23426899110656 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 23426697784192 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 23426496457728 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 23426295131264 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 23426093804800 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 23425892478336 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 23425691151872 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 23425489825408 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 23425288498944 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 23425087172480 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 23424885846016 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 23424684519552 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 23424483193088 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 23424281866624 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 23424080540160 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 23423879213696 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 23423677887232 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 23423476560768 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 23423275234304 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 23423073907840 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 23422872581376 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 23422671254912 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 23422469928448 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 23422268601984 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 23422067275520 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 23421865944960 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 23421664618496 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 23421463292032 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 23421261965568 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 23421060639104 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 23420859312640 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 23420657986176 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 23420456659712 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 23420255333248 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 23420054006784 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 23419852680320 -> hwthread 43 - OK[0m[1;34m
[0m[1;34m	threadid 23419651353856 -> hwthread 44 - OK[0m[1;34m
[0m[1;34m	threadid 23419450027392 -> hwthread 45 - OK[0m[1;34m
[0m[1;34m	threadid 23419248700928 -> hwthread 46 - OK[0m[1;34m
[0m[1;34m	threadid 23419047374464 -> hwthread 47 - OK[0m[1;34m
[0m[1;34m	threadid 23418846048000 -> hwthread 48 - OK[0m[1;34m
[0m[1;34m	threadid 23418644721536 -> hwthread 49 - OK[0m[1;34m
[0m[1;34m	threadid 23418443395072 -> hwthread 50 - OK[0m[1;34m
[0m[1;34m	threadid 23418242068608 -> hwthread 51 - OK[0m[1;34m
[0m[1;34m	threadid 23418040742144 -> hwthread 52 - OK[0m[1;34m
[0m[1;34m	threadid 23417839415680 -> hwthread 53 - OK[0m[1;34m
[0m[1;34m	threadid 23417638089216 -> hwthread 54 - OK[0m[1;34m
[0m[1;34m	threadid 23417436762752 -> hwthread 55 - OK[0m[1;34m
[0m[1;34m	threadid 23417235436288 -> hwthread 56 - OK[0m[1;34m
[0m[1;34m	threadid 23417034109824 -> hwthread 57 - OK[0m[1;34m
[0m[1;34m	threadid 23416832783360 -> hwthread 58 - OK[0m[1;34m
[0m[1;34m	threadid 23416631456896 -> hwthread 59 - OK[0m[1;34m
[0m[1;34m	threadid 23416430130432 -> hwthread 60 - OK[0m[1;34m
[0m[1;34m	threadid 23416228803968 -> hwthread 61 - OK[0m[1;34m
[0m[1;34m	threadid 23416027477504 -> hwthread 62 - OK[0m[1;34m
[0m[1;34m	threadid 23415826151040 -> hwthread 63 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 23428238853888 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 23428232263424 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 83, m: 83)                                                                 	 0.597452  	 700       	 4.68951   	 0         	 0.194493  	 24.1115   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4150, cols: 83, reductionFactor: 37, colBlockingSize: 12)                  	 0.36068   	 600       	 97.6889   	 0         	 4.67569   	 20.893    
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 83, n: 50, r: 83, r2: 83)             	 0.320546  	 600       	 107.027   	 0         	 10.4191   	 10.2723   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 83, r: 83, r2: 4150, leftOrthog: 0)        	 0.306777  	 600       	 111.831   	 0         	 16.3839   	 6.82566   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4150, cols: 33, reductionFactor: 37, colBlockingSize: 12)                  	 0.0969629 	 700       	 67.0163   	 0         	 7.97231   	 8.40613   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 83, reductionFactor: 37, colBlockingSize: 12)                  	 0.0583056 	 100       	 60.6733   	 0         	 2.94159   	 20.626    
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 4150, Xcols: 33, r: 33, streamingCols: 0)                   	 0.0505689 	 700       	 62.5592   	 0         	 30.392    	 2.05841   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 83)                                                                 	 0.0459027 	 100       	 3.1643    	 0         	 0.189096  	 16.7339   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 83, Qr2: 33)       	 0.0453157 	 700       	 0         	 0         	 74.9374   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0381964 	 100       	 2.29079   	 0         	 0.15813   	 14.4868   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 83, r: 83, r2: 2500, leftOrthog: 0)        	 0.0333424 	 100       	 103.307   	 0         	 15.2665   	 6.76689   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r: 83, r2: 83)             	 0.0321833 	 100       	 107.028   	 0         	 10.4872   	 10.2056   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 33, k: 2500)   	 0.0308861 	 800       	 213.688   	 0         	 43.3385   	 4.93067   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 4150, leftOrthog: 0)        	 0.0295998 	 100       	 70.1017   	 0         	 16.9595   	 4.13347   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 83, n: 50, r: 83, r2: 50)             	 0.0279868 	 100       	 123.076   	 0         	 15.8961   	 7.74254   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4150, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0257515 	 100       	 82.7557   	 0         	 6.5239    	 12.685    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 2500, m: 33, k: 50)	 0.0196278 	 800       	 336.257   	 0         	 68.197    	 4.93067   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 33, m: 33)                                                                  	 0.01895   	 909       	 2.29845   	 0         	 1.26636   	 1.815     
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 4150, m: 33)                                                                       	 0.0164016 	 700       	 0         	 0         	 93.5178   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 33, reductionFactor: 37, colBlockingSize: 12)                  	 0.0132349 	 100       	 42.253    	 0         	 5.05262   	 8.36259   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 33, n: 50, r2: 33)                                                                                         	 0.0108946 	 808       	 0         	 0         	 64.6127   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 1650, k: 33) 	 0.0101751 	 800       	 428.105   	 0         	 87.1777   	 4.91071   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 4150, m: 33)                                                              	 0.00999395	 700       	 0         	 0         	 153.477   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 33, n: 50, r2: 33)                   	 0.00930812	 700       	 0         	 0         	 164.785   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 33, m: 1650, k: 33) 	 0.00845779	 700       	 297.429   	 0         	 72.825    	 4.08416   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 83, reductionFactor: 37, colBlockingSize: 12)                    	 0.00598025	 100       	 11.8309   	 0         	 1.47673   	 8.01158   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 33, r: 33, streamingCols: 0)                   	 0.00533072	 100       	 51.0719   	 0         	 24.8439   	 2.05572   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 50)           	 0.00495237	 8         	 20.1924   	 0         	 3.26309   	 6.18812   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 50, Qr2: 33)       	 0.00359422	 100       	 0         	 0         	 92.3706   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00352883	 9         	 0.425068  	 0         	 0.154045  	 2.75937   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 33)                                                                       	 0.00288649	 100       	 0         	 0         	 45.7303   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.00270835	 8         	 37.9208   	 0         	 3.0129    	 12.5861   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 33)                                                              	 0.00253991	 100       	 0         	 0         	 51.9703   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                   	 0.00199917	 8         	 25.0104   	 0         	 8.04333   	 3.10945   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 33, reductionFactor: 37, colBlockingSize: 12)                    	 0.00191122	 101       	 5.91045   	 0         	 1.15796   	 5.1042    
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 83, r: 50, r2: 50, leftOrthog: 0)          	 0.00164298	 100       	 25.259    	 0         	 8.49678   	 2.97278   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 0, n: 50, r2: 33)                    	 0.00119949	 100       	 0         	 0         	 110.047   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 50, r2: 50)              	 0.00104799	 100       	 23.8551   	 0         	 5.72522   	 4.16667   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 1650, cols: 33, reductionFactor: 37, colBlockingSize: 12)                  	 0.000865043	 8         	 34.1331   	 0         	 4.10904   	 8.30684   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 33)                                                                                          	 0.000818389	 201       	 0         	 0         	 6.48396   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                   	 0.000809944	 100       	 0.617327  	 0         	 2.46931   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 33, k: 50)     	 0.000766532	 100       	 21.5255   	 0         	 6.05324   	 3.55603   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 33, n: 50, r2: 1)                                                                                          	 0.000758827	 201       	 0         	 0         	 6.9929    	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 33, r1_: 33, n: 50, r2: 33)           	 0.000737327	 8         	 38.9917   	 0         	 9.54705   	 4.08416   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 33, m: 33, fromLeft: 0)                	 0.000692314	 809       	 0         	 0         	 20.3607   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 33, k: 50)  	 0.000640408	 100       	 25.7648   	 0         	 7.24538   	 3.55603   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 33)   	 0.000624512	 100       	 26.4206   	 0         	 7.4298    	 3.55603   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                          	 0.000512935	 100       	 0         	 0         	 7.79826   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 33, n: 50, r2: 1)                    	 0.000479852	 100       	 0         	 0         	 13.8376   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 1, r1low: 0, n: 50, r2: 33)                     	 0.000461877	 100       	 0         	 0         	 5.71581   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 33, m: 50, k: 33)   	 0.000428219	 100       	 25.4309   	 0         	 8.19954   	 3.1015    
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 1, Xr2: 50, Qr1: 1, Qr2: 0)          	 0.00042539	 100       	 0         	 0         	 9.40314   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 33)                                                                	 0.00040391	 101       	 0         	 0         	 6.60147   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                            	 0.000401959	 100       	 1.24391   	 0         	 14.9269   	 0.0833333 
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000375651	 101       	 0.672166  	 0         	 10.7547   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 33, n: 50, r2: 1)                                                                                 	 0.000361729	 101       	 0.460704  	 0         	 7.37126   	 0.0625    
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 1650, Xcols: 33, r: 33, streamingCols: 0)                   	 0.000350099	 8         	 41.0592   	 0         	 20.007    	 2.05224   
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000326349	 100       	 0.766051  	 0         	 12.2568   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 50)                                                                       	 0.000281066	 8         	 0         	 0         	 56.9261   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                              	 0.000219225	 8         	 0         	 0         	 72.9844   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.000129584	 1         	 1.98139   	 0         	 0.30868   	 6.41892   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 1650, m: 33)                                                                       	 9.7653e-05	 8         	 0         	 0         	 71.3711   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 1650, m: 33)                                                              	 6.3982e-05	 8         	 0         	 0         	 108.931   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 50, r: 50, streamingCols: 0)                     	 3.1861e-05	 1         	 3.92329   	 0         	 1.56932   	 2.5       
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                                	 2.226e-05 	 1         	 0         	 0         	 1.79695   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 33, r: 33, streamingCols: 0)                     	 2.0281e-05	 1         	 2.68478   	 0         	 1.51649   	 1.77039   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 33, r1_: 33, n: 50, r2: 1)            	 1.67e-05  	 1         	 6.52096   	 0         	 2.10251   	 3.1015    
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 0)                	 9.92e-06  	 9         	 0         	 0         	 36.2903   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 9.81e-06  	 1         	 25.4842   	 0         	 6.11621   	 4.16667   
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 9.7e-06   	 1         	 0.515464  	 0         	 2.06186   	 0.25      
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 33, n: 50, r2: 1)                                                                                   	 8.221e-06 	 1         	 0.401411  	 0         	 1.60564   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 0, m: 1650, k: 33)  	 7.94e-06  	 100       	 0         	 0         	 5486.15   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                         	 4.38e-06  	 1         	 0         	 0         	 9.13242   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 33)                                                                         	 3.76e-06  	 1         	 0         	 0         	 7.02128   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 2.72001   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 2.71996   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                            	 2.3485    	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                        	 2.34727   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 1.95854   	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 0.681551  	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 0.566529  	 1818      
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.451357  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.381764  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_leftOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                   	 0.371396  	 100       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.371363  	 900       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.239727  	 918       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.116322  	 918       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.058301  	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.0493353 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0316527 	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.0224788 	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0202683 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.0196935 	 1800      
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                       	 0.0196749 	 818       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 0.0167873 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 0.016758  	 2         
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                              	 0.0152464 	 20        
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                              	 0.0132432 	 918       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0129848 	 1310      
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0114493 	 1000      
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.0057162 	 18        
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00499613	 1818      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.003129  	 6372      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00130581	 5272      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00106373	 302       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000827865	 102       
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.000702234	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000401959	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: L, orthoY: L
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m43->44  [0m[1;34m44->45  [0m[1;34m45->46  [0m[1;34m46->47  [0m[1;34m47->48  [0m[1;34m48->49  [0m[1;34m49->50  [0m[1;34m50->51  [0m[1;34m51->52  [0m[1;34m52->53  [0m[1;34m53->54  [0m[1;34m54->55  [0m[1;34m55->56  [0m[1;34m56->57  [0m[1;34m57->58  [0m[1;34m58->59  [0m[1;34m59->60  [0m[1;34m60->61  [0m[1;34m61->62  [0m[1;34m62->63  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 23028702177152 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 23028473784320 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 23028272457856 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 23028071131392 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 23027869804928 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 23027668478464 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 23027467152000 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 23027265825536 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 23027064499072 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 23026863172608 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 23026661846144 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 23026460519680 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 23026259193216 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 23026057866752 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 23025856540288 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 23025655213824 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 23025453887360 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 23025252560896 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 23025051234432 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 23024849907968 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 23024648581504 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 23024447255040 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 23024245928576 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 23024044602112 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 23023843275648 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 23023641949184 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 23023440622720 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 23023239296256 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 23023037969792 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 23022836643328 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 23022635316864 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 23022433990400 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 23022232659840 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 23022031333376 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 23021830006912 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 23021628680448 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 23021427353984 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 23021226027520 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 23021024701056 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 23020823374592 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 23020622048128 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 23020420721664 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 23020219395200 -> hwthread 43 - OK[0m[1;34m
[0m[1;34m	threadid 23020018068736 -> hwthread 44 - OK[0m[1;34m
[0m[1;34m	threadid 23019816742272 -> hwthread 45 - OK[0m[1;34m
[0m[1;34m	threadid 23019615415808 -> hwthread 46 - OK[0m[1;34m
[0m[1;34m	threadid 23019414089344 -> hwthread 47 - OK[0m[1;34m
[0m[1;34m	threadid 23019212762880 -> hwthread 48 - OK[0m[1;34m
[0m[1;34m	threadid 23019011436416 -> hwthread 49 - OK[0m[1;34m
[0m[1;34m	threadid 23018810109952 -> hwthread 50 - OK[0m[1;34m
[0m[1;34m	threadid 23018608783488 -> hwthread 51 - OK[0m[1;34m
[0m[1;34m	threadid 23018407457024 -> hwthread 52 - OK[0m[1;34m
[0m[1;34m	threadid 23018206130560 -> hwthread 53 - OK[0m[1;34m
[0m[1;34m	threadid 23018004804096 -> hwthread 54 - OK[0m[1;34m
[0m[1;34m	threadid 23017803477632 -> hwthread 55 - OK[0m[1;34m
[0m[1;34m	threadid 23017602151168 -> hwthread 56 - OK[0m[1;34m
[0m[1;34m	threadid 23017400824704 -> hwthread 57 - OK[0m[1;34m
[0m[1;34m	threadid 23017199498240 -> hwthread 58 - OK[0m[1;34m
[0m[1;34m	threadid 23016998171776 -> hwthread 59 - OK[0m[1;34m
[0m[1;34m	threadid 23016796845312 -> hwthread 60 - OK[0m[1;34m
[0m[1;34m	threadid 23016595518848 -> hwthread 61 - OK[0m[1;34m
[0m[1;34m	threadid 23016394192384 -> hwthread 62 - OK[0m[1;34m
[0m[1;34m	threadid 23016192865920 -> hwthread 63 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 23028596516608 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 23028589926144 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 84, m: 84)                                                                 	 0.602498  	 700       	 4.82035   	 0         	 0.19753   	 24.4032   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4200, cols: 84, reductionFactor: 37, colBlockingSize: 12)                  	 0.376602  	 600       	 96.9814   	 0         	 4.58656   	 21.1447   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 84, n: 50, r: 84, r2: 84)             	 0.333236  	 600       	 106.718   	 0         	 10.2652   	 10.396    
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 84, r: 84, r2: 4200, leftOrthog: 0)        	 0.30856   	 600       	 115.252   	 0         	 16.6841   	 6.90789   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4200, cols: 34, reductionFactor: 37, colBlockingSize: 12)                  	 0.0975379 	 700       	 71.5721   	 0         	 8.26503   	 8.65963   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 84, reductionFactor: 37, colBlockingSize: 12)                  	 0.0597003 	 100       	 60.6923   	 0         	 2.90861   	 20.8665   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 4200, Xcols: 34, r: 34, streamingCols: 0)                   	 0.053692  	 700       	 63.2988   	 0         	 29.848    	 2.12071   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 84, Qr2: 34)       	 0.045452  	 700       	 0         	 0         	 76.4622   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 84)                                                                 	 0.0452816 	 100       	 3.24635   	 0         	 0.193456  	 16.7808   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0364437 	 100       	 2.40096   	 0         	 0.165735  	 14.4868   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r: 84, r2: 84)             	 0.0330027 	 100       	 106.9     	 0         	 10.352    	 10.3265   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 4200, leftOrthog: 0)        	 0.0325061 	 100       	 64.6033   	 0         	 15.6278   	 4.13386   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 84, r: 84, r2: 2500, leftOrthog: 0)        	 0.0323177 	 100       	 109.166   	 0         	 15.9445   	 6.84664   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 34, k: 2500)   	 0.03029   	 800       	 224.496   	 0         	 44.7302   	 5.01889   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 84, n: 50, r: 84, r2: 50)             	 0.0295662 	 100       	 119.325   	 0         	 15.3418   	 7.77778   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4200, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0263236 	 100       	 81.9325   	 0         	 6.45809   	 12.6868   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 34, m: 34)                                                                  	 0.0201981 	 909       	 2.35841   	 0         	 1.26084   	 1.8705    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 2500, m: 34, k: 50)	 0.0195448 	 800       	 347.919   	 0         	 69.3217   	 5.01889   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 4200, m: 34)                                                                       	 0.0173664 	 700       	 0         	 0         	 92.095    	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 34, reductionFactor: 37, colBlockingSize: 12)                  	 0.0130551 	 100       	 45.4704   	 0         	 5.27952   	 8.6126    
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 4200, m: 34)                                                              	 0.0116479 	 700       	 0         	 0         	 137.309   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 34, n: 50, r2: 34)                                                                                         	 0.0114645 	 808       	 0         	 0         	 65.1785   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 1700, k: 34) 	 0.0108565 	 800       	 425.921   	 0         	 85.1842   	 5         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 34, n: 50, r2: 34)                   	 0.0105974 	 700       	 0         	 0         	 150.92    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 34, m: 1700, k: 34) 	 0.0092634 	 700       	 297.005   	 0         	 70.5825   	 4.20792   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 84, reductionFactor: 37, colBlockingSize: 12)                    	 0.00615074	 100       	 11.7818   	 0         	 1.46402   	 8.0476    
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 34, r: 34, streamingCols: 0)                   	 0.00554246	 100       	 52.1429   	 0         	 24.6213   	 2.1178    
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 50)           	 0.00503144	 8         	 19.875    	 0         	 3.21181   	 6.18812   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 50, Qr2: 34)       	 0.00376036	 100       	 0         	 0         	 89.3531   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00355116	 9         	 0.422395  	 0         	 0.153077  	 2.75937   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 0, n: 50, r2: 34)                    	 0.00307987	 100       	 0         	 0         	 44.1577   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 34)                                                                       	 0.00301068	 100       	 0         	 0         	 45.1726   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 34)                                                              	 0.00291145	 100       	 0         	 0         	 46.7121   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.00271088	 8         	 37.8854   	 0         	 3.01009   	 12.5861   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 34, reductionFactor: 37, colBlockingSize: 12)                    	 0.00225865	 101       	 5.309     	 0         	 1.02169   	 5.19627   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                   	 0.00194212	 8         	 25.7451   	 0         	 8.27962   	 3.10945   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 84, r: 50, r2: 50, leftOrthog: 0)          	 0.00169673	 100       	 24.7535   	 0         	 8.29831   	 2.98295   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 50, r2: 50)              	 0.00110353	 100       	 22.6547   	 0         	 5.43712   	 4.16667   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 1700, cols: 34, reductionFactor: 37, colBlockingSize: 12)                  	 0.000921336	 8         	 35.0502   	 0         	 4.09534   	 8.55856   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 34)                                                                                          	 0.000840718	 201       	 0         	 0         	 6.50301   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 34, k: 50)     	 0.00081981	 100       	 20.7365   	 0         	 5.75743   	 3.60169   
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                   	 0.000807557	 100       	 0.619151  	 0         	 2.47661   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 34, n: 50, r2: 1)                                                                                          	 0.00077352	 201       	 0         	 0         	 7.06795   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 34, r1_: 34, n: 50, r2: 34)           	 0.000737338	 8         	 42.6442   	 0         	 10.1343   	 4.20792   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 34, k: 50)  	 0.000696302	 100       	 24.4147   	 0         	 6.77867   	 3.60169   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 34)   	 0.000633244	 100       	 26.8459   	 0         	 7.45368   	 3.60169   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 34, m: 34, fromLeft: 0)                	 0.000547472	 809       	 0         	 0         	 27.3316   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                          	 0.000512871	 100       	 0         	 0         	 7.79923   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 34, n: 50, r2: 1)                    	 0.000491316	 100       	 0         	 0         	 13.6776   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 1, r1low: 0, n: 50, r2: 34)                     	 0.000471557	 100       	 0         	 0         	 5.76813   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 1, Xr2: 50, Qr1: 1, Qr2: 0)          	 0.000457202	 100       	 0         	 0         	 8.74887   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 34, m: 50, k: 34)   	 0.000449293	 100       	 25.7293   	 0         	 8.1123    	 3.17164   
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000420506	 101       	 0.600467  	 0         	 9.60747   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 34)                                                                	 0.000419203	 101       	 0         	 0         	 6.55339   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                            	 0.000404082	 100       	 1.23737   	 0         	 14.8485   	 0.0833333 
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 1700, Xcols: 34, r: 34, streamingCols: 0)                   	 0.000400159	 8         	 39.2884   	 0         	 18.5811   	 2.11443   
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 34, n: 50, r2: 1)                                                                                 	 0.000361646	 101       	 0.474774  	 0         	 7.59638   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000338901	 100       	 0.737679  	 0         	 11.8029   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 50)                                                                       	 0.000265267	 8         	 0         	 0         	 60.3166   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                              	 0.000234406	 8         	 0         	 0         	 68.2576   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.000148134	 1         	 1.73327   	 0         	 0.270026  	 6.41892   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 1700, m: 34)                                                                       	 0.000104554	 8         	 0         	 0         	 70.7615   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 1700, m: 34)                                                              	 6.821e-05 	 8         	 0         	 0         	 108.465   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 50, r: 50, streamingCols: 0)                     	 3.3251e-05	 1         	 3.75929   	 0         	 1.50371   	 2.5       
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                                	 2.339e-05 	 1         	 0         	 0         	 1.71013   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 34, r: 34, streamingCols: 0)                     	 1.9131e-05	 1         	 3.02127   	 0         	 1.66348   	 1.81624   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 34, r1_: 34, n: 50, r2: 1)            	 1.832e-05 	 1         	 6.31004   	 0         	 1.98952   	 3.17164   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 1.072e-05 	 1         	 23.3209   	 0         	 5.59701   	 4.16667   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 0)                	 9.801e-06 	 9         	 0         	 0         	 36.7309   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 34, n: 50, r2: 1)                                                                                   	 9.171e-06 	 1         	 0.370734  	 0         	 1.48294   	 0.25      
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 8.421e-06 	 1         	 0.593754  	 0         	 2.37501   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 0, m: 1700, k: 34)  	 7.871e-06 	 100       	 0         	 0         	 5874.73   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                         	 4.19e-06  	 1         	 0         	 0         	 9.54654   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 34)                                                                         	 3.65e-06  	 1         	 0         	 0         	 7.45205   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 2.76154   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 2.76149   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                            	 2.37818   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                        	 2.37693   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 1.97282   	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 0.684223  	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 0.585409  	 1818      
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.469427  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.396908  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_leftOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                   	 0.383237  	 100       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.375081  	 900       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.24797   	 918       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.117113  	 918       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.0616291 	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.0496696 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0311099 	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.0237492 	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.0212103 	 1800      
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                       	 0.0207548 	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0202411 	 900       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 0.0169732 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 0.0169442 	 2         
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                              	 0.0153966 	 20        
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                              	 0.0153046 	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0146401 	 1000      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0135916 	 1310      
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.00579782	 18        
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00488698	 1818      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00308648	 6372      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00128924	 5272      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00112105	 302       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000825149	 102       
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.000557273	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000404082	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: L, orthoY: L
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m43->44  [0m[1;34m44->45  [0m[1;34m45->46  [0m[1;34m46->47  [0m[1;34m47->48  [0m[1;34m48->49  [0m[1;34m49->50  [0m[1;34m50->51  [0m[1;34m51->52  [0m[1;34m52->53  [0m[1;34m53->54  [0m[1;34m54->55  [0m[1;34m55->56  [0m[1;34m56->57  [0m[1;34m57->58  [0m[1;34m58->59  [0m[1;34m59->60  [0m[1;34m60->61  [0m[1;34m61->62  [0m[1;34m62->63  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 23084384966528 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 23084174141440 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 23083972814976 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 23083771488512 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 23083570162048 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 23083368835584 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 23083167509120 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 23082966182656 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 23082764856192 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 23082563529728 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 23082362203264 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 23082160876800 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 23081959550336 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 23081758223872 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 23081556897408 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 23081355570944 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 23081154244480 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 23080952918016 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 23080751591552 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 23080550265088 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 23080348938624 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 23080147612160 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 23079946285696 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 23079744959232 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 23079543632768 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 23079342306304 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 23079140979840 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 23078939653376 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 23078738326912 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 23078537000448 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 23078335673984 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 23078134347520 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 23077933016960 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 23077731690496 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 23077530364032 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 23077329037568 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 23077127711104 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 23076926384640 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 23076725058176 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 23076523731712 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 23076322405248 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 23076121078784 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 23075919752320 -> hwthread 43 - OK[0m[1;34m
[0m[1;34m	threadid 23075718425856 -> hwthread 44 - OK[0m[1;34m
[0m[1;34m	threadid 23075517099392 -> hwthread 45 - OK[0m[1;34m
[0m[1;34m	threadid 23075315772928 -> hwthread 46 - OK[0m[1;34m
[0m[1;34m	threadid 23075114446464 -> hwthread 47 - OK[0m[1;34m
[0m[1;34m	threadid 23074913120000 -> hwthread 48 - OK[0m[1;34m
[0m[1;34m	threadid 23074711793536 -> hwthread 49 - OK[0m[1;34m
[0m[1;34m	threadid 23074510467072 -> hwthread 50 - OK[0m[1;34m
[0m[1;34m	threadid 23074309140608 -> hwthread 51 - OK[0m[1;34m
[0m[1;34m	threadid 23074107814144 -> hwthread 52 - OK[0m[1;34m
[0m[1;34m	threadid 23073906487680 -> hwthread 53 - OK[0m[1;34m
[0m[1;34m	threadid 23073705161216 -> hwthread 54 - OK[0m[1;34m
[0m[1;34m	threadid 23073503834752 -> hwthread 55 - OK[0m[1;34m
[0m[1;34m	threadid 23073302508288 -> hwthread 56 - OK[0m[1;34m
[0m[1;34m	threadid 23073101181824 -> hwthread 57 - OK[0m[1;34m
[0m[1;34m	threadid 23072899855360 -> hwthread 58 - OK[0m[1;34m
[0m[1;34m	threadid 23072698528896 -> hwthread 59 - OK[0m[1;34m
[0m[1;34m	threadid 23072497202432 -> hwthread 60 - OK[0m[1;34m
[0m[1;34m	threadid 23072295875968 -> hwthread 61 - OK[0m[1;34m
[0m[1;34m	threadid 23072094549504 -> hwthread 62 - OK[0m[1;34m
[0m[1;34m	threadid 23071893223040 -> hwthread 63 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 23084279305984 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 23084272715520 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 85, m: 85)                                                                 	 0.660763  	 700       	 4.55415   	 0         	 0.184417  	 24.6948   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4250, cols: 85, reductionFactor: 37, colBlockingSize: 12)                  	 0.382732  	 600       	 98.8769   	 0         	 4.62119   	 21.3964   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 85, n: 50, r: 85, r2: 85)             	 0.348204  	 600       	 105.821   	 0         	 10.0593   	 10.5198   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 85, r: 85, r2: 4250, leftOrthog: 0)        	 0.328472  	 600       	 112.179   	 0         	 16.0481   	 6.99013   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4250, cols: 35, reductionFactor: 37, colBlockingSize: 12)                  	 0.0967065 	 700       	 77.4069   	 0         	 8.68463   	 8.91308   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 85, reductionFactor: 37, colBlockingSize: 12)                  	 0.0621122 	 100       	 59.7328   	 0         	 2.83004   	 21.1067   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 4250, Xcols: 35, r: 35, streamingCols: 0)                   	 0.0561115 	 700       	 64.9488   	 0         	 29.752    	 2.18301   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 85)                                                                 	 0.0458357 	 100       	 3.24528   	 0         	 0.192863  	 16.8269   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 85, Qr2: 35)       	 0.0445914 	 700       	 0         	 0         	 79.7463   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0371023 	 100       	 2.35835   	 0         	 0.162793  	 14.4868   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 4250, leftOrthog: 0)        	 0.0358702 	 100       	 59.2414   	 0         	 14.3295   	 4.13424   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 85, r: 85, r2: 2500, leftOrthog: 0)        	 0.0346789 	 100       	 104.17    	 0         	 15.0397   	 6.92634   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r: 85, r2: 85)             	 0.0333812 	 100       	 108.22    	 0         	 10.3585   	 10.4474   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 35, k: 2500)   	 0.0319568 	 800       	 219.046   	 0         	 42.9079   	 5.10502   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 85, n: 50, r: 85, r2: 50)             	 0.0285509 	 100       	 126.529   	 0         	 16.1957   	 7.8125    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4250, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.026025  	 100       	 83.8592   	 0         	 6.60904   	 12.6886   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 2500, m: 35, k: 50)	 0.0203144 	 800       	 344.583   	 0         	 67.499    	 5.10502   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 35, m: 35)                                                                  	 0.0202595 	 909       	 2.56492   	 0         	 1.33168   	 1.92608   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 35, reductionFactor: 37, colBlockingSize: 12)                  	 0.0182084 	 100       	 34.5475   	 0         	 3.8982    	 8.86241   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 4250, m: 35)                                                                       	 0.0169581 	 700       	 0         	 0         	 98.2423   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 4250, m: 35)                                                              	 0.011897  	 700       	 0         	 0         	 140.036   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 35, n: 50, r2: 35)                                                                                         	 0.0115381 	 808       	 0         	 0         	 68.6282   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 1750, k: 35) 	 0.011161  	 800       	 439.029   	 0         	 86.3006   	 5.08721   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 35, n: 50, r2: 35)                   	 0.0102185 	 700       	 0         	 0         	 163.038   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 35, m: 1750, k: 35) 	 0.00923766	 700       	 324.893   	 0         	 75.0038   	 4.33168   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 85, reductionFactor: 37, colBlockingSize: 12)                    	 0.00621865	 100       	 11.9323   	 0         	 1.4762    	 8.08308   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 35, r: 35, streamingCols: 0)                   	 0.00572536	 100       	 53.4901   	 0         	 24.5382   	 2.17987   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 50)           	 0.00492025	 8         	 20.3242   	 0         	 3.28439   	 6.18812   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 50, Qr2: 35)       	 0.00368107	 100       	 0         	 0         	 92.3643   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.0035254 	 9         	 0.425482  	 0         	 0.154195  	 2.75937   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 35)                                                                       	 0.00315243	 100       	 0         	 0         	 44.4101   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 0, n: 50, r2: 35)                    	 0.00291203	 100       	 0         	 0         	 48.0764   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 35)                                                              	 0.00270546	 100       	 0         	 0         	 51.7473   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.00266493	 8         	 38.5387   	 0         	 3.062     	 12.5861   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 35, reductionFactor: 37, colBlockingSize: 12)                    	 0.00256853	 101       	 4.94714   	 0         	 0.935865  	 5.28617   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                   	 0.00192728	 8         	 25.9433   	 0         	 8.34336   	 3.10945   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 85, r: 50, r2: 50, leftOrthog: 0)          	 0.00170165	 100       	 24.9757   	 0         	 8.34484   	 2.99296   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 50, r2: 50)              	 0.00106901	 100       	 23.3861   	 0         	 5.61267   	 4.16667   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 1750, cols: 35, reductionFactor: 37, colBlockingSize: 12)                  	 0.000941615	 8         	 37.4113   	 0         	 4.24632   	 8.81028   
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                   	 0.000864872	 100       	 0.57812   	 0         	 2.31248   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 35, k: 50)     	 0.00085355	 100       	 20.5026   	 0         	 5.62357   	 3.64583   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 35)                                                                                          	 0.000838421	 201       	 0         	 0         	 6.71262   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 35, n: 50, r2: 1)                                                                                          	 0.00079157	 201       	 0         	 0         	 7.10992   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 35, r1_: 35, n: 50, r2: 35)           	 0.00076778	 8         	 44.6743   	 0         	 10.3134   	 4.33168   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 35, m: 35, fromLeft: 0)                	 0.000719178	 809       	 0         	 0         	 22.0479   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 35, k: 50)  	 0.00068897	 100       	 25.4002   	 0         	 6.96692   	 3.64583   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 35)   	 0.000568255	 100       	 30.796    	 0         	 8.44691   	 3.64583   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                          	 0.000512225	 100       	 0         	 0         	 7.80907   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 1, r1low: 0, n: 50, r2: 35)                     	 0.000506803	 100       	 0         	 0         	 5.52483   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 35, n: 50, r2: 1)                    	 0.000482581	 100       	 0         	 0         	 14.0909   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 35, m: 50, k: 35)   	 0.000472313	 100       	 25.9362   	 0         	 8.00317   	 3.24074   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 1, Xr2: 50, Qr1: 1, Qr2: 0)          	 0.000440776	 100       	 0         	 0         	 9.0749    	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 35)                                                                	 0.000431397	 101       	 0         	 0         	 6.55545   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                            	 0.00042097	 100       	 1.18773   	 0         	 14.2528   	 0.0833333 
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 1750, Xcols: 35, r: 35, streamingCols: 0)                   	 0.00041574	 8         	 41.2517   	 0         	 18.9522   	 2.17662   
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.00040548	 101       	 0.622719  	 0         	 9.9635    	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 35, n: 50, r2: 1)                                                                                 	 0.00035759	 101       	 0.494281  	 0         	 7.9085    	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000323917	 100       	 0.771803  	 0         	 12.3488   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                              	 0.000256416	 8         	 0         	 0         	 62.3986   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 50)                                                                       	 0.000247364	 8         	 0         	 0         	 64.682    	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.000118373	 1         	 2.16905   	 0         	 0.337915  	 6.41892   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 1750, m: 35)                                                                       	 0.000106844	 8         	 0         	 0         	 73.378    	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 1750, m: 35)                                                              	 6.6672e-05	 8         	 0         	 0         	 117.591   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 50, r: 50, streamingCols: 0)                     	 3.47e-05  	 1         	 3.60231   	 0         	 1.44092   	 2.5       
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                                	 2.366e-05 	 1         	 0         	 0         	 1.69062   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 35, r: 35, streamingCols: 0)                     	 1.928e-05 	 1         	 3.17687   	 0         	 1.70643   	 1.8617    
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 35, r1_: 35, n: 50, r2: 1)            	 1.833e-05 	 1         	 6.68303   	 0         	 2.06219   	 3.24074   
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 1.077e-05 	 1         	 0.464253  	 0         	 1.85701   	 0.25      
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 0)                	 1.0291e-05	 9         	 0         	 0         	 34.982    	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 1.0131e-05	 1         	 24.6767   	 0         	 5.92242   	 4.16667   
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 35, n: 50, r2: 1)                                                                                   	 9.42e-06  	 1         	 0.37155   	 0         	 1.4862    	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 0, m: 1750, k: 35)  	 7.922e-06 	 100       	 0         	 0         	 6185.31   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                         	 4.231e-06 	 1         	 0         	 0         	 9.45403   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 35)                                                                         	 3.69e-06  	 1         	 0         	 0         	 7.58808   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 2.91726   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 2.91722   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                            	 2.52401   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                        	 2.52272   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 2.10323   	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 0.743701  	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 0.598297  	 1818      
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.477767  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.411205  	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.400723  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_leftOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                   	 0.393129  	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.256096  	 918       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.121699  	 918       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.0642339 	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.0487133 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0328104 	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.0237849 	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.0214471 	 1800      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0210034 	 900       
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                       	 0.0204726 	 818       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 0.016812  	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 0.0167803 	 2         
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                              	 0.0157704 	 20        
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                              	 0.0153806 	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0141199 	 1000      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0136803 	 1310      
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.00571649	 18        
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00519667	 1818      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00322679	 6372      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00132346	 5272      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00108699	 302       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000885062	 102       
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.000729469	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.00042097	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: L, orthoY: L
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m43->44  [0m[1;34m44->45  [0m[1;34m45->46  [0m[1;34m46->47  [0m[1;34m47->48  [0m[1;34m48->49  [0m[1;34m49->50  [0m[1;34m50->51  [0m[1;34m51->52  [0m[1;34m52->53  [0m[1;34m53->54  [0m[1;34m54->55  [0m[1;34m55->56  [0m[1;34m56->57  [0m[1;34m57->58  [0m[1;34m58->59  [0m[1;34m59->60  [0m[1;34m60->61  [0m[1;34m61->62  [0m[1;34m62->63  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 22803557947264 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 22803323545600 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 22803122219136 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 22802920892672 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 22802719566208 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 22802518239744 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 22802316913280 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 22802115586816 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 22801914260352 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 22801712933888 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 22801511607424 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 22801310280960 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 22801108954496 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 22800907628032 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 22800706301568 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 22800504975104 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 22800303648640 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 22800102322176 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 22799900995712 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 22799699669248 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 22799498342784 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 22799297016320 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 22799095689856 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 22798894363392 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 22798693036928 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 22798491710464 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 22798290384000 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 22798089057536 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 22797887731072 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 22797686404608 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 22797485078144 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 22797283751680 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 22797082421120 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 22796881094656 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 22796679768192 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 22796478441728 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 22796277115264 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 22796075788800 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 22795874462336 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 22795673135872 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 22795471809408 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 22795270482944 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 22795069156480 -> hwthread 43 - OK[0m[1;34m
[0m[1;34m	threadid 22794867830016 -> hwthread 44 - OK[0m[1;34m
[0m[1;34m	threadid 22794666503552 -> hwthread 45 - OK[0m[1;34m
[0m[1;34m	threadid 22794465177088 -> hwthread 46 - OK[0m[1;34m
[0m[1;34m	threadid 22794263850624 -> hwthread 47 - OK[0m[1;34m
[0m[1;34m	threadid 22794062524160 -> hwthread 48 - OK[0m[1;34m
[0m[1;34m	threadid 22793861197696 -> hwthread 49 - OK[0m[1;34m
[0m[1;34m	threadid 22793659871232 -> hwthread 50 - OK[0m[1;34m
[0m[1;34m	threadid 22793458544768 -> hwthread 51 - OK[0m[1;34m
[0m[1;34m	threadid 22793257218304 -> hwthread 52 - OK[0m[1;34m
[0m[1;34m	threadid 22793055891840 -> hwthread 53 - OK[0m[1;34m
[0m[1;34m	threadid 22792854565376 -> hwthread 54 - OK[0m[1;34m
[0m[1;34m	threadid 22792653238912 -> hwthread 55 - OK[0m[1;34m
[0m[1;34m	threadid 22792451912448 -> hwthread 56 - OK[0m[1;34m
[0m[1;34m	threadid 22792250585984 -> hwthread 57 - OK[0m[1;34m
[0m[1;34m	threadid 22792049259520 -> hwthread 58 - OK[0m[1;34m
[0m[1;34m	threadid 22791847933056 -> hwthread 59 - OK[0m[1;34m
[0m[1;34m	threadid 22791646606592 -> hwthread 60 - OK[0m[1;34m
[0m[1;34m	threadid 22791445280128 -> hwthread 61 - OK[0m[1;34m
[0m[1;34m	threadid 22791243953664 -> hwthread 62 - OK[0m[1;34m
[0m[1;34m	threadid 22791042627200 -> hwthread 63 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 22803452286720 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 22803445696256 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 86, m: 86)                                                                 	 0.653719  	 700       	 4.7676    	 0         	 0.190807  	 24.9865   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4300, cols: 86, reductionFactor: 37, colBlockingSize: 12)                  	 0.392828  	 600       	 99.7759   	 0         	 4.60899   	 21.6481   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 86, n: 50, r: 86, r2: 86)             	 0.346235  	 600       	 110.224   	 0         	 10.3559   	 10.6436   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 86, r: 86, r2: 4300, leftOrthog: 0)        	 0.334712  	 600       	 114.018   	 0         	 16.1217   	 7.07237   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4300, cols: 36, reductionFactor: 37, colBlockingSize: 12)                  	 0.113236  	 700       	 70.762    	 0         	 7.71963   	 9.1665    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 86, reductionFactor: 37, colBlockingSize: 12)                  	 0.0626159 	 100       	 60.6547   	 0         	 2.8414    	 21.3468   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 4300, Xcols: 36, r: 36, streamingCols: 0)                   	 0.0577981 	 700       	 67.4929   	 0         	 30.0596   	 2.2453    
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 86, Qr2: 36)       	 0.049455  	 700       	 0         	 0         	 73.557    	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 86)                                                                 	 0.0469621 	 100       	 3.20471   	 0         	 0.18994   	 16.8722   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0373367 	 100       	 2.34354   	 0         	 0.161771  	 14.4868   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r: 86, r2: 86)             	 0.03353   	 100       	 110.289   	 0         	 10.4359   	 10.5682   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 36, k: 2500)   	 0.0312897 	 800       	 230.108   	 0         	 44.3444   	 5.18911   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 86, r: 86, r2: 2500, leftOrthog: 0)        	 0.0306723 	 100       	 120.565   	 0         	 17.2088   	 7.006     
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4300, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0304927 	 100       	 72.4144   	 0         	 5.70629   	 12.6903   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 86, n: 50, r: 86, r2: 50)             	 0.0288117 	 100       	 128.351   	 0         	 16.3572   	 7.84672   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 4300, leftOrthog: 0)        	 0.0276376 	 100       	 77.7926   	 0         	 18.815    	 4.13462   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 2500, m: 36, k: 50)	 0.0206851 	 800       	 348.076   	 0         	 67.0782   	 5.18911   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 36, m: 36)                                                                  	 0.0202441 	 909       	 2.79326   	 0         	 1.40956   	 1.98165   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 4300, m: 36)                                                                       	 0.0176887 	 700       	 0         	 0         	 98.0149   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 36, reductionFactor: 37, colBlockingSize: 12)                  	 0.0158622 	 100       	 41.9559   	 0         	 4.60445   	 9.11203   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 1800, k: 36) 	 0.0123344 	 800       	 420.288   	 0         	 81.2557   	 5.17241   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 36, n: 50, r2: 36)                                                                                         	 0.0121982 	 808       	 0         	 0         	 68.6767   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 4300, m: 36)                                                              	 0.0114248 	 700       	 0         	 0         	 151.754   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 36, n: 50, r2: 36)                   	 0.0102666 	 700       	 0         	 0         	 168.874   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 36, m: 1800, k: 36) 	 0.00942568	 700       	 346.492   	 0         	 77.7681   	 4.45545   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00731915	 9         	 0.204941  	 0         	 0.074271  	 2.75937   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 86, reductionFactor: 37, colBlockingSize: 12)                    	 0.00689013	 100       	 11.0243   	 0         	 1.358     	 8.11804   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 36, r: 36, streamingCols: 0)                   	 0.0059147 	 100       	 54.7787   	 0         	 24.4338   	 2.24193   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 50)           	 0.00498861	 8         	 20.0457   	 0         	 3.23938   	 6.18812   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 50, Qr2: 36)       	 0.00381017	 100       	 0         	 0         	 90.2848   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 36)                                                                       	 0.00311545	 100       	 0         	 0         	 46.2213   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 0, n: 50, r2: 36)                    	 0.00300989	 100       	 0         	 0         	 47.8423   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 36, reductionFactor: 37, colBlockingSize: 12)                    	 0.0027811 	 101       	 4.83383   	 0         	 0.899488  	 5.37398   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.00274974	 8         	 37.35     	 0         	 2.96755   	 12.5861   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 36)                                                              	 0.00240774	 100       	 0         	 0         	 59.8072   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                   	 0.00208986	 8         	 23.925    	 0         	 7.69428   	 3.10945   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 86, r: 50, r2: 50, leftOrthog: 0)          	 0.00173047	 100       	 24.8487   	 0         	 8.27521   	 3.00279   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 50, r2: 50)              	 0.00105166	 100       	 23.7719   	 0         	 5.70524   	 4.16667   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 1800, cols: 36, reductionFactor: 37, colBlockingSize: 12)                  	 0.0010206 	 8         	 37.5599   	 0         	 4.14477   	 9.062     
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                   	 0.000915203	 100       	 0.546327  	 0         	 2.18531   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 36)                                                                                          	 0.000837107	 201       	 0         	 0         	 6.91525   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 36, k: 50)     	 0.000827491	 100       	 21.7525   	 0         	 5.89735   	 3.68852   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 36, r1_: 36, n: 50, r2: 36)           	 0.000819011	 8         	 45.573    	 0         	 10.2286   	 4.45545   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 36, n: 50, r2: 1)                                                                                          	 0.000796996	 201       	 0         	 0         	 7.26327   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 36, k: 50)  	 0.000715734	 100       	 25.149    	 0         	 6.81818   	 3.68852   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 36)   	 0.000610185	 100       	 29.4993   	 0         	 7.99757   	 3.68852   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 36, m: 50, k: 36)   	 0.000543274	 100       	 23.8554   	 0         	 7.20962   	 3.30882   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 36, n: 50, r2: 1)                    	 0.000512778	 100       	 0         	 0         	 13.4171   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                          	 0.000498059	 100       	 0         	 0         	 8.03118   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 1, r1low: 0, n: 50, r2: 36)                     	 0.000482279	 100       	 0         	 0         	 5.97165   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 1, Xr2: 50, Qr1: 1, Qr2: 0)          	 0.000438536	 100       	 0         	 0         	 9.12126   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                            	 0.000438397	 100       	 1.14052   	 0         	 13.6862   	 0.0833333 
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 36, m: 36, fromLeft: 0)                	 0.000433278	 809       	 0         	 0         	 38.7175   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 36)                                                                	 0.000421027	 101       	 0         	 0         	 6.90882   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000417513	 101       	 0.604772  	 0         	 9.67635   	 0.0625    
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 1800, Xcols: 36, r: 36, streamingCols: 0)                   	 0.00040493	 8         	 46.088    	 0         	 20.586    	 2.23881   
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 36, n: 50, r2: 1)                                                                                 	 0.000348431	 101       	 0.521768  	 0         	 8.34828   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000331725	 100       	 0.753636  	 0         	 12.0582   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                              	 0.000267377	 8         	 0         	 0         	 59.8406   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 50)                                                                       	 0.000265575	 8         	 0         	 0         	 60.2466   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.000143134	 1         	 1.79382   	 0         	 0.279458  	 6.41892   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 1800, m: 36)                                                                       	 0.000109513	 8         	 0         	 0         	 75.739    	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 1800, m: 36)                                                              	 7.874e-05 	 8         	 0         	 0         	 105.339   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 50, r: 50, streamingCols: 0)                     	 3.554e-05 	 1         	 3.51716   	 0         	 1.40687   	 2.5       
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                                	 2.346e-05 	 1         	 0         	 0         	 1.70503   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 36, r: 36, streamingCols: 0)                     	 2.201e-05 	 1         	 2.94412   	 0         	 1.54403   	 1.90678   
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 1.071e-05 	 1         	 0.466853  	 0         	 1.86741   	 0.25      
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 1.0541e-05	 1         	 23.7169   	 0         	 5.69206   	 4.16667   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 0)                	 1.0431e-05	 9         	 0         	 0         	 34.5125   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 36, n: 50, r2: 1)                                                                                   	 9.36e-06  	 1         	 0.384615  	 0         	 1.53846   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 0, m: 1800, k: 36)  	 7.97e-06  	 100       	 0         	 0         	 6504.39   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 36, r1_: 36, n: 50, r2: 1)            	 7.68e-06  	 1         	 16.875    	 0         	 5.1       	 3.30882   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                         	 4.531e-06 	 1         	 0         	 0         	 8.82807   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 36)                                                                         	 3.33e-06  	 1         	 0         	 0         	 8.64865   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 2.91823   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 2.9182    	 100       
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                            	 2.50555   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                        	 2.50422   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 2.08301   	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 0.738018  	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 0.628619  	 1818      
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.493444  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_leftOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                   	 0.412574  	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.409628  	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.394753  	 900       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.275247  	 918       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.136253  	 918       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.0662651 	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.0537037 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0321172 	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.0275633 	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.0229215 	 1800      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0214008 	 900       
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                       	 0.0211871 	 818       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 0.0210956 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 0.0210641 	 2         
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                              	 0.0160588 	 20        
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                              	 0.0146232 	 918       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0143304 	 1310      
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0142715 	 1000      
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.00582584	 18        
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00497303	 1818      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00302744	 6372      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00134404	 5272      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00109767	 302       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000935273	 102       
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.000443709	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000438397	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: L, orthoY: L
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m43->44  [0m[1;34m44->45  [0m[1;34m45->46  [0m[1;34m46->47  [0m[1;34m47->48  [0m[1;34m48->49  [0m[1;34m49->50  [0m[1;34m50->51  [0m[1;34m51->52  [0m[1;34m52->53  [0m[1;34m53->54  [0m[1;34m54->55  [0m[1;34m55->56  [0m[1;34m56->57  [0m[1;34m57->58  [0m[1;34m58->59  [0m[1;34m59->60  [0m[1;34m60->61  [0m[1;34m61->62  [0m[1;34m62->63  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 22729020290944 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 22728832706560 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 22728631380096 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 22728430053632 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 22728228727168 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 22728027400704 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 22727826074240 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 22727624747776 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 22727423421312 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 22727222094848 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 22727020768384 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 22726819441920 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 22726618115456 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 22726416788992 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 22726215462528 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 22726014136064 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 22725812809600 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 22725611483136 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 22725410156672 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 22725208830208 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 22725007503744 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 22724806177280 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 22724604850816 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 22724403524352 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 22724202197888 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 22724000871424 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 22723799544960 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 22723598218496 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 22723396892032 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 22723195565568 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 22722994239104 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 22722792912640 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 22722591582080 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 22722390255616 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 22722188929152 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 22721987602688 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 22721786276224 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 22721584949760 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 22721383623296 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 22721182296832 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 22720980970368 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 22720779643904 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 22720578317440 -> hwthread 43 - OK[0m[1;34m
[0m[1;34m	threadid 22720376990976 -> hwthread 44 - OK[0m[1;34m
[0m[1;34m	threadid 22720175664512 -> hwthread 45 - OK[0m[1;34m
[0m[1;34m	threadid 22719974338048 -> hwthread 46 - OK[0m[1;34m
[0m[1;34m	threadid 22719773011584 -> hwthread 47 - OK[0m[1;34m
[0m[1;34m	threadid 22719571685120 -> hwthread 48 - OK[0m[1;34m
[0m[1;34m	threadid 22719370358656 -> hwthread 49 - OK[0m[1;34m
[0m[1;34m	threadid 22719169032192 -> hwthread 50 - OK[0m[1;34m
[0m[1;34m	threadid 22718967705728 -> hwthread 51 - OK[0m[1;34m
[0m[1;34m	threadid 22718766379264 -> hwthread 52 - OK[0m[1;34m
[0m[1;34m	threadid 22718565052800 -> hwthread 53 - OK[0m[1;34m
[0m[1;34m	threadid 22718363726336 -> hwthread 54 - OK[0m[1;34m
[0m[1;34m	threadid 22718162399872 -> hwthread 55 - OK[0m[1;34m
[0m[1;34m	threadid 22717961073408 -> hwthread 56 - OK[0m[1;34m
[0m[1;34m	threadid 22717759746944 -> hwthread 57 - OK[0m[1;34m
[0m[1;34m	threadid 22717558420480 -> hwthread 58 - OK[0m[1;34m
[0m[1;34m	threadid 22717357094016 -> hwthread 59 - OK[0m[1;34m
[0m[1;34m	threadid 22717155767552 -> hwthread 60 - OK[0m[1;34m
[0m[1;34m	threadid 22716954441088 -> hwthread 61 - OK[0m[1;34m
[0m[1;34m	threadid 22716753114624 -> hwthread 62 - OK[0m[1;34m
[0m[1;34m	threadid 22716551788160 -> hwthread 63 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 22728914630400 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 22728908039936 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 87, m: 87)                                                                 	 0.676211  	 700       	 4.77168   	 0         	 0.188767  	 25.2781   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4350, cols: 87, reductionFactor: 37, colBlockingSize: 12)                  	 0.39735   	 600       	 102.122   	 0         	 4.66312   	 21.8998   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 87, n: 50, r: 87, r2: 87)             	 0.353477  	 600       	 111.776   	 0         	 10.381    	 10.7673   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 87, r: 87, r2: 4350, leftOrthog: 0)        	 0.336096  	 600       	 117.556   	 0         	 16.4309   	 7.15461   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4350, cols: 37, reductionFactor: 37, colBlockingSize: 12)                  	 0.117234  	 700       	 73.038    	 0         	 7.75361   	 9.41988   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 87, reductionFactor: 37, colBlockingSize: 12)                  	 0.0634016 	 100       	 61.3042   	 0         	 2.83991   	 21.5866   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 4350, Xcols: 37, r: 37, streamingCols: 0)                   	 0.0592852 	 700       	 70.3144   	 0         	 30.4709   	 2.30759   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 87, Qr2: 37)       	 0.04774   	 700       	 0         	 0         	 77.9354   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 87)                                                                 	 0.047708  	 100       	 3.19129   	 0         	 0.188648  	 16.9167   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0361162 	 100       	 2.42274   	 0         	 0.167238  	 14.4868   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r: 87, r2: 87)             	 0.0329128 	 100       	 114.986   	 0         	 10.7574   	 10.689    
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 87, r: 87, r2: 2500, leftOrthog: 0)        	 0.031124  	 100       	 121.594   	 0         	 17.1607   	 7.08561   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 37, k: 2500)   	 0.0309159 	 800       	 239.359   	 0         	 45.4083   	 5.27126   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 87, n: 50, r: 87, r2: 50)             	 0.028775  	 100       	 131.52    	 0         	 16.6895   	 7.88043   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 4350, leftOrthog: 0)        	 0.028078  	 100       	 77.4629   	 0         	 18.7336   	 4.13498   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4350, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0268172 	 100       	 83.2967   	 0         	 6.56296   	 12.692    
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 37, m: 37)                                                                  	 0.022186  	 909       	 2.76707   	 0         	 1.3583    	 2.03716   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 2500, m: 37, k: 50)	 0.0207123 	 800       	 357.275   	 0         	 67.778    	 5.27126   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 4350, m: 37)                                                                       	 0.0175604 	 700       	 0         	 0         	 102.654   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 37, reductionFactor: 37, colBlockingSize: 12)                  	 0.0164996 	 100       	 42.607    	 0         	 4.55132   	 9.36145   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 1850, k: 37) 	 0.0123212 	 800       	 444.439   	 0         	 84.5635   	 5.25568   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 37, n: 50, r2: 37)                                                                                         	 0.0121989 	 808       	 0         	 0         	 72.5411   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 4350, m: 37)                                                              	 0.0111486 	 700       	 0         	 0         	 161.692   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 37, m: 1850, k: 37) 	 0.00995706	 700       	 356.1     	 0         	 77.7646   	 4.57921   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 37, n: 50, r2: 37)                   	 0.00968638	 700       	 0         	 0         	 186.101   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 87, reductionFactor: 37, colBlockingSize: 12)                    	 0.00685289	 100       	 11.3435   	 0         	 1.39141   	 8.1525    
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 37, r: 37, streamingCols: 0)                   	 0.00585473	 100       	 58.457    	 0         	 25.3722   	 2.30398   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 50)           	 0.00507318	 8         	 19.7115   	 0         	 3.18538   	 6.18812   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 50, Qr2: 37)       	 0.00378211	 100       	 0         	 0         	 92.012    	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00352415	 9         	 0.425633  	 0         	 0.15425   	 2.75937   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 37)                                                                       	 0.00322204	 100       	 0         	 0         	 45.9337   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 0, n: 50, r2: 37)                    	 0.00301908	 100       	 0         	 0         	 49.0216   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.00274586	 8         	 37.4027   	 0         	 2.97174   	 12.5861   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 37)                                                              	 0.00266201	 100       	 0         	 0         	 55.5972   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 37, reductionFactor: 37, colBlockingSize: 12)                    	 0.00255765	 101       	 5.55221   	 0         	 1.01693   	 5.45977   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                   	 0.00217957	 8         	 22.9404   	 0         	 7.37762   	 3.10945   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 87, r: 50, r2: 50, leftOrthog: 0)          	 0.0016987 	 100       	 25.6078   	 0         	 8.50063   	 3.01247   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 1850, cols: 37, reductionFactor: 37, colBlockingSize: 12)                  	 0.00106362	 8         	 39.1284   	 0         	 4.20116   	 9.31373   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 50, r2: 50)              	 0.00102377	 100       	 24.4196   	 0         	 5.8607    	 4.16667   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 37, r1_: 37, n: 50, r2: 37)           	 0.000875922	 8         	 46.2626   	 0         	 10.1027   	 4.57921   
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                   	 0.000874544	 100       	 0.571727  	 0         	 2.28691   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 37)                                                                                          	 0.000847551	 201       	 0         	 0         	 7.01975   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 37, k: 50)     	 0.00083818	 100       	 22.0716   	 0         	 5.91758   	 3.72984   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 37, n: 50, r2: 1)                                                                                          	 0.000770609	 201       	 0         	 0         	 7.72065   	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 37, m: 37, fromLeft: 0)                	 0.000720119	 809       	 0         	 0         	 24.6075   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 37, k: 50)  	 0.000675823	 100       	 27.374    	 0         	 7.3392    	 3.72984   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 37)   	 0.000634162	 100       	 29.1724   	 0         	 7.82135   	 3.72984   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 37, m: 50, k: 37)   	 0.000562041	 100       	 24.3577   	 0         	 7.21513   	 3.37591   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                          	 0.000531474	 100       	 0         	 0         	 7.52624   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 37, n: 50, r2: 1)                    	 0.000503881	 100       	 0         	 0         	 13.8128   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 1, r1low: 0, n: 50, r2: 37)                     	 0.000470879	 100       	 0         	 0         	 6.28612   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 1, Xr2: 50, Qr1: 1, Qr2: 0)          	 0.000467122	 100       	 0         	 0         	 8.56307   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 37)                                                                	 0.000438827	 101       	 0         	 0         	 6.81271   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                            	 0.000415643	 100       	 1.20296   	 0         	 14.4355   	 0.0833333 
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 1850, Xcols: 37, r: 37, streamingCols: 0)                   	 0.00041147	 8         	 49.241    	 0         	 21.3999   	 2.301     
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000406375	 101       	 0.621347  	 0         	 9.94156   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 37, n: 50, r2: 1)                                                                                 	 0.000367258	 101       	 0.50877   	 0         	 8.14033   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000331769	 100       	 0.753536  	 0         	 12.0566   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                              	 0.000267946	 8         	 0         	 0         	 59.7135   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 50)                                                                       	 0.000219755	 8         	 0         	 0         	 72.8084   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 1850, m: 37)                                                                       	 0.000114013	 8         	 0         	 0         	 76.8474   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.000105662	 1         	 2.42998   	 0         	 0.378566  	 6.41892   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 1850, m: 37)                                                              	 8.1883e-05	 8         	 0         	 0         	 107.001   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 50, r: 50, streamingCols: 0)                     	 3.3961e-05	 1         	 3.68069   	 0         	 1.47228   	 2.5       
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                                	 2.5821e-05	 1         	 0         	 0         	 1.54913   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 37, r: 37, streamingCols: 0)                     	 2.202e-05 	 1         	 3.10854   	 0         	 1.59292   	 1.95148   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 1.0651e-05	 1         	 23.472    	 0         	 5.63327   	 4.16667   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 0)                	 1.0181e-05	 9         	 0         	 0         	 35.36     	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 37, r1_: 37, n: 50, r2: 1)            	 8.61e-06  	 1         	 15.9001   	 0         	 4.70987   	 3.37591   
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 37, n: 50, r2: 1)                                                                                   	 8.451e-06 	 1         	 0.437818  	 0         	 1.75127   	 0.25      
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 8.18e-06  	 1         	 0.611247  	 0         	 2.44499   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 0, m: 1850, k: 37)  	 7.781e-06 	 100       	 0         	 0         	 7037.66   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                         	 4.2e-06   	 1         	 0         	 0         	 9.52381   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 37)                                                                         	 3.881e-06 	 1         	 0         	 0         	 7.6269    	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 2.98323   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 2.9832    	 100       
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                            	 2.5632    	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                        	 2.5619    	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 2.13669   	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 0.760035  	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 0.634628  	 1818      
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.495044  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_leftOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                   	 0.419922  	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.416189  	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.396996  	 900       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.279652  	 918       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.140755  	 918       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.0677869 	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.0519893 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0317541 	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.0257102 	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.0234822 	 1800      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0213882 	 900       
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                       	 0.0211243 	 818       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 0.0175238 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 0.0174962 	 2         
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                              	 0.0167409 	 20        
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                              	 0.0146251 	 918       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0143485 	 1310      
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0136802 	 1000      
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.00596836	 18        
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00431861	 1818      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00318272	 6372      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00130194	 5272      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.0011054 	 302       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000891175	 102       
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.0007303 	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000415643	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: L, orthoY: L
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m43->44  [0m[1;34m44->45  [0m[1;34m45->46  [0m[1;34m46->47  [0m[1;34m47->48  [0m[1;34m48->49  [0m[1;34m49->50  [0m[1;34m50->51  [0m[1;34m51->52  [0m[1;34m52->53  [0m[1;34m53->54  [0m[1;34m54->55  [0m[1;34m55->56  [0m[1;34m56->57  [0m[1;34m57->58  [0m[1;34m58->59  [0m[1;34m59->60  [0m[1;34m60->61  [0m[1;34m61->62  [0m[1;34m62->63  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 22840195139456 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 22839964985344 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 22839763658880 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 22839562332416 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 22839361005952 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 22839159679488 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 22838958353024 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 22838757026560 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 22838555700096 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 22838354373632 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 22838153047168 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 22837951720704 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 22837750394240 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 22837549067776 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 22837347741312 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 22837146414848 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 22836945088384 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 22836743761920 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 22836542435456 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 22836341108992 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 22836139782528 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 22835938456064 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 22835737129600 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 22835535803136 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 22835334476672 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 22835133150208 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 22834931823744 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 22834730497280 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 22834529170816 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 22834327844352 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 22834126517888 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 22833925191424 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 22833723860864 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 22833522534400 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 22833321207936 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 22833119881472 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 22832918555008 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 22832717228544 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 22832515902080 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 22832314575616 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 22832113249152 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 22831911922688 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 22831710596224 -> hwthread 43 - OK[0m[1;34m
[0m[1;34m	threadid 22831509269760 -> hwthread 44 - OK[0m[1;34m
[0m[1;34m	threadid 22831307943296 -> hwthread 45 - OK[0m[1;34m
[0m[1;34m	threadid 22831106616832 -> hwthread 46 - OK[0m[1;34m
[0m[1;34m	threadid 22830905290368 -> hwthread 47 - OK[0m[1;34m
[0m[1;34m	threadid 22830703963904 -> hwthread 48 - OK[0m[1;34m
[0m[1;34m	threadid 22830502637440 -> hwthread 49 - OK[0m[1;34m
[0m[1;34m	threadid 22830301310976 -> hwthread 50 - OK[0m[1;34m
[0m[1;34m	threadid 22830099984512 -> hwthread 51 - OK[0m[1;34m
[0m[1;34m	threadid 22829898658048 -> hwthread 52 - OK[0m[1;34m
[0m[1;34m	threadid 22829697331584 -> hwthread 53 - OK[0m[1;34m
[0m[1;34m	threadid 22829496005120 -> hwthread 54 - OK[0m[1;34m
[0m[1;34m	threadid 22829294678656 -> hwthread 55 - OK[0m[1;34m
[0m[1;34m	threadid 22829093352192 -> hwthread 56 - OK[0m[1;34m
[0m[1;34m	threadid 22828892025728 -> hwthread 57 - OK[0m[1;34m
[0m[1;34m	threadid 22828690699264 -> hwthread 58 - OK[0m[1;34m
[0m[1;34m	threadid 22828489372800 -> hwthread 59 - OK[0m[1;34m
[0m[1;34m	threadid 22828288046336 -> hwthread 60 - OK[0m[1;34m
[0m[1;34m	threadid 22828086719872 -> hwthread 61 - OK[0m[1;34m
[0m[1;34m	threadid 22827885393408 -> hwthread 62 - OK[0m[1;34m
[0m[1;34m	threadid 22827684066944 -> hwthread 63 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 22840089478912 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 22840082888448 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 88, m: 88)                                                                 	 0.670383  	 700       	 4.98105   	 0         	 0.194802  	 25.5698   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4400, cols: 88, reductionFactor: 37, colBlockingSize: 12)                  	 0.409397  	 600       	 102.574   	 0         	 4.63054   	 22.1516   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 88, n: 50, r: 88, r2: 88)             	 0.358938  	 600       	 113.915   	 0         	 10.4594   	 10.8911   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 88, r: 88, r2: 4400, leftOrthog: 0)        	 0.351862  	 600       	 116.206   	 0         	 16.0575   	 7.23684   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4400, cols: 38, reductionFactor: 37, colBlockingSize: 12)                  	 0.123649  	 700       	 73.8818   	 0         	 7.63777   	 9.67322   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 88, reductionFactor: 37, colBlockingSize: 12)                  	 0.064295  	 100       	 61.8501   	 0         	 2.83374   	 21.8263   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 4400, Xcols: 38, r: 38, streamingCols: 0)                   	 0.0610225 	 700       	 72.8833   	 0         	 30.7539   	 2.36988   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 88, Qr2: 38)       	 0.048679  	 700       	 0         	 0         	 78.1578   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 88)                                                                 	 0.0471612 	 100       	 3.26539   	 0         	 0.192531  	 16.9604   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0370886 	 100       	 2.35922   	 0         	 0.162853  	 14.4868   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 38, k: 2500)   	 0.0337756 	 800       	 225.015   	 0         	 42.047    	 5.35151   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r: 88, r2: 88)             	 0.0335696 	 100       	 115.343   	 0         	 10.6702   	 10.8097   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 88, r: 88, r2: 2500, leftOrthog: 0)        	 0.0332483 	 100       	 116.457   	 0         	 16.2532   	 7.16519   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 88, n: 50, r: 88, r2: 50)             	 0.0308487 	 100       	 125.516   	 0         	 15.8607   	 7.91367   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 4400, leftOrthog: 0)        	 0.028786  	 100       	 76.4261   	 0         	 18.4812   	 4.13534   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4400, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0268876 	 100       	 84.0335   	 0         	 6.62015   	 12.6936   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 38, m: 38)                                                                  	 0.0225754 	 909       	 2.94588   	 0         	 1.40767   	 2.09273   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 2500, m: 38, k: 50)	 0.0218459 	 800       	 347.892   	 0         	 65.0081   	 5.35151   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 4400, m: 38)                                                                       	 0.018439  	 700       	 0         	 0         	 101.559   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 38, reductionFactor: 37, colBlockingSize: 12)                  	 0.0170145 	 100       	 43.5814   	 0         	 4.53469   	 9.61067   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 4400, m: 38)                                                              	 0.0130791 	 700       	 0         	 0         	 143.178   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 1900, k: 38) 	 0.0128722 	 800       	 448.718   	 0         	 84.0755   	 5.33708   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 38, n: 50, r2: 38)                                                                                         	 0.0123834 	 808       	 0         	 0         	 75.375    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 38, n: 50, r2: 38)                   	 0.0110536 	 700       	 0         	 0         	 169.414   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 38, m: 1900, k: 38) 	 0.00923184	 700       	 416.064   	 0         	 88.4684   	 4.70297   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 88, reductionFactor: 37, colBlockingSize: 12)                    	 0.00686612	 100       	 11.5834   	 0         	 1.41495   	 8.18645   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 38, r: 38, streamingCols: 0)                   	 0.00602667	 100       	 59.9004   	 0         	 25.3171   	 2.36601   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 50)           	 0.00503068	 8         	 19.878    	 0         	 3.21229   	 6.18812   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 50, Qr2: 38)       	 0.00373393	 100       	 0         	 0         	 94.2706   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00354069	 9         	 0.423645  	 0         	 0.153529  	 2.75937   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 0, n: 50, r2: 38)                    	 0.0030629 	 100       	 0         	 0         	 49.6263   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 38)                                                                       	 0.00298962	 100       	 0         	 0         	 50.8426   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.00269639	 8         	 38.089    	 0         	 3.02627   	 12.5861   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 38, reductionFactor: 37, colBlockingSize: 12)                    	 0.00259584	 101       	 5.77022   	 0         	 1.04088   	 5.54361   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 38)                                                              	 0.00249409	 100       	 0         	 0         	 60.9442   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                   	 0.00200509	 8         	 24.9365   	 0         	 8.01959   	 3.10945   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 88, r: 50, r2: 50, leftOrthog: 0)          	 0.00173751	 100       	 25.3236   	 0         	 8.37982   	 3.02198   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 1900, cols: 38, reductionFactor: 37, colBlockingSize: 12)                  	 0.0011521 	 8         	 39.132    	 0         	 4.09097   	 9.56545   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 50, r2: 50)              	 0.00107974	 100       	 23.1538   	 0         	 5.55691   	 4.16667   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 38, r1_: 38, n: 50, r2: 38)           	 0.000910423	 8         	 48.2167   	 0         	 10.2524   	 4.70297   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 38, k: 50)     	 0.000859102	 100       	 22.1161   	 0         	 5.86659   	 3.76984   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 38)                                                                                          	 0.000846759	 201       	 0         	 0         	 7.21622   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                   	 0.000809551	 100       	 0.617626  	 0         	 2.47051   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 38, n: 50, r2: 1)                                                                                          	 0.000804744	 201       	 0         	 0         	 7.59297   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 38, k: 50)  	 0.000696799	 100       	 27.2675   	 0         	 7.23308   	 3.76984   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 38, m: 38, fromLeft: 0)                	 0.000627502	 809       	 0         	 0         	 29.7866   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 38)   	 0.00060681	 100       	 31.3113   	 0         	 8.30573   	 3.76984   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 38, m: 50, k: 38)   	 0.000576054	 100       	 25.0671   	 0         	 7.28265   	 3.44203   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                          	 0.00051076	 100       	 0         	 0         	 7.83147   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 38, n: 50, r2: 1)                    	 0.000498667	 100       	 0         	 0         	 14.1176   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 1, r1low: 0, n: 50, r2: 38)                     	 0.000497251	 100       	 0         	 0         	 6.11361   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 1, Xr2: 50, Qr1: 1, Qr2: 0)          	 0.000445473	 100       	 0         	 0         	 8.97922   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 1900, Xcols: 38, r: 38, streamingCols: 0)                   	 0.000438151	 8         	 50.0941   	 0         	 21.1977   	 2.36318   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 38)                                                                	 0.000421929	 101       	 0         	 0         	 7.27705   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                            	 0.000395198	 100       	 1.26519   	 0         	 15.1823   	 0.0833333 
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000376378	 101       	 0.670868  	 0         	 10.7339   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 38, n: 50, r2: 1)                                                                                 	 0.000354443	 101       	 0.541413  	 0         	 8.66261   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.0003283 	 100       	 0.761499  	 0         	 12.184    	 0.0625    
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                              	 0.000277669	 8         	 0         	 0         	 57.6226   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 50)                                                                       	 0.000237466	 8         	 0         	 0         	 67.3781   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.000123373	 1         	 2.08114   	 0         	 0.32422   	 6.41892   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 1900, m: 38)                                                                       	 0.00011531	 8         	 0         	 0         	 80.1457   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 1900, m: 38)                                                              	 6.8762e-05	 8         	 0         	 0         	 134.4     	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 50, r: 50, streamingCols: 0)                     	 3.5781e-05	 1         	 3.49347   	 0         	 1.39739   	 2.5       
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                                	 2.2321e-05	 1         	 0         	 0         	 1.79203   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 38, r: 38, streamingCols: 0)                     	 2.004e-05 	 1         	 3.60279   	 0         	 1.80519   	 1.9958    
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 9.971e-06 	 1         	 25.0727   	 0         	 6.01745   	 4.16667   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 0)                	 9.93e-06  	 9         	 0         	 0         	 36.2538   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 38, n: 50, r2: 1)                                                                                   	 9.15e-06  	 1         	 0.415301  	 0         	 1.6612    	 0.25      
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 8.37e-06  	 1         	 0.597372  	 0         	 2.38949   	 0.25      
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 38, r1_: 38, n: 50, r2: 1)            	 8.011e-06 	 1         	 18.0252   	 0         	 5.2368    	 3.44203   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 0, m: 1900, k: 38)  	 7.572e-06 	 100       	 0         	 0         	 7628.1    	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                         	 4.62e-06  	 1         	 0         	 0         	 8.65801   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 38)                                                                         	 3.74e-06  	 1         	 0         	 0         	 8.12834   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 3.05496   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 3.05491   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                            	 2.61815   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                        	 2.61691   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 2.18119   	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 0.754633  	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 0.654677  	 1818      
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.508121  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_leftOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                   	 0.436692  	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.424436  	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.415634  	 900       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.291451  	 918       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.147722  	 918       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.0695483 	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.0528584 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0346347 	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.0261161 	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.0232945 	 1800      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0225427 	 900       
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                       	 0.0217897 	 818       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 0.0174752 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 0.0174464 	 2         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                              	 0.0163639 	 918       
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                              	 0.016353  	 20        
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0151124 	 1000      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0145457 	 1310      
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.00595908	 18        
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00575937	 1818      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.0031346 	 6372      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00129116	 5272      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00105912	 302       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000827071	 102       
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.000637432	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000395198	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: L, orthoY: L
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m43->44  [0m[1;34m44->45  [0m[1;34m45->46  [0m[1;34m46->47  [0m[1;34m47->48  [0m[1;34m48->49  [0m[1;34m49->50  [0m[1;34m50->51  [0m[1;34m51->52  [0m[1;34m52->53  [0m[1;34m53->54  [0m[1;34m54->55  [0m[1;34m55->56  [0m[1;34m56->57  [0m[1;34m57->58  [0m[1;34m58->59  [0m[1;34m59->60  [0m[1;34m60->61  [0m[1;34m61->62  [0m[1;34m62->63  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 22527983523712 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 22527774550016 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 22527573223552 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 22527371897088 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 22527170570624 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 22526969244160 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 22526767917696 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 22526566591232 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 22526365264768 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 22526163938304 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 22525962611840 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 22525761285376 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 22525559958912 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 22525358632448 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 22525157305984 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 22524955979520 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 22524754653056 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 22524553326592 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 22524352000128 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 22524150673664 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 22523949347200 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 22523748020736 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 22523546694272 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 22523345367808 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 22523144041344 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 22522942714880 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 22522741388416 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 22522540061952 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 22522338735488 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 22522137409024 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 22521936082560 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 22521734756096 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 22521533425536 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 22521332099072 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 22521130772608 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 22520929446144 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 22520728119680 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 22520526793216 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 22520325466752 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 22520124140288 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 22519922813824 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 22519721487360 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 22519520160896 -> hwthread 43 - OK[0m[1;34m
[0m[1;34m	threadid 22519318834432 -> hwthread 44 - OK[0m[1;34m
[0m[1;34m	threadid 22519117507968 -> hwthread 45 - OK[0m[1;34m
[0m[1;34m	threadid 22518916181504 -> hwthread 46 - OK[0m[1;34m
[0m[1;34m	threadid 22518714855040 -> hwthread 47 - OK[0m[1;34m
[0m[1;34m	threadid 22518513528576 -> hwthread 48 - OK[0m[1;34m
[0m[1;34m	threadid 22518312202112 -> hwthread 49 - OK[0m[1;34m
[0m[1;34m	threadid 22518110875648 -> hwthread 50 - OK[0m[1;34m
[0m[1;34m	threadid 22517909549184 -> hwthread 51 - OK[0m[1;34m
[0m[1;34m	threadid 22517708222720 -> hwthread 52 - OK[0m[1;34m
[0m[1;34m	threadid 22517506896256 -> hwthread 53 - OK[0m[1;34m
[0m[1;34m	threadid 22517305569792 -> hwthread 54 - OK[0m[1;34m
[0m[1;34m	threadid 22517104243328 -> hwthread 55 - OK[0m[1;34m
[0m[1;34m	threadid 22516902916864 -> hwthread 56 - OK[0m[1;34m
[0m[1;34m	threadid 22516701590400 -> hwthread 57 - OK[0m[1;34m
[0m[1;34m	threadid 22516500263936 -> hwthread 58 - OK[0m[1;34m
[0m[1;34m	threadid 22516298937472 -> hwthread 59 - OK[0m[1;34m
[0m[1;34m	threadid 22516097611008 -> hwthread 60 - OK[0m[1;34m
[0m[1;34m	threadid 22515896284544 -> hwthread 61 - OK[0m[1;34m
[0m[1;34m	threadid 22515694958080 -> hwthread 62 - OK[0m[1;34m
[0m[1;34m	threadid 22515493631616 -> hwthread 63 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 22527877863168 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 22527871272704 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 89, m: 89)                                                                 	 0.700463  	 700       	 4.93152   	 0         	 0.19069   	 25.8615   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4450, cols: 89, reductionFactor: 37, colBlockingSize: 12)                  	 0.420533  	 600       	 103.301   	 0         	 4.61096   	 22.4033   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 89, n: 50, r: 89, r2: 89)             	 0.37534   	 600       	 112.693   	 0         	 10.231    	 11.0149   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 89, r: 89, r2: 4450, leftOrthog: 0)        	 0.361216  	 600       	 117.099   	 0         	 15.9992   	 7.31908   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4450, cols: 39, reductionFactor: 37, colBlockingSize: 12)                  	 0.128705  	 700       	 75.6141   	 0         	 7.61738   	 9.92652   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 89, reductionFactor: 37, colBlockingSize: 12)                  	 0.0674343 	 100       	 60.3186   	 0         	 2.73358   	 22.0658   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 4450, Xcols: 39, r: 39, streamingCols: 0)                   	 0.063324  	 700       	 74.8202   	 0         	 30.7627   	 2.43217   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 89, Qr2: 39)       	 0.0487738 	 700       	 0         	 0         	 79.751    	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 89)                                                                 	 0.0474583 	 100       	 3.28183   	 0         	 0.193012  	 17.0033   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0369893 	 100       	 2.36555   	 0         	 0.16329   	 14.4868   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 89, r: 89, r2: 2500, leftOrthog: 0)        	 0.0361981 	 100       	 109.412   	 0         	 15.1023   	 7.24473   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 39, k: 2500)   	 0.0346703 	 800       	 224.977   	 0         	 41.4326   	 5.42994   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 4450, leftOrthog: 0)        	 0.0339937 	 100       	 65.4534   	 0         	 15.8265   	 4.13569   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r: 89, r2: 89)             	 0.0336233 	 100       	 117.79    	 0         	 10.7763   	 10.9304   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 89, n: 50, r: 89, r2: 50)             	 0.0309791 	 100       	 127.844   	 0         	 16.0883   	 7.94643   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4450, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0266065 	 100       	 85.8864   	 0         	 6.76527   	 12.6952   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 39, m: 39)                                                                  	 0.024399  	 909       	 2.94662   	 0         	 1.3716    	 2.14831   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 2500, m: 39, k: 50)	 0.0224713 	 800       	 347.109   	 0         	 63.925    	 5.42994   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 4450, m: 39)                                                                       	 0.0192584 	 700       	 0         	 0         	 100.931   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 39, reductionFactor: 37, colBlockingSize: 12)                  	 0.0177619 	 100       	 43.9736   	 0         	 4.45993   	 9.8597    
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 39, n: 50, r2: 39)                                                                                         	 0.0127627 	 808       	 0         	 0         	 77.035    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 1950, k: 39) 	 0.0126107 	 800       	 482.447   	 0         	 89.0671   	 5.41667   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 4450, m: 39)                                                              	 0.0120327 	 700       	 0         	 0         	 161.54    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 39, n: 50, r2: 39)                   	 0.0116531 	 700       	 0         	 0         	 166.802   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 39, m: 1950, k: 39) 	 0.00916456	 700       	 453.086   	 0         	 93.8701   	 4.82673   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 89, reductionFactor: 37, colBlockingSize: 12)                    	 0.00699679	 100       	 11.6269   	 0         	 1.41448   	 8.21991   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 39, r: 39, streamingCols: 0)                   	 0.00622597	 100       	 61.0749   	 0         	 25.1541   	 2.42803   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 50)           	 0.0048883 	 8         	 20.457    	 0         	 3.30585   	 6.18812   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 50, Qr2: 39)       	 0.00367966	 100       	 0         	 0         	 96.7479   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00357482	 9         	 0.4196    	 0         	 0.152064  	 2.75937   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 39)                                                                       	 0.00339193	 100       	 0         	 0         	 45.9914   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 39)                                                              	 0.00286337	 100       	 0         	 0         	 54.4812   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.00278093	 8         	 36.931    	 0         	 2.93427   	 12.5861   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 39, reductionFactor: 37, colBlockingSize: 12)                    	 0.00276646	 101       	 5.70306   	 0         	 1.01377   	 5.62557   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                   	 0.00214688	 8         	 23.2897   	 0         	 7.48996   	 3.10945   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 0, n: 50, r2: 39)                    	 0.00206784	 100       	 0         	 0         	 75.4411   	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 89, r: 50, r2: 50, leftOrthog: 0)          	 0.00187407	 100       	 23.7451   	 0         	 7.83323   	 3.03134   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 1950, cols: 39, reductionFactor: 37, colBlockingSize: 12)                  	 0.0011656 	 8         	 41.8135   	 0         	 4.25922   	 9.81717   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 50, r2: 50)              	 0.00103975	 100       	 24.0441   	 0         	 5.7706    	 4.16667   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 39, r1_: 39, n: 50, r2: 39)           	 0.000965028	 8         	 49.1749   	 0         	 10.188    	 4.82673   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 39, k: 50)     	 0.000897274	 100       	 21.7325   	 0         	 5.70617   	 3.80859   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 39)                                                                                          	 0.000829055	 201       	 0         	 0         	 7.56427   	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 39, m: 39, fromLeft: 0)                	 0.000790507	 809       	 0         	 0         	 24.9053   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                   	 0.000783801	 100       	 0.637917  	 0         	 2.55167   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 39, n: 50, r2: 1)                                                                                          	 0.000779462	 201       	 0         	 0         	 8.04555   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 39, k: 50)  	 0.000696029	 100       	 28.0161   	 0         	 7.35602   	 3.80859   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 39)   	 0.000636846	 100       	 30.6196   	 0         	 8.03962   	 3.80859   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 39, m: 50, k: 39)   	 0.000552345	 100       	 27.5371   	 0         	 7.85161   	 3.50719   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 39, n: 50, r2: 1)                    	 0.000508702	 100       	 0         	 0         	 13.9964   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                          	 0.000508391	 100       	 0         	 0         	 7.86796   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 1, r1low: 0, n: 50, r2: 39)                     	 0.000459332	 100       	 0         	 0         	 6.79247   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 1950, Xcols: 39, r: 39, streamingCols: 0)                   	 0.000452693	 8         	 52.4143   	 0         	 21.6108   	 2.42537   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 1, Xr2: 50, Qr1: 1, Qr2: 0)          	 0.000450083	 100       	 0         	 0         	 8.88725   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 39, n: 50, r2: 1)                                                                                 	 0.000414429	 101       	 0.475232  	 0         	 7.60371   	 0.0625    
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                            	 0.000399437	 100       	 1.25176   	 0         	 15.0211   	 0.0833333 
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 39)                                                                	 0.000399348	 101       	 0         	 0         	 7.89086   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.00039322	 101       	 0.642134  	 0         	 10.2741   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000328524	 100       	 0.760979  	 0         	 12.1757   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 50)                                                                       	 0.000273675	 8         	 0         	 0         	 58.4635   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                              	 0.000202784	 8         	 0         	 0         	 78.9017   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.000134704	 1         	 1.90608   	 0         	 0.296947  	 6.41892   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 1950, m: 39)                                                                       	 0.000118212	 8         	 0         	 0         	 82.347    	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 1950, m: 39)                                                              	 7.0062e-05	 8         	 0         	 0         	 138.94    	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 50, r: 50, streamingCols: 0)                     	 3.4691e-05	 1         	 3.60324   	 0         	 1.4413    	 2.5       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 39, r: 39, streamingCols: 0)                     	 2.527e-05 	 1         	 3.0095    	 0         	 1.47543   	 2.03975   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                                	 2.3251e-05	 1         	 0         	 0         	 1.72036   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 1.1731e-05	 1         	 21.3111   	 0         	 5.11465   	 4.16667   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 0)                	 9.95e-06  	 9         	 0         	 0         	 36.1809   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 39, n: 50, r2: 1)                                                                                   	 9.41e-06  	 1         	 0.414453  	 0         	 1.65781   	 0.25      
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 9.37e-06  	 1         	 0.533618  	 0         	 2.13447   	 0.25      
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 39, r1_: 39, n: 50, r2: 1)            	 9.03e-06  	 1         	 16.8439   	 0         	 4.80266   	 3.50719   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 0, m: 1950, k: 39)  	 7.651e-06 	 100       	 0         	 0         	 7951.9    	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                         	 4.37e-06  	 1         	 0         	 0         	 9.15332   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 39)                                                                         	 3.7e-06   	 1         	 0         	 0         	 8.43243   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 3.16475   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 3.1647    	 100       
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                            	 2.71419   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                        	 2.71298   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 2.26152   	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 0.784911  	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 0.674885  	 1818      
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.522234  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_leftOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                   	 0.450446  	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.440982  	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.433282  	 900       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.302926  	 918       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.153841  	 918       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.0722095 	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.0529036 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0355675 	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.0279739 	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0231674 	 900       
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                       	 0.0230503 	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.0229721 	 1800      
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 0.0176836 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 0.0176534 	 2         
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                              	 0.0173597 	 20        
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                              	 0.0155915 	 918       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0148796 	 1310      
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.014689  	 1000      
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.0059575 	 1818      
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.00587409	 18        
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00324628	 6372      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00134593	 5272      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00113617	 302       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000802581	 102       
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.000800457	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000399437	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: L, orthoY: L
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m43->44  [0m[1;34m44->45  [0m[1;34m45->46  [0m[1;34m46->47  [0m[1;34m47->48  [0m[1;34m48->49  [0m[1;34m49->50  [0m[1;34m50->51  [0m[1;34m51->52  [0m[1;34m52->53  [0m[1;34m53->54  [0m[1;34m54->55  [0m[1;34m55->56  [0m[1;34m56->57  [0m[1;34m57->58  [0m[1;34m58->59  [0m[1;34m59->60  [0m[1;34m60->61  [0m[1;34m61->62  [0m[1;34m62->63  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 23219798542208 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 23219599828992 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 23219398502528 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 23219197176064 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 23218995849600 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 23218794523136 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 23218593196672 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 23218391870208 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 23218190543744 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 23217989217280 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 23217787890816 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 23217586564352 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 23217385237888 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 23217183911424 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 23216982584960 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 23216781258496 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 23216579932032 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 23216378605568 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 23216177279104 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 23215975952640 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 23215774626176 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 23215573299712 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 23215371973248 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 23215170646784 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 23214969320320 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 23214767993856 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 23214566667392 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 23214365340928 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 23214164014464 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 23213962688000 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 23213761361536 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 23213560035072 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 23213358704512 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 23213157378048 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 23212956051584 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 23212754725120 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 23212553398656 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 23212352072192 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 23212150745728 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 23211949419264 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 23211748092800 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 23211546766336 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 23211345439872 -> hwthread 43 - OK[0m[1;34m
[0m[1;34m	threadid 23211144113408 -> hwthread 44 - OK[0m[1;34m
[0m[1;34m	threadid 23210942786944 -> hwthread 45 - OK[0m[1;34m
[0m[1;34m	threadid 23210741460480 -> hwthread 46 - OK[0m[1;34m
[0m[1;34m	threadid 23210540134016 -> hwthread 47 - OK[0m[1;34m
[0m[1;34m	threadid 23210338807552 -> hwthread 48 - OK[0m[1;34m
[0m[1;34m	threadid 23210137481088 -> hwthread 49 - OK[0m[1;34m
[0m[1;34m	threadid 23209936154624 -> hwthread 50 - OK[0m[1;34m
[0m[1;34m	threadid 23209734828160 -> hwthread 51 - OK[0m[1;34m
[0m[1;34m	threadid 23209533501696 -> hwthread 52 - OK[0m[1;34m
[0m[1;34m	threadid 23209332175232 -> hwthread 53 - OK[0m[1;34m
[0m[1;34m	threadid 23209130848768 -> hwthread 54 - OK[0m[1;34m
[0m[1;34m	threadid 23208929522304 -> hwthread 55 - OK[0m[1;34m
[0m[1;34m	threadid 23208728195840 -> hwthread 56 - OK[0m[1;34m
[0m[1;34m	threadid 23208526869376 -> hwthread 57 - OK[0m[1;34m
[0m[1;34m	threadid 23208325542912 -> hwthread 58 - OK[0m[1;34m
[0m[1;34m	threadid 23208124216448 -> hwthread 59 - OK[0m[1;34m
[0m[1;34m	threadid 23207922889984 -> hwthread 60 - OK[0m[1;34m
[0m[1;34m	threadid 23207721563520 -> hwthread 61 - OK[0m[1;34m
[0m[1;34m	threadid 23207520237056 -> hwthread 62 - OK[0m[1;34m
[0m[1;34m	threadid 23207318910592 -> hwthread 63 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 23219692881664 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 23219686291200 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 90, m: 90)                                                                 	 0.72141   	 700       	 4.95155   	 0         	 0.189329  	 26.1531   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4500, cols: 90, reductionFactor: 37, colBlockingSize: 12)                  	 0.429634  	 600       	 104.559   	 0         	 4.61528   	 22.655    
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 90, n: 50, r: 90, r2: 90)             	 0.37557   	 600       	 116.463   	 0         	 10.4558   	 11.1386   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 90, r: 90, r2: 4500, leftOrthog: 0)        	 0.365361  	 600       	 119.717   	 0         	 16.1751   	 7.40132   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4500, cols: 40, reductionFactor: 37, colBlockingSize: 12)                  	 0.134023  	 700       	 77.2437   	 0         	 7.58795   	 10.1798   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 4500, Xcols: 40, r: 40, streamingCols: 0)                   	 0.0696683 	 700       	 72.3428   	 0         	 29.0014   	 2.49446   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 90, reductionFactor: 37, colBlockingSize: 12)                  	 0.0675485 	 100       	 61.5774   	 0         	 2.76068   	 22.3051   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 90, Qr2: 40)       	 0.0523002 	 700       	 0         	 0         	 76.0227   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 90)                                                                 	 0.0482623 	 100       	 3.26342   	 0         	 0.191454  	 17.0455   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0370481 	 100       	 2.3618    	 0         	 0.163031  	 14.4868   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r: 90, r2: 90)             	 0.0341124 	 100       	 118.725   	 0         	 10.7433   	 11.0511   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 40, k: 2500)   	 0.0339484 	 800       	 235.652   	 0         	 42.7943   	 5.50661   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 90, r: 90, r2: 2500, leftOrthog: 0)        	 0.0337741 	 100       	 119.914   	 0         	 16.3723   	 7.32422   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 90, n: 50, r: 90, r2: 50)             	 0.0309758 	 100       	 130.747   	 0         	 16.387    	 7.97872   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 4500, leftOrthog: 0)        	 0.0301614 	 100       	 74.5986   	 0         	 18.0363   	 4.13603   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.027088  	 100       	 85.3075   	 0         	 6.71884   	 12.6968   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 40, m: 40)                                                                  	 0.0234648 	 909       	 3.30567   	 0         	 1.49997   	 2.20382   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 2500, m: 40, k: 50)	 0.0221789 	 800       	 360.703   	 0         	 65.5036   	 5.50661   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 4500, m: 40)                                                                       	 0.0200003 	 700       	 0         	 0         	 100.798   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 40, reductionFactor: 37, colBlockingSize: 12)                  	 0.0182745 	 100       	 44.9601   	 0         	 4.44774   	 10.1085   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 2000, k: 40) 	 0.0132672 	 800       	 482.392   	 0         	 87.7954   	 5.49451   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 40, n: 50, r2: 40)                                                                                         	 0.0132594 	 808       	 0         	 0         	 78.0005   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 4500, m: 40)                                                              	 0.0131988 	 700       	 0         	 0         	 152.741   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 90, reductionFactor: 37, colBlockingSize: 12)                    	 0.0121113 	 100       	 6.86875   	 0         	 0.832283  	 8.2529    
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 40, n: 50, r2: 40)                   	 0.0116405 	 700       	 0         	 0         	 173.189   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 40, m: 2000, k: 40) 	 0.00987441	 700       	 453.698   	 0         	 91.647    	 4.9505    
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 40, r: 40, streamingCols: 0)                   	 0.00640899	 100       	 62.4123   	 0         	 25.0648   	 2.49004   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 50)           	 0.00483046	 8         	 20.7019   	 0         	 3.34544   	 6.18812   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 50, Qr2: 40)       	 0.00397751	 100       	 0         	 0         	 90.5088   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00345339	 9         	 0.434354  	 0         	 0.157411  	 2.75937   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 0, n: 50, r2: 40)                    	 0.00340003	 100       	 0         	 0         	 47.0585   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 40, reductionFactor: 37, colBlockingSize: 12)                    	 0.00333356	 101       	 4.97869   	 0         	 0.872581  	 5.70571   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 40)                                                                       	 0.00326762	 100       	 0         	 0         	 48.9653   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 1, Xr2: 50, Qr1: 1, Qr2: 0)          	 0.00274275	 100       	 0         	 0         	 1.45839   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.00265904	 8         	 38.624    	 0         	 3.06878   	 12.5861   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 40)                                                              	 0.002605  	 100       	 0         	 0         	 61.4203   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                   	 0.0020255 	 8         	 24.6853   	 0         	 7.93878   	 3.10945   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 90, r: 50, r2: 50, leftOrthog: 0)          	 0.0017128 	 100       	 26.2728   	 0         	 8.64082   	 3.04054   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2000, cols: 40, reductionFactor: 37, colBlockingSize: 12)                  	 0.00118936	 8         	 44.2118   	 0         	 4.39093   	 10.0689   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 50, r2: 50)              	 0.00104405	 100       	 23.9452   	 0         	 5.74684   	 4.16667   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 40, r1_: 40, n: 50, r2: 40)           	 0.000995817	 8         	 51.4151   	 0         	 10.3858   	 4.9505    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 40, k: 50)     	 0.000879809	 100       	 22.7322   	 0         	 5.91037   	 3.84615   
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                   	 0.000851989	 100       	 0.586862  	 0         	 2.34745   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 40)                                                                                          	 0.000811773	 201       	 0         	 0         	 7.9234    	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 40, n: 50, r2: 1)                                                                                          	 0.000782527	 201       	 0         	 0         	 8.21952   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 40, k: 50)  	 0.000702241	 100       	 28.4803   	 0         	 7.40487   	 3.84615   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 40)   	 0.00063589	 100       	 31.452    	 0         	 8.17751   	 3.84615   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                          	 0.000513641	 100       	 0         	 0         	 7.78754   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 40, m: 50, k: 40)   	 0.000512786	 100       	 31.2021   	 0         	 8.73659   	 3.57143   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 40, n: 50, r2: 1)                    	 0.000504006	 100       	 0         	 0         	 14.2855   	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 40, m: 40, fromLeft: 0)                	 0.000495862	 809       	 0         	 0         	 41.7665   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2000, Xcols: 40, r: 40, streamingCols: 0)                   	 0.000485942	 8         	 52.6812   	 0         	 21.1778   	 2.48756   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 1, r1low: 0, n: 50, r2: 40)                     	 0.000474016	 100       	 0         	 0         	 6.75083   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 40)                                                                	 0.000420424	 101       	 0         	 0         	 7.68748   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                            	 0.000399728	 100       	 1.25085   	 0         	 15.0102   	 0.0833333 
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000387324	 101       	 0.651909  	 0         	 10.4305   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 40, n: 50, r2: 1)                                                                                 	 0.000354543	 101       	 0.569748  	 0         	 9.11596   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000325988	 100       	 0.766899  	 0         	 12.2704   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 50)                                                                       	 0.000302387	 8         	 0         	 0         	 52.9123   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                              	 0.000250066	 8         	 0         	 0         	 63.9831   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2000, m: 40)                                                                       	 0.00012061	 8         	 0         	 0         	 84.9017   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.000109403	 1         	 2.34689   	 0         	 0.365621  	 6.41892   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2000, m: 40)                                                              	 8.2132e-05	 8         	 0         	 0         	 124.677   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 50, r: 50, streamingCols: 0)                     	 3.3661e-05	 1         	 3.7135    	 0         	 1.4854    	 2.5       
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                                	 2.15e-05  	 1         	 0         	 0         	 1.86047   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 40, r: 40, streamingCols: 0)                     	 2.064e-05 	 1         	 3.87597   	 0         	 1.86047   	 2.08333   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 1.018e-05 	 1         	 24.558    	 0         	 5.89391   	 4.16667   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 0)                	 9.74e-06  	 9         	 0         	 0         	 36.961    	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 8.15e-06  	 1         	 0.613497  	 0         	 2.45399   	 0.25      
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 40, n: 50, r2: 1)                                                                                   	 8.06e-06  	 1         	 0.496278  	 0         	 1.98511   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 0, m: 2000, k: 40)  	 7.31e-06  	 100       	 0         	 0         	 8755.13   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 40, r1_: 40, n: 50, r2: 1)            	 7.1e-06   	 1         	 22.5352   	 0         	 6.30986   	 3.57143   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                         	 4.19e-06  	 1         	 0         	 0         	 9.54654   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 40)                                                                         	 3.891e-06 	 1         	 0         	 0         	 8.22411   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 3.20864   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 3.20861   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                            	 2.73739   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                        	 2.73611   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 2.28177   	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 0.806721  	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 0.69597   	 1818      
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.537056  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_leftOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                   	 0.471143  	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.441702  	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.43101   	 900       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.316513  	 918       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.16008   	 918       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.078643  	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.0590204 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0348282 	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.0269181 	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.0242976 	 1800      
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                       	 0.023699  	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0228812 	 900       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 0.0173799 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 0.0173523 	 2         
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                              	 0.0171798 	 20        
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                              	 0.0165779 	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0160185 	 1000      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0153673 	 1310      
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.0063028 	 1818      
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.00584356	 18        
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00324424	 6372      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00136564	 5272      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00106785	 302       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000868199	 102       
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.000505602	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000399728	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: L, orthoY: L
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m43->44  [0m[1;34m44->45  [0m[1;34m45->46  [0m[1;34m46->47  [0m[1;34m47->48  [0m[1;34m48->49  [0m[1;34m49->50  [0m[1;34m50->51  [0m[1;34m51->52  [0m[1;34m52->53  [0m[1;34m53->54  [0m[1;34m54->55  [0m[1;34m55->56  [0m[1;34m56->57  [0m[1;34m57->58  [0m[1;34m58->59  [0m[1;34m59->60  [0m[1;34m60->61  [0m[1;34m61->62  [0m[1;34m62->63  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 23224415414144 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 23224230340608 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 23224029014144 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 23223827687680 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 23223626361216 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 23223425034752 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 23223223708288 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 23223022381824 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 23222821055360 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 23222619728896 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 23222418402432 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 23222217075968 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 23222015749504 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 23221814423040 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 23221613096576 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 23221411770112 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 23221210443648 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 23221009117184 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 23220807790720 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 23220606464256 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 23220405137792 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 23220203811328 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 23220002484864 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 23219801158400 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 23219599831936 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 23219398505472 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 23219197179008 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 23218995852544 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 23218794526080 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 23218593199616 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 23218391873152 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 23218190546688 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 23217989216128 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 23217787889664 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 23217586563200 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 23217385236736 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 23217183910272 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 23216982583808 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 23216781257344 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 23216579930880 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 23216378604416 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 23216177277952 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 23215975951488 -> hwthread 43 - OK[0m[1;34m
[0m[1;34m	threadid 23215774625024 -> hwthread 44 - OK[0m[1;34m
[0m[1;34m	threadid 23215573298560 -> hwthread 45 - OK[0m[1;34m
[0m[1;34m	threadid 23215371972096 -> hwthread 46 - OK[0m[1;34m
[0m[1;34m	threadid 23215170645632 -> hwthread 47 - OK[0m[1;34m
[0m[1;34m	threadid 23214969319168 -> hwthread 48 - OK[0m[1;34m
[0m[1;34m	threadid 23214767992704 -> hwthread 49 - OK[0m[1;34m
[0m[1;34m	threadid 23214566666240 -> hwthread 50 - OK[0m[1;34m
[0m[1;34m	threadid 23214365339776 -> hwthread 51 - OK[0m[1;34m
[0m[1;34m	threadid 23214164013312 -> hwthread 52 - OK[0m[1;34m
[0m[1;34m	threadid 23213962686848 -> hwthread 53 - OK[0m[1;34m
[0m[1;34m	threadid 23213761360384 -> hwthread 54 - OK[0m[1;34m
[0m[1;34m	threadid 23213560033920 -> hwthread 55 - OK[0m[1;34m
[0m[1;34m	threadid 23213358707456 -> hwthread 56 - OK[0m[1;34m
[0m[1;34m	threadid 23213157380992 -> hwthread 57 - OK[0m[1;34m
[0m[1;34m	threadid 23212956054528 -> hwthread 58 - OK[0m[1;34m
[0m[1;34m	threadid 23212754728064 -> hwthread 59 - OK[0m[1;34m
[0m[1;34m	threadid 23212553401600 -> hwthread 60 - OK[0m[1;34m
[0m[1;34m	threadid 23212352075136 -> hwthread 61 - OK[0m[1;34m
[0m[1;34m	threadid 23212150748672 -> hwthread 62 - OK[0m[1;34m
[0m[1;34m	threadid 23211949422208 -> hwthread 63 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 23224309753600 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 23224303163136 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 91, m: 91)                                                                 	 0.740529  	 700       	 4.9863    	 0         	 0.188555  	 26.4448   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4550, cols: 91, reductionFactor: 37, colBlockingSize: 12)                  	 0.432134  	 600       	 107.458   	 0         	 4.69111   	 22.9067   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 91, n: 50, r: 91, r2: 91)             	 0.37794   	 600       	 119.633   	 0         	 10.6224   	 11.2624   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 91, r: 91, r2: 4550, leftOrthog: 0)        	 0.364918  	 600       	 123.903   	 0         	 16.5567   	 7.48355   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4550, cols: 41, reductionFactor: 37, colBlockingSize: 12)                  	 0.142376  	 700       	 77.242    	 0         	 7.40361   	 10.433    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 91, reductionFactor: 37, colBlockingSize: 12)                  	 0.0681757 	 100       	 62.3742   	 0         	 2.76675   	 22.5443   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 4550, Xcols: 41, r: 41, streamingCols: 0)                   	 0.068088  	 700       	 78.6333   	 0         	 30.7553   	 2.55674   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 91, Qr2: 41)       	 0.0539018 	 700       	 0         	 0         	 75.3845   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 91)                                                                 	 0.0498594 	 100       	 3.19398   	 0         	 0.186926  	 17.0869   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0406084 	 100       	 2.15473   	 0         	 0.148738  	 14.4868   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 41, k: 2500)   	 0.035362  	 800       	 231.888   	 0         	 41.5452   	 5.58157   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 91, r: 91, r2: 2500, leftOrthog: 0)        	 0.0348847 	 100       	 118.691   	 0         	 16.0314   	 7.40367   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r: 91, r2: 91)             	 0.0342102 	 100       	 121.031   	 0         	 10.8337   	 11.1717   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 91, n: 50, r: 91, r2: 50)             	 0.0319297 	 100       	 129.675   	 0         	 16.188    	 8.01056   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 4550, leftOrthog: 0)        	 0.0299175 	 100       	 76.0424   	 0         	 18.3839   	 4.13636   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 41, m: 41)                                                                  	 0.0267418 	 909       	 3.12364   	 0         	 1.38251   	 2.25939   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4550, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0264586 	 100       	 88.3072   	 0         	 6.95426   	 12.6983   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 2500, m: 41, k: 50)	 0.0228096 	 800       	 359.497   	 0         	 64.4079   	 5.58157   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 4550, m: 41)                                                                       	 0.0196055 	 700       	 0         	 0         	 106.57    	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 41, reductionFactor: 37, colBlockingSize: 12)                  	 0.0186532 	 100       	 46.277    	 0         	 4.46811   	 10.3572   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 4550, m: 41)                                                              	 0.0168977 	 700       	 0         	 0         	 123.648   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 2050, k: 41) 	 0.0160638 	 800       	 418.581   	 0         	 75.1404   	 5.57065   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 41, n: 50, r2: 41)                                                                                         	 0.0141471 	 808       	 0         	 0         	 76.8071   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 41, n: 50, r2: 41)                   	 0.0115051 	 700       	 0         	 0         	 181.603   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 41, m: 2050, k: 41) 	 0.0105213 	 700       	 458.545   	 0         	 90.3669   	 5.07426   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 91, reductionFactor: 37, colBlockingSize: 12)                    	 0.00851063	 100       	 9.99316   	 0         	 1.20611   	 8.28541   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 41, r: 41, streamingCols: 0)                   	 0.00649938	 100       	 64.6601   	 0         	 25.3367   	 2.55204   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 50)           	 0.00490525	 8         	 20.3863   	 0         	 3.29443   	 6.18812   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 50, Qr2: 41)       	 0.00375544	 100       	 0         	 0         	 96.9262   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 41)                                                                       	 0.00348666	 100       	 0         	 0         	 47.0364   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00345089	 9         	 0.434669  	 0         	 0.157525  	 2.75937   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 41, reductionFactor: 37, colBlockingSize: 12)                    	 0.003018  	 101       	 5.77766   	 0         	 0.998891  	 5.78408   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 41)                                                              	 0.00294249	 100       	 0         	 0         	 55.7351   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.00258372	 8         	 39.75     	 0         	 3.15824   	 12.5861   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                   	 0.00241014	 8         	 20.7457   	 0         	 6.67181   	 3.10945   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 91, r: 50, r2: 50, leftOrthog: 0)          	 0.00181669	 100       	 25.0455   	 0         	 8.21274   	 3.0496    
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 0, n: 50, r2: 41)                    	 0.00159764	 100       	 0         	 0         	 102.651   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2050, cols: 41, reductionFactor: 37, colBlockingSize: 12)                  	 0.00132914	 8         	 42.6044   	 0         	 4.12808   	 10.3206   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 50, r2: 50)              	 0.00109691	 100       	 22.7914   	 0         	 5.46993   	 4.16667   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 41, r1_: 41, n: 50, r2: 41)           	 0.00107034	 8         	 51.5135   	 0         	 10.1519   	 5.07426   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 41, k: 50)     	 0.000875132	 100       	 23.425    	 0         	 6.03338   	 3.88258   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 41)                                                                                          	 0.000815816	 201       	 0         	 0         	 8.08123   	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 41, m: 41, fromLeft: 0)                	 0.000800429	 809       	 0         	 0         	 27.184    	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 41, n: 50, r2: 1)                                                                                          	 0.000798871	 201       	 0         	 0         	 8.25265   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                   	 0.000763982	 100       	 0.654466  	 0         	 2.61786   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 41, k: 50)  	 0.000716483	 100       	 28.612    	 0         	 7.36933   	 3.88258   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 41, m: 50, k: 41)   	 0.000657434	 100       	 25.5691   	 0         	 7.03462   	 3.63475   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 41)   	 0.000650923	 100       	 31.4937   	 0         	 8.11156   	 3.88258   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 41, n: 50, r2: 1)                    	 0.000522209	 100       	 0         	 0         	 13.9408   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                          	 0.000519904	 100       	 0         	 0         	 7.69373   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2050, Xcols: 41, r: 41, streamingCols: 0)                   	 0.000489794	 8         	 56.2857   	 0         	 22.075    	 2.54975   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 1, r1low: 0, n: 50, r2: 41)                     	 0.000465164	 100       	 0         	 0         	 7.05128   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 1, Xr2: 50, Qr1: 1, Qr2: 0)          	 0.000430782	 100       	 0         	 0         	 9.28544   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                            	 0.00042071	 100       	 1.18847   	 0         	 14.2616   	 0.0833333 
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 41)                                                                	 0.000407641	 101       	 0         	 0         	 8.12676   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000386123	 101       	 0.653937  	 0         	 10.463    	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 41, n: 50, r2: 1)                                                                                 	 0.000358307	 101       	 0.577856  	 0         	 9.2457    	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000329362	 100       	 0.759043  	 0         	 12.1447   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                              	 0.000286688	 8         	 0         	 0         	 55.8098   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 50)                                                                       	 0.000271298	 8         	 0         	 0         	 58.9757   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.000167894	 1         	 1.52928   	 0         	 0.238246  	 6.41892   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2050, m: 41)                                                                       	 0.000133342	 8         	 0         	 0         	 80.6828   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2050, m: 41)                                                              	 7.0021e-05	 8         	 0         	 0         	 153.645   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 50, r: 50, streamingCols: 0)                     	 3.5241e-05	 1         	 3.547     	 0         	 1.4188    	 2.5       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 41, r: 41, streamingCols: 0)                     	 2.5611e-05	 1         	 3.28179   	 0         	 1.54324   	 2.12656   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                                	 2.2771e-05	 1         	 0         	 0         	 1.75662   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 9.89e-06  	 1         	 25.2781   	 0         	 6.06673   	 4.16667   
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 41, n: 50, r2: 1)                                                                                   	 9.821e-06 	 1         	 0.417473  	 0         	 1.66989   	 0.25      
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 0)                	 9.57e-06  	 9         	 0         	 0         	 37.6176   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 41, r1_: 41, n: 50, r2: 1)            	 8.81e-06  	 1         	 19.0806   	 0         	 5.24949   	 3.63475   
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 8.32e-06  	 1         	 0.600962  	 0         	 2.40385   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 0, m: 2050, k: 41)  	 8.071e-06 	 100       	 0         	 0         	 8331.06   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                         	 4.37e-06  	 1         	 0         	 0         	 9.15332   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 41)                                                                         	 3.93e-06  	 1         	 0         	 0         	 8.34606   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 3.28087   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 3.28083   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                            	 2.79252   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                        	 2.79133   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 2.33503   	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 0.830996  	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 0.703407  	 1818      
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.535901  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_leftOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                   	 0.488239  	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.445177  	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.431537  	 900       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.330762  	 918       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.168583  	 918       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.0775481 	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.058088  	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0362371 	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.0301927 	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.0279015 	 1800      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0235261 	 900       
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                       	 0.0235051 	 818       
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                              	 0.0206273 	 918       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 0.0180982 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 0.0180691 	 2         
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                              	 0.0175484 	 20        
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0162817 	 1310      
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0140901 	 1000      
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.00599429	 18        
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00553838	 1818      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00306735	 6372      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00130094	 5272      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00107379	 302       
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.000809999	 818       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000782123	 102       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.00042071	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: L, orthoY: L
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m43->44  [0m[1;34m44->45  [0m[1;34m45->46  [0m[1;34m46->47  [0m[1;34m47->48  [0m[1;34m48->49  [0m[1;34m49->50  [0m[1;34m50->51  [0m[1;34m51->52  [0m[1;34m52->53  [0m[1;34m53->54  [0m[1;34m54->55  [0m[1;34m55->56  [0m[1;34m56->57  [0m[1;34m57->58  [0m[1;34m58->59  [0m[1;34m59->60  [0m[1;34m60->61  [0m[1;34m61->62  [0m[1;34m62->63  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 22702093313920 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 22701854943232 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 22701653616768 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 22701452290304 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 22701250963840 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 22701049637376 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 22700848310912 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 22700646984448 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 22700445657984 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 22700244331520 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 22700043005056 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 22699841678592 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 22699640352128 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 22699439025664 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 22699237699200 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 22699036372736 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 22698835046272 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 22698633719808 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 22698432393344 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 22698231066880 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 22698029740416 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 22697828413952 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 22697627087488 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 22697425761024 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 22697224434560 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 22697023108096 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 22696821781632 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 22696620455168 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 22696419128704 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 22696217802240 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 22696016475776 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 22695815149312 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 22695613818752 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 22695412492288 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 22695211165824 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 22695009839360 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 22694808512896 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 22694607186432 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 22694405859968 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 22694204533504 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 22694003207040 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 22693801880576 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 22693600554112 -> hwthread 43 - OK[0m[1;34m
[0m[1;34m	threadid 22693399227648 -> hwthread 44 - OK[0m[1;34m
[0m[1;34m	threadid 22693197901184 -> hwthread 45 - OK[0m[1;34m
[0m[1;34m	threadid 22692996574720 -> hwthread 46 - OK[0m[1;34m
[0m[1;34m	threadid 22692795248256 -> hwthread 47 - OK[0m[1;34m
[0m[1;34m	threadid 22692593921792 -> hwthread 48 - OK[0m[1;34m
[0m[1;34m	threadid 22692392595328 -> hwthread 49 - OK[0m[1;34m
[0m[1;34m	threadid 22692191268864 -> hwthread 50 - OK[0m[1;34m
[0m[1;34m	threadid 22691989942400 -> hwthread 51 - OK[0m[1;34m
[0m[1;34m	threadid 22691788615936 -> hwthread 52 - OK[0m[1;34m
[0m[1;34m	threadid 22691587289472 -> hwthread 53 - OK[0m[1;34m
[0m[1;34m	threadid 22691385963008 -> hwthread 54 - OK[0m[1;34m
[0m[1;34m	threadid 22691184636544 -> hwthread 55 - OK[0m[1;34m
[0m[1;34m	threadid 22690983310080 -> hwthread 56 - OK[0m[1;34m
[0m[1;34m	threadid 22690781983616 -> hwthread 57 - OK[0m[1;34m
[0m[1;34m	threadid 22690580657152 -> hwthread 58 - OK[0m[1;34m
[0m[1;34m	threadid 22690379330688 -> hwthread 59 - OK[0m[1;34m
[0m[1;34m	threadid 22690178004224 -> hwthread 60 - OK[0m[1;34m
[0m[1;34m	threadid 22689976677760 -> hwthread 61 - OK[0m[1;34m
[0m[1;34m	threadid 22689775351296 -> hwthread 62 - OK[0m[1;34m
[0m[1;34m	threadid 22689574024832 -> hwthread 63 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 22701987653376 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 22701981062912 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 92, m: 92)                                                                 	 0.72262   	 700       	 5.28019   	 0         	 0.19749   	 26.7365   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4600, cols: 92, reductionFactor: 37, colBlockingSize: 12)                  	 0.436581  	 600       	 109.909   	 0         	 4.74594   	 23.1585   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 92, n: 50, r: 92, r2: 92)             	 0.390327  	 600       	 119.698   	 0         	 10.5126   	 11.3861   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 92, r: 92, r2: 4600, leftOrthog: 0)        	 0.380726  	 600       	 122.716   	 0         	 16.2199   	 7.56579   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4600, cols: 42, reductionFactor: 37, colBlockingSize: 12)                  	 0.141991  	 700       	 82.1688   	 0         	 7.68923   	 10.6862   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 92, reductionFactor: 37, colBlockingSize: 12)                  	 0.0703342 	 100       	 61.7961   	 0         	 2.71235   	 22.7832   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 4600, Xcols: 42, r: 42, streamingCols: 0)                   	 0.0692101 	 700       	 82.0701   	 0         	 31.3362   	 2.61902   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 92, Qr2: 42)       	 0.0568818 	 700       	 0         	 0         	 72.9907   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 92)                                                                 	 0.0484176 	 100       	 3.32524   	 0         	 0.194144  	 17.1277   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0368018 	 100       	 2.3776    	 0         	 0.164123  	 14.4868   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 42, k: 2500)   	 0.0353262 	 800       	 237.784   	 0         	 42.0493   	 5.65489   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 92, r: 92, r2: 2500, leftOrthog: 0)        	 0.0349799 	 100       	 120.984   	 0         	 16.1676   	 7.48308   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r: 92, r2: 92)             	 0.034622  	 100       	 122.234   	 0         	 10.8246   	 11.2922   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 4600, leftOrthog: 0)        	 0.0318348 	 100       	 72.2479   	 0         	 17.4652   	 4.13669   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 92, n: 50, r: 92, r2: 50)             	 0.0313399 	 100       	 135.036   	 0         	 16.7914   	 8.04196   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4600, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0270737 	 100       	 87.2492   	 0         	 6.87012   	 12.6998   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 42, m: 42)                                                                  	 0.026678  	 909       	 3.36587   	 0         	 1.45397   	 2.31496   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 2500, m: 42, k: 50)	 0.0225584 	 800       	 372.366   	 0         	 65.8486   	 5.65489   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 4600, m: 42)                                                                       	 0.0210273 	 700       	 0         	 0         	 102.906   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 42, reductionFactor: 37, colBlockingSize: 12)                  	 0.0188373 	 100       	 48.0876   	 0         	 4.53416   	 10.6056   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 42, n: 50, r2: 42)                                                                                         	 0.0145341 	 808       	 0         	 0         	 78.4535   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 2100, k: 42) 	 0.0140443 	 800       	 502.409   	 0         	 88.9982   	 5.64516   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 4600, m: 42)                                                              	 0.0130191 	 700       	 0         	 0         	 166.205   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 42, n: 50, r2: 42)                   	 0.0126756 	 700       	 0         	 0         	 170.709   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 42, m: 2100, k: 42) 	 0.0105229 	 700       	 492.847   	 0         	 94.8143   	 5.19802   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 92, reductionFactor: 37, colBlockingSize: 12)                    	 0.00738031	 100       	 11.7783   	 0         	 1.41609   	 8.31747   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 42, r: 42, streamingCols: 0)                   	 0.0067099 	 100       	 65.7238   	 0         	 25.1428   	 2.61402   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 50)           	 0.00493709	 8         	 20.2548   	 0         	 3.27318   	 6.18812   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 50, Qr2: 42)       	 0.00395629	 100       	 0         	 0         	 93.0163   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 42)                                                                       	 0.00370708	 100       	 0         	 0         	 45.3187   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00354618	 9         	 0.422989  	 0         	 0.153292  	 2.75937   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 42, reductionFactor: 37, colBlockingSize: 12)                    	 0.0031524 	 101       	 5.80444   	 0         	 0.990392  	 5.86075   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.00272246	 8         	 37.7242   	 0         	 2.99729   	 12.5861   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 92, r: 50, r2: 50, leftOrthog: 0)          	 0.00205844	 100       	 22.347    	 0         	 7.3065    	 3.05851   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                   	 0.00196114	 8         	 25.4954   	 0         	 8.19932   	 3.10945   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 0, n: 50, r2: 42)                    	 0.00160419	 100       	 0         	 0         	 104.726   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2100, cols: 42, reductionFactor: 37, colBlockingSize: 12)                  	 0.00135724	 8         	 44.8502   	 0         	 4.24222   	 10.5723   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 42)                                                              	 0.00128018	 100       	 0         	 0         	 131.232   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 42, r1_: 42, n: 50, r2: 42)           	 0.00113664	 8         	 52.1454   	 0         	 10.0318   	 5.19802   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 50, r2: 50)              	 0.00108795	 100       	 22.979    	 0         	 5.51495   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 42, k: 50)     	 0.0008755 	 100       	 23.9863   	 0         	 6.12222   	 3.91791   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 42)                                                                                          	 0.000825402	 201       	 0         	 0         	 8.18219   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                   	 0.000824341	 100       	 0.606545  	 0         	 2.42618   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 42, n: 50, r2: 1)                                                                                          	 0.000779612	 201       	 0         	 0         	 8.66277   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 42, k: 50)  	 0.00071105	 100       	 29.5338   	 0         	 7.53815   	 3.91791   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 42, m: 42, fromLeft: 0)                	 0.000690879	 809       	 0         	 0         	 33.0495   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 42)   	 0.000632692	 100       	 33.1915   	 0         	 8.47174   	 3.91791   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 42, m: 50, k: 42)   	 0.000569068	 100       	 30.9981   	 0         	 8.38424   	 3.69718   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 42, n: 50, r2: 1)                    	 0.000517107	 100       	 0         	 0         	 14.233    	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                          	 0.000512467	 100       	 0         	 0         	 7.80538   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2100, Xcols: 42, r: 42, streamingCols: 0)                   	 0.000491221	 8         	 60.3297   	 0         	 23.0976   	 2.61194   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 1, r1low: 0, n: 50, r2: 42)                     	 0.000472625	 100       	 0         	 0         	 7.10923   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 1, Xr2: 50, Qr1: 1, Qr2: 0)          	 0.000439507	 100       	 0         	 0         	 9.10111   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                            	 0.000435252	 100       	 1.14876   	 0         	 13.7851   	 0.0833333 
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 42)                                                                	 0.00042011	 101       	 0         	 0         	 8.07788   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000379712	 101       	 0.664978  	 0         	 10.6396   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 42, n: 50, r2: 1)                                                                                 	 0.000372003	 101       	 0.570157  	 0         	 9.12251   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000334313	 100       	 0.747802  	 0         	 11.9648   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                              	 0.000257556	 8         	 0         	 0         	 62.1224   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 50)                                                                       	 0.000254757	 8         	 0         	 0         	 62.8049   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2100, m: 42)                                                                       	 0.000121894	 8         	 0         	 0         	 92.6182   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.000118883	 1         	 2.15974   	 0         	 0.336465  	 6.41892   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2100, m: 42)                                                              	 8.1242e-05	 8         	 0         	 0         	 138.963   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 50, r: 50, streamingCols: 0)                     	 3.4571e-05	 1         	 3.61575   	 0         	 1.4463    	 2.5       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 42, r: 42, streamingCols: 0)                     	 2.7361e-05	 1         	 3.22357   	 0         	 1.48591   	 2.16942   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                                	 2.258e-05 	 1         	 0         	 0         	 1.77148   	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 0)                	 1.024e-05 	 9         	 0         	 0         	 35.1562   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 9.99e-06  	 1         	 0.500501  	 0         	 2.002     	 0.25      
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 9.84e-06  	 1         	 25.4065   	 0         	 6.09756   	 4.16667   
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 42, n: 50, r2: 1)                                                                                   	 9.45e-06  	 1         	 0.444444  	 0         	 1.77778   	 0.25      
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 42, r1_: 42, n: 50, r2: 1)            	 9.231e-06 	 1         	 19.1095   	 0         	 5.16867   	 3.69718   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 0, m: 2100, k: 42)  	 7.301e-06 	 100       	 0         	 0         	 9664.43   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                         	 4.69e-06  	 1         	 0         	 0         	 8.52878   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 42)                                                                         	 3.59e-06  	 1         	 0         	 0         	 9.35933   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 3.29579   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 3.29574   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                            	 2.80664   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                        	 2.80538   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 2.33498   	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 0.807839  	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 0.709548  	 1818      
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.542026  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_leftOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                   	 0.489031  	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.457377  	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.4496    	 900       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.328721  	 918       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.16874   	 918       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.0784343 	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.0612776 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0362017 	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.0302241 	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.0257763 	 1800      
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                       	 0.0251193 	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0232695 	 900       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 0.0179067 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 0.0178758 	 2         
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                              	 0.0177662 	 20        
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0166516 	 1310      
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0152695 	 1000      
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                              	 0.0150808 	 918       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.0060928 	 18        
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00579181	 1818      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00332516	 6372      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00132963	 5272      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00108603	 302       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000843781	 102       
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.000701119	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000435252	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: L, orthoY: L
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m43->44  [0m[1;34m44->45  [0m[1;34m45->46  [0m[1;34m46->47  [0m[1;34m47->48  [0m[1;34m48->49  [0m[1;34m49->50  [0m[1;34m50->51  [0m[1;34m51->52  [0m[1;34m52->53  [0m[1;34m53->54  [0m[1;34m54->55  [0m[1;34m55->56  [0m[1;34m56->57  [0m[1;34m57->58  [0m[1;34m58->59  [0m[1;34m59->60  [0m[1;34m60->61  [0m[1;34m61->62  [0m[1;34m62->63  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 22644047239040 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 22643872884736 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 22643671558272 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 22643470231808 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 22643268905344 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 22643067578880 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 22642866252416 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 22642664925952 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 22642463599488 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 22642262273024 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 22642060946560 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 22641859620096 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 22641658293632 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 22641456967168 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 22641255640704 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 22641054314240 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 22640852987776 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 22640651661312 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 22640450334848 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 22640249008384 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 22640047681920 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 22639846355456 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 22639645028992 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 22639443702528 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 22639242376064 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 22639041049600 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 22638839723136 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 22638638396672 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 22638437070208 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 22638235743744 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 22638034417280 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 22637833090816 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 22637631760256 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 22637430433792 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 22637229107328 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 22637027780864 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 22636826454400 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 22636625127936 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 22636423801472 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 22636222475008 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 22636021148544 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 22635819822080 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 22635618495616 -> hwthread 43 - OK[0m[1;34m
[0m[1;34m	threadid 22635417169152 -> hwthread 44 - OK[0m[1;34m
[0m[1;34m	threadid 22635215842688 -> hwthread 45 - OK[0m[1;34m
[0m[1;34m	threadid 22635014516224 -> hwthread 46 - OK[0m[1;34m
[0m[1;34m	threadid 22634813189760 -> hwthread 47 - OK[0m[1;34m
[0m[1;34m	threadid 22634611863296 -> hwthread 48 - OK[0m[1;34m
[0m[1;34m	threadid 22634410536832 -> hwthread 49 - OK[0m[1;34m
[0m[1;34m	threadid 22634209210368 -> hwthread 50 - OK[0m[1;34m
[0m[1;34m	threadid 22634007883904 -> hwthread 51 - OK[0m[1;34m
[0m[1;34m	threadid 22633806557440 -> hwthread 52 - OK[0m[1;34m
[0m[1;34m	threadid 22633605230976 -> hwthread 53 - OK[0m[1;34m
[0m[1;34m	threadid 22633403904512 -> hwthread 54 - OK[0m[1;34m
[0m[1;34m	threadid 22633202578048 -> hwthread 55 - OK[0m[1;34m
[0m[1;34m	threadid 22633001251584 -> hwthread 56 - OK[0m[1;34m
[0m[1;34m	threadid 22632799925120 -> hwthread 57 - OK[0m[1;34m
[0m[1;34m	threadid 22632598598656 -> hwthread 58 - OK[0m[1;34m
[0m[1;34m	threadid 22632397272192 -> hwthread 59 - OK[0m[1;34m
[0m[1;34m	threadid 22632195945728 -> hwthread 60 - OK[0m[1;34m
[0m[1;34m	threadid 22631994619264 -> hwthread 61 - OK[0m[1;34m
[0m[1;34m	threadid 22631793292800 -> hwthread 62 - OK[0m[1;34m
[0m[1;34m	threadid 22631591966336 -> hwthread 63 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 22643768022784 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 22643762951936 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 93, m: 93)                                                                 	 0.755187  	 700       	 5.21904   	 0         	 0.193097  	 27.0281   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4650, cols: 93, reductionFactor: 37, colBlockingSize: 12)                  	 0.443312  	 600       	 111.808   	 0         	 4.77604   	 23.4102   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 93, n: 50, r: 93, r2: 93)             	 0.391214  	 600       	 123.363   	 0         	 10.718    	 11.5099   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 93, r: 93, r2: 4650, leftOrthog: 0)        	 0.386385  	 600       	 124.905   	 0         	 16.3317   	 7.64803   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4650, cols: 43, reductionFactor: 37, colBlockingSize: 12)                  	 0.154579  	 700       	 79.9743   	 0         	 7.31068   	 10.9394   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 4650, Xcols: 43, r: 43, streamingCols: 0)                   	 0.0729308 	 700       	 82.5234   	 0         	 30.7774   	 2.6813    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 93, reductionFactor: 37, colBlockingSize: 12)                  	 0.0704248 	 100       	 63.0656   	 0         	 2.73937   	 23.022    
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 93, Qr2: 43)       	 0.0561514 	 700       	 0         	 0         	 75.5358   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 93)                                                                 	 0.052061  	 100       	 3.12614   	 0         	 0.182094  	 17.1677   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 43, k: 2500)   	 0.0380124 	 800       	 226.242   	 0         	 39.5071   	 5.72661   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0370421 	 100       	 2.36218   	 0         	 0.163058  	 14.4868   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r: 93, r2: 93)             	 0.0356132 	 100       	 121.43    	 0         	 10.6398   	 11.4127   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 93, r: 93, r2: 2500, leftOrthog: 0)        	 0.0347881 	 100       	 124.31    	 0         	 16.4378   	 7.56245   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 93, n: 50, r: 93, r2: 50)             	 0.0331741 	 100       	 130.358   	 0         	 16.1476   	 8.07292   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 4650, leftOrthog: 0)        	 0.0311682 	 100       	 74.5953   	 0         	 18.0312   	 4.13701   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 43, m: 43)                                                                  	 0.0288013 	 909       	 3.34573   	 0         	 1.41141   	 2.37048   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4650, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0269704 	 100       	 88.5354   	 0         	 6.9706    	 12.7013   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 2500, m: 43, k: 50)	 0.0246464 	 800       	 348.935   	 0         	 60.9321   	 5.72661   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 4650, m: 43)                                                                       	 0.0229963 	 700       	 0         	 0         	 97.3828   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 43, reductionFactor: 37, colBlockingSize: 12)                  	 0.020334  	 100       	 46.6945   	 0         	 4.30211   	 10.8539   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 43, n: 50, r2: 43)                                                                                         	 0.0148433 	 808       	 0         	 0         	 80.5209   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 4650, m: 43)                                                              	 0.0146333 	 700       	 0         	 0         	 153.038   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 2150, k: 43) 	 0.0145278 	 800       	 509.093   	 0         	 89.032    	 5.71809   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 43, n: 50, r2: 43)                   	 0.0131027 	 700       	 0         	 0         	 170.914   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 43, m: 2150, k: 43) 	 0.0106368 	 700       	 523.228   	 0         	 98.3182   	 5.32178   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 93, reductionFactor: 37, colBlockingSize: 12)                    	 0.00752242	 100       	 11.8084   	 0         	 1.41433   	 8.34908   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 43, r: 43, streamingCols: 0)                   	 0.00692993	 100       	 66.7034   	 0         	 24.9266   	 2.67599   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 50)           	 0.00490804	 8         	 20.3747   	 0         	 3.29255   	 6.18812   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 50, Qr2: 43)       	 0.00394228	 100       	 0         	 0         	 94.3617   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 43)                                                                       	 0.00352016	 100       	 0         	 0         	 48.8614   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00347516	 9         	 0.431633  	 0         	 0.156425  	 2.75937   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 43, reductionFactor: 37, colBlockingSize: 12)                    	 0.00322968	 101       	 5.93856   	 0         	 1.00047   	 5.93577   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 0, n: 50, r2: 43)                    	 0.00318659	 100       	 0         	 0         	 53.9762   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0028261 	 8         	 36.3408   	 0         	 2.88737   	 12.5861   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 43)                                                              	 0.00249121	 100       	 0         	 0         	 69.0426   	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 93, r: 50, r2: 50, leftOrthog: 0)          	 0.00186353	 100       	 24.9527   	 0         	 8.1351    	 3.06728   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                   	 0.00176411	 8         	 28.343    	 0         	 9.1151    	 3.10945   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2150, cols: 43, reductionFactor: 37, colBlockingSize: 12)                  	 0.00140113	 8         	 46.6227   	 0         	 4.30732   	 10.8241   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 43, r1_: 43, n: 50, r2: 43)           	 0.00119069	 8         	 53.4191   	 0         	 10.0378   	 5.32178   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 50, r2: 50)              	 0.00117219	 100       	 21.3276   	 0         	 5.11862   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 43, k: 50)     	 0.000904989	 100       	 23.7572   	 0         	 6.01112   	 3.95221   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 43, m: 43, fromLeft: 0)                	 0.000884668	 809       	 0         	 0         	 27.0536   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                   	 0.000863882	 100       	 0.578783  	 0         	 2.31513   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 43, n: 50, r2: 1)                                                                                          	 0.000816797	 201       	 0         	 0         	 8.46526   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 43)                                                                                          	 0.000812338	 201       	 0         	 0         	 8.51173   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 43, k: 50)  	 0.000712716	 100       	 30.1663   	 0         	 7.63277   	 3.95221   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 43)   	 0.000657161	 100       	 32.7165   	 0         	 8.27803   	 3.95221   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 43, m: 50, k: 43)   	 0.000579064	 100       	 31.9308   	 0         	 8.49509   	 3.75874   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                          	 0.000513274	 100       	 0         	 0         	 7.79311   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2150, Xcols: 43, r: 43, streamingCols: 0)                   	 0.000510324	 8         	 62.3188   	 0         	 23.3043   	 2.67413   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 43, n: 50, r2: 1)                    	 0.000510082	 100       	 0         	 0         	 14.5859   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 1, r1low: 0, n: 50, r2: 43)                     	 0.000483916	 100       	 0         	 0         	 7.10867   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 1, Xr2: 50, Qr1: 1, Qr2: 0)          	 0.000441341	 100       	 0         	 0         	 9.06329   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 43)                                                                	 0.000437047	 101       	 0         	 0         	 7.94972   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                            	 0.000435365	 100       	 1.14846   	 0         	 13.7815   	 0.0833333 
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000408967	 101       	 0.617409  	 0         	 9.87855   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 43, n: 50, r2: 1)                                                                                 	 0.0003518 	 101       	 0.617254  	 0         	 9.87607   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000328763	 100       	 0.760426  	 0         	 12.1668   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 50)                                                                       	 0.000295475	 8         	 0         	 0         	 54.1501   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                              	 0.000260588	 8         	 0         	 0         	 61.3996   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.000138674	 1         	 1.85151   	 0         	 0.288446  	 6.41892   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2150, m: 43)                                                                       	 0.000131402	 8         	 0         	 0         	 90.0565   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2150, m: 43)                                                              	 8.1052e-05	 8         	 0         	 0         	 146       	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 50, r: 50, streamingCols: 0)                     	 3.293e-05 	 1         	 3.79593   	 0         	 1.51837   	 2.5       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 43, r: 43, streamingCols: 0)                     	 2.5261e-05	 1         	 3.65979   	 0         	 1.65457   	 2.21193   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                                	 2.3981e-05	 1         	 0         	 0         	 1.66799   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 0, m: 2150, k: 43)  	 1.4451e-05	 100       	 0         	 0         	 5117.98   	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 0)                	 1.03e-05  	 9         	 0         	 0         	 34.9515   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 1.014e-05 	 1         	 24.6548   	 0         	 5.91716   	 4.16667   
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 43, n: 50, r2: 1)                                                                                   	 1.011e-05 	 1         	 0.425321  	 0         	 1.70129   	 0.25      
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 43, r1_: 43, n: 50, r2: 1)            	 8.99e-06  	 1         	 20.5673   	 0         	 5.47186   	 3.75874   
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 7.37e-06  	 1         	 0.678426  	 0         	 2.7137    	 0.25      
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                         	 4.441e-06 	 1         	 0         	 0         	 9.00698   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 43)                                                                         	 3.78e-06  	 1         	 0         	 0         	 9.10053   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 3.41065   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 3.41061   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                            	 2.89059   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                        	 2.8893    	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 2.41477   	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 0.84429   	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 0.730738  	 1818      
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.548833  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_leftOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                   	 0.519954  	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.461174  	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.454205  	 900       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.354475  	 918       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.183002  	 918       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.0821933 	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.060535  	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0389174 	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.0322764 	 918       
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                       	 0.0269515 	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.0264153 	 1800      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0253592 	 900       
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                              	 0.0180692 	 20        
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                              	 0.0179272 	 918       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 0.0179118 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 0.0178828 	 2         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0172833 	 1000      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0169857 	 1310      
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00636702	 1818      
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.00611787	 18        
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00353037	 6372      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00134505	 5272      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00108953	 302       
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.000894968	 818       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000881362	 102       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000435365	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: L, orthoY: L
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m43->44  [0m[1;34m44->45  [0m[1;34m45->46  [0m[1;34m46->47  [0m[1;34m47->48  [0m[1;34m48->49  [0m[1;34m49->50  [0m[1;34m50->51  [0m[1;34m51->52  [0m[1;34m52->53  [0m[1;34m53->54  [0m[1;34m54->55  [0m[1;34m55->56  [0m[1;34m56->57  [0m[1;34m57->58  [0m[1;34m58->59  [0m[1;34m59->60  [0m[1;34m60->61  [0m[1;34m61->62  [0m[1;34m62->63  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 22406145771392 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 22405971961856 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 22405770635392 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 22405569308928 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 22405367982464 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 22405166656000 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 22404965329536 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 22404764003072 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 22404562676608 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 22404361350144 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 22404160023680 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 22403958697216 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 22403757370752 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 22403556044288 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 22403354717824 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 22403153391360 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 22402952064896 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 22402750738432 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 22402549411968 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 22402348085504 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 22402146759040 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 22401945432576 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 22401744106112 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 22401542779648 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 22401341453184 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 22401140126720 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 22400938800256 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 22400737473792 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 22400536147328 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 22400334820864 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 22400133494400 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 22399932167936 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 22399730837376 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 22399529510912 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 22399328184448 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 22399126857984 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 22398925531520 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 22398724205056 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 22398522878592 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 22398321552128 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 22398120225664 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 22397918899200 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 22397717572736 -> hwthread 43 - OK[0m[1;34m
[0m[1;34m	threadid 22397516246272 -> hwthread 44 - OK[0m[1;34m
[0m[1;34m	threadid 22397314919808 -> hwthread 45 - OK[0m[1;34m
[0m[1;34m	threadid 22397113593344 -> hwthread 46 - OK[0m[1;34m
[0m[1;34m	threadid 22396912266880 -> hwthread 47 - OK[0m[1;34m
[0m[1;34m	threadid 22396710940416 -> hwthread 48 - OK[0m[1;34m
[0m[1;34m	threadid 22396509613952 -> hwthread 49 - OK[0m[1;34m
[0m[1;34m	threadid 22396308287488 -> hwthread 50 - OK[0m[1;34m
[0m[1;34m	threadid 22396106961024 -> hwthread 51 - OK[0m[1;34m
[0m[1;34m	threadid 22395905634560 -> hwthread 52 - OK[0m[1;34m
[0m[1;34m	threadid 22395704308096 -> hwthread 53 - OK[0m[1;34m
[0m[1;34m	threadid 22395502981632 -> hwthread 54 - OK[0m[1;34m
[0m[1;34m	threadid 22395301655168 -> hwthread 55 - OK[0m[1;34m
[0m[1;34m	threadid 22395100328704 -> hwthread 56 - OK[0m[1;34m
[0m[1;34m	threadid 22394899002240 -> hwthread 57 - OK[0m[1;34m
[0m[1;34m	threadid 22394697675776 -> hwthread 58 - OK[0m[1;34m
[0m[1;34m	threadid 22394496349312 -> hwthread 59 - OK[0m[1;34m
[0m[1;34m	threadid 22394295022848 -> hwthread 60 - OK[0m[1;34m
[0m[1;34m	threadid 22394093696384 -> hwthread 61 - OK[0m[1;34m
[0m[1;34m	threadid 22393892369920 -> hwthread 62 - OK[0m[1;34m
[0m[1;34m	threadid 22393691043456 -> hwthread 63 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 22405867099904 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 22405861566208 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 94, m: 94)                                                                 	 0.742789  	 700       	 5.47917   	 0         	 0.200557  	 27.3198   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4700, cols: 94, reductionFactor: 37, colBlockingSize: 12)                  	 0.454975  	 600       	 112.494   	 0         	 4.75422   	 23.6619   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 94, r: 94, r2: 4700, leftOrthog: 0)        	 0.407925  	 600       	 122.167   	 0         	 15.8037   	 7.73026   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 94, n: 50, r: 94, r2: 94)             	 0.403801  	 600       	 123.415   	 0         	 10.6084   	 11.6337   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4700, cols: 44, reductionFactor: 37, colBlockingSize: 12)                  	 0.152894  	 700       	 85.5701   	 0         	 7.6453    	 11.1925   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 94, reductionFactor: 37, colBlockingSize: 12)                  	 0.0769719 	 100       	 58.9489   	 0         	 2.53429   	 23.2605   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 4700, Xcols: 44, r: 44, streamingCols: 0)                   	 0.0753237 	 700       	 84.5609   	 0         	 30.8214   	 2.74358   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 94, Qr2: 44)       	 0.0639529 	 700       	 0         	 0         	 67.7399   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 94)                                                                 	 0.0512227 	 100       	 3.21147   	 0         	 0.186636  	 17.2071   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0383037 	 100       	 2.28438   	 0         	 0.157687  	 14.4868   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 44, k: 2500)   	 0.0379184 	 800       	 232.077   	 0         	 40.0354   	 5.7968    
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r: 94, r2: 94)             	 0.0362893 	 100       	 121.744   	 0         	 10.556    	 11.5332   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 94, r: 94, r2: 2500, leftOrthog: 0)        	 0.0353691 	 100       	 124.911   	 0         	 16.3458   	 7.64178   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 94, n: 50, r: 94, r2: 50)             	 0.0314899 	 100       	 140.299   	 0         	 17.3135   	 8.10345   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 4700, leftOrthog: 0)        	 0.0306244 	 100       	 76.7361   	 0         	 18.5473   	 4.13732   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 44, m: 44)                                                                  	 0.0289724 	 909       	 3.56347   	 0         	 1.46884   	 2.42605   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4700, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0264832 	 100       	 91.1338   	 0         	 7.17437   	 12.7027   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 2500, m: 44, k: 50)	 0.0236439 	 800       	 372.189   	 0         	 64.206    	 5.7968    
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 4700, m: 44)                                                                       	 0.0220897 	 700       	 0         	 0         	 104.853   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 44, reductionFactor: 37, colBlockingSize: 12)                  	 0.0198429 	 100       	 50.1016   	 0         	 4.51289   	 11.1019   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 4700, m: 44)                                                              	 0.017331  	 700       	 0         	 0         	 133.643   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 44, n: 50, r2: 44)                                                                                         	 0.0159598 	 808       	 0         	 0         	 78.4115   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 2200, k: 44) 	 0.0147832 	 800       	 523.838   	 0         	 90.4811   	 5.78947   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 44, m: 2200, k: 44) 	 0.0121494 	 700       	 490.797   	 0         	 90.1282   	 5.44554   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 44, n: 50, r2: 44)                   	 0.012069  	 700       	 0         	 0         	 191.91    	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 94, reductionFactor: 37, colBlockingSize: 12)                    	 0.00974181	 100       	 9.31532   	 0         	 1.11158   	 8.38026   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 44, r: 44, streamingCols: 0)                   	 0.00707772	 100       	 68.3836   	 0         	 24.9762   	 2.73795   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 50)           	 0.00499186	 8         	 20.0326   	 0         	 3.23727   	 6.18812   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 44, reductionFactor: 37, colBlockingSize: 12)                    	 0.0040837 	 101       	 4.91761   	 0         	 0.818347  	 6.0092    
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 50, Qr2: 44)       	 0.00407051	 100       	 0         	 0         	 92.3718   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 44)                                                                       	 0.00381915	 100       	 0         	 0         	 46.0836   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 0, n: 50, r2: 44)                    	 0.00365899	 100       	 0         	 0         	 48.1007   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 44)                                                              	 0.00358736	 100       	 0         	 0         	 49.0611   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.0035521 	 9         	 0.422284  	 0         	 0.153036  	 2.75937   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.00277726	 8         	 36.9798   	 0         	 2.93814   	 12.5861   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                   	 0.00214228	 8         	 23.3396   	 0         	 7.50601   	 3.10945   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 94, r: 50, r2: 50, leftOrthog: 0)          	 0.00182794	 100       	 25.712    	 0         	 8.35914   	 3.07592   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2200, cols: 44, reductionFactor: 37, colBlockingSize: 12)                  	 0.00151454	 8         	 46.2114   	 0         	 4.17229   	 11.0758   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 44, r1_: 44, n: 50, r2: 44)           	 0.00123479	 8         	 55.1893   	 0         	 10.1348   	 5.44554   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 50, r2: 50)              	 0.00105973	 100       	 23.5908   	 0         	 5.6618    	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 44, k: 50)     	 0.000872986	 100       	 25.2009   	 0         	 6.32313   	 3.98551   
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                   	 0.000866544	 100       	 0.577005  	 0         	 2.30802   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 44)                                                                                          	 0.000846024	 201       	 0         	 0         	 8.36288   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 44, n: 50, r2: 1)                                                                                          	 0.000802391	 201       	 0         	 0         	 8.81765   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 44, k: 50)  	 0.000688981	 100       	 31.9312   	 0         	 8.01183   	 3.98551   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 44)   	 0.000634159	 100       	 34.6916   	 0         	 8.70444   	 3.98551   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 44, m: 44, fromLeft: 0)                	 0.000575788	 809       	 0         	 0         	 43.5222   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 44, m: 50, k: 44)   	 0.000559314	 100       	 34.6138   	 0         	 9.06253   	 3.81944   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2200, Xcols: 44, r: 44, streamingCols: 0)                   	 0.000522293	 8         	 65.2385   	 0         	 23.8417   	 2.73632   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 44, n: 50, r2: 1)                    	 0.000510326	 100       	 0         	 0         	 14.7357   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                          	 0.000507321	 100       	 0         	 0         	 7.88455   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 1, r1low: 0, n: 50, r2: 44)                     	 0.000477093	 100       	 0         	 0         	 7.37802   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 1, Xr2: 50, Qr1: 1, Qr2: 0)          	 0.000436043	 100       	 0         	 0         	 9.17341   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 44)                                                                	 0.000424099	 101       	 0         	 0         	 8.38295   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                            	 0.000418496	 100       	 1.19475   	 0         	 14.3371   	 0.0833333 
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000393418	 101       	 0.641811  	 0         	 10.269    	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 44, n: 50, r2: 1)                                                                                 	 0.000364501	 101       	 0.609601  	 0         	 9.75361   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000327574	 100       	 0.763186  	 0         	 12.211    	 0.0625    
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 50)                                                                       	 0.000286198	 8         	 0         	 0         	 55.9054   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                              	 0.000243506	 8         	 0         	 0         	 65.7068   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2200, m: 44)                                                                       	 0.000129093	 8         	 0         	 0         	 95.9804   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.000127514	 1         	 2.01356   	 0         	 0.313691  	 6.41892   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2200, m: 44)                                                              	 8.3391e-05	 8         	 0         	 0         	 148.582   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 50, r: 50, streamingCols: 0)                     	 3.3241e-05	 1         	 3.76042   	 0         	 1.50417   	 2.5       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 44, r: 44, streamingCols: 0)                     	 2.277e-05 	 1         	 4.25121   	 0         	 1.88599   	 2.2541    
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                                	 2.12e-05  	 1         	 0         	 0         	 1.88679   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 1.091e-05 	 1         	 22.9148   	 0         	 5.49954   	 4.16667   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 0)                	 1.014e-05 	 9         	 0         	 0         	 35.503    	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 9.621e-06 	 1         	 0.519696  	 0         	 2.07879   	 0.25      
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 44, n: 50, r2: 1)                                                                                   	 9.281e-06 	 1         	 0.474087  	 0         	 1.89635   	 0.25      
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 44, r1_: 44, n: 50, r2: 1)            	 8.55e-06  	 1         	 22.6433   	 0         	 5.92842   	 3.81944   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 0, m: 2200, k: 44)  	 7.46e-06  	 100       	 0         	 0         	 10380.7   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                         	 4.17e-06  	 1         	 0         	 0         	 9.59233   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 44)                                                                         	 3.921e-06 	 1         	 0         	 0         	 8.9773    	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 3.4505    	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 3.45046   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                            	 2.91927   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                        	 2.91798   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 2.42792   	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 0.832315  	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 0.749412  	 1818      
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.568801  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_leftOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                   	 0.531121  	 100       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.475747  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.47264   	 900       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.357879  	 918       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.181782  	 918       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.085122  	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.0684594 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0387914 	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.0325245 	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.0281335 	 1800      
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                       	 0.0263322 	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0243329 	 900       
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                              	 0.0216906 	 918       
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                              	 0.0186695 	 20        
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 0.0185482 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 0.0185177 	 2         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0181155 	 1310      
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0167154 	 1000      
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00684253	 1818      
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.00624611	 18        
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00341831	 6372      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00136678	 5272      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00108549	 302       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000885446	 102       
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.000585928	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000418496	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: L, orthoY: L
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m43->44  [0m[1;34m44->45  [0m[1;34m45->46  [0m[1;34m46->47  [0m[1;34m47->48  [0m[1;34m48->49  [0m[1;34m49->50  [0m[1;34m50->51  [0m[1;34m51->52  [0m[1;34m52->53  [0m[1;34m53->54  [0m[1;34m54->55  [0m[1;34m55->56  [0m[1;34m56->57  [0m[1;34m57->58  [0m[1;34m58->59  [0m[1;34m59->60  [0m[1;34m60->61  [0m[1;34m61->62  [0m[1;34m62->63  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 23010454894464 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 23010220173312 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 23010018846848 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 23009817520384 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 23009616193920 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 23009414867456 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 23009213540992 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 23009012214528 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 23008810888064 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 23008609561600 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 23008408235136 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 23008206908672 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 23008005582208 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 23007804255744 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 23007602929280 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 23007401602816 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 23007200276352 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 23006998949888 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 23006797623424 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 23006596296960 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 23006394970496 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 23006193644032 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 23005992317568 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 23005790991104 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 23005589664640 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 23005388338176 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 23005187011712 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 23004985685248 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 23004784358784 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 23004583032320 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 23004381705856 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 23004180379392 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 23003979048832 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 23003777722368 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 23003576395904 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 23003375069440 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 23003173742976 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 23002972416512 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 23002771090048 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 23002569763584 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 23002368437120 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 23002167110656 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 23001965784192 -> hwthread 43 - OK[0m[1;34m
[0m[1;34m	threadid 23001764457728 -> hwthread 44 - OK[0m[1;34m
[0m[1;34m	threadid 23001563131264 -> hwthread 45 - OK[0m[1;34m
[0m[1;34m	threadid 23001361804800 -> hwthread 46 - OK[0m[1;34m
[0m[1;34m	threadid 23001160478336 -> hwthread 47 - OK[0m[1;34m
[0m[1;34m	threadid 23000959151872 -> hwthread 48 - OK[0m[1;34m
[0m[1;34m	threadid 23000757825408 -> hwthread 49 - OK[0m[1;34m
[0m[1;34m	threadid 23000556498944 -> hwthread 50 - OK[0m[1;34m
[0m[1;34m	threadid 23000355172480 -> hwthread 51 - OK[0m[1;34m
[0m[1;34m	threadid 23000153846016 -> hwthread 52 - OK[0m[1;34m
[0m[1;34m	threadid 22999952519552 -> hwthread 53 - OK[0m[1;34m
[0m[1;34m	threadid 22999751193088 -> hwthread 54 - OK[0m[1;34m
[0m[1;34m	threadid 22999549866624 -> hwthread 55 - OK[0m[1;34m
[0m[1;34m	threadid 22999348540160 -> hwthread 56 - OK[0m[1;34m
[0m[1;34m	threadid 22999147213696 -> hwthread 57 - OK[0m[1;34m
[0m[1;34m	threadid 22998945887232 -> hwthread 58 - OK[0m[1;34m
[0m[1;34m	threadid 22998744560768 -> hwthread 59 - OK[0m[1;34m
[0m[1;34m	threadid 22998543234304 -> hwthread 60 - OK[0m[1;34m
[0m[1;34m	threadid 22998341907840 -> hwthread 61 - OK[0m[1;34m
[0m[1;34m	threadid 22998140581376 -> hwthread 62 - OK[0m[1;34m
[0m[1;34m	threadid 22997939254912 -> hwthread 63 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 23010349233920 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 23010342643456 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 95, m: 95)                                                                 	 0.784438  	 700       	 5.3556    	 0         	 0.193963  	 27.6114   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4750, cols: 95, reductionFactor: 37, colBlockingSize: 12)                  	 0.515377  	 600       	 102.513   	 0         	 4.2868    	 23.9136   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 95, n: 50, r: 95, r2: 95)             	 0.420226  	 600       	 122.416   	 0         	 10.4118   	 11.7574   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 95, r: 95, r2: 4750, leftOrthog: 0)        	 0.415242  	 600       	 123.886   	 0         	 15.8573   	 7.8125    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4750, cols: 45, reductionFactor: 37, colBlockingSize: 12)                  	 0.174329  	 700       	 79.3337   	 0         	 6.93136   	 11.4456   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 4750, Xcols: 45, r: 45, streamingCols: 0)                   	 0.0757655 	 700       	 88.8679   	 0         	 31.6723   	 2.80585   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 95, reductionFactor: 37, colBlockingSize: 12)                  	 0.0724503 	 100       	 63.9674   	 0         	 2.72214   	 23.4989   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 95, Qr2: 45)       	 0.0583537 	 700       	 0         	 0         	 75.8135   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 95)                                                                 	 0.0519142 	 100       	 3.2024    	 0         	 0.185691  	 17.2459   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 45, k: 2500)   	 0.0384115 	 800       	 234.305   	 0         	 39.9464   	 5.86548   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0379602 	 100       	 2.30505   	 0         	 0.159114  	 14.4868   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 95, r: 95, r2: 2500, leftOrthog: 0)        	 0.0369294 	 100       	 122.193   	 0         	 15.8259   	 7.72107   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r: 95, r2: 95)             	 0.0362377 	 100       	 124.525   	 0         	 10.6856   	 11.6536   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 45, m: 45)                                                                  	 0.031559  	 909       	 3.49959   	 0         	 1.41021   	 2.48162   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 95, n: 50, r: 95, r2: 50)             	 0.0306189 	 100       	 147.376   	 0         	 18.1195   	 8.13356   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4750, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0305546 	 100       	 79.8304   	 0         	 6.28382   	 12.7041   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 4750, leftOrthog: 0)        	 0.0290493 	 100       	 81.7574   	 0         	 19.7595   	 4.13763   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 2500, m: 45, k: 50)	 0.0244857 	 800       	 367.561   	 0         	 62.6651   	 5.86548   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 4750, m: 45)                                                                       	 0.0235776 	 700       	 0         	 0         	 101.537   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 45, reductionFactor: 37, colBlockingSize: 12)                  	 0.0214995 	 100       	 48.3669   	 0         	 4.26149   	 11.3498   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 4750, m: 45)                                                              	 0.0179113 	 700       	 0         	 0         	 133.659   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 45, n: 50, r2: 45)                                                                                         	 0.0163876 	 808       	 0         	 0         	 79.8751   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 2250, k: 45) 	 0.0151608 	 800       	 534.271   	 0         	 91.1823   	 5.85938   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 45, m: 2250, k: 45) 	 0.0126387 	 700       	 504.698   	 0         	 90.6214   	 5.56931   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 45, n: 50, r2: 45)                   	 0.0120174 	 700       	 0         	 0         	 199.211   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 95, reductionFactor: 37, colBlockingSize: 12)                    	 0.00987857	 100       	 9.38286   	 0         	 1.11555   	 8.411     
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 45, r: 45, streamingCols: 0)                   	 0.00723943	 100       	 69.9295   	 0         	 24.9757   	 2.7999    
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 50)           	 0.00492503	 8         	 20.3044   	 0         	 3.2812    	 6.18812   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 50, Qr2: 45)       	 0.0039841 	 100       	 0         	 0         	 95.3791   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 45)                                                              	 0.00365646	 100       	 0         	 0         	 49.228    	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 45)                                                                       	 0.00351467	 100       	 0         	 0         	 51.2139   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 45, reductionFactor: 37, colBlockingSize: 12)                    	 0.00349556	 101       	 6.00913   	 0         	 0.988168  	 6.08108   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.0034685 	 9         	 0.432462  	 0         	 0.156725  	 2.75937   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 0, n: 50, r2: 45)                    	 0.00346632	 100       	 0         	 0         	 51.9282   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.00265125	 8         	 38.7375   	 0         	 3.0778    	 12.5861   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                   	 0.002105  	 8         	 23.7529   	 0         	 7.63894   	 3.10945   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 95, r: 50, r2: 50, leftOrthog: 0)          	 0.0018072 	 100       	 26.2837   	 0         	 8.52146   	 3.08442   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2250, cols: 45, reductionFactor: 37, colBlockingSize: 12)                  	 0.00147578	 8         	 50.7327   	 0         	 4.47872   	 11.3275   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 45, r1_: 45, n: 50, r2: 45)           	 0.00128868	 8         	 56.5693   	 0         	 10.1573   	 5.56931   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 50, r2: 50)              	 0.00111593	 100       	 22.4029   	 0         	 5.37669   	 4.16667   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 45, m: 45, fromLeft: 0)                	 0.000893571	 809       	 0         	 0         	 29.3335   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 45, k: 50)     	 0.000881018	 100       	 25.5386   	 0         	 6.35628   	 4.01786   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 45)                                                                                          	 0.000823682	 201       	 0         	 0         	 8.78494   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 45, n: 50, r2: 1)                                                                                          	 0.000801414	 201       	 0         	 0         	 9.02904   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                   	 0.000799269	 100       	 0.625572  	 0         	 2.50229   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 45, k: 50)  	 0.000741775	 100       	 30.3326   	 0         	 7.54946   	 4.01786   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 45)   	 0.000680319	 100       	 33.0727   	 0         	 8.23143   	 4.01786   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 45, m: 50, k: 45)   	 0.000612005	 100       	 33.088    	 0         	 8.52934   	 3.87931   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2250, Xcols: 45, r: 45, streamingCols: 0)                   	 0.000557693	 8         	 65.3585   	 0         	 23.3548   	 2.79851   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 45, n: 50, r2: 1)                    	 0.000539563	 100       	 0         	 0         	 14.0855   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                          	 0.000518853	 100       	 0         	 0         	 7.70931   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 1, r1low: 0, n: 50, r2: 45)                     	 0.000486387	 100       	 0         	 0         	 7.40151   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                            	 0.000448191	 100       	 1.1156    	 0         	 13.3871   	 0.0833333 
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 45)                                                                	 0.000437922	 101       	 0         	 0         	 8.30285   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 1, Xr2: 50, Qr1: 1, Qr2: 0)          	 0.000425244	 100       	 0         	 0         	 9.40636   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000379279	 101       	 0.665737  	 0         	 10.6518   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 45, n: 50, r2: 1)                                                                                 	 0.000352956	 101       	 0.643848  	 0         	 10.3016   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000329698	 100       	 0.75827   	 0         	 12.1323   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                              	 0.000280349	 8         	 0         	 0         	 57.0717   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 50)                                                                       	 0.000262356	 8         	 0         	 0         	 60.9858   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2250, m: 45)                                                                       	 0.000137523	 8         	 0         	 0         	 94.2388   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.000118713	 1         	 2.16284   	 0         	 0.336947  	 6.41892   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2250, m: 45)                                                              	 7.4681e-05	 8         	 0         	 0         	 173.538   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 50, r: 50, streamingCols: 0)                     	 3.4441e-05	 1         	 3.6294    	 0         	 1.45176   	 2.5       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 45, r: 45, streamingCols: 0)                     	 2.5711e-05	 1         	 3.938     	 0         	 1.71522   	 2.29592   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                                	 2.2731e-05	 1         	 0         	 0         	 1.75971   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 1.096e-05 	 1         	 22.8102   	 0         	 5.47445   	 4.16667   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 45, r1_: 45, n: 50, r2: 1)            	 1.038e-05 	 1         	 19.5087   	 0         	 5.0289    	 3.87931   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 0)                	 1.028e-05 	 9         	 0         	 0         	 35.0195   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 45, n: 50, r2: 1)                                                                                   	 9.61e-06  	 1         	 0.468262  	 0         	 1.87305   	 0.25      
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 8.911e-06 	 1         	 0.561104  	 0         	 2.24442   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 0, m: 2250, k: 45)  	 7.981e-06 	 100       	 0         	 0         	 10149.1   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                         	 4.69e-06  	 1         	 0         	 0         	 8.52878   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 45)                                                                         	 3.95e-06  	 1         	 0         	 0         	 9.11392   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 3.63915   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 3.63909   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                            	 3.08323   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                        	 3.08199   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 2.57798   	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 0.874312  	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 0.831831  	 1818      
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.628925  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_leftOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                   	 0.555804  	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.488199  	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.483028  	 900       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.386414  	 918       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.20418   	 918       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.0857278 	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.0627631 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0392925 	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.0350275 	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.0290999 	 1800      
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                       	 0.0275008 	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0252275 	 900       
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                              	 0.0223834 	 918       
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                              	 0.0191619 	 20        
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0185315 	 1310      
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 0.0183132 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 0.0182836 	 2         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0165097 	 1000      
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.0066321 	 1818      
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.00623505	 18        
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.003319  	 6372      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00133048	 5272      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00106193	 302       
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.000903851	 818       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.00081779	 102       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000448191	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: L, orthoY: L
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m43->44  [0m[1;34m44->45  [0m[1;34m45->46  [0m[1;34m46->47  [0m[1;34m47->48  [0m[1;34m48->49  [0m[1;34m49->50  [0m[1;34m50->51  [0m[1;34m51->52  [0m[1;34m52->53  [0m[1;34m53->54  [0m[1;34m54->55  [0m[1;34m55->56  [0m[1;34m56->57  [0m[1;34m57->58  [0m[1;34m58->59  [0m[1;34m59->60  [0m[1;34m60->61  [0m[1;34m61->62  [0m[1;34m62->63  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 23185805621120 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 23185575634944 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 23185374308480 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 23185172982016 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 23184971655552 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 23184770329088 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 23184569002624 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 23184367676160 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 23184166349696 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 23183965023232 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 23183763696768 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 23183562370304 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 23183361043840 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 23183159717376 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 23182958390912 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 23182757064448 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 23182555737984 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 23182354411520 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 23182153085056 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 23181951758592 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 23181750432128 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 23181549105664 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 23181347779200 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 23181146452736 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 23180945126272 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 23180743799808 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 23180542473344 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 23180341146880 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 23180139820416 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 23179938493952 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 23179737167488 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 23179535841024 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 23179334510464 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 23179133184000 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 23178931857536 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 23178730531072 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 23178529204608 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 23178327878144 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 23178126551680 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 23177925225216 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 23177723898752 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 23177522572288 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 23177321245824 -> hwthread 43 - OK[0m[1;34m
[0m[1;34m	threadid 23177119919360 -> hwthread 44 - OK[0m[1;34m
[0m[1;34m	threadid 23176918592896 -> hwthread 45 - OK[0m[1;34m
[0m[1;34m	threadid 23176717266432 -> hwthread 46 - OK[0m[1;34m
[0m[1;34m	threadid 23176515939968 -> hwthread 47 - OK[0m[1;34m
[0m[1;34m	threadid 23176314613504 -> hwthread 48 - OK[0m[1;34m
[0m[1;34m	threadid 23176113287040 -> hwthread 49 - OK[0m[1;34m
[0m[1;34m	threadid 23175911960576 -> hwthread 50 - OK[0m[1;34m
[0m[1;34m	threadid 23175710634112 -> hwthread 51 - OK[0m[1;34m
[0m[1;34m	threadid 23175509307648 -> hwthread 52 - OK[0m[1;34m
[0m[1;34m	threadid 23175307981184 -> hwthread 53 - OK[0m[1;34m
[0m[1;34m	threadid 23175106654720 -> hwthread 54 - OK[0m[1;34m
[0m[1;34m	threadid 23174905328256 -> hwthread 55 - OK[0m[1;34m
[0m[1;34m	threadid 23174704001792 -> hwthread 56 - OK[0m[1;34m
[0m[1;34m	threadid 23174502675328 -> hwthread 57 - OK[0m[1;34m
[0m[1;34m	threadid 23174301348864 -> hwthread 58 - OK[0m[1;34m
[0m[1;34m	threadid 23174100022400 -> hwthread 59 - OK[0m[1;34m
[0m[1;34m	threadid 23173898695936 -> hwthread 60 - OK[0m[1;34m
[0m[1;34m	threadid 23173697369472 -> hwthread 61 - OK[0m[1;34m
[0m[1;34m	threadid 23173496043008 -> hwthread 62 - OK[0m[1;34m
[0m[1;34m	threadid 23173294716544 -> hwthread 63 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 23185699960576 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 23185693370112 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 96, m: 96)                                                                 	 0.781058  	 700       	 5.55043   	 0         	 0.198918  	 27.9031   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4800, cols: 96, reductionFactor: 37, colBlockingSize: 12)                  	 0.53401   	 600       	 102.093   	 0         	 4.22478   	 24.1653   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 96, n: 50, r: 96, r2: 96)             	 0.428429  	 600       	 123.904   	 0         	 10.4286   	 11.8812   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 96, r: 96, r2: 4800, leftOrthog: 0)        	 0.426415  	 600       	 124.489   	 0         	 15.7687   	 7.89474   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4800, cols: 46, reductionFactor: 37, colBlockingSize: 12)                  	 0.180265  	 700       	 81.013    	 0         	 6.92496   	 11.6987   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 4800, Xcols: 46, r: 46, streamingCols: 0)                   	 0.078308  	 700       	 90.7922   	 0         	 31.6556   	 2.86813   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 96, reductionFactor: 37, colBlockingSize: 12)                  	 0.0744303 	 100       	 63.5836   	 0         	 2.67865   	 23.7371   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 96, Qr2: 46)       	 0.0606822 	 700       	 0         	 0         	 74.4363   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 96)                                                                 	 0.0496108 	 100       	 3.38636   	 0         	 0.195925  	 17.284    
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r: 96, r2: 96)             	 0.0409224 	 100       	 112.603   	 0         	 9.56378   	 11.7739   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 46, k: 2500)   	 0.0392856 	 800       	 234.182   	 0         	 39.473    	 5.93273   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0383981 	 100       	 2.27876   	 0         	 0.157299  	 14.4868   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 96, r: 96, r2: 2500, leftOrthog: 0)        	 0.0356126 	 100       	 129.392   	 0         	 16.5881   	 7.80031   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 96, n: 50, r: 96, r2: 50)             	 0.0324434 	 100       	 142.032   	 0         	 17.3989   	 8.16327   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 46, m: 46)                                                                  	 0.031092  	 909       	 3.79422   	 0         	 1.49547   	 2.53714   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4800, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0303796 	 100       	 81.1357   	 0         	 6.38587   	 12.7055   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 4800, leftOrthog: 0)        	 0.0289725 	 100       	 82.8373   	 0         	 20.019    	 4.13793   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 2500, m: 46, k: 50)	 0.0247965 	 800       	 371.02    	 0         	 62.5378   	 5.93273   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 46, reductionFactor: 37, colBlockingSize: 12)                  	 0.0225244 	 100       	 48.2407   	 0         	 4.15961   	 11.5974   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 4800, m: 46)                                                                       	 0.0217811 	 700       	 0         	 0         	 113.537   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 46, n: 50, r2: 46)                                                                                         	 0.0170798 	 808       	 0         	 0         	 80.082    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 2300, k: 46) 	 0.0156014 	 800       	 542.517   	 0         	 91.5202   	 5.92784   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 4800, m: 46)                                                              	 0.0144729 	 700       	 0         	 0         	 170.868   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 46, m: 2300, k: 46) 	 0.0125361 	 700       	 543.513   	 0         	 95.4693   	 5.69307   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 46, n: 50, r2: 46)                   	 0.012453  	 700       	 0         	 0         	 198.583   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 96, reductionFactor: 37, colBlockingSize: 12)                    	 0.00799541	 100       	 11.8381   	 0         	 1.4024    	 8.44132   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 46, r: 46, streamingCols: 0)                   	 0.00735494	 100       	 71.9245   	 0         	 25.1323   	 2.86184   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 50)           	 0.00471549	 8         	 21.2067   	 0         	 3.427     	 6.18812   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 46)                                                                       	 0.00423518	 100       	 0         	 0         	 43.4457   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 50, Qr2: 46)       	 0.00415253	 100       	 0         	 0         	 92.4739   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00356547	 9         	 0.4207    	 0         	 0.152462  	 2.75937   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 46, reductionFactor: 37, colBlockingSize: 12)                    	 0.00354096	 101       	 6.19866   	 0         	 1.00767   	 6.15146   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 0, n: 50, r2: 46)                    	 0.00352036	 100       	 0         	 0         	 52.2674   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 46)                                                              	 0.00306811	 100       	 0         	 0         	 59.9717   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.00266763	 8         	 38.4997   	 0         	 3.0589    	 12.5861   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                   	 0.00196715	 8         	 25.4175   	 0         	 8.17426   	 3.10945   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 96, r: 50, r2: 50, leftOrthog: 0)          	 0.00184643	 100       	 25.9961   	 0         	 8.4054    	 3.09278   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2300, cols: 46, reductionFactor: 37, colBlockingSize: 12)                  	 0.0015394 	 8         	 51.951    	 0         	 4.48657   	 11.5792   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 46, r1_: 46, n: 50, r2: 46)           	 0.00135208	 8         	 57.592    	 0         	 10.1162   	 5.69307   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 50, r2: 50)              	 0.00106384	 100       	 23.4997   	 0         	 5.63992   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 46, k: 50)     	 0.000901016	 100       	 25.5267   	 0         	 6.30399   	 4.0493    
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                   	 0.00086923	 100       	 0.575222  	 0         	 2.30089   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 46)                                                                                          	 0.000818441	 201       	 0         	 0         	 9.03767   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 46, n: 50, r2: 1)                                                                                          	 0.000810537	 201       	 0         	 0         	 9.1258    	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 46, m: 46, fromLeft: 0)                	 0.000805351	 809       	 0         	 0         	 34.0094   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 46, k: 50)  	 0.000730393	 100       	 31.4899   	 0         	 7.77664   	 4.0493    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 46)   	 0.000676954	 100       	 33.9757   	 0         	 8.39053   	 4.0493    
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2300, Xcols: 46, r: 46, streamingCols: 0)                   	 0.000573893	 8         	 67.8426   	 0         	 23.7154   	 2.8607    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 46, m: 50, k: 46)   	 0.000556112	 100       	 38.0499   	 0         	 9.66136   	 3.93836   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 46, n: 50, r2: 1)                    	 0.000536531	 100       	 0         	 0         	 14.3142   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 1, r1low: 0, n: 50, r2: 46)                     	 0.000514844	 100       	 0         	 0         	 7.1478    	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                          	 0.000501757	 100       	 0         	 0         	 7.97199   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 1, Xr2: 50, Qr1: 1, Qr2: 0)          	 0.000439528	 100       	 0         	 0         	 9.10067   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 46)                                                                	 0.000435256	 101       	 0         	 0         	 8.53934   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                            	 0.000412542	 100       	 1.212     	 0         	 14.544    	 0.0833333 
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000397607	 101       	 0.635049  	 0         	 10.1608   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 46, n: 50, r2: 1)                                                                                 	 0.000359012	 101       	 0.647054  	 0         	 10.3529   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000328009	 100       	 0.762174  	 0         	 12.1948   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                              	 0.00029169	 8         	 0         	 0         	 54.8528   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 50)                                                                       	 0.000230645	 8         	 0         	 0         	 69.3707   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2300, m: 46)                                                                       	 0.000137913	 8         	 0         	 0         	 98.1952   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.000131264	 1         	 1.95603   	 0         	 0.304729  	 6.41892   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2300, m: 46)                                                              	 0.000115012	 8         	 0         	 0         	 117.748   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 50, r: 50, streamingCols: 0)                     	 3.4281e-05	 1         	 3.64633   	 0         	 1.45853   	 2.5       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 46, r: 46, streamingCols: 0)                     	 2.5351e-05	 1         	 4.17341   	 0         	 1.78549   	 2.3374    
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                                	 2.181e-05 	 1         	 0         	 0         	 1.83402   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 1.027e-05 	 1         	 24.3427   	 0         	 5.84226   	 4.16667   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 0)                	 1.01e-05  	 9         	 0         	 0         	 35.6436   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 46, n: 50, r2: 1)                                                                                   	 1.003e-05 	 1         	 0.458624  	 0         	 1.8345    	 0.25      
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 46, r1_: 46, n: 50, r2: 1)            	 9.89e-06  	 1         	 21.3953   	 0         	 5.43256   	 3.93836   
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 9.25e-06  	 1         	 0.540541  	 0         	 2.16216   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 0, m: 2300, k: 46)  	 7.251e-06 	 100       	 0         	 0         	 11672.9   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                         	 4.76e-06  	 1         	 0         	 0         	 8.40336   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 46)                                                                         	 3.65e-06  	 1         	 0         	 0         	 10.0822   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 3.80974   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 3.8097    	 100       
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                            	 3.24566   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                        	 3.24437   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 2.72642   	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 0.869067  	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 0.857484  	 1818      
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.647478  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_leftOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                   	 0.563973  	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.502859  	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.492847  	 900       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.39045   	 918       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.211175  	 918       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.0882636 	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.0652743 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0401866 	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.0346575 	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.0293777 	 1800      
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                       	 0.0263933 	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0255269 	 900       
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                              	 0.0194038 	 20        
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0192105 	 1310      
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                              	 0.0184048 	 918       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 0.0182273 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 0.0181969 	 2         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0170248 	 1000      
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.00608773	 18        
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00574147	 1818      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00328019	 6372      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00139121	 5272      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00108463	 302       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.00088851	 102       
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.000815451	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000412542	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: L, orthoY: L
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m43->44  [0m[1;34m44->45  [0m[1;34m45->46  [0m[1;34m46->47  [0m[1;34m47->48  [0m[1;34m48->49  [0m[1;34m49->50  [0m[1;34m50->51  [0m[1;34m51->52  [0m[1;34m52->53  [0m[1;34m53->54  [0m[1;34m54->55  [0m[1;34m55->56  [0m[1;34m56->57  [0m[1;34m57->58  [0m[1;34m58->59  [0m[1;34m59->60  [0m[1;34m60->61  [0m[1;34m61->62  [0m[1;34m62->63  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 22954530150272 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 22954318489600 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 22954117163136 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 22953915836672 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 22953714510208 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 22953513183744 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 22953311857280 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 22953110530816 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 22952909204352 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 22952707877888 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 22952506551424 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 22952305224960 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 22952103898496 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 22951902572032 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 22951701245568 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 22951499919104 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 22951298592640 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 22951097266176 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 22950895939712 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 22950694613248 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 22950493286784 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 22950291960320 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 22950090633856 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 22949889307392 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 22949687980928 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 22949486654464 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 22949285328000 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 22949084001536 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 22948882675072 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 22948681348608 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 22948480022144 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 22948278695680 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 22948077365120 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 22947876038656 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 22947674712192 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 22947473385728 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 22947272059264 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 22947070732800 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 22946869406336 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 22946668079872 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 22946466753408 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 22946265426944 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 22946064100480 -> hwthread 43 - OK[0m[1;34m
[0m[1;34m	threadid 22945862774016 -> hwthread 44 - OK[0m[1;34m
[0m[1;34m	threadid 22945661447552 -> hwthread 45 - OK[0m[1;34m
[0m[1;34m	threadid 22945460121088 -> hwthread 46 - OK[0m[1;34m
[0m[1;34m	threadid 22945258794624 -> hwthread 47 - OK[0m[1;34m
[0m[1;34m	threadid 22945057468160 -> hwthread 48 - OK[0m[1;34m
[0m[1;34m	threadid 22944856141696 -> hwthread 49 - OK[0m[1;34m
[0m[1;34m	threadid 22944654815232 -> hwthread 50 - OK[0m[1;34m
[0m[1;34m	threadid 22944453488768 -> hwthread 51 - OK[0m[1;34m
[0m[1;34m	threadid 22944252162304 -> hwthread 52 - OK[0m[1;34m
[0m[1;34m	threadid 22944050835840 -> hwthread 53 - OK[0m[1;34m
[0m[1;34m	threadid 22943849509376 -> hwthread 54 - OK[0m[1;34m
[0m[1;34m	threadid 22943648182912 -> hwthread 55 - OK[0m[1;34m
[0m[1;34m	threadid 22943446856448 -> hwthread 56 - OK[0m[1;34m
[0m[1;34m	threadid 22943245529984 -> hwthread 57 - OK[0m[1;34m
[0m[1;34m	threadid 22943044203520 -> hwthread 58 - OK[0m[1;34m
[0m[1;34m	threadid 22942842877056 -> hwthread 59 - OK[0m[1;34m
[0m[1;34m	threadid 22942641550592 -> hwthread 60 - OK[0m[1;34m
[0m[1;34m	threadid 22942440224128 -> hwthread 61 - OK[0m[1;34m
[0m[1;34m	threadid 22942238897664 -> hwthread 62 - OK[0m[1;34m
[0m[1;34m	threadid 22942037571200 -> hwthread 63 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 22954424489728 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 22954417899264 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 97, m: 97)                                                                 	 0.82088   	 700       	 5.44793   	 0         	 0.193225  	 28.1948   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4850, cols: 97, reductionFactor: 37, colBlockingSize: 12)                  	 0.541911  	 600       	 103.782   	 0         	 4.25037   	 24.4171   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 97, n: 50, r: 97, r2: 97)             	 0.504266  	 600       	 108.594   	 0         	 9.04578   	 12.005    
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 97, r: 97, r2: 4850, leftOrthog: 0)        	 0.419298  	 600       	 130.6     	 0         	 16.3721   	 7.97697   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4850, cols: 47, reductionFactor: 37, colBlockingSize: 12)                  	 0.185187  	 700       	 83.1835   	 0         	 6.95995   	 11.9517   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 4850, Xcols: 47, r: 47, streamingCols: 0)                   	 0.086014  	 700       	 87.1899   	 0         	 29.7536   	 2.9304    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 97, reductionFactor: 37, colBlockingSize: 12)                  	 0.0759583 	 100       	 63.6092   	 0         	 2.65313   	 23.9752   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 97, Qr2: 47)       	 0.0618873 	 700       	 0         	 0         	 74.507    	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 97)                                                                 	 0.0503744 	 100       	 3.36977   	 0         	 0.194543  	 17.3214   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r: 97, r2: 97)             	 0.0411749 	 100       	 114.256   	 0         	 9.60602   	 11.8943   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 47, k: 2500)   	 0.0395688 	 800       	 237.561   	 0         	 39.6029   	 5.99857   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.038662  	 100       	 2.26321   	 0         	 0.156226  	 14.4868   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 4850, leftOrthog: 0)        	 0.0364818 	 100       	 66.4715   	 0         	 16.0628   	 4.13823   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 97, r: 97, r2: 2500, leftOrthog: 0)        	 0.0360538 	 100       	 130.486   	 0         	 16.5601   	 7.87952   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 47, m: 47)                                                                  	 0.0327714 	 909       	 3.83971   	 0         	 1.48097   	 2.59271   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 97, n: 50, r: 97, r2: 50)             	 0.0327154 	 100       	 143.801   	 0         	 17.5526   	 8.19257   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4850, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0309504 	 100       	 80.4688   	 0         	 6.33271   	 12.7068   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 2500, m: 47, k: 50)	 0.0253837 	 800       	 370.317   	 0         	 61.7342   	 5.99857   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 4850, m: 47)                                                                       	 0.0248248 	 700       	 0         	 0         	 102.842   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 47, reductionFactor: 37, colBlockingSize: 12)                  	 0.0219298 	 100       	 51.7265   	 0         	 4.36699   	 11.8449   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 47, n: 50, r2: 47)                                                                                         	 0.0178883 	 808       	 0         	 0         	 79.8229   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 4850, m: 47)                                                              	 0.0168592 	 700       	 0         	 0         	 151.433   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 2350, k: 47) 	 0.0149545 	 800       	 590.861   	 0         	 98.5606   	 5.9949    
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 47, n: 50, r2: 47)                   	 0.0134753 	 700       	 0         	 0         	 189.46    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 47, m: 2350, k: 47) 	 0.0115724 	 700       	 628.014   	 0         	 107.965   	 5.81683   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 97, reductionFactor: 37, colBlockingSize: 12)                    	 0.00825954	 100       	 11.6996   	 0         	 1.38109   	 8.47123   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 47, r: 47, streamingCols: 0)                   	 0.00754706	 100       	 73.1742   	 0         	 25.0274   	 2.92376   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 50, Qr2: 47)       	 0.00562115	 100       	 0         	 0         	 69.0251   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 50)           	 0.00489816	 8         	 20.4158   	 0         	 3.2992    	 6.18812   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 47)                                                                       	 0.00386665	 100       	 0         	 0         	 48.6209   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 47)                                                              	 0.00366675	 100       	 0         	 0         	 51.2716   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 47, reductionFactor: 37, colBlockingSize: 12)                    	 0.00355753	 101       	 6.44096   	 0         	 1.03546   	 6.2204    
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00354489	 9         	 0.423143  	 0         	 0.153348  	 2.75937   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.00269753	 8         	 38.0729   	 0         	 3.02499   	 12.5861   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 0, n: 50, r2: 47)                    	 0.00208929	 100       	 0         	 0         	 89.9825   	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 97, r: 50, r2: 50, leftOrthog: 0)          	 0.00193036	 100       	 25.1248   	 0         	 8.10209   	 3.10102   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                   	 0.00166695	 8         	 29.9948   	 0         	 9.64634   	 3.10945   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2350, cols: 47, reductionFactor: 37, colBlockingSize: 12)                  	 0.00161099	 8         	 52.9507   	 0         	 4.47561   	 11.8309   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 47, r1_: 47, n: 50, r2: 47)           	 0.00139045	 8         	 59.7347   	 0         	 10.2693   	 5.81683   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 50, r2: 50)              	 0.00103589	 100       	 24.1339   	 0         	 5.79214   	 4.16667   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 47, m: 47, fromLeft: 0)                	 0.000962007	 809       	 0         	 0         	 29.7225   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 47, k: 50)     	 0.000935812	 100       	 25.1119   	 0         	 6.15508   	 4.07986   
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                   	 0.000882202	 100       	 0.566764  	 0         	 2.26705   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 47)                                                                                          	 0.000824524	 201       	 0         	 0         	 9.16602   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 47, n: 50, r2: 1)                                                                                          	 0.000772458	 201       	 0         	 0         	 9.78383   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 47, k: 50)  	 0.000738555	 100       	 31.8189   	 0         	 7.79901   	 4.07986   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 47)   	 0.000686957	 100       	 34.2088   	 0         	 8.3848    	 4.07986   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2350, Xcols: 47, r: 47, streamingCols: 0)                   	 0.000586254	 8         	 70.8382   	 0         	 24.2357   	 2.92289   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 47, m: 50, k: 47)   	 0.000551012	 100       	 40.0899   	 0         	 10.031    	 3.9966    
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 47, n: 50, r2: 1)                    	 0.000526934	 100       	 0         	 0         	 14.7267   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                          	 0.000515142	 100       	 0         	 0         	 7.76485   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 1, r1low: 0, n: 50, r2: 47)                     	 0.00050527	 100       	 0         	 0         	 7.44157   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 1, Xr2: 50, Qr1: 1, Qr2: 0)          	 0.000427557	 100       	 0         	 0         	 9.35548   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 47)                                                                	 0.000424975	 101       	 0         	 0         	 8.93606   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                            	 0.000417321	 100       	 1.19812   	 0         	 14.3774   	 0.0833333 
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000384177	 101       	 0.657249  	 0         	 10.516    	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 47, n: 50, r2: 1)                                                                                 	 0.000360168	 101       	 0.658998  	 0         	 10.544    	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000334633	 100       	 0.747087  	 0         	 11.9534   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                              	 0.000252057	 8         	 0         	 0         	 63.4777   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 50)                                                                       	 0.000250546	 8         	 0         	 0         	 63.8605   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2350, m: 47)                                                                       	 0.000137452	 8         	 0         	 0         	 102.855   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.000121944	 1         	 2.10553   	 0         	 0.328019  	 6.41892   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2350, m: 47)                                                              	 8.1703e-05	 8         	 0         	 0         	 173.036   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 50, r: 50, streamingCols: 0)                     	 3.4231e-05	 1         	 3.65166   	 0         	 1.46066   	 2.5       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 47, r: 47, streamingCols: 0)                     	 2.6661e-05	 1         	 4.14276   	 0         	 1.74172   	 2.37854   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                                	 2.31e-05  	 1         	 0         	 0         	 1.7316    	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 1.0921e-05	 1         	 22.8917   	 0         	 5.494     	 4.16667   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 0)                	 1.019e-05 	 9         	 0         	 0         	 35.3288   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 47, r1_: 47, n: 50, r2: 1)            	 1.01e-05  	 1         	 21.8713   	 0         	 5.47248   	 3.9966    
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 47, n: 50, r2: 1)                                                                                   	 9.831e-06 	 1         	 0.47808   	 0         	 1.91232   	 0.25      
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 8.51e-06  	 1         	 0.587544  	 0         	 2.35018   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 0, m: 2350, k: 47)  	 7.76e-06  	 100       	 0         	 0         	 11386.6   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                         	 4.38e-06  	 1         	 0         	 0         	 9.13242   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 47)                                                                         	 3.79e-06  	 1         	 0         	 0         	 9.92084   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 3.83555   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 3.83552   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                            	 3.24844   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                        	 3.24713   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 2.65191   	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 0.909916  	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 0.872184  	 1818      
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.657738  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_leftOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                   	 0.586997  	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.579192  	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.493764  	 900       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.41033   	 918       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.215659  	 918       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.0958752 	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.067936  	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0405046 	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.0363163 	 918       
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                       	 0.0290876 	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.0277726 	 1800      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0261222 	 900       
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                              	 0.0213078 	 918       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0200005 	 1310      
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                              	 0.0199014 	 20        
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 0.0182347 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 0.018205  	 2         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0165968 	 1000      
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.00630963	 18        
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00614308	 1818      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00355701	 6372      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00136184	 5272      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00107898	 302       
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.000972197	 818       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000900543	 102       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000417321	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: L, orthoY: L
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m43->44  [0m[1;34m44->45  [0m[1;34m45->46  [0m[1;34m46->47  [0m[1;34m47->48  [0m[1;34m48->49  [0m[1;34m49->50  [0m[1;34m50->51  [0m[1;34m51->52  [0m[1;34m52->53  [0m[1;34m53->54  [0m[1;34m54->55  [0m[1;34m55->56  [0m[1;34m56->57  [0m[1;34m57->58  [0m[1;34m58->59  [0m[1;34m59->60  [0m[1;34m60->61  [0m[1;34m61->62  [0m[1;34m62->63  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 23058819262336 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 23058605664256 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 23058404337792 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 23058203011328 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 23058001684864 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 23057800358400 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 23057599031936 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 23057397705472 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 23057196379008 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 23056995052544 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 23056793726080 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 23056592399616 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 23056391073152 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 23056189746688 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 23055988420224 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 23055787093760 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 23055585767296 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 23055384440832 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 23055183114368 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 23054981787904 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 23054780461440 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 23054579134976 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 23054377808512 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 23054176482048 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 23053975155584 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 23053773829120 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 23053572502656 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 23053371176192 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 23053169849728 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 23052968523264 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 23052767196800 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 23052565870336 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 23052364539776 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 23052163213312 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 23051961886848 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 23051760560384 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 23051559233920 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 23051357907456 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 23051156580992 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 23050955254528 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 23050753928064 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 23050552601600 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 23050351275136 -> hwthread 43 - OK[0m[1;34m
[0m[1;34m	threadid 23050149948672 -> hwthread 44 - OK[0m[1;34m
[0m[1;34m	threadid 23049948622208 -> hwthread 45 - OK[0m[1;34m
[0m[1;34m	threadid 23049747295744 -> hwthread 46 - OK[0m[1;34m
[0m[1;34m	threadid 23049545969280 -> hwthread 47 - OK[0m[1;34m
[0m[1;34m	threadid 23049344642816 -> hwthread 48 - OK[0m[1;34m
[0m[1;34m	threadid 23049143316352 -> hwthread 49 - OK[0m[1;34m
[0m[1;34m	threadid 23048941989888 -> hwthread 50 - OK[0m[1;34m
[0m[1;34m	threadid 23048740663424 -> hwthread 51 - OK[0m[1;34m
[0m[1;34m	threadid 23048539336960 -> hwthread 52 - OK[0m[1;34m
[0m[1;34m	threadid 23048338010496 -> hwthread 53 - OK[0m[1;34m
[0m[1;34m	threadid 23048136684032 -> hwthread 54 - OK[0m[1;34m
[0m[1;34m	threadid 23047935357568 -> hwthread 55 - OK[0m[1;34m
[0m[1;34m	threadid 23047734031104 -> hwthread 56 - OK[0m[1;34m
[0m[1;34m	threadid 23047532704640 -> hwthread 57 - OK[0m[1;34m
[0m[1;34m	threadid 23047331378176 -> hwthread 58 - OK[0m[1;34m
[0m[1;34m	threadid 23047130051712 -> hwthread 59 - OK[0m[1;34m
[0m[1;34m	threadid 23046928725248 -> hwthread 60 - OK[0m[1;34m
[0m[1;34m	threadid 23046727398784 -> hwthread 61 - OK[0m[1;34m
[0m[1;34m	threadid 23046526072320 -> hwthread 62 - OK[0m[1;34m
[0m[1;34m	threadid 23046324745856 -> hwthread 63 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 23058713601792 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 23058707011328 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 98, m: 98)                                                                 	 0.82429   	 700       	 5.59493   	 0         	 0.196407  	 28.4864   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4900, cols: 98, reductionFactor: 37, colBlockingSize: 12)                  	 0.554499  	 600       	 104.595   	 0         	 4.23997   	 24.6688   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 98, n: 50, r: 98, r2: 98)             	 0.524944  	 600       	 107.576   	 0         	 8.86955   	 12.1287   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 98, r: 98, r2: 4900, leftOrthog: 0)        	 0.42036   	 600       	 134.341   	 0         	 16.6692   	 8.05921   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4900, cols: 48, reductionFactor: 37, colBlockingSize: 12)                  	 0.2053    	 700       	 79.0676   	 0         	 6.47842   	 12.2048   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 4900, Xcols: 48, r: 48, streamingCols: 0)                   	 0.0847952 	 700       	 93.1977   	 0         	 31.142    	 2.99267   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 98, reductionFactor: 37, colBlockingSize: 12)                  	 0.0779248 	 100       	 63.289    	 0         	 2.61384   	 24.213    
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 98, Qr2: 48)       	 0.0627208 	 700       	 0         	 0         	 75.0348   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 98)                                                                 	 0.0506952 	 100       	 3.38296   	 0         	 0.19489   	 17.3583   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r: 98, r2: 98)             	 0.0409542 	 100       	 117.253   	 0         	 9.75927   	 12.0145   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 48, k: 2500)   	 0.0407089 	 800       	 235.821   	 0         	 38.8947   	 6.06306   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 98, r: 98, r2: 2500, leftOrthog: 0)        	 0.0389192 	 100       	 123.384   	 0         	 15.503    	 7.95868   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0381783 	 100       	 2.29188   	 0         	 0.158205  	 14.4868   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 4900, leftOrthog: 0)        	 0.0361487 	 100       	 67.7756   	 0         	 16.3768   	 4.13851   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 98, n: 50, r: 98, r2: 50)             	 0.0336361 	 100       	 142.763   	 0         	 17.3647   	 8.22148   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 48, m: 48)                                                                  	 0.0319456 	 909       	 4.19581   	 0         	 1.58435   	 2.64828   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4900, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0307618 	 100       	 81.7968   	 0         	 6.43655   	 12.7082   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 4900, m: 48)                                                                       	 0.0257008 	 700       	 0         	 0         	 102.496   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 2500, m: 48, k: 50)	 0.0256096 	 800       	 374.86    	 0         	 61.8268   	 6.06306   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 48, reductionFactor: 37, colBlockingSize: 12)                  	 0.0230891 	 100       	 51.2421   	 0         	 4.23763   	 12.0922   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 48, n: 50, r2: 48)                                                                                         	 0.0195067 	 808       	 0         	 0         	 76.3484   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 2400, k: 48) 	 0.0160013 	 800       	 575.952   	 0         	 95.0321   	 6.06061   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 4900, m: 48)                                                              	 0.0159301 	 700       	 0         	 0         	 165.362   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 48, n: 50, r2: 48)                   	 0.0136218 	 700       	 0         	 0         	 193.384   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 48, m: 2400, k: 48) 	 0.0103342 	 700       	 749.108   	 0         	 126.1     	 5.94059   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 98, reductionFactor: 37, colBlockingSize: 12)                    	 0.00807564	 100       	 12.214    	 0         	 1.43682   	 8.50073   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 48, r: 48, streamingCols: 0)                   	 0.00773375	 100       	 74.4787   	 0         	 24.9454   	 2.98567   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 50, r2: 50)              	 0.00540048	 100       	 4.62922   	 0         	 1.11101   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 50, Qr2: 48)       	 0.00520497	 100       	 0         	 0         	 75.3126   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 50)           	 0.00506154	 8         	 19.7568   	 0         	 3.1927    	 6.18812   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 48)                                                                       	 0.00430741	 100       	 0         	 0         	 44.5744   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 48, reductionFactor: 37, colBlockingSize: 12)                    	 0.00358123	 101       	 6.6735    	 0         	 1.06132   	 6.28792   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00350093	 9         	 0.428456  	 0         	 0.155273  	 2.75937   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 48)                                                              	 0.0034082 	 100       	 0         	 0         	 56.3347   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 0, n: 50, r2: 48)                    	 0.0033973 	 100       	 0         	 0         	 56.5155   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.00284313	 8         	 36.1231   	 0         	 2.87007   	 12.5861   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 98, r: 50, r2: 50, leftOrthog: 0)          	 0.00205602	 100       	 23.8325   	 0         	 7.6653    	 3.10914   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                   	 0.0019042 	 8         	 26.2578   	 0         	 8.4445    	 3.10945   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2400, cols: 48, reductionFactor: 37, colBlockingSize: 12)                  	 0.00184634	 8         	 49.2135   	 0         	 4.07306   	 12.0827   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 48, r1_: 48, n: 50, r2: 48)           	 0.00145769	 8         	 60.6945   	 0         	 10.2169   	 5.94059   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 48, k: 50)     	 0.000935683	 100       	 25.6497   	 0         	 6.24143   	 4.10959   
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                   	 0.000884459	 100       	 0.565317  	 0         	 2.26127   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 48)                                                                                          	 0.000842042	 201       	 0         	 0         	 9.16629   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 48, n: 50, r2: 1)                                                                                          	 0.000787499	 201       	 0         	 0         	 9.80116   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 48, k: 50)  	 0.000742554	 100       	 32.3209   	 0         	 7.86475   	 4.10959   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 48)   	 0.000684487	 100       	 35.0628   	 0         	 8.53194   	 4.10959   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 48, m: 48, fromLeft: 0)                	 0.000635796	 809       	 0         	 0         	 46.9065   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2400, Xcols: 48, r: 48, streamingCols: 0)                   	 0.000598946	 8         	 73.8577   	 0         	 24.7423   	 2.98507   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 48, m: 50, k: 48)   	 0.000551346	 100       	 41.7886   	 0         	 10.3079   	 4.05405   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 48, n: 50, r2: 1)                    	 0.000528641	 100       	 0         	 0         	 14.8305   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                          	 0.000509064	 100       	 0         	 0         	 7.85756   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 1, r1low: 0, n: 50, r2: 48)                     	 0.000473682	 100       	 0         	 0         	 8.1067    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 1, Xr2: 50, Qr1: 1, Qr2: 0)          	 0.000438862	 100       	 0         	 0         	 9.11448   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 48)                                                                	 0.000436305	 101       	 0         	 0         	 8.88919   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                            	 0.000425215	 100       	 1.17588   	 0         	 14.1105   	 0.0833333 
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000392206	 101       	 0.643794  	 0         	 10.3007   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 48, n: 50, r2: 1)                                                                                 	 0.000361018	 101       	 0.671435  	 0         	 10.743    	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.00033277	 100       	 0.75127   	 0         	 12.0203   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 50)                                                                       	 0.000259787	 8         	 0         	 0         	 61.5889   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2400, m: 48)                                                                       	 0.000226944	 8         	 0         	 0         	 64.9746   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                              	 0.000214195	 8         	 0         	 0         	 74.6983   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.000123013	 1         	 2.08723   	 0         	 0.325169  	 6.41892   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2400, m: 48)                                                              	 7.9272e-05	 8         	 0         	 0         	 186.013   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 50, r: 50, streamingCols: 0)                     	 3.1921e-05	 1         	 3.91592   	 0         	 1.56637   	 2.5       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 48, r: 48, streamingCols: 0)                     	 2.671e-05 	 1         	 4.31299   	 0         	 1.7827    	 2.41935   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                                	 2.4171e-05	 1         	 0         	 0         	 1.65488   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 1.086e-05 	 1         	 23.0203   	 0         	 5.52486   	 4.16667   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 0)                	 1.037e-05 	 9         	 0         	 0         	 34.7155   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 9.741e-06 	 1         	 0.513294  	 0         	 2.05318   	 0.25      
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 48, n: 50, r2: 1)                                                                                   	 8.85e-06  	 1         	 0.542373  	 0         	 2.16949   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 0, m: 2400, k: 48)  	 8.62e-06  	 100       	 0         	 0         	 10691.4   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 48, r1_: 48, n: 50, r2: 1)            	 8.55e-06  	 1         	 26.9474   	 0         	 6.64702   	 4.05405   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                         	 4.3e-06   	 1         	 0         	 0         	 9.30233   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 48)                                                                         	 3.77e-06  	 1         	 0         	 0         	 10.1857   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 3.90282   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 3.90278   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                            	 3.29385   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                        	 3.29254   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 2.6714    	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 0.913163  	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 0.908044  	 1818      
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.671908  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_leftOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                   	 0.608865  	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.604935  	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.497484  	 900       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.4315    	 918       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.237273  	 918       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.0950908 	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.0683646 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0416446 	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.0354465 	 918       
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                       	 0.030503  	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.02758   	 1800      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0263521 	 900       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0216453 	 1310      
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                              	 0.0200923 	 918       
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                              	 0.0198494 	 20        
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 0.0191193 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 0.0190905 	 2         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0180214 	 1000      
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.00653864	 18        
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00648095	 1818      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00332812	 6372      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00175987	 5272      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00108599	 302       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.00090305	 102       
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.000646166	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000425215	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: L, orthoY: L
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m43->44  [0m[1;34m44->45  [0m[1;34m45->46  [0m[1;34m46->47  [0m[1;34m47->48  [0m[1;34m48->49  [0m[1;34m49->50  [0m[1;34m50->51  [0m[1;34m51->52  [0m[1;34m52->53  [0m[1;34m53->54  [0m[1;34m54->55  [0m[1;34m55->56  [0m[1;34m56->57  [0m[1;34m57->58  [0m[1;34m58->59  [0m[1;34m59->60  [0m[1;34m60->61  [0m[1;34m61->62  [0m[1;34m62->63  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 22886980990848 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 22886806972416 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 22886605645952 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 22886404319488 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 22886202993024 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 22886001666560 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 22885800340096 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 22885599013632 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 22885397687168 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 22885196360704 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 22884995034240 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 22884793707776 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 22884592381312 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 22884391054848 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 22884189728384 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 22883988401920 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 22883787075456 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 22883585748992 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 22883384422528 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 22883183096064 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 22882981769600 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 22882780443136 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 22882579116672 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 22882377790208 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 22882176463744 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 22881975137280 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 22881773810816 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 22881572484352 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 22881371157888 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 22881169831424 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 22880968504960 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 22880767178496 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 22880565847936 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 22880364521472 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 22880163195008 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 22879961868544 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 22879760542080 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 22879559215616 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 22879357889152 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 22879156562688 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 22878955236224 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 22878753909760 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 22878552583296 -> hwthread 43 - OK[0m[1;34m
[0m[1;34m	threadid 22878351256832 -> hwthread 44 - OK[0m[1;34m
[0m[1;34m	threadid 22878149930368 -> hwthread 45 - OK[0m[1;34m
[0m[1;34m	threadid 22877948603904 -> hwthread 46 - OK[0m[1;34m
[0m[1;34m	threadid 22877747277440 -> hwthread 47 - OK[0m[1;34m
[0m[1;34m	threadid 22877545950976 -> hwthread 48 - OK[0m[1;34m
[0m[1;34m	threadid 22877344624512 -> hwthread 49 - OK[0m[1;34m
[0m[1;34m	threadid 22877143298048 -> hwthread 50 - OK[0m[1;34m
[0m[1;34m	threadid 22876941971584 -> hwthread 51 - OK[0m[1;34m
[0m[1;34m	threadid 22876740645120 -> hwthread 52 - OK[0m[1;34m
[0m[1;34m	threadid 22876539318656 -> hwthread 53 - OK[0m[1;34m
[0m[1;34m	threadid 22876337992192 -> hwthread 54 - OK[0m[1;34m
[0m[1;34m	threadid 22876136665728 -> hwthread 55 - OK[0m[1;34m
[0m[1;34m	threadid 22875935339264 -> hwthread 56 - OK[0m[1;34m
[0m[1;34m	threadid 22875734012800 -> hwthread 57 - OK[0m[1;34m
[0m[1;34m	threadid 22875532686336 -> hwthread 58 - OK[0m[1;34m
[0m[1;34m	threadid 22875331359872 -> hwthread 59 - OK[0m[1;34m
[0m[1;34m	threadid 22875130033408 -> hwthread 60 - OK[0m[1;34m
[0m[1;34m	threadid 22874928706944 -> hwthread 61 - OK[0m[1;34m
[0m[1;34m	threadid 22874727380480 -> hwthread 62 - OK[0m[1;34m
[0m[1;34m	threadid 22874526054016 -> hwthread 63 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 22886702110464 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 22886696720128 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 99, m: 99)                                                                 	 0.858025  	 700       	 5.54117   	 0         	 0.192548  	 28.7781   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4950, cols: 99, reductionFactor: 37, colBlockingSize: 12)                  	 0.5678    	 600       	 105.304   	 0         	 4.22558   	 24.9205   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 99, n: 50, r: 99, r2: 99)             	 0.544128  	 600       	 106.993   	 0         	 8.73237   	 12.2525   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 99, r: 99, r2: 4950, leftOrthog: 0)        	 0.453847  	 600       	 128.277   	 0         	 15.756    	 8.14145   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4950, cols: 49, reductionFactor: 37, colBlockingSize: 12)                  	 0.209934  	 700       	 81.3999   	 0         	 6.53407   	 12.4578   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 4950, Xcols: 49, r: 49, streamingCols: 0)                   	 0.0867059 	 700       	 95.9504   	 0         	 31.4083   	 3.05494   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 99, reductionFactor: 37, colBlockingSize: 12)                  	 0.0810106 	 100       	 62.127    	 0         	 2.54091   	 24.4507   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 99, Qr2: 49)       	 0.0659965 	 700       	 0         	 0         	 72.7699   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 99)                                                                 	 0.0543022 	 100       	 3.19048   	 0         	 0.183418  	 17.3946   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r: 99, r2: 99)             	 0.0436323 	 100       	 112.314   	 0         	 9.25556   	 12.1347   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0395281 	 100       	 2.21362   	 0         	 0.152803  	 14.4868   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 99, r: 99, r2: 2500, leftOrthog: 0)        	 0.0382499 	 100       	 128.118   	 0         	 15.9394   	 8.0378    
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 4950, leftOrthog: 0)        	 0.0363071 	 100       	 68.1685   	 0         	 16.4706   	 4.1388    
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 99, n: 50, r: 99, r2: 50)             	 0.0354111 	 100       	 138.389   	 0         	 16.7744   	 8.25      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 49, m: 49)                                                                  	 0.0353084 	 909       	 4.0384    	 0         	 1.4936    	 2.70381   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 49, k: 2500)   	 0.0338834 	 800       	 289.227   	 0         	 47.2113   	 6.12623   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4950, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0308127 	 100       	 82.4949   	 0         	 6.49083   	 12.7095   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 4950, m: 49)                                                                       	 0.0257927 	 700       	 0         	 0         	 105.323   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 49, reductionFactor: 37, colBlockingSize: 12)                  	 0.0244895 	 100       	 50.346    	 0         	 4.08015   	 12.3392   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 2500, m: 49, k: 50)	 0.0235768 	 800       	 415.664   	 0         	 67.8499   	 6.12623   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 49, n: 50, r2: 49)                                                                                         	 0.0204888 	 808       	 0         	 0         	 75.7491   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 2450, k: 49) 	 0.0170514 	 800       	 563.237   	 0         	 91.957    	 6.125     
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 49, n: 50, r2: 49)                   	 0.016332  	 700       	 0         	 0         	 166.334   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 4950, m: 49)                                                              	 0.0160785 	 700       	 0         	 0         	 168.957   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 49, m: 2450, k: 49) 	 0.0146633 	 700       	 561.636   	 0         	 92.6127   	 6.06436   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 99, reductionFactor: 37, colBlockingSize: 12)                    	 0.00857908	 100       	 11.7331   	 0         	 1.37553   	 8.52984   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 49, r: 49, streamingCols: 0)                   	 0.00795085	 100       	 75.4951   	 0         	 24.7722   	 3.04757   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 50, Qr2: 49)       	 0.0051701 	 100       	 0         	 0         	 76.5943   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 50)           	 0.00496757	 8         	 20.1306   	 0         	 3.2531    	 6.18812   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 49)                                                                       	 0.00413724	 100       	 0         	 0         	 47.3746   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 49, reductionFactor: 37, colBlockingSize: 12)                    	 0.00375158	 101       	 6.63867   	 0         	 1.04479   	 6.35408   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00348327	 9         	 0.430628  	 0         	 0.15606   	 2.75937   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 49)                                                              	 0.00333742	 100       	 0         	 0         	 58.7281   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 0, n: 50, r2: 49)                    	 0.00288524	 100       	 0         	 0         	 67.9319   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.00270886	 8         	 37.9136   	 0         	 3.01234   	 12.5861   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                   	 0.0021277 	 8         	 23.4995   	 0         	 7.55745   	 3.10945   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2450, cols: 49, reductionFactor: 37, colBlockingSize: 12)                  	 0.00201876	 8         	 47.8823   	 0         	 3.88202   	 12.3344   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 99, r: 50, r2: 50, leftOrthog: 0)          	 0.00185433	 100       	 26.6943   	 0         	 8.56374   	 3.11713   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 49, r1_: 49, n: 50, r2: 49)           	 0.00153021	 8         	 61.5075   	 0         	 10.1425   	 6.06436   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 50, r2: 50)              	 0.00107841	 100       	 23.1823   	 0         	 5.56376   	 4.16667   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 49, m: 49, fromLeft: 0)                	 0.00103176	 809       	 0         	 0         	 30.1218   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 49, k: 50)     	 0.000926584	 100       	 26.4412   	 0         	 6.38906   	 4.13851   
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                   	 0.000894131	 100       	 0.559202  	 0         	 2.23681   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 49)                                                                                          	 0.000838197	 201       	 0         	 0         	 9.40018   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 49, n: 50, r2: 1)                                                                                          	 0.000827253	 201       	 0         	 0         	 9.52453   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 49)   	 0.000720145	 100       	 34.0209   	 0         	 8.22057   	 4.13851   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 49, m: 50, k: 49)   	 0.00062259	 100       	 38.5647   	 0         	 9.38145   	 4.11074   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2450, Xcols: 49, r: 49, streamingCols: 0)                   	 0.000612133	 8         	 76.8781   	 0         	 25.2286   	 3.04726   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 49, k: 50)  	 0.000574156	 100       	 42.6713   	 0         	 10.3108   	 4.13851   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 1, r1low: 0, n: 50, r2: 49)                     	 0.00054101	 100       	 0         	 0         	 7.24571   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                          	 0.000514427	 100       	 0         	 0         	 7.77564   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 49, n: 50, r2: 1)                    	 0.000506053	 100       	 0         	 0         	 15.6505   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 1, Xr2: 50, Qr1: 1, Qr2: 0)          	 0.000462277	 100       	 0         	 0         	 8.65282   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                            	 0.000440072	 100       	 1.13618   	 0         	 13.6341   	 0.0833333 
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 49)                                                                	 0.000432599	 101       	 0         	 0         	 9.15212   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000396998	 101       	 0.636023  	 0         	 10.1764   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 49, n: 50, r2: 1)                                                                                 	 0.000360487	 101       	 0.686433  	 0         	 10.9829   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000322552	 100       	 0.775069  	 0         	 12.4011   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 50)                                                                       	 0.000275017	 8         	 0         	 0         	 58.1782   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                              	 0.000239954	 8         	 0         	 0         	 66.6794   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2450, m: 49)                                                                       	 0.000193115	 8         	 0         	 0         	 79.5712   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.000138774	 1         	 1.85018   	 0         	 0.288238  	 6.41892   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2450, m: 49)                                                              	 6.5852e-05	 8         	 0         	 0         	 233.348   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 50, r: 50, streamingCols: 0)                     	 3.2411e-05	 1         	 3.85672   	 0         	 1.54269   	 2.5       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 49, r: 49, streamingCols: 0)                     	 2.686e-05 	 1         	 4.46947   	 0         	 1.81698   	 2.45984   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                                	 2.218e-05 	 1         	 0         	 0         	 1.80343   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 1.064e-05 	 1         	 23.4962   	 0         	 5.6391    	 4.16667   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 49, r1_: 49, n: 50, r2: 1)            	 1.0611e-05	 1         	 22.6275   	 0         	 5.50448   	 4.11074   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 0)                	 1.0492e-05	 9         	 0         	 0         	 34.3119   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 49, n: 50, r2: 1)                                                                                   	 8.99e-06  	 1         	 0.54505   	 0         	 2.1802    	 0.25      
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 8.48e-06  	 1         	 0.589623  	 0         	 2.35849   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 0, m: 2450, k: 49)  	 7.54e-06  	 100       	 0         	 0         	 12737.4   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                         	 4.51e-06  	 1         	 0         	 0         	 8.86918   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 49)                                                                         	 3.88e-06  	 1         	 0         	 0         	 10.1031   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 4.04873   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 4.0487    	 100       
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                            	 3.42263   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                        	 3.42131   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 2.78006   	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 0.951856  	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 0.931244  	 1818      
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.688816  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_leftOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                   	 0.625995  	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.624249  	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.530259  	 900       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.443558  	 918       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.243549  	 918       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.0974558 	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.0716289 	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.0387916 	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.03481   	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.033065  	 1800      
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                       	 0.0304065 	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0241509 	 900       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0226687 	 1310      
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                              	 0.0208207 	 20        
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0202643 	 1000      
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                              	 0.0201765 	 918       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 0.0193595 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 0.019331  	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.00651902	 18        
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00568563	 1818      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00351227	 6372      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00147017	 5272      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00108004	 302       
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.00104226	 818       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000911601	 102       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000440072	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: L, orthoY: L
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m43->44  [0m[1;34m44->45  [0m[1;34m45->46  [0m[1;34m46->47  [0m[1;34m47->48  [0m[1;34m48->49  [0m[1;34m49->50  [0m[1;34m50->51  [0m[1;34m51->52  [0m[1;34m52->53  [0m[1;34m53->54  [0m[1;34m54->55  [0m[1;34m55->56  [0m[1;34m56->57  [0m[1;34m57->58  [0m[1;34m58->59  [0m[1;34m59->60  [0m[1;34m60->61  [0m[1;34m61->62  [0m[1;34m62->63  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 22762934794112 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 22762722682880 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 22762521356416 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 22762320029952 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 22762118703488 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 22761917377024 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 22761716050560 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 22761514724096 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 22761313397632 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 22761112071168 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 22760910744704 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 22760709418240 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 22760508091776 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 22760306765312 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 22760105438848 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 22759904112384 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 22759702785920 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 22759501459456 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 22759300132992 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 22759098806528 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 22758897480064 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 22758696153600 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 22758494827136 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 22758293500672 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 22758092174208 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 22757890847744 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 22757689521280 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 22757488194816 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 22757286868352 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 22757085541888 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 22756884215424 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 22756682888960 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 22756481558400 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 22756280231936 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 22756078905472 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 22755877579008 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 22755676252544 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 22755474926080 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 22755273599616 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 22755072273152 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 22754870946688 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 22754669620224 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 22754468293760 -> hwthread 43 - OK[0m[1;34m
[0m[1;34m	threadid 22754266967296 -> hwthread 44 - OK[0m[1;34m
[0m[1;34m	threadid 22754065640832 -> hwthread 45 - OK[0m[1;34m
[0m[1;34m	threadid 22753864314368 -> hwthread 46 - OK[0m[1;34m
[0m[1;34m	threadid 22753662987904 -> hwthread 47 - OK[0m[1;34m
[0m[1;34m	threadid 22753461661440 -> hwthread 48 - OK[0m[1;34m
[0m[1;34m	threadid 22753260334976 -> hwthread 49 - OK[0m[1;34m
[0m[1;34m	threadid 22753059008512 -> hwthread 50 - OK[0m[1;34m
[0m[1;34m	threadid 22752857682048 -> hwthread 51 - OK[0m[1;34m
[0m[1;34m	threadid 22752656355584 -> hwthread 52 - OK[0m[1;34m
[0m[1;34m	threadid 22752455029120 -> hwthread 53 - OK[0m[1;34m
[0m[1;34m	threadid 22752253702656 -> hwthread 54 - OK[0m[1;34m
[0m[1;34m	threadid 22752052376192 -> hwthread 55 - OK[0m[1;34m
[0m[1;34m	threadid 22751851049728 -> hwthread 56 - OK[0m[1;34m
[0m[1;34m	threadid 22751649723264 -> hwthread 57 - OK[0m[1;34m
[0m[1;34m	threadid 22751448396800 -> hwthread 58 - OK[0m[1;34m
[0m[1;34m	threadid 22751247070336 -> hwthread 59 - OK[0m[1;34m
[0m[1;34m	threadid 22751045743872 -> hwthread 60 - OK[0m[1;34m
[0m[1;34m	threadid 22750844417408 -> hwthread 61 - OK[0m[1;34m
[0m[1;34m	threadid 22750643090944 -> hwthread 62 - OK[0m[1;34m
[0m[1;34m	threadid 22750441764480 -> hwthread 63 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 22762829133568 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 22762822543104 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 100, m: 100)                                                               	 0.836851  	 700       	 5.85528   	 0         	 0.201422  	 29.0698   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 5000, cols: 100, reductionFactor: 37, colBlockingSize: 12)                 	 0.573064  	 600       	 107.53    	 0         	 4.27177   	 25.1722   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 100, n: 50, r: 100, r2: 100)          	 0.55917   	 600       	 107.302   	 0         	 8.66999   	 12.3762   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 100, r: 100, r2: 5000, leftOrthog: 0)      	 0.445197  	 600       	 134.772   	 0         	 16.3882   	 8.22368   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 5000, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.244602  	 800       	 83.9752   	 0         	 6.60664   	 12.7107   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 5000, Xcols: 50, r: 50, streamingCols: 0)                   	 0.0888425 	 700       	 98.4889   	 0         	 31.5952   	 3.11721   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 100, reductionFactor: 37, colBlockingSize: 12)                 	 0.0800728 	 100       	 64.1308   	 0         	 2.59764   	 24.6881   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 100, Qr2: 50)      	 0.065271  	 700       	 0         	 0         	 75.0716   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 100)                                                                	 0.0541743 	 100       	 3.23031   	 0         	 0.185328  	 17.4303   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r: 100, r2: 100)           	 0.0432394 	 100       	 115.635   	 0         	 9.43583   	 12.2549   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 100, r: 100, r2: 2500, leftOrthog: 0)      	 0.0420532 	 100       	 118.897   	 0         	 14.6481   	 8.11688   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.0390299 	 918       	 3.92006   	 0         	 1.42063   	 2.75937   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0377373 	 100       	 2.31866   	 0         	 0.160054  	 14.4868   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 5000, leftOrthog: 0)        	 0.0335422 	 100       	 74.533    	 0         	 18.0072   	 4.13907   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50, k: 2500)   	 0.0333096 	 800       	 300.214   	 0         	 48.5146   	 6.18812   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 2500, k: 50) 	 0.0321091 	 1500      	 583.946   	 0         	 94.3657   	 6.18812   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 100, n: 50, r: 100, r2: 50)           	 0.0314005 	 100       	 159.233   	 0         	 19.2353   	 8.27815   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0291814 	 116       	 51.0322   	 0         	 4.05464   	 12.5861   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 5000, m: 50)                                                                       	 0.0279913 	 700       	 0         	 0         	 100.031   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 2500, m: 50, k: 50)	 0.0259036 	 800       	 386.047   	 0         	 62.3853   	 6.18812   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 50)                                                                                         	 0.0221923 	 808       	 0         	 0         	 72.818    	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 5000, m: 50)                                                              	 0.0170567 	 700       	 0         	 0         	 164.158   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 50, n: 50, r2: 50)                   	 0.0158173 	 700       	 0         	 0         	 177.022   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                   	 0.0109267 	 116       	 66.3513   	 0         	 21.3386   	 3.10945   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 100, reductionFactor: 37, colBlockingSize: 12)                   	 0.00846871	 100       	 12.1273   	 0         	 1.41698   	 8.55856   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 50)           	 0.00644862	 16        	 31.0144   	 0         	 5.01192   	 6.18812   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 50, Qr2: 50)       	 0.00605365	 100       	 0         	 0         	 66.0759   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 50)                                                                       	 0.00500691	 116       	 0         	 0         	 46.336    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 0, n: 50, r2: 50)                    	 0.00397278	 100       	 0         	 0         	 50.3425   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.00387779	 102       	 6.75364   	 0         	 1.05215   	 6.41892   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                              	 0.00377091	 116       	 0         	 0         	 61.5237   	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 100, r: 50, r2: 50, leftOrthog: 0)         	 0.00178508	 100       	 28.01     	 0         	 8.9632    	 3.125     
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 50)   	 0.00133511	 200       	 37.4502   	 0         	 8.98806   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                          	 0.00131529	 301       	 0         	 0         	 9.15384   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 50, r2: 50)              	 0.00106478	 100       	 23.4791   	 0         	 5.63499   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50, k: 50)     	 0.00091846	 100       	 27.2195   	 0         	 6.53267   	 4.16667   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 0)                	 0.000891671	 818       	 0         	 0         	 36.6951   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                   	 0.000822977	 100       	 0.60755   	 0         	 2.4302    	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000787077	 201       	 0         	 0         	 10.215    	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000743477	 202       	 0.679241  	 0         	 10.8679   	 0.0625    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 50, k: 50)  	 0.000579247	 100       	 43.1595   	 0         	 10.3583   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 1, r1low: 0, n: 50, r2: 50)                     	 0.00052199	 100       	 0         	 0         	 7.66298   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 50, n: 50, r2: 1)                    	 0.000512093	 100       	 0         	 0         	 15.6222   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                                	 0.000448542	 102       	 0         	 0         	 9.09614   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 1, Xr2: 50, Qr1: 1, Qr2: 0)          	 0.000421537	 100       	 0         	 0         	 9.48908   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                            	 0.000412239	 100       	 1.21289   	 0         	 14.5547   	 0.0833333 
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.00033136	 100       	 0.754466  	 0         	 12.0715   	 0.0625    
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 50, r: 50, streamingCols: 0)                     	 6.4312e-05	 2         	 3.8873    	 0         	 1.55492   	 2.5       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 1.903e-05 	 2         	 26.2743   	 0         	 6.30583   	 4.16667   
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 1.4411e-05	 2         	 0.693914  	 0         	 2.77566   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 0, m: 2500, k: 50)  	 8.15e-06  	 100       	 0         	 0         	 12269.9   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                         	 7.99e-06  	 2         	 0         	 0         	 10.0125   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 4.07539   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 4.07534   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                            	 3.44202   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                        	 3.44074   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 2.78338   	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 0.939267  	 1818      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 0.928763  	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.693596  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.634875  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_leftOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                   	 0.63325   	 100       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.522578  	 900       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.45203   	 918       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.24688   	 918       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.0998335 	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.0717462 	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.0390299 	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.034228  	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.0334524 	 1800      
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                       	 0.0330062 	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0264828 	 900       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0242947 	 1310      
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                              	 0.0212762 	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0208241 	 1000      
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                              	 0.020677  	 20        
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 0.0193438 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 0.0193187 	 2         
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00801107	 1818      
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.00646765	 18        
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00321637	 6372      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.0018802 	 5074      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00107484	 302       
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.000891671	 818       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000837388	 102       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000412239	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: L, orthoY: L
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m43->44  [0m[1;34m44->45  [0m[1;34m45->46  [0m[1;34m46->47  [0m[1;34m47->48  [0m[1;34m48->49  [0m[1;34m49->50  [0m[1;34m50->51  [0m[1;34m51->52  [0m[1;34m52->53  [0m[1;34m53->54  [0m[1;34m54->55  [0m[1;34m55->56  [0m[1;34m56->57  [0m[1;34m57->58  [0m[1;34m58->59  [0m[1;34m59->60  [0m[1;34m60->61  [0m[1;34m61->62  [0m[1;34m62->63  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 23248250926976 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 23248053987328 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 23247852660864 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 23247651334400 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 23247450007936 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 23247248681472 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 23247047355008 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 23246846028544 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 23246644702080 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 23246443375616 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 23246242049152 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 23246040722688 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 23245839396224 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 23245638069760 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 23245436743296 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 23245235416832 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 23245034090368 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 23244832763904 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 23244631437440 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 23244430110976 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 23244228784512 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 23244027458048 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 23243826131584 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 23243624805120 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 23243423478656 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 23243222152192 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 23243020825728 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 23242819499264 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 23242618172800 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 23242416846336 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 23242215519872 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 23242014193408 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 23241812862848 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 23241611536384 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 23241410209920 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 23241208883456 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 23241007556992 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 23240806230528 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 23240604904064 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 23240403577600 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 23240202251136 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 23240000924672 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 23239799598208 -> hwthread 43 - OK[0m[1;34m
[0m[1;34m	threadid 23239598271744 -> hwthread 44 - OK[0m[1;34m
[0m[1;34m	threadid 23239396945280 -> hwthread 45 - OK[0m[1;34m
[0m[1;34m	threadid 23239195618816 -> hwthread 46 - OK[0m[1;34m
[0m[1;34m	threadid 23238994292352 -> hwthread 47 - OK[0m[1;34m
[0m[1;34m	threadid 23238792965888 -> hwthread 48 - OK[0m[1;34m
[0m[1;34m	threadid 23238591639424 -> hwthread 49 - OK[0m[1;34m
[0m[1;34m	threadid 23238390312960 -> hwthread 50 - OK[0m[1;34m
[0m[1;34m	threadid 23238188986496 -> hwthread 51 - OK[0m[1;34m
[0m[1;34m	threadid 23237987660032 -> hwthread 52 - OK[0m[1;34m
[0m[1;34m	threadid 23237786333568 -> hwthread 53 - OK[0m[1;34m
[0m[1;34m	threadid 23237585007104 -> hwthread 54 - OK[0m[1;34m
[0m[1;34m	threadid 23237383680640 -> hwthread 55 - OK[0m[1;34m
[0m[1;34m	threadid 23237182354176 -> hwthread 56 - OK[0m[1;34m
[0m[1;34m	threadid 23236981027712 -> hwthread 57 - OK[0m[1;34m
[0m[1;34m	threadid 23236779701248 -> hwthread 58 - OK[0m[1;34m
[0m[1;34m	threadid 23236578374784 -> hwthread 59 - OK[0m[1;34m
[0m[1;34m	threadid 23236377048320 -> hwthread 60 - OK[0m[1;34m
[0m[1;34m	threadid 23236175721856 -> hwthread 61 - OK[0m[1;34m
[0m[1;34m	threadid 23235974395392 -> hwthread 62 - OK[0m[1;34m
[0m[1;34m	threadid 23235773068928 -> hwthread 63 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 23248145266432 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 23248138675968 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 101, m: 101)                                                               	 0.908773  	 700       	 5.55527   	 0         	 0.189203  	 29.3614   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 5050, cols: 101, reductionFactor: 37, colBlockingSize: 12)                 	 0.584075  	 600       	 108.7     	 0         	 4.27549   	 25.424    
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 101, n: 50, r: 101, r2: 101)          	 0.524446  	 600       	 117.873   	 0         	 9.42985   	 12.5      
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 101, r: 101, r2: 5050, leftOrthog: 0)      	 0.441778  	 600       	 139.93    	 0         	 16.847    	 8.30592   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 5050, cols: 51, reductionFactor: 37, colBlockingSize: 12)                  	 0.218331  	 700       	 86.5022   	 0         	 6.67266   	 12.9637   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 5050, Xcols: 51, r: 51, streamingCols: 0)                   	 0.0923521 	 700       	 99.5595   	 0         	 31.3132   	 3.17947   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 101, reductionFactor: 37, colBlockingSize: 12)                 	 0.0808482 	 100       	 64.7925   	 0         	 2.59945   	 24.9254   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 101, Qr2: 51)      	 0.0694769 	 700       	 0         	 0         	 71.9456   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 101)                                                                	 0.0520625 	 100       	 3.39496   	 0         	 0.194382  	 17.4654   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r: 101, r2: 101)           	 0.0430015 	 100       	 118.612   	 0         	 9.5848    	 12.375    
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 101, r: 101, r2: 2500, leftOrthog: 0)      	 0.0399549 	 100       	 127.656   	 0         	 15.5756   	 8.19592   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0389689 	 100       	 2.24538   	 0         	 0.154995  	 14.4868   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 5050, leftOrthog: 0)        	 0.0364725 	 100       	 69.2303   	 0         	 16.725    	 4.13934   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 101, n: 50, r: 101, r2: 50)           	 0.0343731 	 100       	 148.386   	 0         	 17.8651   	 8.30592   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 51, m: 51)                                                                  	 0.0343652 	 809       	 4.1637    	 0         	 1.47914   	 2.81494   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 51, k: 2500)   	 0.0333151 	 800       	 306.168   	 0         	 48.9965   	 6.24877   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 5050, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0307246 	 100       	 84.4029   	 0         	 6.63964   	 12.712    
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 5050, m: 51)                                                                       	 0.0288715 	 700       	 0         	 0         	 99.9102   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 51, reductionFactor: 37, colBlockingSize: 12)                  	 0.0258052 	 101       	 52.2764   	 0         	 4.07365   	 12.8328   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 2500, m: 51, k: 50)	 0.0228534 	 800       	 446.323   	 0         	 71.4257   	 6.24877   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 51, n: 50, r2: 51)                                                                                         	 0.0189331 	 707       	 0         	 0         	 77.7014   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 5050, m: 51)                                                              	 0.0183404 	 700       	 0         	 0         	 157.279   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 51, m: 2550, k: 51) 	 0.0163536 	 700       	 567.798   	 0         	 89.9571   	 6.31188   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 2550, k: 51) 	 0.0143762 	 700       	 633.233   	 0         	 101.317   	 6.25      
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 51, n: 50, r2: 51)                   	 0.0135506 	 700       	 0         	 0         	 212.873   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 101, reductionFactor: 37, colBlockingSize: 12)                   	 0.00906811	 100       	 11.5533   	 0         	 1.34546   	 8.5869    
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 51, r: 51, streamingCols: 0)                   	 0.0082843 	 101       	 79.2767   	 0         	 24.998    	 3.17133   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00801224	 109       	 2.26735   	 0         	 0.821693  	 2.75937   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 50, Qr2: 51)       	 0.00659947	 100       	 0         	 0         	 61.2171   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.00572401	 101       	 4.53046   	 0         	 0.705798  	 6.41892   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 50)           	 0.00478374	 8         	 20.9041   	 0         	 3.37811   	 6.18812   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 51)                                                                       	 0.00357974	 101       	 0         	 0         	 57.5573   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 2550, k: 50) 	 0.00296084	 100       	 430.621   	 0         	 69.5749   	 6.18932   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0026436 	 8         	 38.8496   	 0         	 3.0867    	 12.5861   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 0, n: 50, r2: 51)                    	 0.00254191	 100       	 0         	 0         	 80.2548   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 51)                                                              	 0.00236364	 101       	 0         	 0         	 87.1708   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                   	 0.00215358	 8         	 23.2171   	 0         	 7.46662   	 3.10945   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 51)                                                                                         	 0.00201282	 101       	 0         	 0         	 102.364   	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 101, r: 50, r2: 50, leftOrthog: 0)         	 0.0018778 	 100       	 26.8932   	 0         	 8.58452   	 3.13275   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2550, cols: 51, reductionFactor: 37, colBlockingSize: 12)                  	 0.00182092	 7         	 52.3722   	 0         	 4.07952   	 12.8378   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 51, r1_: 51, n: 50, r2: 51)           	 0.00147603	 7         	 62.9093   	 0         	 9.96681   	 6.31188   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 51, m: 51, fromLeft: 0)                	 0.00108484	 808       	 0         	 0         	 30.9959   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 50, r2: 50)              	 0.00105283	 100       	 23.7456   	 0         	 5.69895   	 4.16667   
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                   	 0.000887061	 100       	 0.563659  	 0         	 2.25464   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50, k: 50)     	 0.000853091	 100       	 29.3052   	 0         	 7.03325   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 51, n: 50, r2: 1)                                                                                          	 0.000796725	 201       	 0         	 0         	 10.2931   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000789356	 201       	 0         	 0         	 10.1855   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 51)   	 0.000718215	 100       	 35.5047   	 0         	 8.46543   	 4.19408   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 51, m: 50, k: 51)   	 0.000609162	 100       	 42.698    	 0         	 10.1136   	 4.22185   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2550, Xcols: 51, r: 51, streamingCols: 0)                   	 0.000563334	 7         	 82.4162   	 0         	 25.9853   	 3.17164   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 50, k: 50)  	 0.000555912	 100       	 44.9711   	 0         	 10.7931   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 51, n: 50, r2: 1)                    	 0.000534689	 100       	 0         	 0         	 15.1116   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                          	 0.000520531	 100       	 0         	 0         	 7.68446   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 1, r1low: 0, n: 50, r2: 50)                     	 0.000510743	 100       	 0         	 0         	 7.83173   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                                	 0.000448101	 101       	 0         	 0         	 9.01582   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 1, Xr2: 50, Qr1: 1, Qr2: 0)          	 0.000444032	 100       	 0         	 0         	 9.00836   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                            	 0.000442667	 100       	 1.12952   	 0         	 13.5542   	 0.0833333 
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.00040135	 101       	 0.629127  	 0         	 10.066    	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 51, n: 50, r2: 1)                                                                                 	 0.000361438	 101       	 0.71257   	 0         	 11.4011   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000328847	 100       	 0.760232  	 0         	 12.1637   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 50)                                                                       	 0.000294427	 8         	 0         	 0         	 54.3428   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2550, m: 51)                                                              	 0.000280149	 7         	 0         	 0         	 51.9923   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2550, m: 51)                                                                       	 0.00025835	 7         	 0         	 0         	 56.3793   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                              	 0.000228207	 8         	 0         	 0         	 70.1118   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 51, r1_: 50, n: 50, r2: 51)           	 0.000202665	 1         	 64.1699   	 0         	 10.2672   	 6.25      
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 50, r: 50, streamingCols: 0)                     	 4.8502e-05	 1         	 2.57721   	 0         	 1.03089   	 2.5       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 51, reductionFactor: 37, colBlockingSize: 12)                    	 3.7651e-05	 1         	 7.09489   	 0         	 1.09447   	 6.48247   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 51, r: 50, streamingCols: 1)                     	 3.0701e-05	 1         	 4.07153   	 0         	 1.62861   	 2.5       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 1.052e-05 	 1         	 23.7643   	 0         	 5.70342   	 4.16667   
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 51, n: 50, r2: 1)                                                                                   	 1.047e-05 	 1         	 0.487106  	 0         	 1.94842   	 0.25      
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 0)                	 9.84e-06  	 9         	 0         	 0         	 36.5854   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 51, r1_: 51, n: 50, r2: 1)            	 9.48e-06  	 1         	 27.4367   	 0         	 6.49873   	 4.22185   
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 8.57e-06  	 1         	 0.583431  	 0         	 2.33372   	 0.25      
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                         	 8e-06     	 2         	 0         	 0         	 10        	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 0, m: 2550, k: 50)  	 7.27e-06  	 100       	 0         	 0         	 14030.3   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 51)                                                                	 4.34e-06  	 1         	 0         	 0         	 9.40092   	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 51, fromLeft: 0)                	 1.11e-06  	 1         	 0         	 0         	 36.7568   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 4.14485   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 4.14482   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                            	 3.49618   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                        	 3.49486   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 2.87098   	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 0.999804  	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 0.959078  	 1818      
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.705322  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_leftOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                   	 0.648557  	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.602873  	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.520083  	 900       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.46753   	 918       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.254873  	 918       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.103433  	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.0765204 	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.0423774 	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.0350253 	 1800      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0341682 	 900       
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                       	 0.033012  	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0234093 	 900       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0230525 	 1310      
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                              	 0.0216649 	 918       
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                              	 0.0213941 	 20        
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 0.0200773 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 0.0200474 	 2         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.017138  	 1000      
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00711215	 1818      
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.00648243	 18        
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00346709	 6472      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.0016628 	 5273      
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.00109579	 818       
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00109163	 302       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000906101	 102       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000442667	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: L, orthoY: L
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m43->44  [0m[1;34m44->45  [0m[1;34m45->46  [0m[1;34m46->47  [0m[1;34m47->48  [0m[1;34m48->49  [0m[1;34m49->50  [0m[1;34m50->51  [0m[1;34m51->52  [0m[1;34m52->53  [0m[1;34m53->54  [0m[1;34m54->55  [0m[1;34m55->56  [0m[1;34m56->57  [0m[1;34m57->58  [0m[1;34m58->59  [0m[1;34m59->60  [0m[1;34m60->61  [0m[1;34m61->62  [0m[1;34m62->63  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 22556608501632 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 22556430034944 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 22556228708480 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 22556027382016 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 22555826055552 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 22555624729088 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 22555423402624 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 22555222076160 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 22555020749696 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 22554819423232 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 22554618096768 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 22554416770304 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 22554215443840 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 22554014117376 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 22553812790912 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 22553611464448 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 22553410137984 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 22553208811520 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 22553007485056 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 22552806158592 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 22552604832128 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 22552403505664 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 22552202179200 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 22552000852736 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 22551799526272 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 22551598199808 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 22551396873344 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 22551195546880 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 22550994220416 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 22550792893952 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 22550591567488 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 22550390241024 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 22550188910464 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 22549987584000 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 22549786257536 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 22549584931072 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 22549383604608 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 22549182278144 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 22548980951680 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 22548779625216 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 22548578298752 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 22548376972288 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 22548175645824 -> hwthread 43 - OK[0m[1;34m
[0m[1;34m	threadid 22547974319360 -> hwthread 44 - OK[0m[1;34m
[0m[1;34m	threadid 22547772992896 -> hwthread 45 - OK[0m[1;34m
[0m[1;34m	threadid 22547571666432 -> hwthread 46 - OK[0m[1;34m
[0m[1;34m	threadid 22547370339968 -> hwthread 47 - OK[0m[1;34m
[0m[1;34m	threadid 22547169013504 -> hwthread 48 - OK[0m[1;34m
[0m[1;34m	threadid 22546967687040 -> hwthread 49 - OK[0m[1;34m
[0m[1;34m	threadid 22546766360576 -> hwthread 50 - OK[0m[1;34m
[0m[1;34m	threadid 22546565034112 -> hwthread 51 - OK[0m[1;34m
[0m[1;34m	threadid 22546363707648 -> hwthread 52 - OK[0m[1;34m
[0m[1;34m	threadid 22546162381184 -> hwthread 53 - OK[0m[1;34m
[0m[1;34m	threadid 22545961054720 -> hwthread 54 - OK[0m[1;34m
[0m[1;34m	threadid 22545759728256 -> hwthread 55 - OK[0m[1;34m
[0m[1;34m	threadid 22545558401792 -> hwthread 56 - OK[0m[1;34m
[0m[1;34m	threadid 22545357075328 -> hwthread 57 - OK[0m[1;34m
[0m[1;34m	threadid 22545155748864 -> hwthread 58 - OK[0m[1;34m
[0m[1;34m	threadid 22544954422400 -> hwthread 59 - OK[0m[1;34m
[0m[1;34m	threadid 22544753095936 -> hwthread 60 - OK[0m[1;34m
[0m[1;34m	threadid 22544551769472 -> hwthread 61 - OK[0m[1;34m
[0m[1;34m	threadid 22544350443008 -> hwthread 62 - OK[0m[1;34m
[0m[1;34m	threadid 22544149116544 -> hwthread 63 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 22556502841088 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 22556324054784 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 102, m: 102)                                                               	 0.919223  	 700       	 5.65686   	 0         	 0.190768  	 29.6531   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 5100, cols: 102, reductionFactor: 37, colBlockingSize: 12)                 	 0.591348  	 600       	 110.584   	 0         	 4.30694   	 25.6757   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 102, n: 50, r: 102, r2: 102)          	 0.558986  	 600       	 113.907   	 0         	 9.02323   	 12.6238   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 102, r: 102, r2: 5100, leftOrthog: 0)      	 0.459262  	 600       	 138.641   	 0         	 16.5282   	 8.38816   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 5100, cols: 52, reductionFactor: 37, colBlockingSize: 12)                  	 0.229902  	 700       	 86.2469   	 0         	 6.52565   	 13.2166   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 5100, Xcols: 52, r: 52, streamingCols: 0)                   	 0.0928061 	 700       	 104.016   	 0         	 32.0864   	 3.24174   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 102, reductionFactor: 37, colBlockingSize: 12)                 	 0.0824002 	 100       	 64.8371   	 0         	 2.57673   	 25.1626   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 102, Qr2: 52)      	 0.0748492 	 700       	 0         	 0         	 68.1135   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 102)                                                                	 0.0523208 	 100       	 3.41165   	 0         	 0.194951  	 17.5      
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r: 102, r2: 102)           	 0.0439963 	 100       	 118.237   	 0         	 9.46269   	 12.4951   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 102, r: 102, r2: 2500, leftOrthog: 0)      	 0.0401482 	 100       	 129.57    	 0         	 15.6582   	 8.27492   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0390619 	 100       	 2.24003   	 0         	 0.154626  	 14.4868   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 102, n: 50, r: 102, r2: 50)           	 0.0361933 	 100       	 143.728   	 0         	 17.2474   	 8.33333   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 5100, leftOrthog: 0)        	 0.0350375 	 100       	 72.7792   	 0         	 17.5812   	 4.13961   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 52, k: 2500)   	 0.0346416 	 800       	 300.217   	 0         	 47.5913   	 6.30823   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 52, m: 52)                                                                  	 0.0334069 	 809       	 4.54002   	 0         	 1.58163   	 2.87047   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 5100, m: 52)                                                                       	 0.031806  	 700       	 0         	 0         	 93.3862   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 5100, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0309897 	 100       	 84.5094   	 0         	 6.64738   	 12.7132   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 52, reductionFactor: 37, colBlockingSize: 12)                  	 0.0277697 	 101       	 50.502    	 0         	 3.86121   	 13.0793   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 2500, m: 52, k: 50)	 0.0249081 	 800       	 417.535   	 0         	 66.189    	 6.30823   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 52, n: 50, r2: 52)                                                                                         	 0.0206943 	 707       	 0         	 0         	 73.9036   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 5100, m: 52)                                                              	 0.018644  	 700       	 0         	 0         	 159.314   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 52, m: 2600, k: 52) 	 0.0168269 	 700       	 584.929   	 0         	 90.889    	 6.43564   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 52, n: 50, r2: 52)                   	 0.016119  	 700       	 0         	 0         	 184.27    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 2600, k: 52) 	 0.0152465 	 700       	 620.734   	 0         	 98.3625   	 6.31068   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 102, reductionFactor: 37, colBlockingSize: 12)                   	 0.0089728 	 100       	 11.9084   	 0         	 1.38231   	 8.61486   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 52, r: 52, streamingCols: 0)                   	 0.00856013	 101       	 79.7605   	 0         	 24.6693   	 3.23319   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00803658	 109       	 2.26049   	 0         	 0.819204  	 2.75937   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 50, Qr2: 52)       	 0.00566105	 100       	 0         	 0         	 72.0714   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 50)           	 0.00502123	 8         	 19.9155   	 0         	 3.21834   	 6.18812   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 52)                                                                       	 0.00475895	 101       	 0         	 0         	 44.1442   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 2600, k: 50) 	 0.00406033	 100       	 320.171   	 0         	 51.72     	 6.19048   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 0, n: 50, r2: 52)                    	 0.00386372	 100       	 0         	 0         	 53.8342   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.00365835	 101       	 7.08855   	 0         	 1.10432   	 6.41892   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 52)                                                              	 0.00357826	 101       	 0         	 0         	 58.7101   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.00266337	 8         	 38.5612   	 0         	 3.06379   	 12.5861   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 52)                                                                                         	 0.00212723	 101       	 0         	 0         	 98.7574   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2600, cols: 52, reductionFactor: 37, colBlockingSize: 12)                  	 0.00194231	 7         	 52.0441   	 0         	 3.976     	 13.0896   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 102, r: 50, r2: 50, leftOrthog: 0)         	 0.00182862	 100       	 27.8898   	 0         	 8.88099   	 3.14039   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                   	 0.0017049 	 8         	 29.3273   	 0         	 9.43167   	 3.10945   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 52, r1_: 52, n: 50, r2: 52)           	 0.00154346	 7         	 63.7695   	 0         	 9.90879   	 6.43564   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 50, r2: 50)              	 0.00105086	 100       	 23.79     	 0         	 5.70959   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50, k: 50)     	 0.000945013	 100       	 26.4547   	 0         	 6.34912   	 4.16667   
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                   	 0.000891736	 100       	 0.560704  	 0         	 2.24282   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 52, n: 50, r2: 1)                                                                                          	 0.00081649	 201       	 0         	 0         	 10.2409   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2600, m: 52)                                                                       	 0.00081563	 7         	 0         	 0         	 18.5653   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000796799	 201       	 0         	 0         	 10.0904   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 52, m: 50, k: 52)   	 0.000763379	 100       	 35.4215   	 0         	 8.28317   	 4.27632   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 52, m: 52, fromLeft: 0)                	 0.000725005	 808       	 0         	 0         	 48.2166   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 52)   	 0.000702538	 100       	 37.0087   	 0         	 8.76821   	 4.22078   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2600, Xcols: 52, r: 52, streamingCols: 0)                   	 0.000582136	 7         	 84.5383   	 0         	 26.1419   	 3.23383   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 50, k: 50)  	 0.000566412	 100       	 44.1375   	 0         	 10.593    	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 1, r1low: 0, n: 50, r2: 50)                     	 0.000542342	 100       	 0         	 0         	 7.37542   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 52, n: 50, r2: 1)                    	 0.000506265	 100       	 0         	 0         	 16.118    	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                          	 0.000503421	 100       	 0         	 0         	 7.94564   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                                	 0.000456134	 101       	 0         	 0         	 8.85705   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                            	 0.000430398	 100       	 1.16172   	 0         	 13.9406   	 0.0833333 
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 1, Xr2: 50, Qr1: 1, Qr2: 0)          	 0.000430098	 100       	 0         	 0         	 9.30021   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000392619	 101       	 0.643117  	 0         	 10.2899   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 52, n: 50, r2: 1)                                                                                 	 0.000359649	 101       	 0.730156  	 0         	 11.6825   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000329855	 100       	 0.757909  	 0         	 12.1265   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                              	 0.000277298	 8         	 0         	 0         	 57.6997   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 50)                                                                       	 0.000276676	 8         	 0         	 0         	 57.8294   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 52, r1_: 50, n: 50, r2: 52)           	 0.000201126	 1         	 67.2215   	 0         	 10.652    	 6.31068   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2600, m: 52)                                                              	 0.000121473	 7         	 0         	 0         	 124.657   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 52, reductionFactor: 37, colBlockingSize: 12)                    	 4.7831e-05	 1         	 5.80603   	 0         	 0.887123  	 6.54478   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 52, r: 50, streamingCols: 2)                     	 3.2851e-05	 1         	 3.80506   	 0         	 1.52202   	 2.5       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 50, r: 50, streamingCols: 0)                     	 3.2101e-05	 1         	 3.89396   	 0         	 1.55758   	 2.5       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 52, r1_: 52, n: 50, r2: 1)            	 1.088e-05 	 1         	 24.8529   	 0         	 5.81176   	 4.27632   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 1.03e-05  	 1         	 24.2718   	 0         	 5.82524   	 4.16667   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 0)                	 1.029e-05 	 9         	 0         	 0         	 34.9854   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 1.0261e-05	 1         	 0.487282  	 0         	 1.94913   	 0.25      
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 52, n: 50, r2: 1)                                                                                   	 8.23e-06  	 1         	 0.631835  	 0         	 2.52734   	 0.25      
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                         	 7.82e-06  	 2         	 0         	 0         	 10.2302   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 0, m: 2600, k: 50)  	 7.301e-06 	 100       	 0         	 0         	 14244.6   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 52)                                                                	 4.56e-06  	 1         	 0         	 0         	 9.12281   	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 52, fromLeft: 0)                	 1.12e-06  	 1         	 0         	 0         	 37.1429   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 4.22673   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 4.22669   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                            	 3.54601   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                        	 3.5447    	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 2.88338   	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 1.01061   	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 0.979695  	 1818      
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.714357  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_leftOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                   	 0.68061   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.640227  	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.536276  	 900       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.484071  	 918       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.266508  	 918       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.103718  	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.0809404 	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.0414435 	 918       
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                       	 0.0376651 	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.0376069 	 1800      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0355866 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0254745 	 900       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0249382 	 1310      
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                              	 0.0230817 	 918       
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                              	 0.0214177 	 20        
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 0.0211166 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 0.021087  	 2         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0210313 	 1000      
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.00678699	 18        
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00438339	 1818      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00355018	 6472      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00249784	 5273      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00108212	 302       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000910227	 102       
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.000736415	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000430398	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: L, orthoY: L
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m43->44  [0m[1;34m44->45  [0m[1;34m45->46  [0m[1;34m46->47  [0m[1;34m47->48  [0m[1;34m48->49  [0m[1;34m49->50  [0m[1;34m50->51  [0m[1;34m51->52  [0m[1;34m52->53  [0m[1;34m53->54  [0m[1;34m54->55  [0m[1;34m55->56  [0m[1;34m56->57  [0m[1;34m57->58  [0m[1;34m58->59  [0m[1;34m59->60  [0m[1;34m60->61  [0m[1;34m61->62  [0m[1;34m62->63  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 23190122338176 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 23189937711104 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 23189736384640 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 23189535058176 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 23189333731712 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 23189132405248 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 23188931078784 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 23188729752320 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 23188528425856 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 23188327099392 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 23188125772928 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 23187924446464 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 23187723120000 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 23187521793536 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 23187320467072 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 23187119140608 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 23186917814144 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 23186716487680 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 23186515161216 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 23186313834752 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 23186112508288 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 23185911181824 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 23185709855360 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 23185508528896 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 23185307202432 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 23185105875968 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 23184904549504 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 23184703223040 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 23184501896576 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 23184300570112 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 23184099243648 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 23183897917184 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 23183696586624 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 23183495260160 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 23183293933696 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 23183092607232 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 23182891280768 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 23182689954304 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 23182488627840 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 23182287301376 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 23182085974912 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 23181884648448 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 23181683321984 -> hwthread 43 - OK[0m[1;34m
[0m[1;34m	threadid 23181481995520 -> hwthread 44 - OK[0m[1;34m
[0m[1;34m	threadid 23181280669056 -> hwthread 45 - OK[0m[1;34m
[0m[1;34m	threadid 23181079342592 -> hwthread 46 - OK[0m[1;34m
[0m[1;34m	threadid 23180878016128 -> hwthread 47 - OK[0m[1;34m
[0m[1;34m	threadid 23180676689664 -> hwthread 48 - OK[0m[1;34m
[0m[1;34m	threadid 23180475363200 -> hwthread 49 - OK[0m[1;34m
[0m[1;34m	threadid 23180274036736 -> hwthread 50 - OK[0m[1;34m
[0m[1;34m	threadid 23180072710272 -> hwthread 51 - OK[0m[1;34m
[0m[1;34m	threadid 23179871383808 -> hwthread 52 - OK[0m[1;34m
[0m[1;34m	threadid 23179670057344 -> hwthread 53 - OK[0m[1;34m
[0m[1;34m	threadid 23179468730880 -> hwthread 54 - OK[0m[1;34m
[0m[1;34m	threadid 23179267404416 -> hwthread 55 - OK[0m[1;34m
[0m[1;34m	threadid 23179066077952 -> hwthread 56 - OK[0m[1;34m
[0m[1;34m	threadid 23178864751488 -> hwthread 57 - OK[0m[1;34m
[0m[1;34m	threadid 23178663425024 -> hwthread 58 - OK[0m[1;34m
[0m[1;34m	threadid 23178462098560 -> hwthread 59 - OK[0m[1;34m
[0m[1;34m	threadid 23178260772096 -> hwthread 60 - OK[0m[1;34m
[0m[1;34m	threadid 23178059445632 -> hwthread 61 - OK[0m[1;34m
[0m[1;34m	threadid 23177858119168 -> hwthread 62 - OK[0m[1;34m
[0m[1;34m	threadid 23177656792704 -> hwthread 63 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 23190016677632 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 23190010087168 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 103, m: 103)                                                               	 0.942473  	 700       	 5.68118   	 0         	 0.189722  	 29.9448   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 5150, cols: 103, reductionFactor: 37, colBlockingSize: 12)                 	 0.606766  	 600       	 110.975   	 0         	 4.28021   	 25.9274   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 103, n: 50, r: 103, r2: 103)          	 0.55515   	 600       	 118.101   	 0         	 9.2646    	 12.7475   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 103, r: 103, r2: 5150, leftOrthog: 0)      	 0.473041  	 600       	 138.6     	 0         	 16.3629   	 8.47039   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 5150, cols: 53, reductionFactor: 37, colBlockingSize: 12)                  	 0.234164  	 700       	 88.8277   	 0         	 6.59473   	 13.4695   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 5150, Xcols: 53, r: 53, streamingCols: 0)                   	 0.0946203 	 700       	 107.022   	 0         	 32.3916   	 3.304     
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 103, reductionFactor: 37, colBlockingSize: 12)                 	 0.086864  	 100       	 62.7171   	 0         	 2.46923   	 25.3995   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 103, Qr2: 53)      	 0.0731442 	 700       	 0         	 0         	 71.0793   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 103)                                                                	 0.0543195 	 100       	 3.31833   	 0         	 0.189251  	 17.534    
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r: 103, r2: 103)           	 0.0440158 	 100       	 120.514   	 0         	 9.5531    	 12.6151   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 103, r: 103, r2: 2500, leftOrthog: 0)      	 0.0414923 	 100       	 127.843   	 0         	 15.3034   	 8.35388   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0402668 	 100       	 2.17301   	 0         	 0.15      	 14.4868   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 53, m: 53)                                                                  	 0.0372301 	 809       	 4.3134    	 0         	 1.47415   	 2.92603   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 5150, leftOrthog: 0)        	 0.0357103 	 100       	 72.1081   	 0         	 17.418    	 4.13987   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 53, k: 2500)   	 0.0346866 	 800       	 305.593   	 0         	 48        	 6.36652   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 103, n: 50, r: 103, r2: 50)           	 0.0325985 	 100       	 162.722   	 0         	 19.4635   	 8.36039   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 5150, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0309612 	 100       	 85.4164   	 0         	 6.71808   	 12.7144   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 5150, m: 53)                                                                       	 0.0305512 	 700       	 0         	 0         	 100.063   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 53, reductionFactor: 37, colBlockingSize: 12)                  	 0.0282933 	 101       	 51.4922   	 0         	 3.86416   	 13.3256   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 2500, m: 53, k: 50)	 0.0256066 	 800       	 413.955   	 0         	 65.0207   	 6.36652   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 5150, m: 53)                                                              	 0.0205917 	 700       	 0         	 0         	 148.46    	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 53, n: 50, r2: 53)                                                                                         	 0.020519  	 707       	 0         	 0         	 77.4293   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 53, n: 50, r2: 53)                   	 0.0162047 	 700       	 0         	 0         	 188.652   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 2650, k: 53) 	 0.0161705 	 700       	 607.989   	 0         	 95.4427   	 6.37019   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 53, m: 2650, k: 53) 	 0.0158383 	 700       	 657.987   	 0         	 100.312   	 6.55941   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 103, reductionFactor: 37, colBlockingSize: 12)                   	 0.0109829 	 100       	 9.92059   	 0         	 1.14789   	 8.64247   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 53, r: 53, streamingCols: 0)                   	 0.00901304	 101       	 78.694    	 0         	 23.8826   	 3.29504   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.0081237 	 109       	 2.23625   	 0         	 0.810419  	 2.75937   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 50, Qr2: 53)       	 0.00631846	 100       	 0         	 0         	 65.2058   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 50)           	 0.00494721	 8         	 20.2134   	 0         	 3.26649   	 6.18812   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.00399188	 101       	 6.49629   	 0         	 1.01205   	 6.41892   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 2650, k: 50) 	 0.00352208	 100       	 376.198   	 0         	 60.7595   	 6.19159   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.00268705	 8         	 38.2214   	 0         	 3.03679   	 12.5861   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 53)                                                                       	 0.00253294	 101       	 0         	 0         	 84.5342   	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 103, r: 50, r2: 50, leftOrthog: 0)         	 0.00236686	 100       	 21.7587   	 0         	 6.9121    	 3.14792   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 53)                                                                                         	 0.00218199	 101       	 0         	 0         	 98.1307   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2650, cols: 53, reductionFactor: 37, colBlockingSize: 12)                  	 0.00192996	 7         	 55.4574   	 0         	 4.15682   	 13.3413   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 0, n: 50, r2: 53)                    	 0.0019241 	 100       	 0         	 0         	 110.181   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                   	 0.00161829	 8         	 30.8968   	 0         	 9.9364    	 3.10945   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 53, r1_: 53, n: 50, r2: 53)           	 0.00156189	 7         	 66.7229   	 0         	 10.1721   	 6.55941   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 53)                                                              	 0.00134542	 101       	 0         	 0         	 159.147   	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 53, m: 53, fromLeft: 0)                	 0.00114897	 808       	 0         	 0         	 31.6064   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 50, r2: 50)              	 0.00102811	 100       	 24.3164   	 0         	 5.83593   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50, k: 50)     	 0.000901413	 100       	 27.7342   	 0         	 6.65622   	 4.16667   
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                   	 0.000873866	 100       	 0.57217   	 0         	 2.28868   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 53, n: 50, r2: 1)                                                                                          	 0.000820156	 201       	 0         	 0         	 10.3912   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000771706	 201       	 0         	 0         	 10.4185   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 53)   	 0.000736132	 100       	 35.999    	 0         	 8.47674   	 4.24679   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 53, m: 50, k: 53)   	 0.000706391	 100       	 39.7655   	 0         	 9.18358   	 4.33007   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2650, Xcols: 53, r: 53, streamingCols: 0)                   	 0.000603937	 7         	 86.2788   	 0         	 26.1767   	 3.29602   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 50, k: 50)  	 0.000560683	 100       	 44.5885   	 0         	 10.7012   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 53, n: 50, r2: 1)                    	 0.000539524	 100       	 0         	 0         	 15.2727   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                          	 0.000506601	 100       	 0         	 0         	 7.89576   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 1, r1low: 0, n: 50, r2: 50)                     	 0.000503331	 100       	 0         	 0         	 7.94706   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                                	 0.000452089	 101       	 0         	 0         	 8.93629   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 1, Xr2: 50, Qr1: 1, Qr2: 0)          	 0.000450738	 100       	 0         	 0         	 8.87433   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                            	 0.000420998	 100       	 1.18765   	 0         	 14.2518   	 0.0833333 
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000405756	 101       	 0.622295  	 0         	 9.95672   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 50)                                                                       	 0.000396449	 8         	 0         	 0         	 40.3583   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 53, n: 50, r2: 1)                                                                                 	 0.000368919	 101       	 0.725498  	 0         	 11.608    	 0.0625    
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2650, m: 53)                                                                       	 0.000364969	 7         	 0         	 0         	 43.1006   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000331664	 100       	 0.753775  	 0         	 12.0604   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2650, m: 53)                                                              	 0.000253736	 7         	 0         	 0         	 61.9951   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                              	 0.000198133	 8         	 0         	 0         	 80.7538   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 53, r1_: 50, n: 50, r2: 53)           	 0.000197765	 1         	 71.0186   	 0         	 11.1486   	 6.37019   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 53, reductionFactor: 37, colBlockingSize: 12)                    	 3.8111e-05	 1         	 7.56978   	 0         	 1.14592   	 6.60588   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 50, r: 50, streamingCols: 0)                     	 3.2891e-05	 1         	 3.80043   	 0         	 1.52017   	 2.5       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 53, r: 50, streamingCols: 3)                     	 3.0031e-05	 1         	 4.16237   	 0         	 1.66495   	 2.5       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 53, n: 50, r2: 1)                                                                                   	 2.3571e-05	 1         	 0.224853  	 0         	 0.89941   	 0.25      
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 53, r1_: 53, n: 50, r2: 1)            	 1.0981e-05	 1         	 25.5805   	 0         	 5.90766   	 4.33007   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 1.07e-05  	 1         	 23.3645   	 0         	 5.60748   	 4.16667   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 0)                	 1.014e-05 	 9         	 0         	 0         	 35.503    	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 1.012e-05 	 1         	 0.494071  	 0         	 1.97628   	 0.25      
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                         	 8.28e-06  	 2         	 0         	 0         	 9.66184   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 0, m: 2650, k: 50)  	 7.89e-06  	 100       	 0         	 0         	 13434.7   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 53)                                                                	 4.73e-06  	 1         	 0         	 0         	 8.96406   	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 53, fromLeft: 0)                	 1.06e-06  	 1         	 0         	 0         	 40        	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 4.33017   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 4.33014   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                            	 3.64502   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                        	 3.64372   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 2.98748   	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 1.03706   	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 1.00668   	 1818      
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.736223  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_leftOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                   	 0.68504   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.632792  	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.55261   	 900       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.491806  	 918       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.271676  	 918       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.105918  	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.0799134 	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.0453538 	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.0369813 	 1800      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0355881 	 900       
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                       	 0.0338538 	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0261673 	 900       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0247994 	 1310      
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                              	 0.0228458 	 918       
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                              	 0.022705  	 20        
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 0.0208101 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 0.0207636 	 2         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0191716 	 1000      
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.00672855	 18        
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00617554	 1818      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00402158	 6472      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00230824	 5273      
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.00116017	 818       
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00110634	 302       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000907557	 102       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000420998	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: L, orthoY: L
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m43->44  [0m[1;34m44->45  [0m[1;34m45->46  [0m[1;34m46->47  [0m[1;34m47->48  [0m[1;34m48->49  [0m[1;34m49->50  [0m[1;34m50->51  [0m[1;34m51->52  [0m[1;34m52->53  [0m[1;34m53->54  [0m[1;34m54->55  [0m[1;34m55->56  [0m[1;34m56->57  [0m[1;34m57->58  [0m[1;34m58->59  [0m[1;34m59->60  [0m[1;34m60->61  [0m[1;34m61->62  [0m[1;34m62->63  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 22998150944640 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 22997939251200 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 22997737924736 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 22997536598272 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 22997335271808 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 22997133945344 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 22996932618880 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 22996731292416 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 22996529965952 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 22996328639488 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 22996127313024 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 22995925986560 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 22995724660096 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 22995523333632 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 22995322007168 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 22995120680704 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 22994919354240 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 22994718027776 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 22994516701312 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 22994315374848 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 22994114048384 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 22993912721920 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 22993711395456 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 22993510068992 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 22993308742528 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 22993107416064 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 22992906089600 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 22992704763136 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 22992503436672 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 22992302110208 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 22992100783744 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 22991899457280 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 22991698126720 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 22991496800256 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 22991295473792 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 22991094147328 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 22990892820864 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 22990691494400 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 22990490167936 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 22990288841472 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 22990087515008 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 22989886188544 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 22989684862080 -> hwthread 43 - OK[0m[1;34m
[0m[1;34m	threadid 22989483535616 -> hwthread 44 - OK[0m[1;34m
[0m[1;34m	threadid 22989282209152 -> hwthread 45 - OK[0m[1;34m
[0m[1;34m	threadid 22989080882688 -> hwthread 46 - OK[0m[1;34m
[0m[1;34m	threadid 22988879556224 -> hwthread 47 - OK[0m[1;34m
[0m[1;34m	threadid 22988678229760 -> hwthread 48 - OK[0m[1;34m
[0m[1;34m	threadid 22988476903296 -> hwthread 49 - OK[0m[1;34m
[0m[1;34m	threadid 22988275576832 -> hwthread 50 - OK[0m[1;34m
[0m[1;34m	threadid 22988074250368 -> hwthread 51 - OK[0m[1;34m
[0m[1;34m	threadid 22987872923904 -> hwthread 52 - OK[0m[1;34m
[0m[1;34m	threadid 22987671597440 -> hwthread 53 - OK[0m[1;34m
[0m[1;34m	threadid 22987470270976 -> hwthread 54 - OK[0m[1;34m
[0m[1;34m	threadid 22987268944512 -> hwthread 55 - OK[0m[1;34m
[0m[1;34m	threadid 22987067618048 -> hwthread 56 - OK[0m[1;34m
[0m[1;34m	threadid 22986866291584 -> hwthread 57 - OK[0m[1;34m
[0m[1;34m	threadid 22986664965120 -> hwthread 58 - OK[0m[1;34m
[0m[1;34m	threadid 22986463638656 -> hwthread 59 - OK[0m[1;34m
[0m[1;34m	threadid 22986262312192 -> hwthread 60 - OK[0m[1;34m
[0m[1;34m	threadid 22986060985728 -> hwthread 61 - OK[0m[1;34m
[0m[1;34m	threadid 22985859659264 -> hwthread 62 - OK[0m[1;34m
[0m[1;34m	threadid 22985658332800 -> hwthread 63 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 22998045284096 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 22998038693632 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 104, m: 104)                                                               	 0.890056  	 700       	 6.19268   	 0         	 0.204809  	 30.2364   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 5200, cols: 104, reductionFactor: 37, colBlockingSize: 12)                 	 0.609429  	 600       	 113.739   	 0         	 4.34465   	 26.1791   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 104, n: 50, r: 104, r2: 104)          	 0.579578  	 600       	 116.45    	 0         	 9.04726   	 12.8713   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 104, r: 104, r2: 5200, leftOrthog: 0)      	 0.479274  	 600       	 140.821   	 0         	 16.4652   	 8.55263   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 5200, cols: 54, reductionFactor: 37, colBlockingSize: 12)                  	 0.238742  	 700       	 91.3214   	 0         	 6.65493   	 13.7224   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 5200, Xcols: 54, r: 54, streamingCols: 0)                   	 0.0964423 	 700       	 110.058   	 0         	 32.6944   	 3.36626   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 104, reductionFactor: 37, colBlockingSize: 12)                 	 0.0862855 	 100       	 64.3696   	 0         	 2.51088   	 25.6362   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 104, Qr2: 54)      	 0.0768736 	 700       	 0         	 0         	 68.9568   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 104)                                                                	 0.0527618 	 100       	 3.44947   	 0         	 0.196354  	 17.5676   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r: 104, r2: 104)           	 0.0462519 	 100       	 116.925   	 0         	 9.18131   	 12.7351   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 104, r: 104, r2: 2500, leftOrthog: 0)      	 0.0450934 	 100       	 119.929   	 0         	 14.2217   	 8.4328    
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0434265 	 100       	 2.0149    	 0         	 0.139085  	 14.4868   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 5200, leftOrthog: 0)        	 0.0382092 	 100       	 68.0464   	 0         	 16.4358   	 4.14013   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 54, m: 54)                                                                  	 0.0364291 	 809       	 4.66251   	 0         	 1.56376   	 2.9816    
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 104, n: 50, r: 104, r2: 50)           	 0.036193  	 100       	 149.421   	 0         	 17.8156   	 8.3871    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 54, k: 2500)   	 0.0337599 	 800       	 319.906   	 0         	 49.8011   	 6.42368   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 5200, m: 54)                                                                       	 0.0328841 	 700       	 0         	 0         	 95.6376   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 5200, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0315167 	 100       	 84.7255   	 0         	 6.66313   	 12.7156   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 54, reductionFactor: 37, colBlockingSize: 12)                  	 0.0285128 	 101       	 53.0422   	 0         	 3.90829   	 13.5717   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 2500, m: 54, k: 50)	 0.0250944 	 800       	 430.375   	 0         	 66.9983   	 6.42368   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 54, n: 50, r2: 54)                                                                                         	 0.0216227 	 707       	 0         	 0         	 76.2758   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 5200, m: 54)                                                              	 0.0196289 	 700       	 0         	 0         	 160.221   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 54, m: 2700, k: 54) 	 0.0185287 	 700       	 594.886   	 0         	 89.0126   	 6.68317   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 2700, k: 54) 	 0.0163401 	 700       	 624.598   	 0         	 97.1597   	 6.42857   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 54, n: 50, r2: 54)                   	 0.0158889 	 700       	 0         	 0         	 197.935   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 104, reductionFactor: 37, colBlockingSize: 12)                   	 0.00973917	 100       	 11.4058   	 0         	 1.31559   	 8.66971   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 54, r: 54, streamingCols: 0)                   	 0.00920865	 101       	 79.9564   	 0         	 23.8187   	 3.35687   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00806532	 109       	 2.25243   	 0         	 0.816285  	 2.75937   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 50, Qr2: 54)       	 0.00546489	 100       	 0         	 0         	 76.1224   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 50)           	 0.00489097	 8         	 20.4459   	 0         	 3.30405   	 6.18812   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 54)                                                                       	 0.00481471	 101       	 0         	 0         	 45.3112   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 2700, k: 50) 	 0.00470778	 100       	 286.759   	 0         	 46.3063   	 6.19266   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 0, n: 50, r2: 54)                    	 0.00422747	 100       	 0         	 0         	 51.0943   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.00397353	 101       	 6.52629   	 0         	 1.01673   	 6.41892   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 54)                                                              	 0.00389567	 101       	 0         	 0         	 56.0007   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.00261605	 8         	 39.2588   	 0         	 3.11921   	 12.5861   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2700, cols: 54, reductionFactor: 37, colBlockingSize: 12)                  	 0.0020992 	 7         	 53.9273   	 0         	 3.96728   	 13.593    
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 54)                                                                                         	 0.00205275	 101       	 0         	 0         	 106.277   	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 104, r: 50, r2: 50, leftOrthog: 0)         	 0.00204948	 100       	 25.3723   	 0         	 8.04106   	 3.15534   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                   	 0.00180621	 8         	 27.6823   	 0         	 8.90263   	 3.10945   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 54, r1_: 54, n: 50, r2: 54)           	 0.00161071	 7         	 68.4324   	 0         	 10.2395   	 6.68317   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 50, r2: 50)              	 0.00108458	 100       	 23.0505   	 0         	 5.53212   	 4.16667   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 54, m: 54, fromLeft: 0)                	 0.00099247	 808       	 0         	 0         	 37.9841   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50, k: 50)     	 0.00093411	 100       	 26.7634   	 0         	 6.42323   	 4.16667   
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                   	 0.000838157	 100       	 0.596547  	 0         	 2.38619   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 54, n: 50, r2: 1)                                                                                          	 0.000788815	 201       	 0         	 0         	 11.0079   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000783271	 201       	 0         	 0         	 10.2646   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 54)   	 0.000774848	 100       	 34.8455   	 0         	 8.15644   	 4.27215   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2700, m: 54)                                                                       	 0.000706427	 7         	 0         	 0         	 23.1158   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 54, m: 50, k: 54)   	 0.000634376	 100       	 45.9664   	 0         	 10.4872   	 4.38312   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2700, Xcols: 54, r: 54, streamingCols: 0)                   	 0.000619996	 7         	 88.8915   	 0         	 26.4699   	 3.35821   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 50, k: 50)  	 0.000565295	 100       	 44.2247   	 0         	 10.6139   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 54, n: 50, r2: 1)                    	 0.000514492	 100       	 0         	 0         	 16.1713   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                          	 0.000509291	 100       	 0         	 0         	 7.85406   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 1, r1low: 0, n: 50, r2: 50)                     	 0.000500405	 100       	 0         	 0         	 7.99353   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                                	 0.00045354	 101       	 0         	 0         	 8.9077    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 1, Xr2: 50, Qr1: 1, Qr2: 0)          	 0.000431908	 100       	 0         	 0         	 9.26123   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                            	 0.000414188	 100       	 1.20718   	 0         	 14.4862   	 0.0833333 
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 54, n: 50, r2: 1)                                                                                 	 0.000386159	 101       	 0.706186  	 0         	 11.299    	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000370137	 101       	 0.68218   	 0         	 10.9149   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000324106	 100       	 0.771353  	 0         	 12.3416   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 50)                                                                       	 0.000292977	 8         	 0         	 0         	 54.6118   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                              	 0.000230535	 8         	 0         	 0         	 69.4038   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 54, r1_: 50, n: 50, r2: 54)           	 0.000209806	 1         	 69.4928   	 0         	 10.81     	 6.42857   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2700, m: 54)                                                              	 0.000119993	 7         	 0         	 0         	 136.088   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 54, reductionFactor: 37, colBlockingSize: 12)                    	 4.1451e-05	 1         	 7.22494   	 0         	 1.08388   	 6.6658    
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 50, r: 50, streamingCols: 0)                     	 3.4081e-05	 1         	 3.66773   	 0         	 1.46709   	 2.5       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 54, r: 50, streamingCols: 3)                     	 3.2121e-05	 1         	 3.89154   	 0         	 1.55661   	 2.5       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 54, r1_: 54, n: 50, r2: 1)            	 1.093e-05 	 1         	 26.6789   	 0         	 6.08673   	 4.38312   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 0)                	 1.0142e-05	 9         	 0         	 0         	 35.496    	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 9.9e-06   	 1         	 25.2525   	 0         	 6.06061   	 4.16667   
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 9.24e-06  	 1         	 0.541126  	 0         	 2.1645    	 0.25      
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 54, n: 50, r2: 1)                                                                                   	 9.03e-06  	 1         	 0.598007  	 0         	 2.39203   	 0.25      
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                         	 8.67e-06  	 2         	 0         	 0         	 9.22722   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 0, m: 2700, k: 50)  	 7.56e-06  	 100       	 0         	 0         	 14285.7   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 54)                                                                	 5.24e-06  	 1         	 0         	 0         	 8.24427   	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 54, fromLeft: 0)                	 1.17e-06  	 1         	 0         	 0         	 36.9231   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 4.35438   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 4.35433   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                            	 3.64974   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                        	 3.64847   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 2.9508    	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 1.01295   	 1818      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 0.986245  	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.73771   	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_leftOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                   	 0.704526  	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.663108  	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.564626  	 900       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.505169  	 918       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.276538  	 918       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.108143  	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.0827704 	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.0444944 	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.0409934 	 1800      
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                       	 0.0387069 	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.034694  	 900       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0257568 	 1310      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0256597 	 900       
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                              	 0.0243338 	 918       
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                              	 0.0225102 	 20        
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 0.0217007 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 0.0216716 	 2         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0211313 	 1000      
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.00673231	 18        
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00523513	 1818      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00358191	 6472      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00251341	 5273      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.0010804 	 302       
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.00100378	 818       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000856427	 102       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000414188	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: L, orthoY: L
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m43->44  [0m[1;34m44->45  [0m[1;34m45->46  [0m[1;34m46->47  [0m[1;34m47->48  [0m[1;34m48->49  [0m[1;34m49->50  [0m[1;34m50->51  [0m[1;34m51->52  [0m[1;34m52->53  [0m[1;34m53->54  [0m[1;34m54->55  [0m[1;34m55->56  [0m[1;34m56->57  [0m[1;34m57->58  [0m[1;34m58->59  [0m[1;34m59->60  [0m[1;34m60->61  [0m[1;34m61->62  [0m[1;34m62->63  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 22840786315136 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 22840568965120 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 22840367638656 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 22840166312192 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 22839964985728 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 22839763659264 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 22839562332800 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 22839361006336 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 22839159679872 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 22838958353408 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 22838757026944 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 22838555700480 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 22838354374016 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 22838153047552 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 22837951721088 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 22837750394624 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 22837549068160 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 22837347741696 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 22837146415232 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 22836945088768 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 22836743762304 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 22836542435840 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 22836341109376 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 22836139782912 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 22835938456448 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 22835737129984 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 22835535803520 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 22835334477056 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 22835133150592 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 22834931824128 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 22834730497664 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 22834529171200 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 22834327840640 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 22834126514176 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 22833925187712 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 22833723861248 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 22833522534784 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 22833321208320 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 22833119881856 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 22832918555392 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 22832717228928 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 22832515902464 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 22832314576000 -> hwthread 43 - OK[0m[1;34m
[0m[1;34m	threadid 22832113249536 -> hwthread 44 - OK[0m[1;34m
[0m[1;34m	threadid 22831911923072 -> hwthread 45 - OK[0m[1;34m
[0m[1;34m	threadid 22831710596608 -> hwthread 46 - OK[0m[1;34m
[0m[1;34m	threadid 22831509270144 -> hwthread 47 - OK[0m[1;34m
[0m[1;34m	threadid 22831307943680 -> hwthread 48 - OK[0m[1;34m
[0m[1;34m	threadid 22831106617216 -> hwthread 49 - OK[0m[1;34m
[0m[1;34m	threadid 22830905290752 -> hwthread 50 - OK[0m[1;34m
[0m[1;34m	threadid 22830703964288 -> hwthread 51 - OK[0m[1;34m
[0m[1;34m	threadid 22830502637824 -> hwthread 52 - OK[0m[1;34m
[0m[1;34m	threadid 22830301311360 -> hwthread 53 - OK[0m[1;34m
[0m[1;34m	threadid 22830099984896 -> hwthread 54 - OK[0m[1;34m
[0m[1;34m	threadid 22829898658432 -> hwthread 55 - OK[0m[1;34m
[0m[1;34m	threadid 22829697331968 -> hwthread 56 - OK[0m[1;34m
[0m[1;34m	threadid 22829496005504 -> hwthread 57 - OK[0m[1;34m
[0m[1;34m	threadid 22829294679040 -> hwthread 58 - OK[0m[1;34m
[0m[1;34m	threadid 22829093352576 -> hwthread 59 - OK[0m[1;34m
[0m[1;34m	threadid 22828892026112 -> hwthread 60 - OK[0m[1;34m
[0m[1;34m	threadid 22828690699648 -> hwthread 61 - OK[0m[1;34m
[0m[1;34m	threadid 22828489373184 -> hwthread 62 - OK[0m[1;34m
[0m[1;34m	threadid 22828288046720 -> hwthread 63 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 22840680654592 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 22840674064128 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 105, m: 105)                                                               	 0.950356  	 700       	 5.96867   	 0         	 0.195514  	 30.5281   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 5250, cols: 105, reductionFactor: 37, colBlockingSize: 12)                 	 0.647362  	 600       	 110.193   	 0         	 4.1691    	 26.4308   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 105, n: 50, r: 105, r2: 105)          	 0.582388  	 600       	 119.263   	 0         	 9.17759   	 12.995    
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 105, r: 105, r2: 5250, leftOrthog: 0)      	 0.488333  	 600       	 142.234   	 0         	 16.472    	 8.63487   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 5250, cols: 55, reductionFactor: 37, colBlockingSize: 12)                  	 0.246528  	 700       	 92.6251   	 0         	 6.62781   	 13.9752   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 5250, Xcols: 55, r: 55, streamingCols: 0)                   	 0.0977605 	 700       	 113.715   	 0         	 33.1675   	 3.42852   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 105, reductionFactor: 37, colBlockingSize: 12)                 	 0.0864375 	 100       	 65.498    	 0         	 2.53154   	 25.8728   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 105, Qr2: 55)      	 0.0747156 	 700       	 0         	 0         	 72.3276   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 105)                                                                	 0.0533389 	 100       	 3.44495   	 0         	 0.19573   	 17.6006   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 105, r: 105, r2: 2500, leftOrthog: 0)      	 0.0450736 	 100       	 122.3     	 0         	 14.3685   	 8.51167   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r: 105, r2: 105)           	 0.043881  	 100       	 125.624   	 0         	 9.77233   	 12.855    
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.03922   	 100       	 2.23101   	 0         	 0.154003  	 14.4868   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 55, m: 55)                                                                  	 0.0389682 	 809       	 4.60535   	 0         	 1.51635   	 3.03713   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 55, k: 2500)   	 0.0344474 	 800       	 319.327   	 0         	 49.2809   	 6.47974   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 105, n: 50, r: 105, r2: 50)           	 0.0333325 	 100       	 165.379   	 0         	 19.6565   	 8.41346   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 5250, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0315535 	 100       	 85.4404   	 0         	 6.71874   	 12.7167   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 5250, leftOrthog: 0)        	 0.0302366 	 100       	 86.8153   	 0         	 20.968    	 4.14038   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 55, reductionFactor: 37, colBlockingSize: 12)                  	 0.0292866 	 101       	 53.5711   	 0         	 3.87701   	 13.8176   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 5250, m: 55)                                                                       	 0.0258122 	 700       	 0         	 0         	 125.29    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 2500, m: 55, k: 50)	 0.0254854 	 800       	 431.619   	 0         	 66.6106   	 6.47974   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 55, n: 50, r2: 55)                                                                                         	 0.0215468 	 707       	 0         	 0         	 79.4058   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 55, m: 2750, k: 55) 	 0.0175236 	 700       	 664.604   	 0         	 97.6363   	 6.80693   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 50)           	 0.0174395 	 8         	 5.73411   	 0         	 0.926632  	 6.18812   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 2750, k: 55) 	 0.0166069 	 700       	 637.535   	 0         	 98.2963   	 6.48585   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 55, n: 50, r2: 55)                   	 0.0144793 	 700       	 0         	 0         	 223.353   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 5250, m: 55)                                                              	 0.0110798 	 700       	 0         	 0         	 291.884   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 105, reductionFactor: 37, colBlockingSize: 12)                   	 0.00969441	 100       	 11.6799   	 0         	 1.34304   	 8.6966    
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 55, r: 55, streamingCols: 0)                   	 0.00947581	 101       	 80.6066   	 0         	 23.5782   	 3.4187    
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00827341	 109       	 2.19578   	 0         	 0.795754  	 2.75937   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 50, Qr2: 55)       	 0.00595571	 100       	 0         	 0         	 70.5206   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 2750, k: 50) 	 0.00438993	 100       	 313.217   	 0         	 50.5703   	 6.19369   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.00398946	 101       	 6.50023   	 0         	 1.01267   	 6.41892   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 55)                                                                       	 0.00368482	 101       	 0         	 0         	 60.3015   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 0, n: 50, r2: 55)                    	 0.00360574	 100       	 0         	 0         	 61.0138   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 55)                                                              	 0.00339947	 101       	 0         	 0         	 65.3632   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.00276105	 8         	 37.197    	 0         	 2.9554    	 12.5861   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 55)                                                                                         	 0.00217002	 101       	 0         	 0         	 102.396   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2750, cols: 55, reductionFactor: 37, colBlockingSize: 12)                  	 0.00211809	 7         	 56.4707   	 0         	 4.07886   	 13.8447   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 105, r: 50, r2: 50, leftOrthog: 0)         	 0.00210939	 100       	 24.8888   	 0         	 7.86959   	 3.16265   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                   	 0.00207527	 8         	 24.0932   	 0         	 7.74837   	 3.10945   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 55, r1_: 55, n: 50, r2: 55)           	 0.00175933	 7         	 66.1972   	 0         	 9.72497   	 6.80693   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 55, m: 55, fromLeft: 0)                	 0.00114634	 808       	 0         	 0         	 34.1148   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 50, r2: 50)              	 0.00111228	 100       	 22.4763   	 0         	 5.3943    	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50, k: 50)     	 0.000913017	 100       	 27.3817   	 0         	 6.57162   	 4.16667   
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                   	 0.000835263	 100       	 0.598614  	 0         	 2.39446   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 55)   	 0.000816228	 100       	 33.6916   	 0         	 7.84095   	 4.29688   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000802678	 201       	 0         	 0         	 10.0165   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 55, n: 50, r2: 1)                                                                                          	 0.000798916	 201       	 0         	 0         	 11.07     	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 55, m: 50, k: 55)   	 0.000685576	 100       	 44.1235   	 0         	 9.94784   	 4.43548   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2750, Xcols: 55, r: 55, streamingCols: 0)                   	 0.000657995	 7         	 88.498    	 0         	 25.8736   	 3.4204    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 50, k: 50)  	 0.000584915	 100       	 42.7413   	 0         	 10.2579   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 55, n: 50, r2: 1)                    	 0.000540137	 100       	 0         	 0         	 15.5516   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                          	 0.00053662	 100       	 0         	 0         	 7.45406   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 1, Xr2: 50, Qr1: 1, Qr2: 0)          	 0.000527379	 100       	 0         	 0         	 7.58468   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 1, r1low: 0, n: 50, r2: 50)                     	 0.000504361	 100       	 0         	 0         	 7.93083   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2750, m: 55)                                                                       	 0.000475072	 7         	 0         	 0         	 35.6578   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                            	 0.000450063	 100       	 1.11096   	 0         	 13.3315   	 0.0833333 
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                                	 0.000449367	 101       	 0         	 0         	 8.99042   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2750, m: 55)                                                              	 0.000435651	 7         	 0         	 0         	 38.8843   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000383899	 101       	 0.657725  	 0         	 10.5236   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 55, n: 50, r2: 1)                                                                                 	 0.000357953	 101       	 0.77594   	 0         	 12.415    	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.00032672	 100       	 0.765181  	 0         	 12.2429   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 50)                                                                       	 0.000277177	 8         	 0         	 0         	 57.7248   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                              	 0.000252087	 8         	 0         	 0         	 63.4702   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 55, r1_: 50, n: 50, r2: 55)           	 0.000208966	 1         	 72.3802   	 0         	 11.1597   	 6.48585   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 55, reductionFactor: 37, colBlockingSize: 12)                    	 4.0161e-05	 1         	 7.73576   	 0         	 1.15037   	 6.72458   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 50, r: 50, streamingCols: 0)                     	 3.5821e-05	 1         	 3.48957   	 0         	 1.39583   	 2.5       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 55, r: 50, streamingCols: 5)                     	 2.7121e-05	 1         	 4.60897   	 0         	 1.84359   	 2.5       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 55, r1_: 55, n: 50, r2: 1)            	 1.125e-05 	 1         	 26.8889   	 0         	 6.06222   	 4.43548   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 0)                	 1.004e-05 	 9         	 0         	 0         	 35.8566   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 9.82e-06  	 1         	 25.4582   	 0         	 6.10998   	 4.16667   
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 55, n: 50, r2: 1)                                                                                   	 9.301e-06 	 1         	 0.591334  	 0         	 2.36534   	 0.25      
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                         	 8.35e-06  	 2         	 0         	 0         	 9.58084   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 8.251e-06 	 1         	 0.605987  	 0         	 2.42395   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 0, m: 2750, k: 50)  	 7.64e-06  	 100       	 0         	 0         	 14397.9   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 55)                                                                	 4.46e-06  	 1         	 0         	 0         	 9.86547   	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 55, fromLeft: 0)                	 1.12e-06  	 1         	 0         	 0         	 39.2857   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 4.46784   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 4.46779   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                            	 3.76914   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                        	 3.76787   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 3.08544   	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 1.05977   	 1818      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 1.04291   	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.775699  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_leftOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                   	 0.698582  	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.660714  	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.565753  	 900       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.50096   	 918       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.285226  	 918       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.110033  	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.0811987 	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.0472416 	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.0400299 	 1800      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0353604 	 900       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 0.0349763 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 0.0349476 	 2         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                       	 0.0302576 	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0260703 	 900       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.025855  	 1310      
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                              	 0.0232443 	 20        
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.0194289 	 18        
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0191296 	 1000      
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                              	 0.0156208 	 918       
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00773112	 1818      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00361499	 6472      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00213733	 5273      
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.0011575 	 818       
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00106857	 302       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000852815	 102       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000450063	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: L, orthoY: L
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m43->44  [0m[1;34m44->45  [0m[1;34m45->46  [0m[1;34m46->47  [0m[1;34m47->48  [0m[1;34m48->49  [0m[1;34m49->50  [0m[1;34m50->51  [0m[1;34m51->52  [0m[1;34m52->53  [0m[1;34m53->54  [0m[1;34m54->55  [0m[1;34m55->56  [0m[1;34m56->57  [0m[1;34m57->58  [0m[1;34m58->59  [0m[1;34m59->60  [0m[1;34m60->61  [0m[1;34m61->62  [0m[1;34m62->63  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 23206748178304 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 23206513600512 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 23206312274048 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 23206110947584 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 23205909621120 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 23205708294656 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 23205506968192 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 23205305641728 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 23205104315264 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 23204902988800 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 23204701662336 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 23204500335872 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 23204299009408 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 23204097682944 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 23203896356480 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 23203695030016 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 23203493703552 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 23203292377088 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 23203091050624 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 23202889724160 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 23202688397696 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 23202487071232 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 23202285744768 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 23202084418304 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 23201883091840 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 23201681765376 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 23201480438912 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 23201279112448 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 23201077785984 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 23200876459520 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 23200675133056 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 23200473806592 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 23200272476032 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 23200071149568 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 23199869823104 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 23199668496640 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 23199467170176 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 23199265843712 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 23199064517248 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 23198863190784 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 23198661864320 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 23198460537856 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 23198259211392 -> hwthread 43 - OK[0m[1;34m
[0m[1;34m	threadid 23198057884928 -> hwthread 44 - OK[0m[1;34m
[0m[1;34m	threadid 23197856558464 -> hwthread 45 - OK[0m[1;34m
[0m[1;34m	threadid 23197655232000 -> hwthread 46 - OK[0m[1;34m
[0m[1;34m	threadid 23197453905536 -> hwthread 47 - OK[0m[1;34m
[0m[1;34m	threadid 23197252579072 -> hwthread 48 - OK[0m[1;34m
[0m[1;34m	threadid 23197051252608 -> hwthread 49 - OK[0m[1;34m
[0m[1;34m	threadid 23196849926144 -> hwthread 50 - OK[0m[1;34m
[0m[1;34m	threadid 23196648599680 -> hwthread 51 - OK[0m[1;34m
[0m[1;34m	threadid 23196447273216 -> hwthread 52 - OK[0m[1;34m
[0m[1;34m	threadid 23196245946752 -> hwthread 53 - OK[0m[1;34m
[0m[1;34m	threadid 23196044620288 -> hwthread 54 - OK[0m[1;34m
[0m[1;34m	threadid 23195843293824 -> hwthread 55 - OK[0m[1;34m
[0m[1;34m	threadid 23195641967360 -> hwthread 56 - OK[0m[1;34m
[0m[1;34m	threadid 23195440640896 -> hwthread 57 - OK[0m[1;34m
[0m[1;34m	threadid 23195239314432 -> hwthread 58 - OK[0m[1;34m
[0m[1;34m	threadid 23195037987968 -> hwthread 59 - OK[0m[1;34m
[0m[1;34m	threadid 23194836661504 -> hwthread 60 - OK[0m[1;34m
[0m[1;34m	threadid 23194635335040 -> hwthread 61 - OK[0m[1;34m
[0m[1;34m	threadid 23194434008576 -> hwthread 62 - OK[0m[1;34m
[0m[1;34m	threadid 23194232682112 -> hwthread 63 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 23206642517760 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 23206635927296 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 106, m: 106)                                                               	 0.960177  	 700       	 6.07802   	 0         	 0.197212  	 30.8197   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 5300, cols: 106, reductionFactor: 37, colBlockingSize: 12)                 	 0.675229  	 600       	 108.692   	 0         	 4.07354   	 26.6826   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 106, n: 50, r: 106, r2: 106)          	 0.594458  	 600       	 120.212   	 0         	 9.16333   	 13.1188   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 106, r: 106, r2: 5300, leftOrthog: 0)      	 0.480813  	 600       	 148.625   	 0         	 17.0498   	 8.71711   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 5300, cols: 56, reductionFactor: 37, colBlockingSize: 12)                  	 0.264756  	 700       	 90.2642   	 0         	 6.3441    	 14.228    
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 5300, Xcols: 56, r: 56, streamingCols: 0)                   	 0.0976748 	 700       	 119.115   	 0         	 34.1228   	 3.49078   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 106, reductionFactor: 37, colBlockingSize: 12)                 	 0.0931557 	 100       	 61.9376   	 0         	 2.37225   	 26.1092   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 106, Qr2: 56)      	 0.0880936 	 700       	 0         	 0         	 62.5262   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 106)                                                                	 0.0540267 	 100       	 3.43349   	 0         	 0.194719  	 17.6331   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r: 106, r2: 106)           	 0.0449216 	 100       	 125.062   	 0         	 9.63877   	 12.9749   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 106, r: 106, r2: 2500, leftOrthog: 0)      	 0.041164  	 100       	 136.478   	 0         	 15.8871   	 8.59051   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0404602 	 100       	 2.16262   	 0         	 0.149283  	 14.4868   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 56, m: 56)                                                                  	 0.0380781 	 809       	 4.9748    	 0         	 1.60856   	 3.09269   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 5300, leftOrthog: 0)        	 0.0372363 	 100       	 71.1671   	 0         	 17.1875   	 4.14062   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 106, n: 50, r: 106, r2: 50)           	 0.0365703 	 100       	 153.622   	 0         	 18.2028   	 8.43949   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 5300, m: 56)                                                                       	 0.0352959 	 700       	 0         	 0         	 94.1797   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 56, k: 2500)   	 0.0348565 	 800       	 321.317   	 0         	 49.1707   	 6.53473   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 5300, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0312453 	 100       	 87.1049   	 0         	 6.84902   	 12.7179   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 56, reductionFactor: 37, colBlockingSize: 12)                  	 0.03036   	 101       	 53.5732   	 0         	 3.80941   	 14.0634   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 2500, m: 56, k: 50)	 0.0257621 	 800       	 434.747   	 0         	 66.5287   	 6.53473   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 56, n: 50, r2: 56)                                                                                         	 0.0221881 	 707       	 0         	 0         	 79.9403   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 5300, m: 56)                                                              	 0.0204867 	 700       	 0         	 0         	 162.259   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 56, m: 2800, k: 56) 	 0.0195523 	 700       	 628.729   	 0         	 90.7166   	 6.93069   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 2800, k: 56) 	 0.0193877 	 700       	 566.133   	 0         	 86.5375   	 6.54206   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 56, n: 50, r2: 56)                   	 0.0161655 	 700       	 0         	 0         	 205.633   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 106, reductionFactor: 37, colBlockingSize: 12)                   	 0.0104939 	 100       	 10.9966   	 0         	 1.26062   	 8.72315   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 56, r: 56, streamingCols: 0)                   	 0.00962623	 101       	 82.2586   	 0         	 23.6341   	 3.48051   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00818642	 109       	 2.21911   	 0         	 0.80421   	 2.75937   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 50, Qr2: 56)       	 0.00547951	 100       	 0         	 0         	 77.3792   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 56)                                                                       	 0.00521455	 101       	 0         	 0         	 43.3863   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 50)           	 0.00490965	 8         	 20.368    	 0         	 3.29147   	 6.18812   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 2800, k: 50) 	 0.00490685	 100       	 285.316   	 0         	 46.0581   	 6.19469   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 0, n: 50, r2: 56)                    	 0.00435705	 100       	 0         	 0         	 51.4109   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 56)                                                              	 0.00422067	 101       	 0         	 0         	 53.6029   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.00400293	 101       	 6.47836   	 0         	 1.00926   	 6.41892   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.00257233	 8         	 39.926    	 0         	 3.17223   	 12.5861   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2800, cols: 56, reductionFactor: 37, colBlockingSize: 12)                  	 0.00218392	 7         	 57.8107   	 0         	 4.10108   	 14.0964   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 106, r: 50, r2: 50, leftOrthog: 0)         	 0.00206196	 100       	 25.7037   	 0         	 8.10878   	 3.16986   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 56)                                                                                         	 0.00204751	 101       	 0         	 0         	 110.495   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                   	 0.00189357	 8         	 26.4052   	 0         	 8.49191   	 3.10945   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 56, r1_: 56, n: 50, r2: 56)           	 0.00174644	 7         	 70.3894   	 0         	 10.1562   	 6.93069   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 50, r2: 50)              	 0.00109813	 100       	 22.766    	 0         	 5.46383   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50, k: 50)     	 0.000943099	 100       	 26.5084   	 0         	 6.362     	 4.16667   
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                   	 0.000824642	 100       	 0.606324  	 0         	 2.42529   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000789201	 201       	 0         	 0         	 10.1875   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 56, n: 50, r2: 1)                                                                                          	 0.00078909	 201       	 0         	 0         	 11.4116   	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 56, m: 56, fromLeft: 0)                	 0.000779787	 808       	 0         	 0         	 51.9914   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 56)   	 0.000770744	 100       	 36.3285   	 0         	 8.40746   	 4.32099   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2800, m: 56)                                                                       	 0.000757977	 7         	 0         	 0         	 23.169    	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2800, Xcols: 56, r: 56, streamingCols: 0)                   	 0.000667838	 7         	 92.0367   	 0         	 26.4277   	 3.48259   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 50, k: 50)  	 0.000613731	 100       	 40.7345   	 0         	 9.77627   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 56, m: 50, k: 56)   	 0.000601284	 100       	 52.1551   	 0         	 11.6231   	 4.48718   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                          	 0.000543115	 100       	 0         	 0         	 7.36492   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 1, r1low: 0, n: 50, r2: 50)                     	 0.000538983	 100       	 0         	 0         	 7.42138   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 56, n: 50, r2: 1)                    	 0.000509182	 100       	 0         	 0         	 16.6542   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                            	 0.000446696	 100       	 1.11933   	 0         	 13.432    	 0.0833333 
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                                	 0.000441121	 101       	 0         	 0         	 9.15848   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 1, Xr2: 50, Qr1: 1, Qr2: 0)          	 0.000436664	 100       	 0         	 0         	 9.16036   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000376366	 101       	 0.67089   	 0         	 10.7342   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 56, n: 50, r2: 1)                                                                                 	 0.00036797	 101       	 0.768541  	 0         	 12.2967   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000327515	 100       	 0.763324  	 0         	 12.2132   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 50)                                                                       	 0.000256177	 8         	 0         	 0         	 62.4568   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 56, r1_: 50, n: 50, r2: 56)           	 0.000210315	 1         	 74.5548   	 0         	 11.3962   	 6.54206   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                              	 0.000201794	 8         	 0         	 0         	 79.2888   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2800, m: 56)                                                              	 0.000118953	 7         	 0         	 0         	 147.635   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 50, r: 50, streamingCols: 0)                     	 4.5241e-05	 1         	 2.76298   	 0         	 1.10519   	 2.5       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 56, reductionFactor: 37, colBlockingSize: 12)                    	 4.2951e-05	 1         	 7.49868   	 0         	 1.10563   	 6.78225   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 56, r: 50, streamingCols: 6)                     	 3.073e-05 	 1         	 4.06769   	 0         	 1.62707   	 2.5       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 56, r1_: 56, n: 50, r2: 1)            	 1.0591e-05	 1         	 29.61     	 0         	 6.59881   	 4.48718   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 1.0091e-05	 1         	 24.7746   	 0         	 5.94589   	 4.16667   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 0)                	 1.004e-05 	 9         	 0         	 0         	 35.8566   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 0, m: 2800, k: 50)  	 8.07e-06  	 100       	 0         	 0         	 13878.6   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                         	 7.97e-06  	 2         	 0         	 0         	 10.0376   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 56, n: 50, r2: 1)                                                                                   	 7.38e-06  	 1         	 0.758808  	 0         	 3.03523   	 0.25      
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 6.88e-06  	 1         	 0.726744  	 0         	 2.90698   	 0.25      
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 56)                                                                	 4.51e-06  	 1         	 0         	 0         	 9.93348   	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 56, fromLeft: 0)                	 1.17e-06  	 1         	 0         	 0         	 38.2906   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 4.58436   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 4.58431   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                            	 3.82393   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                        	 3.82266   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 3.11106   	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 1.11404   	 1818      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 1.05466   	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.810806  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_leftOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                   	 0.760306  	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.677048  	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.561276  	 900       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.541466  	 918       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.304466  	 918       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.109938  	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.0940098 	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.0462645 	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.0452269 	 1800      
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                       	 0.0415326 	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0357996 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0263759 	 900       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.026357  	 1310      
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                              	 0.0254738 	 918       
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                              	 0.0234915 	 20        
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 0.0219068 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 0.0218817 	 2         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0215707 	 1000      
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.0068871 	 18        
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00576177	 1818      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00493796	 5273      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00345811	 6472      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00107185	 302       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000838902	 102       
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.000790997	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000446696	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: L, orthoY: L
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m43->44  [0m[1;34m44->45  [0m[1;34m45->46  [0m[1;34m46->47  [0m[1;34m47->48  [0m[1;34m48->49  [0m[1;34m49->50  [0m[1;34m50->51  [0m[1;34m51->52  [0m[1;34m52->53  [0m[1;34m53->54  [0m[1;34m54->55  [0m[1;34m55->56  [0m[1;34m56->57  [0m[1;34m57->58  [0m[1;34m58->59  [0m[1;34m59->60  [0m[1;34m60->61  [0m[1;34m61->62  [0m[1;34m62->63  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 22778706880384 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 22778493265920 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 22778291939456 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 22778090612992 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 22777889286528 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 22777687960064 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 22777486633600 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 22777285307136 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 22777083980672 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 22776882654208 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 22776681327744 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 22776480001280 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 22776278674816 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 22776077348352 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 22775876021888 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 22775674695424 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 22775473368960 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 22775272042496 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 22775070716032 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 22774869389568 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 22774668063104 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 22774466736640 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 22774265410176 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 22774064083712 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 22773862757248 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 22773661430784 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 22773460104320 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 22773258777856 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 22773057451392 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 22772856124928 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 22772654798464 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 22772453472000 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 22772252141440 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 22772050814976 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 22771849488512 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 22771648162048 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 22771446835584 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 22771245509120 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 22771044182656 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 22770842856192 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 22770641529728 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 22770440203264 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 22770238876800 -> hwthread 43 - OK[0m[1;34m
[0m[1;34m	threadid 22770037550336 -> hwthread 44 - OK[0m[1;34m
[0m[1;34m	threadid 22769836223872 -> hwthread 45 - OK[0m[1;34m
[0m[1;34m	threadid 22769634897408 -> hwthread 46 - OK[0m[1;34m
[0m[1;34m	threadid 22769433570944 -> hwthread 47 - OK[0m[1;34m
[0m[1;34m	threadid 22769232244480 -> hwthread 48 - OK[0m[1;34m
[0m[1;34m	threadid 22769030918016 -> hwthread 49 - OK[0m[1;34m
[0m[1;34m	threadid 22768829591552 -> hwthread 50 - OK[0m[1;34m
[0m[1;34m	threadid 22768628265088 -> hwthread 51 - OK[0m[1;34m
[0m[1;34m	threadid 22768426938624 -> hwthread 52 - OK[0m[1;34m
[0m[1;34m	threadid 22768225612160 -> hwthread 53 - OK[0m[1;34m
[0m[1;34m	threadid 22768024285696 -> hwthread 54 - OK[0m[1;34m
[0m[1;34m	threadid 22767822959232 -> hwthread 55 - OK[0m[1;34m
[0m[1;34m	threadid 22767621632768 -> hwthread 56 - OK[0m[1;34m
[0m[1;34m	threadid 22767420306304 -> hwthread 57 - OK[0m[1;34m
[0m[1;34m	threadid 22767218979840 -> hwthread 58 - OK[0m[1;34m
[0m[1;34m	threadid 22767017653376 -> hwthread 59 - OK[0m[1;34m
[0m[1;34m	threadid 22766816326912 -> hwthread 60 - OK[0m[1;34m
[0m[1;34m	threadid 22766615000448 -> hwthread 61 - OK[0m[1;34m
[0m[1;34m	threadid 22766413673984 -> hwthread 62 - OK[0m[1;34m
[0m[1;34m	threadid 22766212347520 -> hwthread 63 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 22778601219840 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 22778594629376 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 107, m: 107)                                                               	 0.976132  	 700       	 6.14949   	 0         	 0.19766   	 31.1114   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 5350, cols: 107, reductionFactor: 37, colBlockingSize: 12)                 	 0.69239   	 600       	 109.027   	 0         	 4.04789   	 26.9343   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 107, n: 50, r: 107, r2: 107)          	 0.591392  	 600       	 124.287   	 0         	 9.38544   	 13.2426   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 107, r: 107, r2: 5350, leftOrthog: 0)      	 0.511148  	 600       	 143.799   	 0         	 16.342    	 8.79934   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 5350, cols: 57, reductionFactor: 37, colBlockingSize: 12)                  	 0.266974  	 700       	 93.6149   	 0         	 6.46473   	 14.4809   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 5350, Xcols: 57, r: 57, streamingCols: 0)                   	 0.0999969 	 700       	 121.679   	 0         	 34.2464   	 3.55304   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 107, reductionFactor: 37, colBlockingSize: 12)                 	 0.090521  	 100       	 64.9487   	 0         	 2.46528   	 26.3454   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 107, Qr2: 57)      	 0.0819695 	 700       	 0         	 0         	 68.482    	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 107)                                                                	 0.0532627 	 100       	 3.51559   	 0         	 0.199013  	 17.6651   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r: 107, r2: 107)           	 0.0448722 	 100       	 127.573   	 0         	 9.74231   	 13.0948   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 107, r: 107, r2: 2500, leftOrthog: 0)      	 0.0428574 	 100       	 133.571   	 0         	 15.4073   	 8.6693    
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 57, m: 57)                                                                  	 0.0412794 	 809       	 4.83926   	 0         	 1.53712   	 3.14826   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0405041 	 100       	 2.16028   	 0         	 0.149121  	 14.4868   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 5350, leftOrthog: 0)        	 0.0379388 	 100       	 70.5084   	 0         	 17.0274   	 4.14087   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 107, n: 50, r: 107, r2: 50)           	 0.0379291 	 100       	 150.926   	 0         	 17.8291   	 8.46519   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 57, k: 2500)   	 0.0356138 	 800       	 320.101   	 0         	 48.5834   	 6.58868   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 5350, m: 57)                                                                       	 0.034687  	 700       	 0         	 0         	 98.4647   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 5350, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0320584 	 100       	 85.6966   	 0         	 6.7377    	 12.719    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 57, reductionFactor: 37, colBlockingSize: 12)                  	 0.0317894 	 101       	 53.008    	 0         	 3.70455   	 14.3089   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 2500, m: 57, k: 50)	 0.0256386 	 800       	 444.643   	 0         	 67.4858   	 6.58868   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 57, n: 50, r2: 57)                                                                                         	 0.021998  	 707       	 0         	 0         	 83.5365   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 5350, m: 57)                                                              	 0.0215021 	 700       	 0         	 0         	 158.842   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 57, m: 2850, k: 57) 	 0.0199729 	 700       	 649.055   	 0         	 92.0064   	 7.05446   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 2850, k: 57) 	 0.018006  	 700       	 631.541   	 0         	 95.7283   	 6.59722   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 57, n: 50, r2: 57)                   	 0.0177673 	 700       	 0         	 0         	 192.232   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 107, reductionFactor: 37, colBlockingSize: 12)                   	 0.00996426	 100       	 11.8006   	 0         	 1.34874   	 8.74935   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 57, r: 57, streamingCols: 0)                   	 0.00991559	 101       	 82.7356   	 0         	 23.3564   	 3.54231   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00802936	 109       	 2.26252   	 0         	 0.819941  	 2.75937   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 50, Qr2: 57)       	 0.00532912	 100       	 0         	 0         	 80.3134   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 57)                                                                       	 0.00511445	 101       	 0         	 0         	 45.0254   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 50)           	 0.00503234	 8         	 19.8715   	 0         	 3.21123   	 6.18812   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 2850, k: 50) 	 0.00464565	 100       	 306.739   	 0         	 49.5087   	 6.19565   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 0, n: 50, r2: 57)                    	 0.00450607	 100       	 0         	 0         	 50.5984   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                              	 0.00435636	 8         	 0         	 0         	 3.67279   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 57)                                                              	 0.00433148	 101       	 0         	 0         	 53.1643   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.00401477	 101       	 6.45925   	 0         	 1.00628   	 6.41892   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.00270271	 8         	 37.9999   	 0         	 3.01919   	 12.5861   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2850, cols: 57, reductionFactor: 37, colBlockingSize: 12)                  	 0.00227232	 7         	 58.5916   	 0         	 4.08356   	 14.3482   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 107, r: 50, r2: 50, leftOrthog: 0)         	 0.00218639	 100       	 24.4695   	 0         	 7.70219   	 3.17696   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 57)                                                                                         	 0.00213293	 101       	 0         	 0         	 107.964   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 57, r1_: 57, n: 50, r2: 57)           	 0.00182123	 7         	 71.1801   	 0         	 10.0901   	 7.05446   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                   	 0.00157667	 8         	 31.7124   	 0         	 10.1987   	 3.10945   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 57, m: 57, fromLeft: 0)                	 0.00122145	 808       	 0         	 0         	 34.3878   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 50, r2: 50)              	 0.00108677	 100       	 23.004    	 0         	 5.52097   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50, k: 50)     	 0.000971811	 100       	 25.7252   	 0         	 6.17404   	 4.16667   
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                   	 0.000901781	 100       	 0.554458  	 0         	 2.21783   	 0.25      
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2850, m: 57)                                                                       	 0.000832711	 7         	 0         	 0         	 21.8496   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000795291	 201       	 0         	 0         	 10.1095   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 57, n: 50, r2: 1)                                                                                          	 0.000793655	 201       	 0         	 0         	 11.5486   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 57)   	 0.000792661	 100       	 35.9548   	 0         	 8.27592   	 4.34451   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 57, m: 50, k: 57)   	 0.000698905	 100       	 46.487    	 0         	 10.2435   	 4.53822   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2850, Xcols: 57, r: 57, streamingCols: 0)                   	 0.000684618	 7         	 94.677    	 0         	 26.7089   	 3.54478   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 50, k: 50)  	 0.000571767	 100       	 43.7241   	 0         	 10.4938   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 57, n: 50, r2: 1)                    	 0.000543439	 100       	 0         	 0         	 15.7515   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                          	 0.000531772	 100       	 0         	 0         	 7.52202   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                                	 0.000522087	 101       	 0         	 0         	 7.73817   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 1, r1low: 0, n: 50, r2: 50)                     	 0.000508912	 100       	 0         	 0         	 7.85991   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 1, Xr2: 50, Qr1: 1, Qr2: 0)          	 0.00045959	 100       	 0         	 0         	 8.70341   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                            	 0.000426944	 100       	 1.17111   	 0         	 14.0534   	 0.0833333 
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.00040882	 101       	 0.617631  	 0         	 9.8821    	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 57, n: 50, r2: 1)                                                                                 	 0.000365866	 101       	 0.786763  	 0         	 12.5882   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000329387	 100       	 0.758986  	 0         	 12.1438   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 50)                                                                       	 0.000253995	 8         	 0         	 0         	 62.9934   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 57, r1_: 50, n: 50, r2: 57)           	 0.000210325	 1         	 77.2376   	 0         	 11.7076   	 6.59722   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2850, m: 57)                                                              	 0.000168614	 7         	 0         	 0         	 107.906   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 57, reductionFactor: 37, colBlockingSize: 12)                    	 4.2591e-05	 1         	 7.83454   	 0         	 1.14559   	 6.83885   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 50, r: 50, streamingCols: 0)                     	 3.4371e-05	 1         	 3.63679   	 0         	 1.45471   	 2.5       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 57, r: 50, streamingCols: 7)                     	 3.0011e-05	 1         	 4.16514   	 0         	 1.66606   	 2.5       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 57, r1_: 57, n: 50, r2: 1)            	 1.202e-05 	 1         	 27.03     	 0         	 5.95607   	 4.53822   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 1.143e-05 	 1         	 21.8723   	 0         	 5.24934   	 4.16667   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 0)                	 1.0241e-05	 9         	 0         	 0         	 35.1528   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 8.62e-06  	 1         	 0.580046  	 0         	 2.32019   	 0.25      
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 57, n: 50, r2: 1)                                                                                   	 8.35e-06  	 1         	 0.682635  	 0         	 2.73054   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 0, m: 2850, k: 50)  	 7.871e-06 	 100       	 0         	 0         	 14483.5   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                         	 7.5e-06   	 2         	 0         	 0         	 10.6667   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 57)                                                                	 4.511e-06 	 1         	 0         	 0         	 10.1086   	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 57, fromLeft: 0)                	 1.18e-06  	 1         	 0         	 0         	 38.6441   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 4.65456   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 4.65452   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                            	 3.88974   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                        	 3.88841   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 3.18079   	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 1.13273   	 1818      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 1.0699    	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.825568  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_leftOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                   	 0.7647    	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.67528   	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.594131  	 900       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.555048  	 918       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.308395  	 918       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.112238  	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.0877583 	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.0493087 	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.0441239 	 1800      
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                       	 0.0408956 	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0365856 	 900       
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                              	 0.0308852 	 918       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 0.0265689 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 0.026541  	 2         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0262516 	 1310      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0262103 	 900       
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                              	 0.024104  	 20        
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0233257 	 1000      
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.00708734	 18        
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00421523	 1818      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00375389	 5273      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00368118	 6472      
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.00123287	 818       
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00110407	 302       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000918751	 102       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000426944	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: L, orthoY: L
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m43->44  [0m[1;34m44->45  [0m[1;34m45->46  [0m[1;34m46->47  [0m[1;34m47->48  [0m[1;34m48->49  [0m[1;34m49->50  [0m[1;34m50->51  [0m[1;34m51->52  [0m[1;34m52->53  [0m[1;34m53->54  [0m[1;34m54->55  [0m[1;34m55->56  [0m[1;34m56->57  [0m[1;34m57->58  [0m[1;34m58->59  [0m[1;34m59->60  [0m[1;34m60->61  [0m[1;34m61->62  [0m[1;34m62->63  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 22779550398336 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 22779365681152 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 22779164354688 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 22778963028224 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 22778761701760 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 22778560375296 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 22778359048832 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 22778157722368 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 22777956395904 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 22777755069440 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 22777553742976 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 22777352416512 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 22777151090048 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 22776949763584 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 22776748437120 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 22776547110656 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 22776345784192 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 22776144457728 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 22775943131264 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 22775741804800 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 22775540478336 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 22775339151872 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 22775137825408 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 22774936498944 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 22774735172480 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 22774533846016 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 22774332519552 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 22774131193088 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 22773929866624 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 22773728540160 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 22773527213696 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 22773325887232 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 22773124556672 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 22772923230208 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 22772721903744 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 22772520577280 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 22772319250816 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 22772117924352 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 22771916597888 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 22771715271424 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 22771513944960 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 22771312618496 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 22771111292032 -> hwthread 43 - OK[0m[1;34m
[0m[1;34m	threadid 22770909965568 -> hwthread 44 - OK[0m[1;34m
[0m[1;34m	threadid 22770708639104 -> hwthread 45 - OK[0m[1;34m
[0m[1;34m	threadid 22770507312640 -> hwthread 46 - OK[0m[1;34m
[0m[1;34m	threadid 22770305986176 -> hwthread 47 - OK[0m[1;34m
[0m[1;34m	threadid 22770104659712 -> hwthread 48 - OK[0m[1;34m
[0m[1;34m	threadid 22769903333248 -> hwthread 49 - OK[0m[1;34m
[0m[1;34m	threadid 22769702006784 -> hwthread 50 - OK[0m[1;34m
[0m[1;34m	threadid 22769500680320 -> hwthread 51 - OK[0m[1;34m
[0m[1;34m	threadid 22769299353856 -> hwthread 52 - OK[0m[1;34m
[0m[1;34m	threadid 22769098027392 -> hwthread 53 - OK[0m[1;34m
[0m[1;34m	threadid 22768896700928 -> hwthread 54 - OK[0m[1;34m
[0m[1;34m	threadid 22768695374464 -> hwthread 55 - OK[0m[1;34m
[0m[1;34m	threadid 22768494048000 -> hwthread 56 - OK[0m[1;34m
[0m[1;34m	threadid 22768292721536 -> hwthread 57 - OK[0m[1;34m
[0m[1;34m	threadid 22768091395072 -> hwthread 58 - OK[0m[1;34m
[0m[1;34m	threadid 22767890068608 -> hwthread 59 - OK[0m[1;34m
[0m[1;34m	threadid 22767688742144 -> hwthread 60 - OK[0m[1;34m
[0m[1;34m	threadid 22767487415680 -> hwthread 61 - OK[0m[1;34m
[0m[1;34m	threadid 22767286089216 -> hwthread 62 - OK[0m[1;34m
[0m[1;34m	threadid 22767084762752 -> hwthread 63 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 22779444737792 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 22779438147328 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 108, m: 108)                                                               	 0.971882  	 700       	 6.35117   	 0         	 0.202247  	 31.4031   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 5400, cols: 108, reductionFactor: 37, colBlockingSize: 12)                 	 0.708634  	 600       	 109.542   	 0         	 4.02937   	 27.186    
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 108, n: 50, r: 108, r2: 108)          	 0.61079   	 600       	 123.746   	 0         	 9.25803   	 13.3663   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 108, r: 108, r2: 5400, leftOrthog: 0)      	 0.504785  	 600       	 149.732   	 0         	 16.8588   	 8.88158   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 5400, cols: 58, reductionFactor: 37, colBlockingSize: 12)                  	 0.274285  	 700       	 95.2265   	 0         	 6.4632    	 14.7336   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 5400, Xcols: 58, r: 58, streamingCols: 0)                   	 0.101326  	 700       	 125.495   	 0         	 34.7124   	 3.61529   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 108, reductionFactor: 37, colBlockingSize: 12)                 	 0.0974462 	 100       	 61.4659   	 0         	 2.31236   	 26.5814   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 108, Qr2: 58)      	 0.0877516 	 700       	 0         	 0         	 65.1822   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 108)                                                                	 0.0580046 	 100       	 3.25836   	 0         	 0.184123  	 17.6966   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r: 108, r2: 108)           	 0.0466689 	 100       	 124.965   	 0         	 9.45664   	 13.2146   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 58, m: 58)                                                                  	 0.0433796 	 809       	 4.85158   	 0         	 1.51432   	 3.20379   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 108, r: 108, r2: 2500, leftOrthog: 0)      	 0.0419096 	 100       	 139.157   	 0         	 15.9072   	 8.74806   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0398171 	 100       	 2.19755   	 0         	 0.151694  	 14.4868   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 108, n: 50, r: 108, r2: 50)           	 0.039258  	 100       	 148.556   	 0         	 17.4965   	 8.49057   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 5400, m: 58)                                                                       	 0.0390836 	 700       	 0         	 0         	 89.7523   	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 5400, leftOrthog: 0)        	 0.0374061 	 100       	 72.1807   	 0         	 17.4303   	 4.1411    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 58, k: 2500)   	 0.0354496 	 800       	 327.226   	 0         	 49.2689   	 6.64163   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 58, reductionFactor: 37, colBlockingSize: 12)                  	 0.0327713 	 101       	 53.2398   	 0         	 3.65803   	 14.5542   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 5400, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0323996 	 100       	 85.5867   	 0         	 6.72848   	 12.7201   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 2500, m: 58, k: 50)	 0.0261785 	 800       	 443.112   	 0         	 66.7174   	 6.64163   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 58, n: 50, r2: 58)                                                                                         	 0.0237184 	 707       	 0         	 0         	 80.2196   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 58, m: 2900, k: 58) 	 0.0209283 	 700       	 652.601   	 0         	 90.9141   	 7.17822   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 5400, m: 58)                                                              	 0.0198884 	 700       	 0         	 0         	 176.376   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 58, n: 50, r2: 58)                   	 0.019058  	 700       	 0         	 0         	 184.062   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 2900, k: 58) 	 0.0183502 	 700       	 641.627   	 0         	 96.4653   	 6.65138   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 50)           	 0.0173312 	 8         	 5.76996   	 0         	 0.932425  	 6.18812   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 108, reductionFactor: 37, colBlockingSize: 12)                   	 0.0109044 	 100       	 10.9857   	 0         	 1.2519    	 8.77523   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 58, r: 58, streamingCols: 0)                   	 0.0100536 	 101       	 84.4881   	 0         	 23.4422   	 3.6041    
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.008069  	 109       	 2.25141   	 0         	 0.815913  	 2.75937   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 58)                                                                       	 0.00564977	 101       	 0         	 0         	 41.4743   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 50, Qr2: 58)       	 0.00563951	 100       	 0         	 0         	 76.6024   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 2900, k: 50) 	 0.0046073 	 100       	 314.718   	 0         	 50.7889   	 6.19658   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 0, n: 50, r2: 58)                    	 0.00458441	 100       	 0         	 0         	 50.6063   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 58)                                                              	 0.00452419	 101       	 0         	 0         	 51.7927   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.00372659	 101       	 6.95875   	 0         	 1.0841    	 6.41892   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.00273477	 8         	 37.5544   	 0         	 2.9838    	 12.5861   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2900, cols: 58, reductionFactor: 37, colBlockingSize: 12)                  	 0.00245769	 7         	 57.0737   	 0         	 3.90919   	 14.5999   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 108, r: 50, r2: 50, leftOrthog: 0)         	 0.00234351	 100       	 23.0423   	 0         	 7.237     	 3.18396   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 58, r1_: 58, n: 50, r2: 58)           	 0.00231418	 7         	 59.0181   	 0         	 8.22183   	 7.17822   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 58)                                                                                         	 0.0022082 	 101       	 0         	 0         	 106.114   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                   	 0.00196973	 8         	 25.3841   	 0         	 8.16354   	 3.10945   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 58, m: 58, fromLeft: 0)                	 0.00109904	 808       	 0         	 0         	 39.5706   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 50, r2: 50)              	 0.00105964	 100       	 23.5929   	 0         	 5.6623    	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50, k: 50)     	 0.00100872	 100       	 24.7839   	 0         	 5.94813   	 4.16667   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2900, Xcols: 58, r: 58, streamingCols: 0)                   	 0.000866342	 7         	 78.8248   	 0         	 21.8535   	 3.60697   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2900, m: 58)                                                                       	 0.000854761	 7         	 0         	 0         	 22.0394   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 58, m: 50, k: 58)   	 0.000818937	 100       	 41.0776   	 0         	 8.95209   	 4.58861   
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                   	 0.000817612	 100       	 0.611537  	 0         	 2.44615   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 58, n: 50, r2: 1)                                                                                          	 0.000814905	 201       	 0         	 0         	 11.4448   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 58)   	 0.00080461	 100       	 36.0423   	 0         	 8.25245   	 4.36747   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000795027	 201       	 0         	 0         	 10.1129   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 50, k: 50)  	 0.000589664	 100       	 42.397    	 0         	 10.1753   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                          	 0.00053614	 100       	 0         	 0         	 7.46074   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 58, n: 50, r2: 1)                    	 0.000532795	 100       	 0         	 0         	 16.2164   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 1, r1low: 0, n: 50, r2: 50)                     	 0.000529629	 100       	 0         	 0         	 7.55246   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                                	 0.000443201	 101       	 0         	 0         	 9.1155    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                            	 0.000436819	 100       	 1.14464   	 0         	 13.7357   	 0.0833333 
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 1, Xr2: 50, Qr1: 1, Qr2: 0)          	 0.000432818	 100       	 0         	 0         	 9.24176   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000397196	 101       	 0.635706  	 0         	 10.1713   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 50)                                                                       	 0.000366648	 8         	 0         	 0         	 43.6386   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 58, n: 50, r2: 1)                                                                                 	 0.000359325	 101       	 0.815139  	 0         	 13.0422   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000333703	 100       	 0.749169  	 0         	 11.9867   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 58, r1_: 50, n: 50, r2: 58)           	 0.000219155	 1         	 76.7493   	 0         	 11.5389   	 6.65138   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2900, m: 58)                                                              	 0.000216236	 7         	 0         	 0         	 87.1196   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                              	 0.000194404	 8         	 0         	 0         	 82.3028   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 58, reductionFactor: 37, colBlockingSize: 12)                    	 4.0581e-05	 1         	 8.51364   	 0         	 1.23486   	 6.89439   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 50, r: 50, streamingCols: 0)                     	 3.2901e-05	 1         	 3.79928   	 0         	 1.51971   	 2.5       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 58, r: 50, streamingCols: 6)                     	 2.971e-05 	 1         	 4.20734   	 0         	 1.68294   	 2.5       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 2.2931e-05	 1         	 0.218045  	 0         	 0.872182  	 0.25      
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 58, r1_: 58, n: 50, r2: 1)            	 1.1581e-05	 1         	 29.0476   	 0         	 6.33037   	 4.58861   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 1.041e-05 	 1         	 24.0154   	 0         	 5.76369   	 4.16667   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 0)                	 1.0142e-05	 9         	 0         	 0         	 35.496    	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                         	 8.64e-06  	 2         	 0         	 0         	 9.25926   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 58, n: 50, r2: 1)                                                                                   	 8.601e-06 	 1         	 0.67434   	 0         	 2.69736   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 0, m: 2900, k: 50)  	 7.85e-06  	 100       	 0         	 0         	 14777.1   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 58)                                                                	 4.6e-06   	 1         	 0         	 0         	 10.087    	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 58, fromLeft: 0)                	 1.2e-06   	 1         	 0         	 0         	 38.6667   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 4.74498   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 4.74492   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                            	 3.95178   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                        	 3.95051   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 3.21389   	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 1.1654    	 1818      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 1.0697    	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.850116  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_leftOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                   	 0.793073  	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.697776  	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.586444  	 900       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.569482  	 918       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.31656   	 918       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.114278  	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.0938239 	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.0514486 	 918       
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                       	 0.0459634 	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.0455172 	 1800      
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 0.0365742 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 0.0365313 	 2         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0364583 	 900       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0280726 	 1310      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0267681 	 900       
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                              	 0.025271  	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0247048 	 1000      
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                              	 0.0245441 	 20        
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.0198865 	 18        
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00543181	 1818      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00479266	 5273      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00391092	 6472      
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.00111039	 818       
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00109022	 302       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000849144	 102       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000436819	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: L, orthoY: L
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m43->44  [0m[1;34m44->45  [0m[1;34m45->46  [0m[1;34m46->47  [0m[1;34m47->48  [0m[1;34m48->49  [0m[1;34m49->50  [0m[1;34m50->51  [0m[1;34m51->52  [0m[1;34m52->53  [0m[1;34m53->54  [0m[1;34m54->55  [0m[1;34m55->56  [0m[1;34m56->57  [0m[1;34m57->58  [0m[1;34m58->59  [0m[1;34m59->60  [0m[1;34m60->61  [0m[1;34m61->62  [0m[1;34m62->63  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 23428437534592 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 23428241287168 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 23428039960704 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 23427838634240 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 23427637307776 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 23427435981312 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 23427234654848 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 23427033328384 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 23426832001920 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 23426630675456 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 23426429348992 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 23426228022528 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 23426026696064 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 23425825369600 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 23425624043136 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 23425422716672 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 23425221390208 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 23425020063744 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 23424818737280 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 23424617410816 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 23424416084352 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 23424214757888 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 23424013431424 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 23423812104960 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 23423610778496 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 23423409452032 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 23423208125568 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 23423006799104 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 23422805472640 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 23422604146176 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 23422402819712 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 23422201493248 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 23422000162688 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 23421798836224 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 23421597509760 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 23421396183296 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 23421194856832 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 23420993530368 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 23420792203904 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 23420590877440 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 23420389550976 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 23420188224512 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 23419986898048 -> hwthread 43 - OK[0m[1;34m
[0m[1;34m	threadid 23419785571584 -> hwthread 44 - OK[0m[1;34m
[0m[1;34m	threadid 23419584245120 -> hwthread 45 - OK[0m[1;34m
[0m[1;34m	threadid 23419382918656 -> hwthread 46 - OK[0m[1;34m
[0m[1;34m	threadid 23419181592192 -> hwthread 47 - OK[0m[1;34m
[0m[1;34m	threadid 23418980265728 -> hwthread 48 - OK[0m[1;34m
[0m[1;34m	threadid 23418778939264 -> hwthread 49 - OK[0m[1;34m
[0m[1;34m	threadid 23418577612800 -> hwthread 50 - OK[0m[1;34m
[0m[1;34m	threadid 23418376286336 -> hwthread 51 - OK[0m[1;34m
[0m[1;34m	threadid 23418174959872 -> hwthread 52 - OK[0m[1;34m
[0m[1;34m	threadid 23417973633408 -> hwthread 53 - OK[0m[1;34m
[0m[1;34m	threadid 23417772306944 -> hwthread 54 - OK[0m[1;34m
[0m[1;34m	threadid 23417570980480 -> hwthread 55 - OK[0m[1;34m
[0m[1;34m	threadid 23417369654016 -> hwthread 56 - OK[0m[1;34m
[0m[1;34m	threadid 23417168327552 -> hwthread 57 - OK[0m[1;34m
[0m[1;34m	threadid 23416967001088 -> hwthread 58 - OK[0m[1;34m
[0m[1;34m	threadid 23416765674624 -> hwthread 59 - OK[0m[1;34m
[0m[1;34m	threadid 23416564348160 -> hwthread 60 - OK[0m[1;34m
[0m[1;34m	threadid 23416363021696 -> hwthread 61 - OK[0m[1;34m
[0m[1;34m	threadid 23416161695232 -> hwthread 62 - OK[0m[1;34m
[0m[1;34m	threadid 23415960368768 -> hwthread 63 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 23428331874048 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 23428325283584 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 109, m: 109)                                                               	 1.01867   	 700       	 6.22936   	 0         	 0.196542  	 31.6947   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 5450, cols: 109, reductionFactor: 37, colBlockingSize: 12)                 	 0.712213  	 600       	 112.048   	 0         	 4.08371   	 27.4377   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 109, n: 50, r: 109, r2: 109)          	 0.624407  	 600       	 124.441   	 0         	 9.22461   	 13.4901   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 109, r: 109, r2: 5450, leftOrthog: 0)      	 0.504674  	 600       	 153.964   	 0         	 17.1762   	 8.96382   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 5450, cols: 59, reductionFactor: 37, colBlockingSize: 12)                  	 0.279329  	 700       	 97.6551   	 0         	 6.51624   	 14.9864   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 5450, Xcols: 59, r: 59, streamingCols: 0)                   	 0.106468  	 700       	 124.732   	 0         	 33.9172   	 3.67755   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 109, reductionFactor: 37, colBlockingSize: 12)                 	 0.0956894 	 100       	 63.7589   	 0         	 2.37753   	 26.8173   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 109, Qr2: 59)      	 0.0875387 	 700       	 0         	 0         	 66.569    	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 109)                                                                	 0.055693  	 100       	 3.42502   	 0         	 0.193202  	 17.7277   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r: 109, r2: 109)           	 0.0460034 	 100       	 129.132   	 0         	 9.68418   	 13.3343   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 109, r: 109, r2: 2500, leftOrthog: 0)      	 0.0446916 	 100       	 132.922   	 0         	 15.059    	 8.82677   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 59, m: 59)                                                                  	 0.0436566 	 809       	 5.07448   	 0         	 1.5569    	 3.25936   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0404089 	 100       	 2.16537   	 0         	 0.149472  	 14.4868   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 109, n: 50, r: 109, r2: 50)           	 0.0382311 	 100       	 155.384   	 0         	 18.2469   	 8.51562   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 5450, m: 59)                                                                       	 0.0373053 	 700       	 0         	 0         	 96.5376   	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 5450, leftOrthog: 0)        	 0.0368435 	 100       	 73.9615   	 0         	 17.8593   	 4.14134   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 59, k: 2500)   	 0.035078  	 800       	 336.394   	 0         	 50.2561   	 6.69359   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 59, reductionFactor: 37, colBlockingSize: 12)                  	 0.0339228 	 101       	 53.2214   	 0         	 3.59619   	 14.7994   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 5450, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.031577  	 100       	 88.6293   	 0         	 6.96709   	 12.7211   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 2500, m: 59, k: 50)	 0.0278892 	 800       	 423.103   	 0         	 63.2101   	 6.69359   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 59, n: 50, r2: 59)                                                                                         	 0.0233777 	 707       	 0         	 0         	 84.2195   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 59, m: 2950, k: 59) 	 0.0209149 	 700       	 687.383   	 0         	 94.1366   	 7.30198   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 5450, m: 59)                                                              	 0.0207271 	 700       	 0         	 0         	 173.751   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 2950, k: 59) 	 0.018571  	 700       	 656.05    	 0         	 97.8515   	 6.70455   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 59, n: 50, r2: 59)                   	 0.0182679 	 700       	 0         	 0         	 197.141   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 109, reductionFactor: 37, colBlockingSize: 12)                   	 0.0106143 	 100       	 11.4959   	 0         	 1.30623   	 8.80078   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 59, r: 59, streamingCols: 0)                   	 0.0102392 	 101       	 85.8423   	 0         	 23.4166   	 3.66587   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.0083334 	 109       	 2.17997   	 0         	 0.790026  	 2.75937   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 50, Qr2: 59)       	 0.00601856	 100       	 0         	 0         	 72.4426   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 59)                                                                       	 0.00568254	 101       	 0         	 0         	 41.946    	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 109, r: 50, r2: 50, leftOrthog: 0)         	 0.00559698	 100       	 9.73739   	 0         	 3.05165   	 3.19087   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 2950, k: 50) 	 0.00487544	 100       	 302.537   	 0         	 48.8161   	 6.19748   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 50)           	 0.00479376	 8         	 20.8604   	 0         	 3.37105   	 6.18812   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 0, n: 50, r2: 59)                    	 0.00471648	 100       	 0         	 0         	 50.0373   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 59)                                                              	 0.00437918	 101       	 0         	 0         	 54.4302   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.00388589	 101       	 6.67348   	 0         	 1.03966   	 6.41892   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.00269158	 8         	 38.1571   	 0         	 3.03168   	 12.5861   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2950, cols: 59, reductionFactor: 37, colBlockingSize: 12)                  	 0.00249916	 7         	 59.0801   	 0         	 3.97803   	 14.8516   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 59)                                                                                         	 0.00205703	 101       	 0         	 0         	 115.876   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 59, r1_: 59, n: 50, r2: 59)           	 0.00194301	 7         	 73.9911   	 0         	 10.133    	 7.30198   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                   	 0.00170499	 8         	 29.3256   	 0         	 9.43112   	 3.10945   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 59, m: 59, fromLeft: 0)                	 0.00128501	 808       	 0         	 0         	 35.0211   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 50, r2: 50)              	 0.00105174	 100       	 23.77     	 0         	 5.7048    	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50, k: 50)     	 0.000947807	 100       	 26.3767   	 0         	 6.3304    	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 59, n: 50, r2: 1)                                                                                          	 0.000825055	 201       	 0         	 0         	 11.4989   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                   	 0.000805569	 100       	 0.620679  	 0         	 2.48272   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 59, m: 50, k: 59)   	 0.000804439	 100       	 43.2724   	 0         	 9.32923   	 4.63836   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 59)   	 0.000800478	 100       	 36.853    	 0         	 8.39498   	 4.38988   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000775483	 201       	 0         	 0         	 10.3677   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2950, Xcols: 59, r: 59, streamingCols: 0)                   	 0.000728507	 7         	 98.6712   	 0         	 26.8921   	 3.66915   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                            	 0.00065181	 100       	 0.767095  	 0         	 9.20514   	 0.0833333 
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 50, k: 50)  	 0.000590128	 100       	 42.3637   	 0         	 10.1673   	 4.16667   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2950, m: 59)                                                              	 0.000589035	 7         	 0         	 0         	 33.0941   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 1, r1low: 0, n: 50, r2: 50)                     	 0.000517606	 100       	 0         	 0         	 7.72789   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 59, n: 50, r2: 1)                    	 0.000509755	 100       	 0         	 0         	 17.1063   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                          	 0.000503978	 100       	 0         	 0         	 7.93685   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 1, Xr2: 50, Qr1: 1, Qr2: 0)          	 0.000432579	 100       	 0         	 0         	 9.24687   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                                	 0.000431805	 101       	 0         	 0         	 9.35608   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2950, m: 59)                                                                       	 0.000400389	 7         	 0         	 0         	 48.6867   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000372831	 101       	 0.677251  	 0         	 10.836    	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 59, n: 50, r2: 1)                                                                                 	 0.000357359	 101       	 0.833755  	 0         	 13.3401   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.00034527	 100       	 0.724071  	 0         	 11.5851   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 50)                                                                       	 0.000264734	 8         	 0         	 0         	 60.438    	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 59, r1_: 50, n: 50, r2: 59)           	 0.000226296	 1         	 76.9125   	 0         	 11.4717   	 6.70455   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                              	 0.000218295	 8         	 0         	 0         	 73.2953   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 59, reductionFactor: 37, colBlockingSize: 12)                    	 4.0131e-05	 1         	 8.90853   	 0         	 1.282     	 6.94892   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 50, r: 50, streamingCols: 0)                     	 3.3201e-05	 1         	 3.76495   	 0         	 1.50598   	 2.5       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 59, r: 50, streamingCols: 7)                     	 2.7971e-05	 1         	 4.46891   	 0         	 1.78757   	 2.5       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 0, m: 2950, k: 50)  	 1.327e-05 	 100       	 0         	 0         	 8892.24   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 59, r1_: 59, n: 50, r2: 1)            	 1.186e-05 	 1         	 29.3508   	 0         	 6.32782   	 4.63836   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 1.0611e-05	 1         	 23.5605   	 0         	 5.65451   	 4.16667   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 0)                	 1.005e-05 	 9         	 0         	 0         	 35.8209   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 9.67e-06  	 1         	 0.517063  	 0         	 2.06825   	 0.25      
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                         	 8.75e-06  	 2         	 0         	 0         	 9.14286   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 59, n: 50, r2: 1)                                                                                   	 7.89e-06  	 1         	 0.747782  	 0         	 2.99113   	 0.25      
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 59)                                                                	 4.63e-06  	 1         	 0         	 0         	 10.1944   	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 59, fromLeft: 0)                	 1.22e-06  	 1         	 0         	 0         	 38.6885   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 4.82552   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 4.82547   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                            	 4.02373   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                        	 4.02247   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 3.27902   	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 1.17246   	 1818      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 1.11477   	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.850615  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_leftOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                   	 0.80167   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.709693  	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.591806  	 900       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.578132  	 918       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.322935  	 918       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.119202  	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.0939898 	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.05199   	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.0459795 	 1800      
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                       	 0.0436617 	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0360258 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0284793 	 900       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0275392 	 1310      
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                              	 0.0263501 	 918       
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                              	 0.0251949 	 20        
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0240118 	 1000      
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 0.0227133 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 0.022684  	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.00698554	 18        
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.004722  	 1818      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00355855	 6472      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00253117	 5273      
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.00129628	 818       
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00107546	 302       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000823129	 102       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.00065181	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: L, orthoY: L
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m43->44  [0m[1;34m44->45  [0m[1;34m45->46  [0m[1;34m46->47  [0m[1;34m47->48  [0m[1;34m48->49  [0m[1;34m49->50  [0m[1;34m50->51  [0m[1;34m51->52  [0m[1;34m52->53  [0m[1;34m53->54  [0m[1;34m54->55  [0m[1;34m55->56  [0m[1;34m56->57  [0m[1;34m57->58  [0m[1;34m58->59  [0m[1;34m59->60  [0m[1;34m60->61  [0m[1;34m61->62  [0m[1;34m62->63  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 22959174047616 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 22958949001216 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 22958747674752 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 22958546348288 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 22958345021824 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 22958143695360 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 22957942368896 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 22957741042432 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 22957539715968 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 22957338389504 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 22957137063040 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 22956935736576 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 22956734410112 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 22956533083648 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 22956331757184 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 22956130430720 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 22955929104256 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 22955727777792 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 22955526451328 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 22955325124864 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 22955123798400 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 22954922471936 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 22954721145472 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 22954519819008 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 22954318492544 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 22954117166080 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 22953915839616 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 22953714513152 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 22953513186688 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 22953311860224 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 22953110533760 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 22952909207296 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 22952707876736 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 22952506550272 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 22952305223808 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 22952103897344 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 22951902570880 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 22951701244416 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 22951499917952 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 22951298591488 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 22951097265024 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 22950895938560 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 22950694612096 -> hwthread 43 - OK[0m[1;34m
[0m[1;34m	threadid 22950493285632 -> hwthread 44 - OK[0m[1;34m
[0m[1;34m	threadid 22950291959168 -> hwthread 45 - OK[0m[1;34m
[0m[1;34m	threadid 22950090632704 -> hwthread 46 - OK[0m[1;34m
[0m[1;34m	threadid 22949889306240 -> hwthread 47 - OK[0m[1;34m
[0m[1;34m	threadid 22949687979776 -> hwthread 48 - OK[0m[1;34m
[0m[1;34m	threadid 22949486653312 -> hwthread 49 - OK[0m[1;34m
[0m[1;34m	threadid 22949285326848 -> hwthread 50 - OK[0m[1;34m
[0m[1;34m	threadid 22949084000384 -> hwthread 51 - OK[0m[1;34m
[0m[1;34m	threadid 22948882673920 -> hwthread 52 - OK[0m[1;34m
[0m[1;34m	threadid 22948681347456 -> hwthread 53 - OK[0m[1;34m
[0m[1;34m	threadid 22948480020992 -> hwthread 54 - OK[0m[1;34m
[0m[1;34m	threadid 22948278694528 -> hwthread 55 - OK[0m[1;34m
[0m[1;34m	threadid 22948077368064 -> hwthread 56 - OK[0m[1;34m
[0m[1;34m	threadid 22947876041600 -> hwthread 57 - OK[0m[1;34m
[0m[1;34m	threadid 22947674715136 -> hwthread 58 - OK[0m[1;34m
[0m[1;34m	threadid 22947473388672 -> hwthread 59 - OK[0m[1;34m
[0m[1;34m	threadid 22947272062208 -> hwthread 60 - OK[0m[1;34m
[0m[1;34m	threadid 22947070735744 -> hwthread 61 - OK[0m[1;34m
[0m[1;34m	threadid 22946869409280 -> hwthread 62 - OK[0m[1;34m
[0m[1;34m	threadid 22946668082816 -> hwthread 63 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 22959068387072 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 22959061796608 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 110, m: 110)                                                               	 0.991376  	 700       	 6.57864   	 0         	 0.20567   	 31.9864   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 5500, cols: 110, reductionFactor: 37, colBlockingSize: 12)                 	 0.720123  	 600       	 113.895   	 0         	 4.1133    	 27.6895   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 110, n: 50, r: 110, r2: 110)          	 0.631735  	 600       	 126.414   	 0         	 9.28567   	 13.6139   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 110, r: 110, r2: 5500, leftOrthog: 0)      	 0.50323   	 600       	 158.695   	 0         	 17.543    	 9.04605   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 5500, cols: 60, reductionFactor: 37, colBlockingSize: 12)                  	 0.305581  	 700       	 93.1641   	 0         	 6.11347   	 15.2392   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 5500, Xcols: 60, r: 60, streamingCols: 0)                   	 0.103506  	 700       	 133.906   	 0         	 35.8056   	 3.7398    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 110, reductionFactor: 37, colBlockingSize: 12)                 	 0.0958697 	 100       	 64.8121   	 0         	 2.39575   	 27.0529   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 110, Qr2: 60)      	 0.0908464 	 700       	 0         	 0         	 65.3411   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 110)                                                                	 0.0589841 	 100       	 3.26359   	 0         	 0.183778  	 17.7583   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r: 110, r2: 110)           	 0.0467757 	 100       	 129.341   	 0         	 9.61354   	 13.454    
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 60, m: 60)                                                                  	 0.0434536 	 809       	 5.36186   	 0         	 1.61749   	 3.31492   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 110, r: 110, r2: 2500, leftOrthog: 0)      	 0.043152  	 100       	 140.202   	 0         	 15.7434   	 8.90544   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 5500, leftOrthog: 0)        	 0.040697  	 100       	 67.5725   	 0         	 16.3157   	 4.14157   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 5500, m: 60)                                                                       	 0.040535  	 700       	 0         	 0         	 91.1805   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0397719 	 100       	 2.20005   	 0         	 0.151866  	 14.4868   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 110, n: 50, r: 110, r2: 50)           	 0.0390495 	 100       	 154.931   	 0         	 18.1411   	 8.54037   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 60, reductionFactor: 37, colBlockingSize: 12)                  	 0.0362344 	 101       	 51.5293   	 0         	 3.42516   	 15.0443   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 60, k: 2500)   	 0.0352478 	 800       	 340.447   	 0         	 50.4769   	 6.7446    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 5500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0342444 	 100       	 82.4754   	 0         	 6.48281   	 12.7222   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 2500, m: 60, k: 50)	 0.0275016 	 800       	 436.338   	 0         	 64.6944   	 6.7446    
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 60, n: 50, r2: 60)                                                                                         	 0.0240247 	 707       	 0         	 0         	 84.7526   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 3000, k: 60) 	 0.0219364 	 700       	 574.387   	 0         	 85.0092   	 6.75676   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 5500, m: 60)                                                              	 0.0213369 	 700       	 0         	 0         	 173.221   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 60, m: 3000, k: 60) 	 0.0208008 	 700       	 726.895   	 0         	 97.8885   	 7.42574   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 60, n: 50, r2: 60)                   	 0.0194512 	 700       	 0         	 0         	 190.014   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 60, r: 60, streamingCols: 0)                   	 0.0107347 	 101       	 84.679    	 0         	 22.7165   	 3.72763   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 110, reductionFactor: 37, colBlockingSize: 12)                   	 0.0106168 	 100       	 11.7051   	 0         	 1.3262    	 8.82601   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00807468	 109       	 2.24982   	 0         	 0.815339  	 2.75937   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 50, Qr2: 60)       	 0.00686204	 100       	 0         	 0         	 64.1209   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 60)                                                                       	 0.00556649	 101       	 0         	 0         	 43.5463   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 50)           	 0.0047904 	 8         	 20.8751   	 0         	 3.37341   	 6.18812   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 0, n: 50, r2: 60)                    	 0.00472083	 100       	 0         	 0         	 50.8386   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 60)                                                              	 0.004607  	 101       	 0         	 0         	 52.6156   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 3000, k: 50) 	 0.0044367 	 100       	 338.089   	 0         	 54.545    	 6.19835   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.00380973	 101       	 6.8069    	 0         	 1.06044   	 6.41892   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.00269824	 8         	 38.0629   	 0         	 3.0242    	 12.5861   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3000, cols: 60, reductionFactor: 37, colBlockingSize: 12)                  	 0.00263554	 7         	 58.9203   	 0         	 3.90114   	 15.1033   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                   	 0.00240961	 8         	 20.7502   	 0         	 6.67328   	 3.10945   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 110, r: 50, r2: 50, leftOrthog: 0)         	 0.00215935	 100       	 25.4706   	 0         	 7.96536   	 3.19767   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 60)                                                                                         	 0.00209777	 101       	 0         	 0         	 115.551   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 60, r1_: 60, n: 50, r2: 60)           	 0.00198691	 7         	 76.0981   	 0         	 10.2479   	 7.42574   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 50, r2: 50)              	 0.00112036	 100       	 22.3142   	 0         	 5.3554    	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50, k: 50)     	 0.000971354	 100       	 25.7373   	 0         	 6.17694   	 4.16667   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 60, m: 60, fromLeft: 0)                	 0.000863839	 808       	 0         	 0         	 53.8767   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                   	 0.000836814	 100       	 0.597504  	 0         	 2.39002   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 60)   	 0.000808361	 100       	 37.1121   	 0         	 8.41208   	 4.41176   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 60, n: 50, r2: 1)                                                                                          	 0.000800696	 201       	 0         	 0         	 12.0495   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 3000, m: 60)                                                                       	 0.000800351	 7         	 0         	 0         	 25.1889   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000787149	 201       	 0         	 0         	 10.2141   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 60, m: 50, k: 60)   	 0.000776561	 100       	 46.3582   	 0         	 9.88976   	 4.6875    
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 3000, Xcols: 60, r: 60, streamingCols: 0)                   	 0.000769229	 7         	 98.2802   	 0         	 26.3391   	 3.73134   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 50, k: 50)  	 0.000588754	 100       	 42.4626   	 0         	 10.191    	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 60, n: 50, r2: 1)                    	 0.000521965	 100       	 0         	 0         	 16.8594   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                          	 0.000509038	 100       	 0         	 0         	 7.85796   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 1, r1low: 0, n: 50, r2: 50)                     	 0.000504476	 100       	 0         	 0         	 7.92902   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                                	 0.000464223	 101       	 0         	 0         	 8.70271   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                            	 0.000432951	 100       	 1.15487   	 0         	 13.8584   	 0.0833333 
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 1, Xr2: 50, Qr1: 1, Qr2: 0)          	 0.000425311	 100       	 0         	 0         	 9.40488   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.00037459	 101       	 0.67407   	 0         	 10.7851   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 60, n: 50, r2: 1)                                                                                 	 0.000366127	 101       	 0.827582  	 0         	 13.2413   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000327117	 100       	 0.764253  	 0         	 12.228    	 0.0625    
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 50)                                                                       	 0.000277767	 8         	 0         	 0         	 57.6022   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 60, r1_: 50, n: 50, r2: 60)           	 0.000226305	 1         	 79.5387   	 0         	 11.7717   	 6.75676   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 3000, m: 60)                                                              	 0.000221986	 7         	 0         	 0         	 90.8165   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                              	 0.000198665	 8         	 0         	 0         	 80.5376   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 60, reductionFactor: 37, colBlockingSize: 12)                    	 4.2181e-05	 1         	 8.76531   	 0         	 1.25175   	 7.00246   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 50, r: 50, streamingCols: 0)                     	 3.3381e-05	 1         	 3.74465   	 0         	 1.49786   	 2.5       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 60, r: 50, streamingCols: 9)                     	 2.842e-05 	 1         	 4.39831   	 0         	 1.75932   	 2.5       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 60, r1_: 60, n: 50, r2: 1)            	 1.1301e-05	 1         	 31.8556   	 0         	 6.79586   	 4.6875    
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 1.086e-05 	 1         	 23.0203   	 0         	 5.52486   	 4.16667   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 0)                	 9.87e-06  	 9         	 0         	 0         	 36.4742   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 8.421e-06 	 1         	 0.593754  	 0         	 2.37501   	 0.25      
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 60, n: 50, r2: 1)                                                                                   	 8.38e-06  	 1         	 0.71599   	 0         	 2.86396   	 0.25      
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                         	 8.16e-06  	 2         	 0         	 0         	 9.80392   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 0, m: 3000, k: 50)  	 7.38e-06  	 100       	 0         	 0         	 16260.2   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 60)                                                                	 4.6e-06   	 1         	 0         	 0         	 10.4348   	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 60, fromLeft: 0)                	 1.29e-06  	 1         	 0         	 0         	 37.2093   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 4.85482   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 4.85477   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                            	 4.01432   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                        	 4.01305   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 3.26092   	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 1.21185   	 1818      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 1.09013   	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.861515  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_leftOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                   	 0.840378  	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.71868   	 900       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.608224  	 918       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.589239  	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.35149   	 918       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.117481  	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.0981337 	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.0515283 	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.0487663 	 1800      
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                       	 0.0471877 	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0362192 	 900       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0282194 	 1310      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0280904 	 900       
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                              	 0.0268334 	 918       
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                              	 0.0252235 	 20        
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0251985 	 1000      
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 0.0240037 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 0.0239753 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.00702578	 18        
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00500054	 1818      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00474734	 5273      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00363305	 6472      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00106783	 302       
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.000874999	 818       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000853615	 102       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000432951	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: L, orthoY: L
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m43->44  [0m[1;34m44->45  [0m[1;34m45->46  [0m[1;34m46->47  [0m[1;34m47->48  [0m[1;34m48->49  [0m[1;34m49->50  [0m[1;34m50->51  [0m[1;34m51->52  [0m[1;34m52->53  [0m[1;34m53->54  [0m[1;34m54->55  [0m[1;34m55->56  [0m[1;34m56->57  [0m[1;34m57->58  [0m[1;34m58->59  [0m[1;34m59->60  [0m[1;34m60->61  [0m[1;34m61->62  [0m[1;34m62->63  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 23266518546304 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 23266307598336 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 23266106271872 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 23265904945408 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 23265703618944 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 23265502292480 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 23265300966016 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 23265099639552 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 23264898313088 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 23264696986624 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 23264495660160 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 23264294333696 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 23264093007232 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 23263891680768 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 23263690354304 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 23263489027840 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 23263287701376 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 23263086374912 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 23262885048448 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 23262683721984 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 23262482395520 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 23262281069056 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 23262079742592 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 23261878416128 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 23261677089664 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 23261475763200 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 23261274436736 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 23261073110272 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 23260871783808 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 23260670457344 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 23260469130880 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 23260267804416 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 23260066473856 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 23259865147392 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 23259663820928 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 23259462494464 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 23259261168000 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 23259059841536 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 23258858515072 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 23258657188608 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 23258455862144 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 23258254535680 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 23258053209216 -> hwthread 43 - OK[0m[1;34m
[0m[1;34m	threadid 23257851882752 -> hwthread 44 - OK[0m[1;34m
[0m[1;34m	threadid 23257650556288 -> hwthread 45 - OK[0m[1;34m
[0m[1;34m	threadid 23257449229824 -> hwthread 46 - OK[0m[1;34m
[0m[1;34m	threadid 23257247903360 -> hwthread 47 - OK[0m[1;34m
[0m[1;34m	threadid 23257046576896 -> hwthread 48 - OK[0m[1;34m
[0m[1;34m	threadid 23256845250432 -> hwthread 49 - OK[0m[1;34m
[0m[1;34m	threadid 23256643923968 -> hwthread 50 - OK[0m[1;34m
[0m[1;34m	threadid 23256442597504 -> hwthread 51 - OK[0m[1;34m
[0m[1;34m	threadid 23256241271040 -> hwthread 52 - OK[0m[1;34m
[0m[1;34m	threadid 23256039944576 -> hwthread 53 - OK[0m[1;34m
[0m[1;34m	threadid 23255838618112 -> hwthread 54 - OK[0m[1;34m
[0m[1;34m	threadid 23255637291648 -> hwthread 55 - OK[0m[1;34m
[0m[1;34m	threadid 23255435965184 -> hwthread 56 - OK[0m[1;34m
[0m[1;34m	threadid 23255234638720 -> hwthread 57 - OK[0m[1;34m
[0m[1;34m	threadid 23255033312256 -> hwthread 58 - OK[0m[1;34m
[0m[1;34m	threadid 23254831985792 -> hwthread 59 - OK[0m[1;34m
[0m[1;34m	threadid 23254630659328 -> hwthread 60 - OK[0m[1;34m
[0m[1;34m	threadid 23254429332864 -> hwthread 61 - OK[0m[1;34m
[0m[1;34m	threadid 23254228006400 -> hwthread 62 - OK[0m[1;34m
[0m[1;34m	threadid 23254026679936 -> hwthread 63 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 23266412885760 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 23266406295296 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 111, m: 111)                                                               	 1.03085   	 700       	 6.50086   	 0         	 0.201402  	 32.2781   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 5550, cols: 111, reductionFactor: 37, colBlockingSize: 12)                 	 0.737159  	 600       	 114.325   	 0         	 4.09163   	 27.9412   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 111, n: 50, r: 111, r2: 111)          	 0.647146  	 600       	 126.8     	 0         	 9.23009   	 13.7376   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 111, r: 111, r2: 5550, leftOrthog: 0)      	 0.526363  	 600       	 155.896   	 0         	 17.0783   	 9.12829   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 5550, cols: 61, reductionFactor: 37, colBlockingSize: 12)                  	 0.306017  	 700       	 97.0325   	 0         	 6.26344   	 15.4919   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 5550, Xcols: 61, r: 61, streamingCols: 0)                   	 0.104392  	 700       	 138.479   	 0         	 36.4221   	 3.80205   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 111, reductionFactor: 37, colBlockingSize: 12)                 	 0.0963805 	 100       	 65.6461   	 0         	 2.40564   	 27.2884   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 111, Qr2: 61)      	 0.0852525 	 700       	 0         	 0         	 70.9159   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 111)                                                                	 0.0561711 	 100       	 3.45818   	 0         	 0.194406  	 17.7885   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 61, m: 61)                                                                  	 0.0466643 	 809       	 5.24675   	 0         	 1.55669   	 3.37046   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r: 111, r2: 111)           	 0.0460014 	 100       	 133.92    	 0         	 9.86615   	 13.5737   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 5550, m: 61)                                                                       	 0.0455185 	 700       	 0         	 0         	 83.3016   	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 111, r: 111, r2: 2500, leftOrthog: 0)      	 0.0431125 	 100       	 142.894   	 0         	 15.9052   	 8.98407   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.039926  	 100       	 2.19156   	 0         	 0.15128   	 14.4868   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 111, n: 50, r: 111, r2: 50)           	 0.0387935 	 100       	 158.802   	 0         	 18.5413   	 8.56481   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 61, k: 2500)   	 0.0375687 	 800       	 324.739   	 0         	 47.793    	 6.79469   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 5550, leftOrthog: 0)        	 0.0373201 	 100       	 74.3567   	 0         	 17.9528   	 4.14179   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 61, reductionFactor: 37, colBlockingSize: 12)                  	 0.0363841 	 101       	 53.0421   	 0         	 3.46927   	 15.2891   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 5550, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0316913 	 100       	 89.9301   	 0         	 7.06819   	 12.7232   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 2500, m: 61, k: 50)	 0.027634  	 800       	 441.485   	 0         	 64.9751   	 6.79469   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 61, n: 50, r2: 61)                                                                                         	 0.0241007 	 707       	 0         	 0         	 87.325    	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 5550, m: 61)                                                              	 0.0232407 	 700       	 0         	 0         	 163.152   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 61, m: 3050, k: 61) 	 0.0221788 	 700       	 716.391   	 0         	 94.8925   	 7.5495    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 3050, k: 61) 	 0.0193142 	 700       	 674.297   	 0         	 99.0443   	 6.80804   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 61, n: 50, r2: 61)                   	 0.0189436 	 700       	 0         	 0         	 200.16    	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 50)           	 0.0173568 	 8         	 5.76144   	 0         	 0.931049  	 6.18812   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 111, reductionFactor: 37, colBlockingSize: 12)                   	 0.0110284 	 100       	 11.474    	 0         	 1.29636   	 8.85093   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 61, r: 61, streamingCols: 0)                   	 0.0105763 	 101       	 88.8356   	 0         	 23.4433   	 3.78938   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00825858	 109       	 2.19972   	 0         	 0.797183  	 2.75937   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 50, Qr2: 61)       	 0.00551735	 100       	 0         	 0         	 80.4734   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 61)                                                                       	 0.00542991	 101       	 0         	 0         	 45.3857   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 3050, k: 50) 	 0.00477268	 100       	 319.527   	 0         	 51.5433   	 6.19919   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 0, n: 50, r2: 61)                    	 0.00464695	 100       	 0         	 0         	 52.5076   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 61)                                                              	 0.00445917	 101       	 0         	 0         	 55.2659   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.00369836	 101       	 7.01187   	 0         	 1.09238   	 6.41892   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.00285071	 8         	 36.027    	 0         	 2.86244   	 12.5861   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3050, cols: 61, reductionFactor: 37, colBlockingSize: 12)                  	 0.00283494	 7         	 57.5606   	 0         	 3.74864   	 15.3551   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 111, r: 50, r2: 50, leftOrthog: 0)         	 0.00223704	 100       	 24.8096   	 0         	 7.74239   	 3.20439   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 61)                                                                                         	 0.00209654	 101       	 0         	 0         	 117.546   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 61, r1_: 61, n: 50, r2: 61)           	 0.00206002	 7         	 77.1286   	 0         	 10.2164   	 7.5495    
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                   	 0.00179664	 8         	 27.8298   	 0         	 8.95006   	 3.10945   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 61, m: 61, fromLeft: 0)                	 0.00138088	 808       	 0         	 0         	 34.8365   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 50, r2: 50)              	 0.00104188	 100       	 23.9951   	 0         	 5.75883   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50, k: 50)     	 0.000952049	 100       	 26.2592   	 0         	 6.3022    	 4.16667   
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                   	 0.000904064	 100       	 0.553058  	 0         	 2.21223   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 61)   	 0.000838162	 100       	 36.3891   	 0         	 8.20844   	 4.43314   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 3050, m: 61)                                                                       	 0.000817891	 7         	 0         	 0         	 25.4772   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 61, m: 50, k: 61)   	 0.000815867	 100       	 45.6079   	 0         	 9.63      	 4.73602   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 61, n: 50, r2: 1)                                                                                          	 0.000806112	 201       	 0         	 0         	 12.168    	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000794946	 201       	 0         	 0         	 10.1139   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 3050, Xcols: 61, r: 61, streamingCols: 0)                   	 0.00076967	 7         	 103.217   	 0         	 27.2088   	 3.79353   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 50, k: 50)  	 0.000563685	 100       	 44.351    	 0         	 10.6442   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 61, n: 50, r2: 1)                    	 0.000526615	 100       	 0         	 0         	 16.8624   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 1, r1low: 0, n: 50, r2: 50)                     	 0.000523879	 100       	 0         	 0         	 7.63535   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                          	 0.000516749	 100       	 0         	 0         	 7.7407    	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                                	 0.000447486	 101       	 0         	 0         	 9.02822   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 1, Xr2: 50, Qr1: 1, Qr2: 0)          	 0.000428274	 100       	 0         	 0         	 9.33982   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                            	 0.00039876	 100       	 1.25389   	 0         	 15.0466   	 0.0833333 
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000390112	 101       	 0.64725   	 0         	 10.356    	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 61, n: 50, r2: 1)                                                                                 	 0.000355278	 101       	 0.867067  	 0         	 13.8731   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000326406	 100       	 0.765917  	 0         	 12.2547   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 50)                                                                       	 0.000255626	 8         	 0         	 0         	 62.5914   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 61, r1_: 50, n: 50, r2: 61)           	 0.000255297	 1         	 72.8759   	 0         	 10.7044   	 6.80804   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 3050, m: 61)                                                              	 0.000206724	 7         	 0         	 0         	 100.799   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                              	 0.000195063	 8         	 0         	 0         	 82.0248   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 61, reductionFactor: 37, colBlockingSize: 12)                    	 4.8521e-05	 1         	 7.87611   	 0         	 1.11638   	 7.05503   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 50, r: 50, streamingCols: 0)                     	 3.504e-05 	 1         	 3.56735   	 0         	 1.42694   	 2.5       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 61, r: 50, streamingCols: 10)                    	 2.9411e-05	 1         	 4.25011   	 0         	 1.70004   	 2.5       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 61, r1_: 61, n: 50, r2: 1)            	 1.2481e-05	 1         	 29.8133   	 0         	 6.29501   	 4.73602   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 1.017e-05 	 1         	 24.5821   	 0         	 5.89971   	 4.16667   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 0)                	 1.006e-05 	 9         	 0         	 0         	 35.7853   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 9.721e-06 	 1         	 0.51435   	 0         	 2.0574    	 0.25      
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 61, n: 50, r2: 1)                                                                                   	 9.461e-06 	 1         	 0.644752  	 0         	 2.57901   	 0.25      
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                         	 8.231e-06 	 2         	 0         	 0         	 9.71935   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 0, m: 3050, k: 50)  	 7.92e-06  	 100       	 0         	 0         	 15404     	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 61)                                                                	 4.85e-06  	 1         	 0         	 0         	 10.0619   	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 61, fromLeft: 0)                	 1.25e-06  	 1         	 0         	 0         	 39.04     	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 4.98549   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 4.98546   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                            	 4.14255   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                        	 4.14122   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 3.37377   	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 1.22809   	 1818      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 1.12694   	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.876949  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_leftOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                   	 0.842827  	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.732983  	 900       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.619774  	 918       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.609033  	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.352329  	 918       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.117599  	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.0911981 	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.0549229 	 918       
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                       	 0.0520301 	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.0479276 	 1800      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0385207 	 900       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 0.0365591 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 0.0365282 	 2         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                              	 0.028554  	 918       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0283151 	 1310      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0281977 	 900       
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                              	 0.0263373 	 20        
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.024641  	 1000      
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.0196947 	 18        
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00614028	 1818      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00357612	 6472      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00246637	 5273      
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.00139219	 818       
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.0010718 	 302       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000923246	 102       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.00039876	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: L, orthoY: L
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m43->44  [0m[1;34m44->45  [0m[1;34m45->46  [0m[1;34m46->47  [0m[1;34m47->48  [0m[1;34m48->49  [0m[1;34m49->50  [0m[1;34m50->51  [0m[1;34m51->52  [0m[1;34m52->53  [0m[1;34m53->54  [0m[1;34m54->55  [0m[1;34m55->56  [0m[1;34m56->57  [0m[1;34m57->58  [0m[1;34m58->59  [0m[1;34m59->60  [0m[1;34m60->61  [0m[1;34m61->62  [0m[1;34m62->63  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 22474144434048 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 22473953241088 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 22473751914624 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 22473550588160 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 22473349261696 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 22473147935232 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 22472946608768 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 22472745282304 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 22472543955840 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 22472342629376 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 22472141302912 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 22471939976448 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 22471738649984 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 22471537323520 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 22471335997056 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 22471134670592 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 22470933344128 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 22470732017664 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 22470530691200 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 22470329364736 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 22470128038272 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 22469926711808 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 22469725385344 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 22469524058880 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 22469322732416 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 22469121405952 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 22468920079488 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 22468718753024 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 22468517426560 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 22468316100096 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 22468114773632 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 22467913447168 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 22467712116608 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 22467510790144 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 22467309463680 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 22467108137216 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 22466906810752 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 22466705484288 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 22466504157824 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 22466302831360 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 22466101504896 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 22465900178432 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 22465698851968 -> hwthread 43 - OK[0m[1;34m
[0m[1;34m	threadid 22465497525504 -> hwthread 44 - OK[0m[1;34m
[0m[1;34m	threadid 22465296199040 -> hwthread 45 - OK[0m[1;34m
[0m[1;34m	threadid 22465094872576 -> hwthread 46 - OK[0m[1;34m
[0m[1;34m	threadid 22464893546112 -> hwthread 47 - OK[0m[1;34m
[0m[1;34m	threadid 22464692219648 -> hwthread 48 - OK[0m[1;34m
[0m[1;34m	threadid 22464490893184 -> hwthread 49 - OK[0m[1;34m
[0m[1;34m	threadid 22464289566720 -> hwthread 50 - OK[0m[1;34m
[0m[1;34m	threadid 22464088240256 -> hwthread 51 - OK[0m[1;34m
[0m[1;34m	threadid 22463886913792 -> hwthread 52 - OK[0m[1;34m
[0m[1;34m	threadid 22463685587328 -> hwthread 53 - OK[0m[1;34m
[0m[1;34m	threadid 22463484260864 -> hwthread 54 - OK[0m[1;34m
[0m[1;34m	threadid 22463282934400 -> hwthread 55 - OK[0m[1;34m
[0m[1;34m	threadid 22463081607936 -> hwthread 56 - OK[0m[1;34m
[0m[1;34m	threadid 22462880281472 -> hwthread 57 - OK[0m[1;34m
[0m[1;34m	threadid 22462678955008 -> hwthread 58 - OK[0m[1;34m
[0m[1;34m	threadid 22462477628544 -> hwthread 59 - OK[0m[1;34m
[0m[1;34m	threadid 22462276302080 -> hwthread 60 - OK[0m[1;34m
[0m[1;34m	threadid 22462074975616 -> hwthread 61 - OK[0m[1;34m
[0m[1;34m	threadid 22461873649152 -> hwthread 62 - OK[0m[1;34m
[0m[1;34m	threadid 22461672322688 -> hwthread 63 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 22474038773504 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 22474032183040 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 112, m: 112)                                                               	 1.02861   	 700       	 6.69265   	 0         	 0.205487  	 32.5697   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 5600, cols: 112, reductionFactor: 37, colBlockingSize: 12)                 	 0.745031  	 600       	 116.202   	 0         	 4.12167   	 28.1929   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 112, n: 50, r: 112, r2: 112)          	 0.676399  	 600       	 124.624   	 0         	 8.99074   	 13.8614   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 112, r: 112, r2: 5600, leftOrthog: 0)      	 0.591011  	 600       	 142.63    	 0         	 15.4855   	 9.21053   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 5600, cols: 62, reductionFactor: 37, colBlockingSize: 12)                  	 0.31418   	 700       	 98.5152   	 0         	 6.25708   	 15.7446   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 5600, Xcols: 62, r: 62, streamingCols: 0)                   	 0.106885  	 700       	 140.979   	 0         	 36.4823   	 3.8643    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 112, reductionFactor: 37, colBlockingSize: 12)                 	 0.100758  	 100       	 63.9307   	 0         	 2.32275   	 27.5237   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 112, Qr2: 62)      	 0.0840507 	 700       	 0         	 0         	 73.2492   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 112)                                                                	 0.0545849 	 100       	 3.59073   	 0         	 0.201521  	 17.8182   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r: 112, r2: 112)           	 0.0478959 	 100       	 130.951   	 0         	 9.56313   	 13.6933   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 62, m: 62)                                                                  	 0.0471694 	 809       	 5.45006   	 0         	 1.59079   	 3.42602   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 5600, leftOrthog: 0)        	 0.0467023 	 100       	 59.9543   	 0         	 14.4747   	 4.14201   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 112, r: 112, r2: 2500, leftOrthog: 0)      	 0.0448779 	 100       	 139.757   	 0         	 15.4212   	 9.06266   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 112, n: 50, r: 112, r2: 50)           	 0.0440835 	 100       	 142.275   	 0         	 16.5649   	 8.58896   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0408331 	 100       	 2.14287   	 0         	 0.147919  	 14.4868   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 62, reductionFactor: 37, colBlockingSize: 12)                  	 0.0382954 	 101       	 52.0607   	 0         	 3.35147   	 15.5337   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 62, k: 2500)   	 0.0368687 	 800       	 336.328   	 0         	 49.143    	 6.84387   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 5600, m: 62)                                                                       	 0.0361166 	 700       	 0         	 0         	 107.669   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 5600, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0323326 	 100       	 88.9405   	 0         	 6.98986   	 12.7242   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 2500, m: 62, k: 50)	 0.028646  	 800       	 432.87    	 0         	 63.2492   	 6.84387   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 62, n: 50, r2: 62)                                                                                         	 0.0258134 	 707       	 0         	 0         	 84.2263   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 5600, m: 62)                                                              	 0.0252973 	 700       	 0         	 0         	 153.718   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 62, m: 3100, k: 62) 	 0.0218873 	 700       	 762.22    	 0         	 99.3345   	 7.67327   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 3100, k: 62) 	 0.0203589 	 700       	 660.84    	 0         	 96.3547   	 6.85841   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 62, n: 50, r2: 62)                   	 0.0191564 	 700       	 0         	 0         	 202.994   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 112, reductionFactor: 37, colBlockingSize: 12)                   	 0.0110586 	 100       	 11.6498   	 0         	 1.31257   	 8.87554   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 62, r: 62, streamingCols: 0)                   	 0.0107866 	 101       	 89.983    	 0         	 23.3654   	 3.85112   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00827339	 109       	 2.19579   	 0         	 0.795756  	 2.75937   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 50, Qr2: 62)       	 0.00564819	 100       	 0         	 0         	 79.3175   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 50)           	 0.00531088	 8         	 18.8293   	 0         	 3.04281   	 6.18812   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 62)                                                                       	 0.00455944	 101       	 0         	 0         	 54.9366   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 3100, k: 50) 	 0.0045023 	 100       	 344.269   	 0         	 55.5272   	 6.2       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.00431761	 101       	 6.0062    	 0         	 0.935702  	 6.41892   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 62)                                                              	 0.00382255	 101       	 0         	 0         	 65.5269   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 0, n: 50, r2: 62)                    	 0.00381261	 100       	 0         	 0         	 65.0473   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0027613 	 8         	 37.1936   	 0         	 2.95513   	 12.5861   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3100, cols: 62, reductionFactor: 37, colBlockingSize: 12)                  	 0.00267995	 7         	 63.9334   	 0         	 4.09652   	 15.6068   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 62)                                                                                         	 0.00232726	 101       	 0         	 0         	 107.629   	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 112, r: 50, r2: 50, leftOrthog: 0)         	 0.00225973	 100       	 24.7817   	 0         	 7.71773   	 3.21101   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 62, r1_: 62, n: 50, r2: 62)           	 0.00214515	 7         	 77.7708   	 0         	 10.1353   	 7.67327   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                   	 0.00191059	 8         	 26.1699   	 0         	 8.41625   	 3.10945   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 62, m: 62, fromLeft: 0)                	 0.00118319	 808       	 0         	 0         	 42.0012   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 50, r2: 50)              	 0.00103728	 100       	 24.1015   	 0         	 5.78436   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50, k: 50)     	 0.000988256	 100       	 25.2971   	 0         	 6.0713    	 4.16667   
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                   	 0.000886869	 100       	 0.563781  	 0         	 2.25512   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 62)   	 0.000858723	 100       	 36.1001   	 0         	 8.10506   	 4.45402   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 3100, m: 62)                                                                       	 0.000851151	 7         	 0         	 0         	 25.2909   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 62, m: 50, k: 62)   	 0.000837025	 100       	 45.9246   	 0         	 9.59971   	 4.78395   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 3100, Xcols: 62, r: 62, streamingCols: 0)                   	 0.00079884	 7         	 104.42    	 0         	 27.0818   	 3.85572   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 62, n: 50, r2: 1)                                                                                          	 0.000787955	 201       	 0         	 0         	 12.6525   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.00078419	 201       	 0         	 0         	 10.2526   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 50, k: 50)  	 0.0005798 	 100       	 43.1183   	 0         	 10.3484   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 1, r1low: 0, n: 50, r2: 50)                     	 0.000559335	 100       	 0         	 0         	 7.15135   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 62, n: 50, r2: 1)                    	 0.000544783	 100       	 0         	 0         	 16.4469   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                          	 0.000517171	 100       	 0         	 0         	 7.73439   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                            	 0.000457151	 100       	 1.09373   	 0         	 13.1248   	 0.0833333 
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                                	 0.000453237	 101       	 0         	 0         	 8.91366   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 1, Xr2: 50, Qr1: 1, Qr2: 0)          	 0.000426764	 100       	 0         	 0         	 9.37286   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000411951	 101       	 0.612937  	 0         	 9.80699   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 62, n: 50, r2: 1)                                                                                 	 0.000362179	 101       	 0.86449   	 0         	 13.8318   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000336069	 100       	 0.743895  	 0         	 11.9023   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 50)                                                                       	 0.000269285	 8         	 0         	 0         	 59.4166   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 62, r1_: 50, n: 50, r2: 62)           	 0.000240476	 1         	 79.9248   	 0         	 11.6536   	 6.85841   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                              	 0.000216575	 8         	 0         	 0         	 73.8774   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 3100, m: 62)                                                              	 0.00010446	 7         	 0         	 0         	 206.073   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 62, reductionFactor: 37, colBlockingSize: 12)                    	 4.7631e-05	 1         	 8.28849   	 0         	 1.1663    	 7.10666   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 50, r: 50, streamingCols: 0)                     	 3.4981e-05	 1         	 3.57337   	 0         	 1.42935   	 2.5       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 62, r: 50, streamingCols: 9)                     	 2.89e-05  	 1         	 4.32526   	 0         	 1.7301    	 2.5       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 62, r1_: 62, n: 50, r2: 1)            	 1.262e-05 	 1         	 30.4596   	 0         	 6.36704   	 4.78395   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 0)                	 9.9e-06   	 9         	 0         	 0         	 36.3636   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 9.52e-06  	 1         	 26.2605   	 0         	 6.30252   	 4.16667   
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 9.451e-06 	 1         	 0.529045  	 0         	 2.11618   	 0.25      
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                         	 8.281e-06 	 2         	 0         	 0         	 9.66067   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 62, n: 50, r2: 1)                                                                                   	 8.161e-06 	 1         	 0.759711  	 0         	 3.03884   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 0, m: 3100, k: 50)  	 7.89e-06  	 100       	 0         	 0         	 15716.1   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 62)                                                                	 4.78e-06  	 1         	 0         	 0         	 10.3766   	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 62, fromLeft: 0)                	 1.28e-06  	 1         	 0         	 0         	 38.75     	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 5.19688   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 5.19685   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                            	 4.34792   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                        	 4.34659   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 3.54613   	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 1.25146   	 1818      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 1.12403   	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.889833  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_leftOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                   	 0.848847  	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.769416  	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.684851  	 900       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.624514  	 918       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.362858  	 918       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.120445  	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.0901256 	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.0554428 	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.0484522 	 1800      
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                       	 0.0418048 	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.037857  	 900       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.03023   	 1310      
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                              	 0.0298989 	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0292258 	 900       
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                              	 0.0267523 	 20        
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0240731 	 1000      
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 0.0239827 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 0.0239542 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.00771864	 18        
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00518176	 5273      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00419566	 6472      
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.0041099 	 1818      
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.00119437	 818       
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.0011102 	 302       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000904481	 102       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000457151	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: L, orthoY: L
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m43->44  [0m[1;34m44->45  [0m[1;34m45->46  [0m[1;34m46->47  [0m[1;34m47->48  [0m[1;34m48->49  [0m[1;34m49->50  [0m[1;34m50->51  [0m[1;34m51->52  [0m[1;34m52->53  [0m[1;34m53->54  [0m[1;34m54->55  [0m[1;34m55->56  [0m[1;34m56->57  [0m[1;34m57->58  [0m[1;34m58->59  [0m[1;34m59->60  [0m[1;34m60->61  [0m[1;34m61->62  [0m[1;34m62->63  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 22917802493824 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 22917609940992 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 22917408614528 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 22917207288064 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 22917005961600 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 22916804635136 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 22916603308672 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 22916401982208 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 22916200655744 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 22915999329280 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 22915798002816 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 22915596676352 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 22915395349888 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 22915194023424 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 22914992696960 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 22914791370496 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 22914590044032 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 22914388717568 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 22914187391104 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 22913986064640 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 22913784738176 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 22913583411712 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 22913382085248 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 22913180758784 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 22912979432320 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 22912778105856 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 22912576779392 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 22912375452928 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 22912174126464 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 22911972800000 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 22911771473536 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 22911570147072 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 22911368816512 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 22911167490048 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 22910966163584 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 22910764837120 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 22910563510656 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 22910362184192 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 22910160857728 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 22909959531264 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 22909758204800 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 22909556878336 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 22909355551872 -> hwthread 43 - OK[0m[1;34m
[0m[1;34m	threadid 22909154225408 -> hwthread 44 - OK[0m[1;34m
[0m[1;34m	threadid 22908952898944 -> hwthread 45 - OK[0m[1;34m
[0m[1;34m	threadid 22908751572480 -> hwthread 46 - OK[0m[1;34m
[0m[1;34m	threadid 22908550246016 -> hwthread 47 - OK[0m[1;34m
[0m[1;34m	threadid 22908348919552 -> hwthread 48 - OK[0m[1;34m
[0m[1;34m	threadid 22908147593088 -> hwthread 49 - OK[0m[1;34m
[0m[1;34m	threadid 22907946266624 -> hwthread 50 - OK[0m[1;34m
[0m[1;34m	threadid 22907744940160 -> hwthread 51 - OK[0m[1;34m
[0m[1;34m	threadid 22907543613696 -> hwthread 52 - OK[0m[1;34m
[0m[1;34m	threadid 22907342287232 -> hwthread 53 - OK[0m[1;34m
[0m[1;34m	threadid 22907140960768 -> hwthread 54 - OK[0m[1;34m
[0m[1;34m	threadid 22906939634304 -> hwthread 55 - OK[0m[1;34m
[0m[1;34m	threadid 22906738307840 -> hwthread 56 - OK[0m[1;34m
[0m[1;34m	threadid 22906536981376 -> hwthread 57 - OK[0m[1;34m
[0m[1;34m	threadid 22906335654912 -> hwthread 58 - OK[0m[1;34m
[0m[1;34m	threadid 22906134328448 -> hwthread 59 - OK[0m[1;34m
[0m[1;34m	threadid 22905933001984 -> hwthread 60 - OK[0m[1;34m
[0m[1;34m	threadid 22905731675520 -> hwthread 61 - OK[0m[1;34m
[0m[1;34m	threadid 22905530349056 -> hwthread 62 - OK[0m[1;34m
[0m[1;34m	threadid 22905329022592 -> hwthread 63 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 22917696833280 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 22917690242816 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 113, m: 113)                                                               	 1.06223   	 700       	 6.65599   	 0         	 0.202547  	 32.8614   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 5650, cols: 113, reductionFactor: 37, colBlockingSize: 12)                 	 0.746145  	 600       	 119.164   	 0         	 4.18933   	 28.4446   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 113, n: 50, r: 113, r2: 113)          	 0.67311   	 600       	 128.618   	 0         	 9.19673   	 13.9851   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 113, r: 113, r2: 5650, leftOrthog: 0)      	 0.560734  	 600       	 154.394   	 0         	 16.6144   	 9.29276   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 5650, cols: 63, reductionFactor: 37, colBlockingSize: 12)                  	 0.325157  	 700       	 99.1622   	 0         	 6.19868   	 15.9973   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 5650, Xcols: 63, r: 63, streamingCols: 0)                   	 0.10693   	 700       	 146.801   	 0         	 37.3867   	 3.92655   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 113, reductionFactor: 37, colBlockingSize: 12)                 	 0.0995066 	 100       	 65.8957   	 0         	 2.37386   	 27.7588   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 113, Qr2: 63)      	 0.0909536 	 700       	 0         	 0         	 68.9213   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 113)                                                                	 0.0593828 	 100       	 3.33009   	 0         	 0.186586  	 17.8475   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 63, m: 63)                                                                  	 0.0501683 	 809       	 5.37625   	 0         	 1.5442    	 3.48158   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r: 113, r2: 113)           	 0.046653  	 100       	 136.851   	 0         	 9.90752   	 13.8128   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 5650, m: 63)                                                                       	 0.0439744 	 700       	 0         	 0         	 90.6582   	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 113, r: 113, r2: 2500, leftOrthog: 0)      	 0.0428095 	 100       	 149.137   	 0         	 16.3148   	 9.14121   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 113, n: 50, r: 113, r2: 50)           	 0.041421  	 100       	 154.137   	 0         	 17.8962   	 8.6128    
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0396356 	 100       	 2.20761   	 0         	 0.152388  	 14.4868   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 63, k: 2500)   	 0.0380959 	 800       	 330.745   	 0         	 47.9884   	 6.89218   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 63, reductionFactor: 37, colBlockingSize: 12)                  	 0.037912  	 101       	 54.2973   	 0         	 3.44131   	 15.7781   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 5650, leftOrthog: 0)        	 0.0375775 	 100       	 75.1779   	 0         	 18.1491   	 4.14223   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 5650, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0312848 	 100       	 92.7401   	 0         	 7.28789   	 12.7252   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 2500, m: 63, k: 50)	 0.0287256 	 800       	 438.632   	 0         	 63.6421   	 6.89218   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 63, n: 50, r2: 63)                                                                                         	 0.0253132 	 707       	 0         	 0         	 88.6837   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 63, m: 3150, k: 63) 	 0.0234056 	 700       	 747.824   	 0         	 95.9113   	 7.79703   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 5650, m: 63)                                                              	 0.023175  	 700       	 0         	 0         	 172.023   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 63, n: 50, r2: 63)                   	 0.0209594 	 700       	 0         	 0         	 190.207   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 3150, k: 63) 	 0.0206467 	 700       	 672.82    	 0         	 97.3987   	 6.90789   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 63, r: 63, streamingCols: 0)                   	 0.0110998 	 101       	 90.2872   	 0         	 23.0745   	 3.91285   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 113, reductionFactor: 37, colBlockingSize: 12)                   	 0.0110455 	 100       	 11.8728   	 0         	 1.33405   	 8.89985   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 50, Qr2: 63)       	 0.0101523 	 100       	 0         	 0         	 44.5219   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00822542	 109       	 2.20859   	 0         	 0.800397  	 2.75937   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 63)                                                                       	 0.00592537	 101       	 0         	 0         	 42.9543   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 3150, k: 50) 	 0.00500653	 100       	 314.589   	 0         	 50.7338   	 6.20079   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 50)           	 0.00496978	 8         	 20.1216   	 0         	 3.25166   	 6.18812   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 0, n: 50, r2: 63)                    	 0.00492519	 100       	 0         	 0         	 51.1655   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 63)                                                              	 0.00469747	 101       	 0         	 0         	 54.1824   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.00382729	 101       	 6.77566   	 0         	 1.05558   	 6.41892   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3150, cols: 63, reductionFactor: 37, colBlockingSize: 12)                  	 0.00276485	 7         	 65.0175   	 0         	 4.09985   	 15.8585   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 113, r: 50, r2: 50, leftOrthog: 0)         	 0.00270113	 100       	 20.9172   	 0         	 6.50099   	 3.21754   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.00261005	 8         	 39.349    	 0         	 3.12638   	 12.5861   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 63, r1_: 63, n: 50, r2: 63)           	 0.00219293	 7         	 79.817    	 0         	 10.2368   	 7.79703   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 63)                                                                                         	 0.00216855	 101       	 0         	 0         	 117.369   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                   	 0.00198602	 8         	 25.176    	 0         	 8.09659   	 3.10945   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 63, m: 63, fromLeft: 0)                	 0.00140344	 808       	 0         	 0         	 36.5611   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 50, r2: 50)              	 0.00103711	 100       	 24.1054   	 0         	 5.7853    	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50, k: 50)     	 0.000986215	 100       	 25.3494   	 0         	 6.08387   	 4.16667   
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                   	 0.000881268	 100       	 0.567364  	 0         	 2.26946   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 63)   	 0.000854709	 100       	 36.8546   	 0         	 8.23672   	 4.47443   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 63, m: 50, k: 63)   	 0.000850861	 100       	 46.6469   	 0         	 9.65516   	 4.83129   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 3150, Xcols: 63, r: 63, streamingCols: 0)                   	 0.000829401	 7         	 105.518   	 0         	 26.9321   	 3.91791   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 3150, m: 63)                                                                       	 0.000811021	 7         	 0         	 0         	 27.4055   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 63, n: 50, r2: 1)                                                                                          	 0.000810045	 201       	 0         	 0         	 12.506    	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000782088	 201       	 0         	 0         	 10.2802   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 50, k: 50)  	 0.000569932	 100       	 43.8649   	 0         	 10.5276   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 63, n: 50, r2: 1)                    	 0.000535777	 100       	 0         	 0         	 16.8727   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                          	 0.000504652	 100       	 0         	 0         	 7.92625   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 1, r1low: 0, n: 50, r2: 50)                     	 0.000498645	 100       	 0         	 0         	 8.02174   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 1, Xr2: 50, Qr1: 1, Qr2: 0)          	 0.00045255	 100       	 0         	 0         	 8.8388    	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                                	 0.000448402	 101       	 0         	 0         	 9.00977   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                            	 0.000435723	 100       	 1.14752   	 0         	 13.7702   	 0.0833333 
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000407495	 101       	 0.61964   	 0         	 9.91423   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 63, n: 50, r2: 1)                                                                                 	 0.000357536	 101       	 0.88984   	 0         	 14.2374   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000325424	 100       	 0.768229  	 0         	 12.2917   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 50)                                                                       	 0.000294427	 8         	 0         	 0         	 54.3428   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 63, r1_: 50, n: 50, r2: 63)           	 0.000254927	 1         	 77.8458   	 0         	 11.2691   	 6.90789   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 3150, m: 63)                                                              	 0.000222036	 7         	 0         	 0         	 100.103   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                              	 0.000193594	 8         	 0         	 0         	 82.6472   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 63, reductionFactor: 37, colBlockingSize: 12)                    	 4.9382e-05	 1         	 8.25457   	 0         	 1.15329   	 7.15738   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 50, r: 50, streamingCols: 0)                     	 3.5251e-05	 1         	 3.546     	 0         	 1.4184    	 2.5       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 63, r: 50, streamingCols: 8)                     	 2.9821e-05	 1         	 4.19168   	 0         	 1.67667   	 2.5       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 63, r1_: 63, n: 50, r2: 1)            	 1.251e-05 	 1         	 31.7266   	 0         	 6.56691   	 4.83129   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 0)                	 1.003e-05 	 9         	 0         	 0         	 35.8923   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 9.981e-06 	 1         	 25.0476   	 0         	 6.01142   	 4.16667   
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 9.89e-06  	 1         	 0.505561  	 0         	 2.02224   	 0.25      
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 63, n: 50, r2: 1)                                                                                   	 9.03e-06  	 1         	 0.697674  	 0         	 2.7907    	 0.25      
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                         	 8.17e-06  	 2         	 0         	 0         	 9.79192   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 0, m: 3150, k: 50)  	 7.93e-06  	 100       	 0         	 0         	 15889     	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 63)                                                                	 4.46e-06  	 1         	 0         	 0         	 11.3004   	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 63, fromLeft: 0)                	 1.23e-06  	 1         	 0         	 0         	 40.9756   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 5.1503    	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 5.15026   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                            	 4.25894   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                        	 4.25764   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 3.46297   	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 1.2603    	 1818      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 1.16125   	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_leftOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                   	 0.891243  	 100       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.888679  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.762221  	 900       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.646608  	 918       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.643822  	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.372885  	 918       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.12091   	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.101558  	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.0583937 	 918       
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                       	 0.0510134 	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.0507723 	 1800      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0390821 	 900       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0295785 	 1310      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0292956 	 900       
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                              	 0.0287409 	 918       
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                              	 0.0269196 	 20        
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.026919  	 1000      
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 0.024388  	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 0.0243581 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.00744012	 18        
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.0053296 	 1818      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00465665	 5273      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00362313	 6472      
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.0014147 	 818       
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00109046	 302       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000900188	 102       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000435723	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: L, orthoY: L
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m43->44  [0m[1;34m44->45  [0m[1;34m45->46  [0m[1;34m46->47  [0m[1;34m47->48  [0m[1;34m48->49  [0m[1;34m49->50  [0m[1;34m50->51  [0m[1;34m51->52  [0m[1;34m52->53  [0m[1;34m53->54  [0m[1;34m54->55  [0m[1;34m55->56  [0m[1;34m56->57  [0m[1;34m57->58  [0m[1;34m58->59  [0m[1;34m59->60  [0m[1;34m60->61  [0m[1;34m61->62  [0m[1;34m62->63  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 22872123488128 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 22871908804608 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 22871707478144 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 22871506151680 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 22871304825216 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 22871103498752 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 22870902172288 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 22870700845824 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 22870499519360 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 22870298192896 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 22870096866432 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 22869895539968 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 22869694213504 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 22869492887040 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 22869291560576 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 22869090234112 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 22868888907648 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 22868687581184 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 22868486254720 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 22868284928256 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 22868083601792 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 22867882275328 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 22867680948864 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 22867479622400 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 22867278295936 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 22867076969472 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 22866875643008 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 22866674316544 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 22866472990080 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 22866271663616 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 22866070337152 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 22865869010688 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 22865667680128 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 22865466353664 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 22865265027200 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 22865063700736 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 22864862374272 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 22864661047808 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 22864459721344 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 22864258394880 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 22864057068416 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 22863855741952 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 22863654415488 -> hwthread 43 - OK[0m[1;34m
[0m[1;34m	threadid 22863453089024 -> hwthread 44 - OK[0m[1;34m
[0m[1;34m	threadid 22863251762560 -> hwthread 45 - OK[0m[1;34m
[0m[1;34m	threadid 22863050436096 -> hwthread 46 - OK[0m[1;34m
[0m[1;34m	threadid 22862849109632 -> hwthread 47 - OK[0m[1;34m
[0m[1;34m	threadid 22862647783168 -> hwthread 48 - OK[0m[1;34m
[0m[1;34m	threadid 22862446456704 -> hwthread 49 - OK[0m[1;34m
[0m[1;34m	threadid 22862245130240 -> hwthread 50 - OK[0m[1;34m
[0m[1;34m	threadid 22862043803776 -> hwthread 51 - OK[0m[1;34m
[0m[1;34m	threadid 22861842477312 -> hwthread 52 - OK[0m[1;34m
[0m[1;34m	threadid 22861641150848 -> hwthread 53 - OK[0m[1;34m
[0m[1;34m	threadid 22861439824384 -> hwthread 54 - OK[0m[1;34m
[0m[1;34m	threadid 22861238497920 -> hwthread 55 - OK[0m[1;34m
[0m[1;34m	threadid 22861037171456 -> hwthread 56 - OK[0m[1;34m
[0m[1;34m	threadid 22860835844992 -> hwthread 57 - OK[0m[1;34m
[0m[1;34m	threadid 22860634518528 -> hwthread 58 - OK[0m[1;34m
[0m[1;34m	threadid 22860433192064 -> hwthread 59 - OK[0m[1;34m
[0m[1;34m	threadid 22860231865600 -> hwthread 60 - OK[0m[1;34m
[0m[1;34m	threadid 22860030539136 -> hwthread 61 - OK[0m[1;34m
[0m[1;34m	threadid 22859829212672 -> hwthread 62 - OK[0m[1;34m
[0m[1;34m	threadid 22859627886208 -> hwthread 63 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 22872017827584 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 22872011237120 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 114, m: 114)                                                               	 1.08305   	 700       	 6.70287   	 0         	 0.202179  	 33.1531   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 5700, cols: 114, reductionFactor: 37, colBlockingSize: 12)                 	 0.766443  	 600       	 119.115   	 0         	 4.15089   	 28.6963   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 114, n: 50, r: 114, r2: 114)          	 0.677188  	 600       	 131.267   	 0         	 9.30385   	 14.1089   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 114, r: 114, r2: 5700, leftOrthog: 0)      	 0.563964  	 600       	 157.621   	 0         	 16.8129   	 9.375     
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 5700, cols: 64, reductionFactor: 37, colBlockingSize: 12)                  	 0.332064  	 700       	 101.094   	 0         	 6.22115   	 16.25     
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 5700, Xcols: 64, r: 64, streamingCols: 0)                   	 0.107302  	 700       	 152.309   	 0         	 38.1841   	 3.9888    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 114, reductionFactor: 37, colBlockingSize: 12)                 	 0.101401  	 100       	 65.8143   	 0         	 2.35103   	 27.9938   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 114, Qr2: 64)      	 0.0925548 	 700       	 0         	 0         	 68.9511   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 114)                                                                	 0.0556285 	 100       	 3.58629   	 0         	 0.200617  	 17.8763   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 5700, m: 64)                                                                       	 0.0546768 	 700       	 0         	 0         	 74.7257   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r: 114, r2: 114)           	 0.050303  	 100       	 129.177   	 0         	 9.27175   	 13.9323   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 64, m: 64)                                                                  	 0.0490718 	 809       	 5.76227   	 0         	 1.62909   	 3.53712   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 114, r: 114, r2: 2500, leftOrthog: 0)      	 0.0456965 	 100       	 142.199   	 0         	 15.4234   	 9.21972   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 5700, leftOrthog: 0)        	 0.0409527 	 100       	 69.5925   	 0         	 16.7999   	 4.14244   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 114, n: 50, r: 114, r2: 50)           	 0.0405956 	 100       	 160.067   	 0         	 18.534    	 8.63636   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0405033 	 100       	 2.16032   	 0         	 0.149124  	 14.4868   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 64, reductionFactor: 37, colBlockingSize: 12)                  	 0.038143  	 101       	 55.6953   	 0         	 3.47612   	 16.0223   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 64, k: 2500)   	 0.0376604 	 800       	 339.879   	 0         	 48.9766   	 6.93963   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 5700, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0319645 	 100       	 91.5713   	 0         	 7.19549   	 12.7262   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 2500, m: 64, k: 50)	 0.0289992 	 800       	 441.392   	 0         	 63.6046   	 6.93963   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 64, n: 50, r2: 64)                                                                                         	 0.0271916 	 707       	 0         	 0         	 85.1989   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 64, m: 3200, k: 64) 	 0.0244683 	 700       	 749.954   	 0         	 94.6816   	 7.92079   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 5700, m: 64)                                                              	 0.0243043 	 700       	 0         	 0         	 168.108   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 64, n: 50, r2: 64)                   	 0.0231983 	 700       	 0         	 0         	 176.124   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 3200, k: 64) 	 0.0209492 	 700       	 684.322   	 0         	 98.3713   	 6.95652   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 114, reductionFactor: 37, colBlockingSize: 12)                   	 0.0112581 	 100       	 11.8557   	 0         	 1.32854   	 8.92386   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 64, r: 64, streamingCols: 0)                   	 0.0112008 	 101       	 92.3359   	 0         	 23.2317   	 3.97456   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00821806	 109       	 2.21057   	 0         	 0.801114  	 2.75937   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 64)                                                                       	 0.0064852 	 101       	 0         	 0         	 39.8692   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 50, Qr2: 64)       	 0.00606603	 100       	 0         	 0         	 75.1727   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 0, n: 50, r2: 64)                    	 0.00542799	 100       	 0         	 0         	 47.163    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 3200, k: 50) 	 0.00523372	 100       	 305.71    	 0         	 49.2958   	 6.20155   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 64)                                                              	 0.00494957	 101       	 0         	 0         	 52.2388   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 50)           	 0.00492348	 8         	 20.3109   	 0         	 3.28223   	 6.18812   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.00378247	 101       	 6.85595   	 0         	 1.06809   	 6.41892   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3200, cols: 64, reductionFactor: 37, colBlockingSize: 12)                  	 0.00286038	 7         	 65.8866   	 0         	 4.08974   	 16.1102   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.00261413	 8         	 39.2876   	 0         	 3.1215    	 12.5861   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 64, r1_: 64, n: 50, r2: 64)           	 0.00229454	 7         	 79.9729   	 0         	 10.0966   	 7.92079   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 114, r: 50, r2: 50, leftOrthog: 0)         	 0.00222699	 100       	 25.5951   	 0         	 7.93897   	 3.22398   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 64)                                                                                         	 0.00220674	 101       	 0         	 0         	 117.169   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                   	 0.00191052	 8         	 26.1709   	 0         	 8.41657   	 3.10945   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 50, r2: 50)              	 0.00107843	 100       	 23.1819   	 0         	 5.56366   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50, k: 50)     	 0.000992131	 100       	 25.1983   	 0         	 6.04759   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 64, n: 50, r2: 1)                                                                                          	 0.000985835	 201       	 0         	 0         	 10.4391   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.00096373	 201       	 0         	 0         	 8.34259   	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 64, m: 64, fromLeft: 0)                	 0.000953896	 808       	 0         	 0         	 55.5124   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 3200, m: 64)                                                                       	 0.000881251	 7         	 0         	 0         	 26.0285   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 3200, Xcols: 64, r: 64, streamingCols: 0)                   	 0.000852581	 7         	 107.615   	 0         	 27.0382   	 3.9801    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 64, m: 50, k: 64)   	 0.000849837	 100       	 48.1975   	 0         	 9.88048   	 4.87805   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 64)   	 0.000811955	 100       	 39.4111   	 0         	 8.76896   	 4.49438   
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                   	 0.000747336	 100       	 0.669043  	 0         	 2.67617   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 50, k: 50)  	 0.000587676	 100       	 42.5404   	 0         	 10.2097   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 1, r1low: 0, n: 50, r2: 50)                     	 0.00052941	 100       	 0         	 0         	 7.55558   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 64, n: 50, r2: 1)                    	 0.000526621	 100       	 0         	 0         	 17.318    	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                          	 0.00050126	 100       	 0         	 0         	 7.97989   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 1, Xr2: 50, Qr1: 1, Qr2: 0)          	 0.000452591	 100       	 0         	 0         	 8.838     	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                            	 0.000442808	 100       	 1.12916   	 0         	 13.5499   	 0.0833333 
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                                	 0.000430077	 101       	 0         	 0         	 9.39367   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000385054	 101       	 0.655752  	 0         	 10.492    	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 64, n: 50, r2: 1)                                                                                 	 0.000362833	 101       	 0.890768  	 0         	 14.2523   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000327444	 100       	 0.763489  	 0         	 12.2158   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 50)                                                                       	 0.000273567	 8         	 0         	 0         	 58.4866   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 64, r1_: 50, n: 50, r2: 64)           	 0.000263796	 1         	 77.6357   	 0         	 11.1601   	 6.95652   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 3200, m: 64)                                                              	 0.000250304	 7         	 0         	 0         	 91.639    	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                              	 0.000229677	 8         	 0         	 0         	 69.663    	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 64, reductionFactor: 37, colBlockingSize: 12)                    	 4.8961e-05	 1         	 8.59195   	 0         	 1.19213   	 7.20721   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 50, r: 50, streamingCols: 0)                     	 3.1951e-05	 1         	 3.91224   	 0         	 1.5649    	 2.5       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 64, r: 50, streamingCols: 13)                    	 3.01e-05  	 1         	 4.15282   	 0         	 1.66113   	 2.5       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 64, r1_: 64, n: 50, r2: 1)            	 1.3681e-05	 1         	 29.9393   	 0         	 6.13756   	 4.87805   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 1.048e-05 	 1         	 23.855    	 0         	 5.72519   	 4.16667   
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 1.018e-05 	 1         	 0.491159  	 0         	 1.96464   	 0.25      
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 64, n: 50, r2: 1)                                                                                   	 9.91e-06  	 1         	 0.645812  	 0         	 2.58325   	 0.25      
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 0)                	 9.85e-06  	 9         	 0         	 0         	 36.5482   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                         	 8.4e-06   	 2         	 0         	 0         	 9.52381   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 0, m: 3200, k: 50)  	 8.041e-06 	 100       	 0         	 0         	 15918.4   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 64)                                                                	 4.551e-06 	 1         	 0         	 0         	 11.2503   	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 64, fromLeft: 0)                	 1.27e-06  	 1         	 0         	 0         	 40.315    	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 5.2548    	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 5.25475   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                            	 4.34658   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                        	 4.3454    	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 3.53289   	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 1.29058   	 1818      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 1.17919   	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.911634  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_leftOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                   	 0.9081    	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.769165  	 900       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.665582  	 918       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.65284   	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.380029  	 918       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.121328  	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.0990734 	 900       
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                       	 0.0623252 	 818       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.0572898 	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.052321  	 1800      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0386526 	 900       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0318492 	 1310      
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                              	 0.0301685 	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0296823 	 1000      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0295868 	 900       
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                              	 0.0274995 	 20        
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 0.0245012 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 0.0244701 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.00750597	 18        
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00649996	 1818      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00362382	 5273      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00360526	 6472      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00107533	 302       
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.000965016	 818       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000767426	 102       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000442808	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: L, orthoY: L
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m43->44  [0m[1;34m44->45  [0m[1;34m45->46  [0m[1;34m46->47  [0m[1;34m47->48  [0m[1;34m48->49  [0m[1;34m49->50  [0m[1;34m50->51  [0m[1;34m51->52  [0m[1;34m52->53  [0m[1;34m53->54  [0m[1;34m54->55  [0m[1;34m55->56  [0m[1;34m56->57  [0m[1;34m57->58  [0m[1;34m58->59  [0m[1;34m59->60  [0m[1;34m60->61  [0m[1;34m61->62  [0m[1;34m62->63  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 23319275546496 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 23319055165440 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 23318853838976 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 23318652512512 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 23318451186048 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 23318249859584 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 23318048533120 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 23317847206656 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 23317645880192 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 23317444553728 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 23317243227264 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 23317041900800 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 23316840574336 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 23316639247872 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 23316437921408 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 23316236594944 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 23316035268480 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 23315833942016 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 23315632615552 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 23315431289088 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 23315229962624 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 23315028636160 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 23314827309696 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 23314625983232 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 23314424656768 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 23314223330304 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 23314022003840 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 23313820677376 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 23313619350912 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 23313418024448 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 23313216697984 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 23313015371520 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 23312814040960 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 23312612714496 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 23312411388032 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 23312210061568 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 23312008735104 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 23311807408640 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 23311606082176 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 23311404755712 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 23311203429248 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 23311002102784 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 23310800776320 -> hwthread 43 - OK[0m[1;34m
[0m[1;34m	threadid 23310599449856 -> hwthread 44 - OK[0m[1;34m
[0m[1;34m	threadid 23310398123392 -> hwthread 45 - OK[0m[1;34m
[0m[1;34m	threadid 23310196796928 -> hwthread 46 - OK[0m[1;34m
[0m[1;34m	threadid 23309995470464 -> hwthread 47 - OK[0m[1;34m
[0m[1;34m	threadid 23309794144000 -> hwthread 48 - OK[0m[1;34m
[0m[1;34m	threadid 23309592817536 -> hwthread 49 - OK[0m[1;34m
[0m[1;34m	threadid 23309391491072 -> hwthread 50 - OK[0m[1;34m
[0m[1;34m	threadid 23309190164608 -> hwthread 51 - OK[0m[1;34m
[0m[1;34m	threadid 23308988838144 -> hwthread 52 - OK[0m[1;34m
[0m[1;34m	threadid 23308787511680 -> hwthread 53 - OK[0m[1;34m
[0m[1;34m	threadid 23308586185216 -> hwthread 54 - OK[0m[1;34m
[0m[1;34m	threadid 23308384858752 -> hwthread 55 - OK[0m[1;34m
[0m[1;34m	threadid 23308183532288 -> hwthread 56 - OK[0m[1;34m
[0m[1;34m	threadid 23307982205824 -> hwthread 57 - OK[0m[1;34m
[0m[1;34m	threadid 23307780879360 -> hwthread 58 - OK[0m[1;34m
[0m[1;34m	threadid 23307579552896 -> hwthread 59 - OK[0m[1;34m
[0m[1;34m	threadid 23307378226432 -> hwthread 60 - OK[0m[1;34m
[0m[1;34m	threadid 23307176899968 -> hwthread 61 - OK[0m[1;34m
[0m[1;34m	threadid 23306975573504 -> hwthread 62 - OK[0m[1;34m
[0m[1;34m	threadid 23306774247040 -> hwthread 63 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 23319169885952 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 23319163295488 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 115, m: 115)                                                               	 1.11778   	 700       	 6.66707   	 0         	 0.199346  	 33.4447   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 5750, cols: 115, reductionFactor: 37, colBlockingSize: 12)                 	 0.779741  	 600       	 120.192   	 0         	 4.15199   	 28.9481   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 115, n: 50, r: 115, r2: 115)          	 0.688646  	 600       	 132.51    	 0         	 9.31027   	 14.2327   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 115, r: 115, r2: 5750, leftOrthog: 0)      	 0.573722  	 600       	 159.053   	 0         	 16.8182   	 9.45724   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 5750, cols: 65, reductionFactor: 37, colBlockingSize: 12)                  	 0.34038   	 700       	 102.622   	 0         	 6.21853   	 16.5026   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 5750, Xcols: 65, r: 65, streamingCols: 0)                   	 0.108121  	 700       	 157.283   	 0         	 38.8253   	 4.05105   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 115, reductionFactor: 37, colBlockingSize: 12)                 	 0.102911  	 100       	 65.9912   	 0         	 2.33775   	 28.2285   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 115, Qr2: 65)      	 0.0923149 	 700       	 0         	 0         	 70.3679   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 65, m: 3250, k: 65) 	 0.0647354 	 700       	 296.959   	 0         	 36.9143   	 8.04455   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 115)                                                                	 0.0558374 	 100       	 3.60422   	 0         	 0.201299  	 17.9048   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 65, m: 65)                                                                  	 0.0533591 	 809       	 5.5516    	 0         	 1.54525   	 3.59268   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r: 115, r2: 115)           	 0.0487135 	 100       	 135.743   	 0         	 9.66015   	 14.0518   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 115, r: 115, r2: 2500, leftOrthog: 0)      	 0.0461072 	 100       	 143.416   	 0         	 15.4241   	 9.29819   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 5750, m: 65)                                                                       	 0.0447269 	 700       	 0         	 0         	 93.5903   	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 5750, leftOrthog: 0)        	 0.0413147 	 100       	 69.5879   	 0         	 16.7979   	 4.14265   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0408885 	 100       	 2.13997   	 0         	 0.147719  	 14.4868   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 115, n: 50, r: 115, r2: 50)           	 0.0408689 	 100       	 161.798   	 0         	 18.6841   	 8.65964   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 65, reductionFactor: 37, colBlockingSize: 12)                  	 0.0397946 	 101       	 55.065    	 0         	 3.38523   	 16.2663   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 65, k: 2500)   	 0.0380653 	 800       	 341.518   	 0         	 48.8844   	 6.98624   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 5750, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0320232 	 100       	 92.205    	 0         	 7.24474   	 12.7272   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 65, n: 50, r2: 65)                   	 0.0311487 	 700       	 0         	 0         	 134.388   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 2500, m: 65, k: 50)	 0.0292833 	 800       	 443.939   	 0         	 63.5447   	 6.98624   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 65, n: 50, r2: 65)                                                                                         	 0.026602  	 707       	 0         	 0         	 89.8302   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 5750, m: 65)                                                              	 0.0247099 	 700       	 0         	 0         	 169.406   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 3250, k: 65) 	 0.0217662 	 700       	 679.378   	 0         	 96.9942   	 7.00431   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 65, r: 65, streamingCols: 0)                   	 0.0117662 	 101       	 90.6677   	 0         	 22.4633   	 4.03626   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 115, reductionFactor: 37, colBlockingSize: 12)                   	 0.0116233 	 100       	 11.6855   	 0         	 1.30599   	 8.94758   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00810087	 109       	 2.24255   	 0         	 0.812702  	 2.75937   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 65)                                                                       	 0.00665551	 101       	 0         	 0         	 39.456    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 50, Qr2: 65)       	 0.00589172	 100       	 0         	 0         	 78.0757   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 65)                                                              	 0.00556544	 101       	 0         	 0         	 47.1841   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 3250, k: 50) 	 0.00544476	 100       	 298.452   	 0         	 48.1196   	 6.20229   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 0, n: 50, r2: 65)                    	 0.00535045	 100       	 0         	 0         	 48.594    	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 50)           	 0.00486222	 8         	 20.5667   	 0         	 3.32358   	 6.18812   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.00387487	 101       	 6.69247   	 0         	 1.04262   	 6.41892   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3250, cols: 65, reductionFactor: 37, colBlockingSize: 12)                  	 0.00289138	 7         	 68.2833   	 0         	 4.1733    	 16.362    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.00272001	 8         	 37.7582   	 0         	 2.99999   	 12.5861   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 65)                                                                                         	 0.00240346	 101       	 0         	 0         	 109.259   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 65, r1_: 65, n: 50, r2: 65)           	 0.00238683	 7         	 80.541    	 0         	 10.0119   	 8.04455   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 115, r: 50, r2: 50, leftOrthog: 0)         	 0.00230936	 100       	 24.8986   	 0         	 7.70775   	 3.23034   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                   	 0.00189017	 8         	 26.4527   	 0         	 8.50718   	 3.10945   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 65, m: 65, fromLeft: 0)                	 0.00148335	 808       	 0         	 0         	 36.8225   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 50, r2: 50)              	 0.00105846	 100       	 23.6193   	 0         	 5.66864   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50, k: 50)     	 0.00098761	 100       	 25.3136   	 0         	 6.07527   	 4.16667   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 3250, m: 65)                                                                       	 0.000935625	 7         	 0         	 0         	 25.2879   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 3250, Xcols: 65, r: 65, streamingCols: 0)                   	 0.000881512	 7         	 109.039   	 0         	 26.9744   	 4.04229   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 65, m: 50, k: 65)   	 0.000869551	 100       	 48.5883   	 0         	 9.86716   	 4.92424   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 65)   	 0.000831777	 100       	 39.073    	 0         	 8.65617   	 4.51389   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 65, n: 50, r2: 1)                                                                                          	 0.00080986	 201       	 0         	 0         	 12.9059   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000801113	 201       	 0         	 0         	 10.036    	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                   	 0.000795369	 100       	 0.628639  	 0         	 2.51456   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 50, k: 50)  	 0.000586683	 100       	 42.6124   	 0         	 10.227    	 4.16667   
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 65, n: 50, r2: 1)                                                                                 	 0.000548027	 101       	 0.598967  	 0         	 9.58347   	 0.0625    
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                          	 0.000524905	 100       	 0         	 0         	 7.62043   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 65, n: 50, r2: 1)                    	 0.000518715	 100       	 0         	 0         	 17.7361   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 1, r1low: 0, n: 50, r2: 50)                     	 0.000501385	 100       	 0         	 0         	 7.9779    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 1, Xr2: 50, Qr1: 1, Qr2: 0)          	 0.000451674	 100       	 0         	 0         	 8.85594   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                                	 0.000440802	 101       	 0         	 0         	 9.16511   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                            	 0.000420351	 100       	 1.18948   	 0         	 14.2738   	 0.0833333 
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.00039818	 101       	 0.634135  	 0         	 10.1462   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 3250, m: 65)                                                              	 0.000344511	 7         	 0         	 0         	 68.6771   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000340839	 100       	 0.733484  	 0         	 11.7357   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 65, r1_: 50, n: 50, r2: 65)           	 0.000263587	 1         	 80.1443   	 0         	 11.4421   	 7.00431   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 50)                                                                       	 0.000260698	 8         	 0         	 0         	 61.3737   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                              	 0.000181974	 8         	 0         	 0         	 87.9246   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 65, reductionFactor: 37, colBlockingSize: 12)                    	 5.3771e-05	 1         	 8.06976   	 0         	 1.11212   	 7.25617   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 50, r: 50, streamingCols: 0)                     	 3.2871e-05	 1         	 3.80274   	 0         	 1.5211    	 2.5       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 65, r: 50, streamingCols: 15)                    	 2.7141e-05	 1         	 4.60558   	 0         	 1.84223   	 2.5       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 65, r1_: 65, n: 50, r2: 1)            	 1.3531e-05	 1         	 31.2246   	 0         	 6.34099   	 4.92424   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 0)                	 9.96e-06  	 9         	 0         	 0         	 36.1446   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 9.65e-06  	 1         	 25.9067   	 0         	 6.21762   	 4.16667   
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 8.85e-06  	 1         	 0.564972  	 0         	 2.25989   	 0.25      
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 65, n: 50, r2: 1)                                                                                   	 8.681e-06 	 1         	 0.748762  	 0         	 2.99505   	 0.25      
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                         	 8.54e-06  	 2         	 0         	 0         	 9.36768   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 0, m: 3250, k: 50)  	 8.44e-06  	 100       	 0         	 0         	 15402.8   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 65)                                                                	 4.62e-06  	 1         	 0         	 0         	 11.2554   	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 65, fromLeft: 0)                	 1.33e-06  	 1         	 0         	 0         	 39.0977   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 5.39156   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 5.3915    	 100       
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                            	 4.42209   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                        	 4.42086   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 3.60526   	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 1.31601   	 1818      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 1.2145    	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_leftOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                   	 0.969345  	 100       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.926959  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.779287  	 900       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.673394  	 918       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.663453  	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.390204  	 918       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.122719  	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.0986583 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.0936562 	 1800      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.06146   	 918       
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                       	 0.0525873 	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0390529 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0375192 	 1000      
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                              	 0.0312473 	 918       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0311413 	 1310      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.02987   	 900       
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                              	 0.0281874 	 20        
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 0.0253007 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 0.0252719 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.00753582	 18        
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00547201	 1818      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00503021	 5273      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00354369	 6472      
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.00149464	 818       
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00128705	 302       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.0008129 	 102       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000420351	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: L, orthoY: L
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m43->44  [0m[1;34m44->45  [0m[1;34m45->46  [0m[1;34m46->47  [0m[1;34m47->48  [0m[1;34m48->49  [0m[1;34m49->50  [0m[1;34m50->51  [0m[1;34m51->52  [0m[1;34m52->53  [0m[1;34m53->54  [0m[1;34m54->55  [0m[1;34m55->56  [0m[1;34m56->57  [0m[1;34m57->58  [0m[1;34m58->59  [0m[1;34m59->60  [0m[1;34m60->61  [0m[1;34m61->62  [0m[1;34m62->63  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 23366061606784 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 23365830043648 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 23365628717184 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 23365427390720 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 23365226064256 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 23365024737792 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 23364823411328 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 23364622084864 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 23364420758400 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 23364219431936 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 23364018105472 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 23363816779008 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 23363615452544 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 23363414126080 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 23363212799616 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 23363011473152 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 23362810146688 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 23362608820224 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 23362407493760 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 23362206167296 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 23362004840832 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 23361803514368 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 23361602187904 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 23361400861440 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 23361199534976 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 23360998208512 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 23360796882048 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 23360595555584 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 23360394229120 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 23360192902656 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 23359991576192 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 23359790249728 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 23359588919168 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 23359387592704 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 23359186266240 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 23358984939776 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 23358783613312 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 23358582286848 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 23358380960384 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 23358179633920 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 23357978307456 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 23357776980992 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 23357575654528 -> hwthread 43 - OK[0m[1;34m
[0m[1;34m	threadid 23357374328064 -> hwthread 44 - OK[0m[1;34m
[0m[1;34m	threadid 23357173001600 -> hwthread 45 - OK[0m[1;34m
[0m[1;34m	threadid 23356971675136 -> hwthread 46 - OK[0m[1;34m
[0m[1;34m	threadid 23356770348672 -> hwthread 47 - OK[0m[1;34m
[0m[1;34m	threadid 23356569022208 -> hwthread 48 - OK[0m[1;34m
[0m[1;34m	threadid 23356367695744 -> hwthread 49 - OK[0m[1;34m
[0m[1;34m	threadid 23356166369280 -> hwthread 50 - OK[0m[1;34m
[0m[1;34m	threadid 23355965042816 -> hwthread 51 - OK[0m[1;34m
[0m[1;34m	threadid 23355763716352 -> hwthread 52 - OK[0m[1;34m
[0m[1;34m	threadid 23355562389888 -> hwthread 53 - OK[0m[1;34m
[0m[1;34m	threadid 23355361063424 -> hwthread 54 - OK[0m[1;34m
[0m[1;34m	threadid 23355159736960 -> hwthread 55 - OK[0m[1;34m
[0m[1;34m	threadid 23354958410496 -> hwthread 56 - OK[0m[1;34m
[0m[1;34m	threadid 23354757084032 -> hwthread 57 - OK[0m[1;34m
[0m[1;34m	threadid 23354555757568 -> hwthread 58 - OK[0m[1;34m
[0m[1;34m	threadid 23354354431104 -> hwthread 59 - OK[0m[1;34m
[0m[1;34m	threadid 23354153104640 -> hwthread 60 - OK[0m[1;34m
[0m[1;34m	threadid 23353951778176 -> hwthread 61 - OK[0m[1;34m
[0m[1;34m	threadid 23353750451712 -> hwthread 62 - OK[0m[1;34m
[0m[1;34m	threadid 23353549125248 -> hwthread 63 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 23365955946240 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 23365949355776 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 116, m: 116)                                                               	 1.10509   	 700       	 6.92103   	 0         	 0.20515   	 33.7364   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 5800, cols: 116, reductionFactor: 37, colBlockingSize: 12)                 	 0.786204  	 600       	 122.341   	 0         	 4.18979   	 29.1998   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 116, n: 50, r: 116, r2: 116)          	 0.709718  	 600       	 131.959   	 0         	 9.19163   	 14.3564   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 116, r: 116, r2: 5800, leftOrthog: 0)      	 0.578229  	 600       	 161.967   	 0         	 16.9786   	 9.53947   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 5800, cols: 66, reductionFactor: 37, colBlockingSize: 12)                  	 0.342533  	 700       	 106.053   	 0         	 6.32952   	 16.7553   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 5800, Xcols: 66, r: 66, streamingCols: 0)                   	 0.124548  	 700       	 141.996   	 0         	 34.5212   	 4.1133    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 116, reductionFactor: 37, colBlockingSize: 12)                 	 0.107797  	 100       	 64.1007   	 0         	 2.25206   	 28.4631   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 116, Qr2: 66)      	 0.0934454 	 700       	 0         	 0         	 70.7511   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 66, m: 3300, k: 66) 	 0.0647157 	 700       	 310.971   	 0         	 38.0704   	 8.16832   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 116)                                                                	 0.0568621 	 100       	 3.57004   	 0         	 0.199078  	 17.9329   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 66, m: 66)                                                                  	 0.0557691 	 809       	 5.56064   	 0         	 1.5242    	 3.64824   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r: 116, r2: 116)           	 0.0480339 	 100       	 140.068   	 0         	 9.88395   	 14.1712   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 5800, m: 66)                                                                       	 0.0459272 	 700       	 0         	 0         	 93.3511   	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 116, r: 116, r2: 2500, leftOrthog: 0)      	 0.0450732 	 100       	 149.268   	 0         	 15.9192   	 9.37662   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 116, n: 50, r: 116, r2: 50)           	 0.0444726 	 100       	 151.284   	 0         	 17.4238   	 8.68263   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 5800, leftOrthog: 0)        	 0.0436236 	 100       	 66.4777   	 0         	 16.0463   	 4.14286   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0400763 	 100       	 2.18333   	 0         	 0.150712  	 14.4868   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 66, reductionFactor: 37, colBlockingSize: 12)                  	 0.0399675 	 101       	 56.5268   	 0         	 3.42377   	 16.5101   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 66, k: 2500)   	 0.0397624 	 800       	 331.972   	 0         	 47.2084   	 7.03205   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 5800, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0325375 	 100       	 91.5369   	 0         	 7.19171   	 12.7281   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 2500, m: 66, k: 50)	 0.0296826 	 800       	 444.705   	 0         	 63.2397   	 7.03205   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 66, n: 50, r2: 66)                   	 0.0282097 	 700       	 0         	 0         	 151.982   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 66, n: 50, r2: 66)                                                                                         	 0.0278613 	 707       	 0         	 0         	 88.4291   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 5800, m: 66)                                                              	 0.0252469 	 700       	 0         	 0         	 169.817   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 3300, k: 66) 	 0.0225589 	 700       	 675.83    	 0         	 95.845    	 7.05128   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 116, reductionFactor: 37, colBlockingSize: 12)                   	 0.0115379 	 100       	 11.9777   	 0         	 1.33515   	 8.97102   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 66, r: 66, streamingCols: 0)                   	 0.0115069 	 101       	 95.5856   	 0         	 23.3252   	 4.09795   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00815208	 109       	 2.22846   	 0         	 0.807597  	 2.75937   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 66)                                                                       	 0.00598401	 101       	 0         	 0         	 44.5587   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 50, Qr2: 66)       	 0.00591227	 100       	 0         	 0         	 78.4809   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 50)           	 0.00497006	 8         	 20.1205   	 0         	 3.25147   	 6.18812   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 0, n: 50, r2: 66)                    	 0.0047864 	 100       	 0         	 0         	 55.1562   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 66)                                                              	 0.00467393	 101       	 0         	 0         	 57.0484   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.00379656	 101       	 6.83051   	 0         	 1.06412   	 6.41892   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 3300, k: 50) 	 0.00333201	 100       	 495.197   	 0         	 79.8317   	 6.20301   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3300, cols: 66, reductionFactor: 37, colBlockingSize: 12)                  	 0.00296635	 7         	 69.6771   	 0         	 4.19396   	 16.6137   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.00273937	 8         	 37.4914   	 0         	 2.97879   	 12.5861   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 66, r1_: 66, n: 50, r2: 66)           	 0.00244058	 7         	 82.4588   	 0         	 10.095    	 8.16832   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 66)                                                                                         	 0.002208  	 101       	 0         	 0         	 120.761   	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 116, r: 50, r2: 50, leftOrthog: 0)         	 0.00210659	 100       	 27.5326   	 0         	 8.50662   	 3.23661   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                   	 0.00181309	 8         	 27.5773   	 0         	 8.86886   	 3.10945   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 66, m: 66, fromLeft: 0)                	 0.0012828 	 808       	 0         	 0         	 43.8996   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 50, r2: 50)              	 0.00110181	 100       	 22.69     	 0         	 5.4456    	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50, k: 50)     	 0.00099318	 100       	 25.1717   	 0         	 6.0412    	 4.16667   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 3300, m: 66)                                                                       	 0.000966504	 7         	 0         	 0         	 25.239    	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 3300, Xcols: 66, r: 66, streamingCols: 0)                   	 0.000901195	 7         	 111.656   	 0         	 27.2034   	 4.10448   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 66, m: 50, k: 66)   	 0.000897779	 100       	 48.5197   	 0         	 9.76276   	 4.96988   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 66)   	 0.000841092	 100       	 39.2347   	 0         	 8.65541   	 4.53297   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 66, n: 50, r2: 1)                                                                                          	 0.000837949	 201       	 0         	 0         	 12.6652   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.00083129	 201       	 0         	 0         	 9.67172   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 1, Xr2: 50, Qr1: 1, Qr2: 0)          	 0.000826901	 100       	 0         	 0         	 4.83734   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                   	 0.000823124	 100       	 0.607442  	 0         	 2.42977   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 50, k: 50)  	 0.000592173	 100       	 42.2174   	 0         	 10.1322   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 1, r1low: 0, n: 50, r2: 50)                     	 0.000539602	 100       	 0         	 0         	 7.41287   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                          	 0.00052484	 100       	 0         	 0         	 7.62137   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 66, n: 50, r2: 1)                    	 0.000521084	 100       	 0         	 0         	 17.809    	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                                	 0.000465378	 101       	 0         	 0         	 8.68112   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                            	 0.000417255	 100       	 1.19831   	 0         	 14.3797   	 0.0833333 
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000379498	 101       	 0.665353  	 0         	 10.6456   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 66, n: 50, r2: 1)                                                                                 	 0.000360781	 101       	 0.923829  	 0         	 14.7813   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000350561	 100       	 0.713143  	 0         	 11.4103   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 3300, m: 66)                                                              	 0.000287838	 7         	 0         	 0         	 84.7477   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 50)                                                                       	 0.000266225	 8         	 0         	 0         	 60.0995   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                              	 0.000260838	 8         	 0         	 0         	 61.3408   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 66, r1_: 50, n: 50, r2: 66)           	 0.000254367	 1         	 85.6243   	 0         	 12.1431   	 7.05128   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 66, reductionFactor: 37, colBlockingSize: 12)                    	 7.4552e-05	 1         	 6.00082   	 0         	 0.821547  	 7.30429   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 50, r: 50, streamingCols: 0)                     	 3.3191e-05	 1         	 3.76608   	 0         	 1.50643   	 2.5       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 66, r: 50, streamingCols: 14)                    	 2.9331e-05	 1         	 4.2617    	 0         	 1.70468   	 2.5       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 66, r1_: 66, n: 50, r2: 1)            	 1.2671e-05	 1         	 34.3777   	 0         	 6.91721   	 4.96988   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 9.96e-06  	 1         	 25.1004   	 0         	 6.0241    	 4.16667   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 0)                	 9.89e-06  	 9         	 0         	 0         	 36.4004   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                         	 8.62e-06  	 2         	 0         	 0         	 9.28074   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 8.511e-06 	 1         	 0.587475  	 0         	 2.3499    	 0.25      
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 66, n: 50, r2: 1)                                                                                   	 8.301e-06 	 1         	 0.795085  	 0         	 3.18034   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 0, m: 3300, k: 50)  	 7.77e-06  	 100       	 0         	 0         	 16988.4   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 66)                                                                	 4.65e-06  	 1         	 0         	 0         	 11.3548   	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 66, fromLeft: 0)                	 1.45e-06  	 1         	 0         	 0         	 36.4138   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 5.43679   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 5.43674   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                            	 4.45028   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                        	 4.44899   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 3.61287   	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 1.33015   	 1818      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 1.20203   	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_leftOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                   	 0.986391  	 100       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.938752  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.803327  	 900       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.695287  	 918       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.669032  	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.392634  	 918       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.138832  	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.100185  	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.0923533 	 1800      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.0639212 	 918       
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                       	 0.0531526 	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0407556 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0340568 	 1000      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0322634 	 1310      
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                              	 0.0309395 	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0302748 	 900       
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                              	 0.0283565 	 20        
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 0.0249305 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 0.0249017 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.00768764	 18        
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00507735	 1818      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00375305	 6472      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00347106	 5273      
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.00129414	 818       
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00109084	 302       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000839936	 102       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000417255	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: L, orthoY: L
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m43->44  [0m[1;34m44->45  [0m[1;34m45->46  [0m[1;34m46->47  [0m[1;34m47->48  [0m[1;34m48->49  [0m[1;34m49->50  [0m[1;34m50->51  [0m[1;34m51->52  [0m[1;34m52->53  [0m[1;34m53->54  [0m[1;34m54->55  [0m[1;34m55->56  [0m[1;34m56->57  [0m[1;34m57->58  [0m[1;34m58->59  [0m[1;34m59->60  [0m[1;34m60->61  [0m[1;34m61->62  [0m[1;34m62->63  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 22492011587456 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 22491804198912 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 22491602872448 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 22491401545984 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 22491200219520 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 22490998893056 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 22490797566592 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 22490596240128 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 22490394913664 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 22490193587200 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 22489992260736 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 22489790934272 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 22489589607808 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 22489388281344 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 22489186954880 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 22488985628416 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 22488784301952 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 22488582975488 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 22488381649024 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 22488180322560 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 22487978996096 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 22487777669632 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 22487576343168 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 22487375016704 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 22487173690240 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 22486972363776 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 22486771037312 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 22486569710848 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 22486368384384 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 22486167057920 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 22485965731456 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 22485764404992 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 22485563074432 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 22485361747968 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 22485160421504 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 22484959095040 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 22484757768576 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 22484556442112 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 22484355115648 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 22484153789184 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 22483952462720 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 22483751136256 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 22483549809792 -> hwthread 43 - OK[0m[1;34m
[0m[1;34m	threadid 22483348483328 -> hwthread 44 - OK[0m[1;34m
[0m[1;34m	threadid 22483147156864 -> hwthread 45 - OK[0m[1;34m
[0m[1;34m	threadid 22482945830400 -> hwthread 46 - OK[0m[1;34m
[0m[1;34m	threadid 22482744503936 -> hwthread 47 - OK[0m[1;34m
[0m[1;34m	threadid 22482543177472 -> hwthread 48 - OK[0m[1;34m
[0m[1;34m	threadid 22482341851008 -> hwthread 49 - OK[0m[1;34m
[0m[1;34m	threadid 22482140524544 -> hwthread 50 - OK[0m[1;34m
[0m[1;34m	threadid 22481939198080 -> hwthread 51 - OK[0m[1;34m
[0m[1;34m	threadid 22481737871616 -> hwthread 52 - OK[0m[1;34m
[0m[1;34m	threadid 22481536545152 -> hwthread 53 - OK[0m[1;34m
[0m[1;34m	threadid 22481335218688 -> hwthread 54 - OK[0m[1;34m
[0m[1;34m	threadid 22481133892224 -> hwthread 55 - OK[0m[1;34m
[0m[1;34m	threadid 22480932565760 -> hwthread 56 - OK[0m[1;34m
[0m[1;34m	threadid 22480731239296 -> hwthread 57 - OK[0m[1;34m
[0m[1;34m	threadid 22480529912832 -> hwthread 58 - OK[0m[1;34m
[0m[1;34m	threadid 22480328586368 -> hwthread 59 - OK[0m[1;34m
[0m[1;34m	threadid 22480127259904 -> hwthread 60 - OK[0m[1;34m
[0m[1;34m	threadid 22479925933440 -> hwthread 61 - OK[0m[1;34m
[0m[1;34m	threadid 22479724606976 -> hwthread 62 - OK[0m[1;34m
[0m[1;34m	threadid 22479523280512 -> hwthread 63 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 22491905926912 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 22491899336448 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 117, m: 117)                                                               	 1.15468   	 700       	 6.79659   	 0         	 0.199735  	 34.0281   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 5850, cols: 117, reductionFactor: 37, colBlockingSize: 12)                 	 0.786779  	 600       	 125.441   	 0         	 4.25922   	 29.4515   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 117, n: 50, r: 117, r2: 117)          	 0.707343  	 600       	 135.856   	 0         	 9.38219   	 14.4802   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 117, r: 117, r2: 5850, leftOrthog: 0)      	 0.580502  	 600       	 165.541   	 0         	 17.2049   	 9.62171   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 5850, cols: 67, reductionFactor: 37, colBlockingSize: 12)                  	 0.346494  	 700       	 108.973   	 0         	 6.4072    	 17.0079   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 5850, Xcols: 67, r: 67, streamingCols: 0)                   	 0.125885  	 700       	 146.025   	 0         	 34.9716   	 4.17554   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 117, reductionFactor: 37, colBlockingSize: 12)                 	 0.108155  	 100       	 64.9947   	 0         	 2.26482   	 28.6975   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 117, Qr2: 67)      	 0.0982448 	 700       	 0         	 0         	 68.4803   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 67, m: 3350, k: 67) 	 0.066533  	 700       	 316.436   	 0         	 38.1612   	 8.29208   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 67, m: 67)                                                                  	 0.0569936 	 809       	 5.69225   	 0         	 1.53688   	 3.70378   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 117)                                                                	 0.0564637 	 100       	 3.62623   	 0         	 0.2019    	 17.9605   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r: 117, r2: 117)           	 0.0482194 	 100       	 141.945   	 0         	 9.93276   	 14.2906   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 117, r: 117, r2: 2500, leftOrthog: 0)      	 0.0476182 	 100       	 143.737   	 0         	 15.2022   	 9.455     
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 5850, m: 67)                                                                       	 0.0451996 	 700       	 0         	 0         	 97.1213   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 67, k: 2500)   	 0.0413822 	 800       	 323.811   	 0         	 45.755    	 7.07707   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 117, n: 50, r: 117, r2: 50)           	 0.0413045 	 100       	 165.708   	 0         	 19.0352   	 8.70536   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.04094   	 100       	 2.13727   	 0         	 0.147533  	 14.4868   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 67, reductionFactor: 37, colBlockingSize: 12)                  	 0.0407385 	 101       	 57.1502   	 0         	 3.4112    	 16.7537   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 5850, leftOrthog: 0)        	 0.0394838 	 100       	 74.0809   	 0         	 17.8807   	 4.14306   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 5850, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.032148  	 100       	 93.4445   	 0         	 7.34104   	 12.729    
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 67, n: 50, r2: 67)                   	 0.031531  	 700       	 0         	 0         	 139.223   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 2500, m: 67, k: 50)	 0.0292506 	 800       	 458.11    	 0         	 64.7317   	 7.07707   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 67, n: 50, r2: 67)                                                                                         	 0.0279882 	 707       	 0         	 0         	 90.7159   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 5850, m: 67)                                                              	 0.0263325 	 700       	 0         	 0         	 166.708   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 3350, k: 67) 	 0.023927  	 700       	 656.643   	 0         	 92.518    	 7.09746   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 67, r: 67, streamingCols: 0)                   	 0.0120349 	 101       	 94.1825   	 0         	 22.642    	 4.15963   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 117, reductionFactor: 37, colBlockingSize: 12)                   	 0.0114975 	 100       	 12.2279   	 0         	 1.35953   	 8.99417   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00820197	 109       	 2.21491   	 0         	 0.802685  	 2.75937   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 50, Qr2: 67)       	 0.0068504 	 100       	 0         	 0         	 68.3171   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 67)                                                                       	 0.00632396	 101       	 0         	 0         	 42.8023   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 3350, k: 50) 	 0.0053014 	 100       	 315.954   	 0         	 50.9299   	 6.2037    
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 67)                                                              	 0.00513613	 101       	 0         	 0         	 52.7012   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 0, n: 50, r2: 67)                    	 0.00510953	 100       	 0         	 0         	 52.451    	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 50)           	 0.00484606	 8         	 20.6353   	 0         	 3.33467   	 6.18812   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.00381418	 101       	 6.79896   	 0         	 1.05921   	 6.41892   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3350, cols: 67, reductionFactor: 37, colBlockingSize: 12)                  	 0.00300482	 7         	 71.9592   	 0         	 4.26668   	 16.8654   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 67, r1_: 67, n: 50, r2: 67)           	 0.00279415	 7         	 75.3481   	 0         	 9.08676   	 8.29208   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.00269061	 8         	 38.1708   	 0         	 3.03277   	 12.5861   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 67)                                                                                         	 0.00242514	 101       	 0         	 0         	 111.614   	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 117, r: 50, r2: 50, leftOrthog: 0)         	 0.00220147	 100       	 26.5731   	 0         	 8.19451   	 3.24279   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                   	 0.00173044	 8         	 28.8943   	 0         	 9.29241   	 3.10945   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 67, m: 67, fromLeft: 0)                	 0.00155038	 808       	 0         	 0         	 37.432    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50, k: 50)     	 0.00120628	 100       	 20.7249   	 0         	 4.97398   	 4.16667   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 50, r2: 50)              	 0.0010887 	 100       	 22.9632   	 0         	 5.51117   	 4.16667   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 3350, Xcols: 67, r: 67, streamingCols: 0)                   	 0.000955775	 7         	 110.138   	 0         	 26.4331   	 4.16667   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 3350, m: 67)                                                                       	 0.000951294	 7         	 0         	 0         	 26.4255   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 67, m: 50, k: 67)   	 0.000862813	 100       	 52.0275   	 0         	 10.3744   	 5.01497   
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                   	 0.000862406	 100       	 0.579773  	 0         	 2.31909   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 67, n: 50, r2: 1)                                                                                          	 0.000852887	 201       	 0         	 0         	 12.6319   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 67)   	 0.000838518	 100       	 39.9514   	 0         	 8.77739   	 4.55163   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.0008083 	 201       	 0         	 0         	 9.9468    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 50, k: 50)  	 0.000583096	 100       	 42.8746   	 0         	 10.2899   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 67, n: 50, r2: 1)                    	 0.000543585	 100       	 0         	 0         	 17.219    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 1, r1low: 0, n: 50, r2: 50)                     	 0.000537246	 100       	 0         	 0         	 7.44538   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                          	 0.000517673	 100       	 0         	 0         	 7.72689   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                                	 0.000476971	 101       	 0         	 0         	 8.47012   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                            	 0.00046483	 100       	 1.07566   	 0         	 12.9079   	 0.0833333 
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 1, Xr2: 50, Qr1: 1, Qr2: 0)          	 0.000436657	 100       	 0         	 0         	 9.16051   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.00038653	 101       	 0.653248  	 0         	 10.452    	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 67, n: 50, r2: 1)                                                                                 	 0.000359378	 101       	 0.941488  	 0         	 15.0638   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 3350, m: 67)                                                              	 0.000347797	 7         	 0         	 0         	 72.2789   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000331587	 100       	 0.75395   	 0         	 12.0632   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                              	 0.000261226	 8         	 0         	 0         	 61.2496   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 67, r1_: 50, n: 50, r2: 67)           	 0.000258037	 1         	 86.9836   	 0         	 12.2556   	 7.09746   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 50)                                                                       	 0.000219707	 8         	 0         	 0         	 72.8243   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 67, reductionFactor: 37, colBlockingSize: 12)                    	 5.6281e-05	 1         	 8.19162   	 0         	 1.11427   	 7.35158   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 50, r: 50, streamingCols: 0)                     	 3.2261e-05	 1         	 3.87465   	 0         	 1.54986   	 2.5       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 67, r: 50, streamingCols: 13)                    	 2.9311e-05	 1         	 4.26461   	 0         	 1.70584   	 2.5       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 67, r1_: 67, n: 50, r2: 1)            	 1.385e-05 	 1         	 32.4116   	 0         	 6.46296   	 5.01497   
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 1.077e-05 	 1         	 0.464253  	 0         	 1.85701   	 0.25      
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 1.009e-05 	 1         	 24.777    	 0         	 5.94648   	 4.16667   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 0)                	 1.004e-05 	 9         	 0         	 0         	 35.8566   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 67, n: 50, r2: 1)                                                                                   	 9.97e-06  	 1         	 0.672016  	 0         	 2.68806   	 0.25      
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                         	 8.27e-06  	 2         	 0         	 0         	 9.67352   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 0, m: 3350, k: 50)  	 8.061e-06 	 100       	 0         	 0         	 16623.2   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 67)                                                                	 4.621e-06 	 1         	 0         	 0         	 11.5992   	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 67, fromLeft: 0)                	 1.37e-06  	 1         	 0         	 0         	 39.1241   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 5.54348   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 5.54345   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                            	 4.53265   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                        	 4.53137   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 3.68985   	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 1.33538   	 1818      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 1.25209   	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_leftOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                   	 1.01072   	 100       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.939245  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.797956  	 900       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.70383   	 918       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.669805  	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.397363  	 918       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.140668  	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.105532  	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.0974708 	 1800      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.0651956 	 918       
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                       	 0.0527028 	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0425885 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0377214 	 1000      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0325922 	 1310      
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                              	 0.0325592 	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0298337 	 900       
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                              	 0.0294227 	 20        
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 0.0255905 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 0.0255582 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.00792219	 18        
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00607378	 1818      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00361702	 6472      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00349607	 5273      
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.00156179	 818       
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.0010775 	 302       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000883146	 102       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.00046483	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: L, orthoY: L
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m43->44  [0m[1;34m44->45  [0m[1;34m45->46  [0m[1;34m46->47  [0m[1;34m47->48  [0m[1;34m48->49  [0m[1;34m49->50  [0m[1;34m50->51  [0m[1;34m51->52  [0m[1;34m52->53  [0m[1;34m53->54  [0m[1;34m54->55  [0m[1;34m55->56  [0m[1;34m56->57  [0m[1;34m57->58  [0m[1;34m58->59  [0m[1;34m59->60  [0m[1;34m60->61  [0m[1;34m61->62  [0m[1;34m62->63  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 22601260185472 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 22601057429504 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 22600856103040 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 22600654776576 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 22600453450112 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 22600252123648 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 22600050797184 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 22599849470720 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 22599648144256 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 22599446817792 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 22599245491328 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 22599044164864 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 22598842838400 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 22598641511936 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 22598440185472 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 22598238859008 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 22598037532544 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 22597836206080 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 22597634879616 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 22597433553152 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 22597232226688 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 22597030900224 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 22596829573760 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 22596628247296 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 22596426920832 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 22596225594368 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 22596024267904 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 22595822941440 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 22595621614976 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 22595420288512 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 22595218962048 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 22595017635584 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 22594816305024 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 22594614978560 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 22594413652096 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 22594212325632 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 22594010999168 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 22593809672704 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 22593608346240 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 22593407019776 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 22593205693312 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 22593004366848 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 22592803040384 -> hwthread 43 - OK[0m[1;34m
[0m[1;34m	threadid 22592601713920 -> hwthread 44 - OK[0m[1;34m
[0m[1;34m	threadid 22592400387456 -> hwthread 45 - OK[0m[1;34m
[0m[1;34m	threadid 22592199060992 -> hwthread 46 - OK[0m[1;34m
[0m[1;34m	threadid 22591997734528 -> hwthread 47 - OK[0m[1;34m
[0m[1;34m	threadid 22591796408064 -> hwthread 48 - OK[0m[1;34m
[0m[1;34m	threadid 22591595081600 -> hwthread 49 - OK[0m[1;34m
[0m[1;34m	threadid 22591393755136 -> hwthread 50 - OK[0m[1;34m
[0m[1;34m	threadid 22591192428672 -> hwthread 51 - OK[0m[1;34m
[0m[1;34m	threadid 22590991102208 -> hwthread 52 - OK[0m[1;34m
[0m[1;34m	threadid 22590789775744 -> hwthread 53 - OK[0m[1;34m
[0m[1;34m	threadid 22590588449280 -> hwthread 54 - OK[0m[1;34m
[0m[1;34m	threadid 22590387122816 -> hwthread 55 - OK[0m[1;34m
[0m[1;34m	threadid 22590185796352 -> hwthread 56 - OK[0m[1;34m
[0m[1;34m	threadid 22589984469888 -> hwthread 57 - OK[0m[1;34m
[0m[1;34m	threadid 22589783143424 -> hwthread 58 - OK[0m[1;34m
[0m[1;34m	threadid 22589581816960 -> hwthread 59 - OK[0m[1;34m
[0m[1;34m	threadid 22589380490496 -> hwthread 60 - OK[0m[1;34m
[0m[1;34m	threadid 22589179164032 -> hwthread 61 - OK[0m[1;34m
[0m[1;34m	threadid 22588977837568 -> hwthread 62 - OK[0m[1;34m
[0m[1;34m	threadid 22588776511104 -> hwthread 63 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 22601154524928 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 22601147934464 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 118, m: 118)                                                               	 1.13196   	 700       	 7.11229   	 0         	 0.207236  	 34.3197   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 5900, cols: 118, reductionFactor: 37, colBlockingSize: 12)                 	 0.806188  	 600       	 125.586   	 0         	 4.22804   	 29.7032   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 118, n: 50, r: 118, r2: 118)          	 0.729997  	 600       	 135.044   	 0         	 9.2471    	 14.604    
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 118, r: 118, r2: 5900, leftOrthog: 0)      	 0.609553  	 600       	 161.728   	 0         	 16.6662   	 9.70395   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 5900, cols: 68, reductionFactor: 37, colBlockingSize: 12)                  	 0.355028  	 700       	 110.489   	 0         	 6.40123   	 17.2605   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 5900, Xcols: 68, r: 68, streamingCols: 0)                   	 0.129881  	 700       	 147.035   	 0         	 34.6963   	 4.23779   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 118, reductionFactor: 37, colBlockingSize: 12)                 	 0.107552  	 100       	 66.4807   	 0         	 2.29785   	 28.9317   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 118, Qr2: 68)      	 0.0964983 	 700       	 0         	 0         	 70.9385   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 68, m: 3400, k: 68) 	 0.0674723 	 700       	 326.211   	 0         	 38.7616   	 8.41584   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 118)                                                                	 0.0574064 	 100       	 3.59716   	 0         	 0.199978  	 17.9878   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 68, m: 68)                                                                  	 0.0564668 	 809       	 6.00648   	 0         	 1.59775   	 3.75934   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r: 118, r2: 118)           	 0.0527063 	 100       	 132.091   	 0         	 9.16664   	 14.4099   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 118, r: 118, r2: 2500, leftOrthog: 0)      	 0.0459991 	 100       	 151.351   	 0         	 15.8759   	 9.53335   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 5900, m: 68)                                                                       	 0.0449836 	 700       	 0         	 0         	 99.8906   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 68, reductionFactor: 37, colBlockingSize: 12)                  	 0.0432641 	 101       	 55.4324   	 0         	 3.26128   	 16.9971   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 5900, leftOrthog: 0)        	 0.0421238 	 100       	 70.0316   	 0         	 16.9025   	 4.14326   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 118, n: 50, r: 118, r2: 50)           	 0.0410952 	 100       	 169.411   	 0         	 19.4105   	 8.72781   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0401552 	 100       	 2.17904   	 0         	 0.150416  	 14.4868   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 68, k: 2500)   	 0.0392355 	 800       	 346.625   	 0         	 48.6743   	 7.12131   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 5900, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0313054 	 100       	 96.7798   	 0         	 7.60252   	 12.73     
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 2500, m: 68, k: 50)	 0.0297212 	 800       	 457.586   	 0         	 64.2558   	 7.12131   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 68, n: 50, r2: 68)                                                                                         	 0.0289538 	 707       	 0         	 0         	 90.3278   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 68, n: 50, r2: 68)                   	 0.0287084 	 700       	 0         	 0         	 156.52    	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 5900, m: 68)                                                              	 0.0247733 	 700       	 0         	 0         	 181.383   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 3400, k: 68) 	 0.0234077 	 700       	 691.396   	 0         	 96.7954   	 7.14286   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 68, r: 68, streamingCols: 0)                   	 0.0125718 	 101       	 92.8714   	 0         	 22.0007   	 4.2213    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 118, reductionFactor: 37, colBlockingSize: 12)                   	 0.0123315 	 100       	 11.5966   	 0         	 1.28608   	 9.01705   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00806294	 109       	 2.2531    	 0         	 0.816526  	 2.75937   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 68)                                                                       	 0.0062995 	 101       	 0         	 0         	 43.6098   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 50, Qr2: 68)       	 0.00601854	 100       	 0         	 0         	 78.4243   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 68)                                                              	 0.00516964	 101       	 0         	 0         	 53.1411   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 50)           	 0.00504668	 8         	 19.815    	 0         	 3.20211   	 6.18812   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 0, n: 50, r2: 68)                    	 0.00484769	 100       	 0         	 0         	 56.1092   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 3400, k: 50) 	 0.00406757	 100       	 417.94    	 0         	 67.3622   	 6.20438   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.0038336 	 101       	 6.76451   	 0         	 1.05384   	 6.41892   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3400, cols: 68, reductionFactor: 37, colBlockingSize: 12)                  	 0.00310055	 7         	 72.9068   	 0         	 4.25929   	 17.1171   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0026235 	 8         	 39.1473   	 0         	 3.11035   	 12.5861   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 68, r1_: 68, n: 50, r2: 68)           	 0.00258266	 7         	 85.2233   	 0         	 10.1265   	 8.41584   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 68)                                                                                         	 0.00236424	 101       	 0         	 0         	 116.198   	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 118, r: 50, r2: 50, leftOrthog: 0)         	 0.00229212	 100       	 25.7404   	 0         	 7.9228    	 3.2489    
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                   	 0.00183494	 8         	 27.2489   	 0         	 8.76325   	 3.10945   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 50, r2: 50)              	 0.00108101	 100       	 23.1265   	 0         	 5.55036   	 4.16667   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 68, m: 68, fromLeft: 0)                	 0.00102048	 808       	 0         	 0         	 58.5791   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50, k: 50)     	 0.00100563	 100       	 24.8601   	 0         	 5.96642   	 4.16667   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 3400, Xcols: 68, r: 68, streamingCols: 0)                   	 0.000953252	 7         	 115.448   	 0         	 27.3001   	 4.22886   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 3400, m: 68)                                                                       	 0.000925562	 7         	 0         	 0         	 27.9769   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                   	 0.000870024	 100       	 0.574697  	 0         	 2.29879   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 68, n: 50, r2: 1)                                                                                          	 0.00086181	 201       	 0         	 0         	 12.6877   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 68, m: 50, k: 68)   	 0.000858448	 100       	 53.8646   	 0         	 10.6462   	 5.05952   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 68)   	 0.000829643	 100       	 40.9815   	 0         	 8.96771   	 4.56989   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.00080699	 201       	 0         	 0         	 9.96295   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 1, Xr2: 50, Qr1: 1, Qr2: 0)          	 0.00072328	 100       	 0         	 0         	 5.53036   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 50, k: 50)  	 0.000589055	 100       	 42.4409   	 0         	 10.1858   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 1, r1low: 0, n: 50, r2: 50)                     	 0.000542881	 100       	 0         	 0         	 7.3681    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 68, n: 50, r2: 1)                    	 0.000522312	 100       	 0         	 0         	 18.0735   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                          	 0.00051814	 100       	 0         	 0         	 7.71992   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                                	 0.000486844	 101       	 0         	 0         	 8.29835   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                            	 0.000439216	 100       	 1.13839   	 0         	 13.6607   	 0.0833333 
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000388223	 101       	 0.650399  	 0         	 10.4064   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 68, n: 50, r2: 1)                                                                                 	 0.000361988	 101       	 0.94865   	 0         	 15.1784   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000330717	 100       	 0.755933  	 0         	 12.0949   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 3400, m: 68)                                                              	 0.000287118	 7         	 0         	 0         	 90.1873   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                              	 0.000270888	 8         	 0         	 0         	 59.065    	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 68, r1_: 50, n: 50, r2: 68)           	 0.000267687	 1         	 86.3695   	 0         	 12.0917   	 7.14286   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 50)                                                                       	 0.000197084	 8         	 0         	 0         	 81.1837   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 68, reductionFactor: 37, colBlockingSize: 12)                    	 5.7422e-05	 1         	 8.2703    	 0         	 1.1179    	 7.39808   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 50, r: 50, streamingCols: 0)                     	 3.4541e-05	 1         	 3.61889   	 0         	 1.44756   	 2.5       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 68, r: 50, streamingCols: 12)                    	 2.7981e-05	 1         	 4.46732   	 0         	 1.78693   	 2.5       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 68, r1_: 68, n: 50, r2: 1)            	 1.272e-05 	 1         	 36.3522   	 0         	 7.18491   	 5.05952   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 1.0341e-05	 1         	 24.1756   	 0         	 5.80215   	 4.16667   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 0)                	 9.89e-06  	 9         	 0         	 0         	 36.4004   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                         	 8.63e-06  	 2         	 0         	 0         	 9.26999   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 7.86e-06  	 1         	 0.636132  	 0         	 2.54453   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 0, m: 3400, k: 50)  	 7.77e-06  	 100       	 0         	 0         	 17503.2   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 68, n: 50, r2: 1)                                                                                   	 7.21e-06  	 1         	 0.943135  	 0         	 3.77254   	 0.25      
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 68)                                                                	 5.01e-06  	 1         	 0         	 0         	 10.8583   	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 68, fromLeft: 0)                	 1.41e-06  	 1         	 0         	 0         	 38.5816   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 5.61456   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 5.61452   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                            	 4.59482   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                        	 4.59353   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 3.72835   	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 1.36528   	 1818      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 1.22953   	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_leftOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                   	 1.01962   	 100       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.95802   	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.82488   	 900       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.718578  	 918       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.699968  	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.408401  	 918       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.145304  	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.10324   	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.0966435 	 1800      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.0645297 	 918       
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                       	 0.0524144 	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0402411 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0346213 	 1000      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.033505  	 1310      
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                              	 0.0309928 	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0303103 	 900       
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                              	 0.0294956 	 20        
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 0.0254963 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 0.0254697 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.00792008	 18        
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00674091	 1818      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00579596	 5273      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00370002	 6472      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00108093	 302       
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.00103178	 818       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000885094	 102       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000439216	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: L, orthoY: L
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m43->44  [0m[1;34m44->45  [0m[1;34m45->46  [0m[1;34m46->47  [0m[1;34m47->48  [0m[1;34m48->49  [0m[1;34m49->50  [0m[1;34m50->51  [0m[1;34m51->52  [0m[1;34m52->53  [0m[1;34m53->54  [0m[1;34m54->55  [0m[1;34m55->56  [0m[1;34m56->57  [0m[1;34m57->58  [0m[1;34m58->59  [0m[1;34m59->60  [0m[1;34m60->61  [0m[1;34m61->62  [0m[1;34m62->63  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 22784231692160 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 22783996192768 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 22783794866304 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 22783593539840 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 22783392213376 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 22783190886912 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 22782989560448 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 22782788233984 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 22782586907520 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 22782385581056 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 22782184254592 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 22781982928128 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 22781781601664 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 22781580275200 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 22781378948736 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 22781177622272 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 22780976295808 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 22780774969344 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 22780573642880 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 22780372316416 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 22780170989952 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 22779969663488 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 22779768337024 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 22779567010560 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 22779365684096 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 22779164357632 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 22778963031168 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 22778761704704 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 22778560378240 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 22778359051776 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 22778157725312 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 22777956398848 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 22777755068288 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 22777553741824 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 22777352415360 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 22777151088896 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 22776949762432 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 22776748435968 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 22776547109504 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 22776345783040 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 22776144456576 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 22775943130112 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 22775741803648 -> hwthread 43 - OK[0m[1;34m
[0m[1;34m	threadid 22775540477184 -> hwthread 44 - OK[0m[1;34m
[0m[1;34m	threadid 22775339150720 -> hwthread 45 - OK[0m[1;34m
[0m[1;34m	threadid 22775137824256 -> hwthread 46 - OK[0m[1;34m
[0m[1;34m	threadid 22774936497792 -> hwthread 47 - OK[0m[1;34m
[0m[1;34m	threadid 22774735171328 -> hwthread 48 - OK[0m[1;34m
[0m[1;34m	threadid 22774533844864 -> hwthread 49 - OK[0m[1;34m
[0m[1;34m	threadid 22774332518400 -> hwthread 50 - OK[0m[1;34m
[0m[1;34m	threadid 22774131191936 -> hwthread 51 - OK[0m[1;34m
[0m[1;34m	threadid 22773929865472 -> hwthread 52 - OK[0m[1;34m
[0m[1;34m	threadid 22773728539008 -> hwthread 53 - OK[0m[1;34m
[0m[1;34m	threadid 22773527212544 -> hwthread 54 - OK[0m[1;34m
[0m[1;34m	threadid 22773325886080 -> hwthread 55 - OK[0m[1;34m
[0m[1;34m	threadid 22773124559616 -> hwthread 56 - OK[0m[1;34m
[0m[1;34m	threadid 22772923233152 -> hwthread 57 - OK[0m[1;34m
[0m[1;34m	threadid 22772721906688 -> hwthread 58 - OK[0m[1;34m
[0m[1;34m	threadid 22772520580224 -> hwthread 59 - OK[0m[1;34m
[0m[1;34m	threadid 22772319253760 -> hwthread 60 - OK[0m[1;34m
[0m[1;34m	threadid 22772117927296 -> hwthread 61 - OK[0m[1;34m
[0m[1;34m	threadid 22771916600832 -> hwthread 62 - OK[0m[1;34m
[0m[1;34m	threadid 22771715274368 -> hwthread 63 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 22784126031616 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 22784119441152 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 119, m: 119)                                                               	 1.1694    	 700       	 7.06112   	 0         	 0.204011  	 34.6114   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 5950, cols: 119, reductionFactor: 37, colBlockingSize: 12)                 	 0.832006  	 600       	 124.809   	 0         	 4.16657   	 29.955    
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 119, n: 50, r: 119, r2: 119)          	 0.731883  	 600       	 138.15    	 0         	 9.38027   	 14.7277   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 119, r: 119, r2: 5950, leftOrthog: 0)      	 0.597779  	 600       	 169.142   	 0         	 17.2837   	 9.78618   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 5950, cols: 69, reductionFactor: 37, colBlockingSize: 12)                  	 0.374435  	 700       	 108.78    	 0         	 6.21134   	 17.5131   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 5950, Xcols: 69, r: 69, streamingCols: 0)                   	 0.13352   	 700       	 148.514   	 0         	 34.5379   	 4.30003   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 119, reductionFactor: 37, colBlockingSize: 12)                 	 0.107916  	 100       	 67.3846   	 0         	 2.3104    	 29.1658   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 119, Qr2: 69)      	 0.102894  	 700       	 0         	 0         	 67.6828   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 69, m: 3450, k: 69) 	 0.0722251 	 700       	 318.388   	 0         	 37.2837   	 8.5396    
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 69, m: 69)                                                                  	 0.0597286 	 809       	 5.93269   	 0         	 1.55514   	 3.8149    
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 119)                                                                	 0.0569419 	 100       	 3.65724   	 0         	 0.203014  	 18.0147   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 5950, m: 69)                                                                       	 0.0504624 	 700       	 0         	 0         	 91.1206   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r: 119, r2: 119)           	 0.0499189 	 100       	 141.84    	 0         	 9.76242   	 14.5292   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 119, r: 119, r2: 2500, leftOrthog: 0)      	 0.0464819 	 100       	 152.328   	 0         	 15.8483   	 9.61166   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 69, reductionFactor: 37, colBlockingSize: 12)                  	 0.0427335 	 101       	 57.7833   	 0         	 3.35163   	 17.2404   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.042198  	 100       	 2.07356   	 0         	 0.143135  	 14.4868   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 119, n: 50, r: 119, r2: 50)           	 0.0415335 	 100       	 170.477   	 0         	 19.4831   	 8.75      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 69, k: 2500)   	 0.0400937 	 800       	 344.194   	 0         	 48.0395   	 7.16481   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 5950, leftOrthog: 0)        	 0.0383082 	 100       	 77.6596   	 0         	 18.7427   	 4.14345   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 5950, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0329703 	 100       	 92.6713   	 0         	 7.27927   	 12.7309   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 69, n: 50, r2: 69)                   	 0.0317322 	 700       	 0         	 0         	 144.905   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 2500, m: 69, k: 50)	 0.0299313 	 800       	 461.055   	 0         	 64.35     	 7.16481   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 69, n: 50, r2: 69)                                                                                         	 0.0294603 	 707       	 0         	 0         	 91.4049   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 5950, m: 69)                                                              	 0.0268125 	 700       	 0         	 0         	 171.493   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 3450, k: 69) 	 0.0241329 	 700       	 690.489   	 0         	 96.068    	 7.1875    
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 69, r: 69, streamingCols: 0)                   	 0.0121376 	 101       	 99.0437   	 0         	 23.1251   	 4.28295   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 119, reductionFactor: 37, colBlockingSize: 12)                   	 0.0119705 	 100       	 12.1497   	 0         	 1.34404   	 9.03966   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 69)                                                              	 0.0095815 	 101       	 0         	 0         	 29.0936   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00807359	 109       	 2.25012   	 0         	 0.815448  	 2.75937   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 69)                                                                       	 0.00652584	 101       	 0         	 0         	 42.7163   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 50, Qr2: 69)       	 0.00590407	 100       	 0         	 0         	 80.6223   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 3450, k: 50) 	 0.00565897	 100       	 304.826   	 0         	 49.1256   	 6.20504   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 0, n: 50, r2: 69)                    	 0.00546214	 100       	 0         	 0         	 50.5296   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 50)           	 0.00486406	 8         	 20.5589   	 0         	 3.32232   	 6.18812   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.00392807	 101       	 6.60183   	 0         	 1.0285    	 6.41892   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3450, cols: 69, reductionFactor: 37, colBlockingSize: 12)                  	 0.00332805	 7         	 70.964    	 0         	 4.08571   	 17.3688   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 69, r1_: 69, n: 50, r2: 69)           	 0.0028486 	 7         	 80.726    	 0         	 9.45313   	 8.5396    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.00274754	 8         	 37.3799   	 0         	 2.96993   	 12.5861   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 69)                                                                                         	 0.00233589	 101       	 0         	 0         	 119.338   	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 119, r: 50, r2: 50, leftOrthog: 0)         	 0.00223027	 100       	 26.6784   	 0         	 8.19632   	 3.25492   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                   	 0.00211046	 8         	 23.6916   	 0         	 7.61921   	 3.10945   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 69, m: 69, fromLeft: 0)                	 0.00157593	 808       	 0         	 0         	 39.0564   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50, k: 50)     	 0.0013752 	 100       	 18.1791   	 0         	 4.363     	 4.16667   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 3450, m: 69)                                                                       	 0.0012544 	 7         	 0         	 0         	 21.2544   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 3450, Xcols: 69, r: 69, streamingCols: 0)                   	 0.00109514	 7         	 104.99    	 0         	 24.4672   	 4.29104   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 50, r2: 50)              	 0.001059  	 100       	 23.6072   	 0         	 5.66573   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 69, m: 50, k: 69)   	 0.000935743	 100       	 50.8794   	 0         	 9.9694    	 5.10355   
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                   	 0.000848006	 100       	 0.589618  	 0         	 2.35847   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 69)   	 0.000838825	 100       	 41.129    	 0         	 8.96492   	 4.58777   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 69, n: 50, r2: 1)                                                                                          	 0.000821156	 201       	 0         	 0         	 13.5117   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000797409	 201       	 0         	 0         	 10.0827   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 50, k: 50)  	 0.000600098	 100       	 41.6599   	 0         	 9.99837   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 1, r1low: 0, n: 50, r2: 50)                     	 0.000554833	 100       	 0         	 0         	 7.20938   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 69, n: 50, r2: 1)                    	 0.000532762	 100       	 0         	 0         	 17.8691   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                          	 0.000511127	 100       	 0         	 0         	 7.82584   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                                	 0.000453692	 101       	 0         	 0         	 8.90472   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                            	 0.000439275	 100       	 1.13824   	 0         	 13.6589   	 0.0833333 
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 1, Xr2: 50, Qr1: 1, Qr2: 0)          	 0.000431698	 100       	 0         	 0         	 9.26574   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000390868	 101       	 0.645998  	 0         	 10.336    	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000354742	 100       	 0.704738  	 0         	 11.2758   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 69, n: 50, r2: 1)                                                                                 	 0.000353338	 101       	 0.986166  	 0         	 15.7787   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 3450, m: 69)                                                              	 0.00035023	 7         	 0         	 0         	 76.126    	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                              	 0.000306228	 8         	 0         	 0         	 52.2487   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 69, r1_: 50, n: 50, r2: 69)           	 0.000275957	 1         	 86.2634   	 0         	 12.0019   	 7.1875    
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 50)                                                                       	 0.000258475	 8         	 0         	 0         	 61.9015   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 69, reductionFactor: 37, colBlockingSize: 12)                    	 5.7922e-05	 1         	 8.44183   	 0         	 1.13408   	 7.44379   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 50, r: 50, streamingCols: 0)                     	 3.1871e-05	 1         	 3.92206   	 0         	 1.56882   	 2.5       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 69, r: 50, streamingCols: 15)                    	 2.8581e-05	 1         	 4.37353   	 0         	 1.74941   	 2.5       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 69, r1_: 69, n: 50, r2: 1)            	 2.3411e-05	 1         	 20.3366   	 0         	 3.98479   	 5.10355   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 1.1131e-05	 1         	 22.4598   	 0         	 5.39035   	 4.16667   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 0)                	 9.891e-06 	 9         	 0         	 0         	 36.3967   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                         	 8.35e-06  	 2         	 0         	 0         	 9.58084   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 69, n: 50, r2: 1)                                                                                   	 8.141e-06 	 1         	 0.847562  	 0         	 3.39025   	 0.25      
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 7.94e-06  	 1         	 0.629723  	 0         	 2.51889   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 0, m: 3450, k: 50)  	 7.93e-06  	 100       	 0         	 0         	 17402.3   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 69)                                                                	 4.23e-06  	 1         	 0         	 0         	 13.0496   	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 69, fromLeft: 0)                	 1.5e-06   	 1         	 0         	 0         	 36.8      	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 5.73407   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 5.73403   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                            	 4.65815   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                        	 4.65685   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 3.79045   	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 1.41209   	 1818      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 1.26854   	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_leftOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                   	 1.07581   	 100       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.985544  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.824394  	 900       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.757239  	 918       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.6848    	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.427738  	 918       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.148923  	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.10923   	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.103799  	 1800      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.0678022 	 918       
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                       	 0.0585094 	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0414689 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0382819 	 1000      
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                              	 0.0375084 	 918       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0339259 	 1310      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0305314 	 900       
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                              	 0.0300401 	 20        
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 0.0270502 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 0.0270223 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.00802317	 18        
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.0072726 	 5273      
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00554306	 1818      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00371404	 6472      
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.00158732	 818       
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00109895	 302       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000864087	 102       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000439275	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: L, orthoY: L
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m43->44  [0m[1;34m44->45  [0m[1;34m45->46  [0m[1;34m46->47  [0m[1;34m47->48  [0m[1;34m48->49  [0m[1;34m49->50  [0m[1;34m50->51  [0m[1;34m51->52  [0m[1;34m52->53  [0m[1;34m53->54  [0m[1;34m54->55  [0m[1;34m55->56  [0m[1;34m56->57  [0m[1;34m57->58  [0m[1;34m58->59  [0m[1;34m59->60  [0m[1;34m60->61  [0m[1;34m61->62  [0m[1;34m62->63  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 23247629461376 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 23247450007552 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 23247248681088 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 23247047354624 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 23246846028160 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 23246644701696 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 23246443375232 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 23246242048768 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 23246040722304 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 23245839395840 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 23245638069376 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 23245436742912 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 23245235416448 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 23245034089984 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 23244832763520 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 23244631437056 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 23244430110592 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 23244228784128 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 23244027457664 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 23243826131200 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 23243624804736 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 23243423478272 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 23243222151808 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 23243020825344 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 23242819498880 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 23242618172416 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 23242416845952 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 23242215519488 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 23242014193024 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 23241812866560 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 23241611540096 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 23241410213632 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 23241208883072 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 23241007556608 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 23240806230144 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 23240604903680 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 23240403577216 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 23240202250752 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 23240000924288 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 23239799597824 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 23239598271360 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 23239396944896 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 23239195618432 -> hwthread 43 - OK[0m[1;34m
[0m[1;34m	threadid 23238994291968 -> hwthread 44 - OK[0m[1;34m
[0m[1;34m	threadid 23238792965504 -> hwthread 45 - OK[0m[1;34m
[0m[1;34m	threadid 23238591639040 -> hwthread 46 - OK[0m[1;34m
[0m[1;34m	threadid 23238390312576 -> hwthread 47 - OK[0m[1;34m
[0m[1;34m	threadid 23238188986112 -> hwthread 48 - OK[0m[1;34m
[0m[1;34m	threadid 23237987659648 -> hwthread 49 - OK[0m[1;34m
[0m[1;34m	threadid 23237786333184 -> hwthread 50 - OK[0m[1;34m
[0m[1;34m	threadid 23237585006720 -> hwthread 51 - OK[0m[1;34m
[0m[1;34m	threadid 23237383680256 -> hwthread 52 - OK[0m[1;34m
[0m[1;34m	threadid 23237182353792 -> hwthread 53 - OK[0m[1;34m
[0m[1;34m	threadid 23236981027328 -> hwthread 54 - OK[0m[1;34m
[0m[1;34m	threadid 23236779700864 -> hwthread 55 - OK[0m[1;34m
[0m[1;34m	threadid 23236578374400 -> hwthread 56 - OK[0m[1;34m
[0m[1;34m	threadid 23236377047936 -> hwthread 57 - OK[0m[1;34m
[0m[1;34m	threadid 23236175721472 -> hwthread 58 - OK[0m[1;34m
[0m[1;34m	threadid 23235974395008 -> hwthread 59 - OK[0m[1;34m
[0m[1;34m	threadid 23235773068544 -> hwthread 60 - OK[0m[1;34m
[0m[1;34m	threadid 23235571742080 -> hwthread 61 - OK[0m[1;34m
[0m[1;34m	threadid 23235370415616 -> hwthread 62 - OK[0m[1;34m
[0m[1;34m	threadid 23235169089152 -> hwthread 63 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 23247523800832 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 23247345145600 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 120, m: 120)                                                               	 1.15168   	 700       	 7.35206   	 0         	 0.210642  	 34.903    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 6000, cols: 120, reductionFactor: 37, colBlockingSize: 12)                 	 0.840953  	 600       	 126.621   	 0         	 4.19182   	 30.2067   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 120, n: 50, r: 120, r2: 120)          	 0.758781  	 600       	 136.64    	 0         	 9.20044   	 14.8515   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 120, r: 120, r2: 6000, leftOrthog: 0)      	 0.572235  	 600       	 181.184   	 0         	 18.36     	 9.86842   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 6000, cols: 70, reductionFactor: 37, colBlockingSize: 12)                  	 0.372759  	 700       	 113.404   	 0         	 6.38332   	 17.7657   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 6000, Xcols: 70, r: 70, streamingCols: 0)                   	 0.134281  	 700       	 153.26    	 0         	 35.1331   	 4.36228   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 120, reductionFactor: 37, colBlockingSize: 12)                 	 0.10983   	 100       	 67.3275   	 0         	 2.29008   	 29.3996   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 120, Qr2: 70)      	 0.1031    	 700       	 0         	 0         	 68.7102   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 70, m: 3500, k: 70) 	 0.0750885 	 700       	 319.756   	 0         	 36.909    	 8.66337   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 70, m: 70)                                                                  	 0.0606775 	 809       	 6.09751   	 0         	 1.5754    	 3.87045   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 120)                                                                	 0.0571798 	 100       	 3.67263   	 0         	 0.203568  	 18.0412   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r: 120, r2: 120)           	 0.0536327 	 100       	 134.247   	 0         	 9.16457   	 14.6484   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 6000, m: 70)                                                                       	 0.0529433 	 700       	 0         	 0         	 88.8498   	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 120, r: 120, r2: 2500, leftOrthog: 0)      	 0.0483916 	 100       	 148.786   	 0         	 15.3547   	 9.68992   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 120, n: 50, r: 120, r2: 50)           	 0.0447986 	 100       	 160.719   	 0         	 18.322    	 8.77193   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 70, reductionFactor: 37, colBlockingSize: 12)                  	 0.0433793 	 101       	 58.5851   	 0         	 3.35089   	 17.4834   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0408404 	 100       	 2.14249   	 0         	 0.147893  	 14.4868   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 70, k: 2500)   	 0.0399303 	 800       	 350.611   	 0         	 48.6448   	 7.20758   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 6000, leftOrthog: 0)        	 0.0370373 	 100       	 80.9994   	 0         	 19.5478   	 4.14365   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 6000, m: 70)                                                              	 0.0368613 	 700       	 0         	 0         	 127.613   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 6000, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0331969 	 100       	 92.8124   	 0         	 7.28984   	 12.7317   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 70, n: 50, r2: 70)                   	 0.0310856 	 700       	 0         	 0         	 151.324   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 70, n: 50, r2: 70)                                                                                         	 0.030726  	 707       	 0         	 0         	 90.1986   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 2500, m: 70, k: 50)	 0.030257  	 800       	 462.703   	 0         	 64.1967   	 7.20758   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 3500, k: 70) 	 0.0249915 	 700       	 686.232   	 0         	 94.8961   	 7.2314    
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 70, r: 70, streamingCols: 0)                   	 0.0123512 	 101       	 100.172   	 0         	 23.0568   	 4.34459   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 120, reductionFactor: 37, colBlockingSize: 12)                   	 0.0120696 	 100       	 12.2532   	 0         	 1.35215   	 9.062     
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00803648	 109       	 2.26052   	 0         	 0.819214  	 2.75937   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 70)                                                              	 0.00672163	 101       	 0         	 0         	 42.0732   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 70)                                                                       	 0.00658747	 101       	 0         	 0         	 42.93     	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 50, Qr2: 70)       	 0.0064721 	 100       	 0         	 0         	 74.1645   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 3500, k: 50) 	 0.00588296	 100       	 297.469   	 0         	 47.935    	 6.20567   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 0, n: 50, r2: 70)                    	 0.00541374	 100       	 0         	 0         	 51.7203   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 50)           	 0.00478413	 8         	 20.9024   	 0         	 3.37783   	 6.18812   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.0037871 	 101       	 6.84758   	 0         	 1.06678   	 6.41892   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3500, cols: 70, reductionFactor: 37, colBlockingSize: 12)                  	 0.00327442	 7         	 75.3077   	 0         	 4.27385   	 17.6206   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.00271196	 8         	 37.8703   	 0         	 3.00889   	 12.5861   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 70, r1_: 70, n: 50, r2: 70)           	 0.00264657	 7         	 90.7213   	 0         	 10.4718   	 8.66337   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 70)                                                                                         	 0.00235928	 101       	 0         	 0         	 119.867   	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 120, r: 50, r2: 50, leftOrthog: 0)         	 0.00228516	 100       	 26.2563   	 0         	 8.05195   	 3.26087   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                   	 0.00220207	 8         	 22.7059   	 0         	 7.3022    	 3.10945   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 70, m: 70, fromLeft: 0)                	 0.00143207	 808       	 0         	 0         	 44.2347   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 3500, m: 70)                                                                       	 0.0011139 	 7         	 0         	 0         	 24.6342   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 50, r2: 50)              	 0.00107067	 100       	 23.35     	 0         	 5.60399   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50, k: 50)     	 0.00106264	 100       	 23.5262   	 0         	 5.6463    	 4.16667   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 3500, Xcols: 70, r: 70, streamingCols: 0)                   	 0.00100269	 7         	 119.727   	 0         	 27.5031   	 4.35323   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 70, m: 50, k: 70)   	 0.000908636	 100       	 53.927    	 0         	 10.4772   	 5.14706   
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                   	 0.000885447	 100       	 0.564687  	 0         	 2.25875   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 70)   	 0.00086487	 100       	 40.4685   	 0         	 8.78745   	 4.60526   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 70, n: 50, r2: 1)                                                                                          	 0.000852948	 201       	 0         	 0         	 13.1966   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000800229	 201       	 0         	 0         	 10.0471   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 50, k: 50)  	 0.000582713	 100       	 42.9028   	 0         	 10.2967   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 70, n: 50, r2: 1)                    	 0.00055328	 100       	 0         	 0         	 17.3511   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 1, r1low: 0, n: 50, r2: 50)                     	 0.000534387	 100       	 0         	 0         	 7.48521   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                          	 0.000517897	 100       	 0         	 0         	 7.72354   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                                	 0.000454168	 101       	 0         	 0         	 8.89539   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 1, Xr2: 50, Qr1: 1, Qr2: 0)          	 0.000449585	 100       	 0         	 0         	 8.89709   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                            	 0.000414079	 100       	 1.2075    	 0         	 14.49     	 0.0833333 
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 3500, m: 70)                                                              	 0.000411849	 7         	 0         	 0         	 66.6264   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000393352	 101       	 0.641919  	 0         	 10.2707   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 70, n: 50, r2: 1)                                                                                 	 0.000393123	 101       	 0.89921   	 0         	 14.3874   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000342508	 100       	 0.72991   	 0         	 11.6786   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 70, r1_: 50, n: 50, r2: 70)           	 0.000278177	 1         	 88.0734   	 0         	 12.1793   	 7.2314    
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                              	 0.000278156	 8         	 0         	 0         	 57.5217   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 50)                                                                       	 0.000248467	 8         	 0         	 0         	 64.3949   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 70, reductionFactor: 37, colBlockingSize: 12)                    	 5.9541e-05	 1         	 8.45205   	 0         	 1.12863   	 7.48874   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 50, r: 50, streamingCols: 0)                     	 3.4531e-05	 1         	 3.61994   	 0         	 1.44797   	 2.5       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 70, r: 50, streamingCols: 14)                    	 3.1031e-05	 1         	 4.02823   	 0         	 1.61129   	 2.5       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 70, r1_: 70, n: 50, r2: 1)            	 1.3901e-05	 1         	 35.2493   	 0         	 6.84843   	 5.14706   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 0)                	 9.991e-06 	 9         	 0         	 0         	 36.0324   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 9.8e-06   	 1         	 25.5102   	 0         	 6.12245   	 4.16667   
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 9.461e-06 	 1         	 0.528485  	 0         	 2.11394   	 0.25      
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 70, n: 50, r2: 1)                                                                                   	 9.281e-06 	 1         	 0.754229  	 0         	 3.01692   	 0.25      
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                         	 8.23e-06  	 2         	 0         	 0         	 9.72053   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 0, m: 3500, k: 50)  	 7.55e-06  	 100       	 0         	 0         	 18543     	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 70)                                                                	 4.83e-06  	 1         	 0         	 0         	 11.5942   	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 70, fromLeft: 0)                	 1.481e-06 	 1         	 0         	 0         	 37.8123   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 5.79504   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 5.795     	 100       
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                            	 4.70608   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                        	 4.70474   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 3.79938   	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 1.42202   	 1818      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 1.2497    	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_leftOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                   	 1.08885   	 100       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.996678  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.858283  	 900       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.766772  	 918       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.659949  	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.426461  	 918       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.149903  	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.110021  	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.107744  	 1800      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.068714  	 918       
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                       	 0.0609013 	 818       
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                              	 0.044732  	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0409929 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.037587  	 1000      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0352563 	 1310      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0308397 	 900       
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                              	 0.0304533 	 20        
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 0.0265641 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 0.0265337 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.00773258	 18        
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00674948	 5273      
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00629474	 1818      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00368283	 6472      
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.00144354	 818       
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00112898	 302       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000904189	 102       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000414079	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: L, orthoY: L
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m43->44  [0m[1;34m44->45  [0m[1;34m45->46  [0m[1;34m46->47  [0m[1;34m47->48  [0m[1;34m48->49  [0m[1;34m49->50  [0m[1;34m50->51  [0m[1;34m51->52  [0m[1;34m52->53  [0m[1;34m53->54  [0m[1;34m54->55  [0m[1;34m55->56  [0m[1;34m56->57  [0m[1;34m57->58  [0m[1;34m58->59  [0m[1;34m59->60  [0m[1;34m60->61  [0m[1;34m61->62  [0m[1;34m62->63  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 22967012239232 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 22966800738304 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 22966599411840 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 22966398085376 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 22966196758912 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 22965995432448 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 22965794105984 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 22965592779520 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 22965391453056 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 22965190126592 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 22964988800128 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 22964787473664 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 22964586147200 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 22964384820736 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 22964183494272 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 22963982167808 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 22963780841344 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 22963579514880 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 22963378188416 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 22963176861952 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 22962975535488 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 22962774209024 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 22962572882560 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 22962371556096 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 22962170229632 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 22961968903168 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 22961767576704 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 22961566250240 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 22961364923776 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 22961163597312 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 22960962270848 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 22960760944384 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 22960559613824 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 22960358287360 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 22960156960896 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 22959955634432 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 22959754307968 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 22959552981504 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 22959351655040 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 22959150328576 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 22958949002112 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 22958747675648 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 22958546349184 -> hwthread 43 - OK[0m[1;34m
[0m[1;34m	threadid 22958345022720 -> hwthread 44 - OK[0m[1;34m
[0m[1;34m	threadid 22958143696256 -> hwthread 45 - OK[0m[1;34m
[0m[1;34m	threadid 22957942369792 -> hwthread 46 - OK[0m[1;34m
[0m[1;34m	threadid 22957741043328 -> hwthread 47 - OK[0m[1;34m
[0m[1;34m	threadid 22957539716864 -> hwthread 48 - OK[0m[1;34m
[0m[1;34m	threadid 22957338390400 -> hwthread 49 - OK[0m[1;34m
[0m[1;34m	threadid 22957137063936 -> hwthread 50 - OK[0m[1;34m
[0m[1;34m	threadid 22956935737472 -> hwthread 51 - OK[0m[1;34m
[0m[1;34m	threadid 22956734411008 -> hwthread 52 - OK[0m[1;34m
[0m[1;34m	threadid 22956533084544 -> hwthread 53 - OK[0m[1;34m
[0m[1;34m	threadid 22956331758080 -> hwthread 54 - OK[0m[1;34m
[0m[1;34m	threadid 22956130431616 -> hwthread 55 - OK[0m[1;34m
[0m[1;34m	threadid 22955929105152 -> hwthread 56 - OK[0m[1;34m
[0m[1;34m	threadid 22955727778688 -> hwthread 57 - OK[0m[1;34m
[0m[1;34m	threadid 22955526452224 -> hwthread 58 - OK[0m[1;34m
[0m[1;34m	threadid 22955325125760 -> hwthread 59 - OK[0m[1;34m
[0m[1;34m	threadid 22955123799296 -> hwthread 60 - OK[0m[1;34m
[0m[1;34m	threadid 22954922472832 -> hwthread 61 - OK[0m[1;34m
[0m[1;34m	threadid 22954721146368 -> hwthread 62 - OK[0m[1;34m
[0m[1;34m	threadid 22954519819904 -> hwthread 63 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 22966906578688 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 22966899988224 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 121, m: 121)                                                               	 1.21397   	 700       	 7.15061   	 0         	 0.203173  	 35.1947   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 6050, cols: 121, reductionFactor: 37, colBlockingSize: 12)                 	 0.859704  	 600       	 126.982   	 0         	 4.16901   	 30.4584   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 121, n: 50, r: 121, r2: 121)          	 0.776165  	 600       	 136.947   	 0         	 9.14491   	 14.9752   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 121, r: 121, r2: 6050, leftOrthog: 0)      	 0.627985  	 600       	 169.261   	 0         	 17.0101   	 9.95066   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 6050, cols: 71, reductionFactor: 37, colBlockingSize: 12)                  	 0.373339  	 700       	 117.457   	 0         	 6.51877   	 18.0183   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 6050, Xcols: 71, r: 71, streamingCols: 0)                   	 0.138699  	 700       	 153.921   	 0         	 34.7881   	 4.42452   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 121, reductionFactor: 37, colBlockingSize: 12)                 	 0.110982  	 100       	 67.7441   	 0         	 2.28608   	 29.6333   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 121, Qr2: 71)      	 0.0952111 	 700       	 0         	 0         	 75.6736   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 71, m: 3550, k: 71) 	 0.0738049 	 700       	 339.459   	 0         	 38.6314   	 8.78713   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 71, m: 71)                                                                  	 0.0638322 	 809       	 6.04814   	 0         	 1.54053   	 3.92601   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 121)                                                                	 0.0560412 	 100       	 3.77847   	 0         	 0.209132  	 18.0674   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 121, r: 121, r2: 2500, leftOrthog: 0)      	 0.050456  	 100       	 145.087   	 0         	 14.853    	 9.76815   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r: 121, r2: 121)           	 0.0504534 	 100       	 145.094   	 0         	 9.82516   	 14.7676   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 71, reductionFactor: 37, colBlockingSize: 12)                  	 0.0456879 	 101       	 57.2254   	 0         	 3.22827   	 17.7263   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 6050, m: 71)                                                                       	 0.0453093 	 700       	 0         	 0         	 106.18    	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 121, n: 50, r: 121, r2: 50)           	 0.0442798 	 100       	 165.324   	 0         	 18.8004   	 8.7936    
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 6050, leftOrthog: 0)        	 0.0418333 	 100       	 72.3107   	 0         	 17.4502   	 4.14384   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 71, k: 2500)   	 0.0414574 	 800       	 342.52    	 0         	 47.2465   	 7.24963   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.040465  	 100       	 2.16236   	 0         	 0.149265  	 14.4868   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 6050, m: 71)                                                              	 0.033552  	 700       	 0         	 0         	 143.388   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 6050, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0325326 	 100       	 95.4966   	 0         	 7.50016   	 12.7326   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 2500, m: 71, k: 50)	 0.0318468 	 800       	 445.884   	 0         	 61.5044   	 7.24963   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 71, n: 50, r2: 71)                                                                                         	 0.031581  	 707       	 0         	 0         	 90.2819   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 71, n: 50, r2: 71)                   	 0.0297331 	 700       	 0         	 0         	 161.805   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 3550, k: 71) 	 0.0252433 	 700       	 698.938   	 0         	 96.0794   	 7.27459   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 121, reductionFactor: 37, colBlockingSize: 12)                   	 0.0129285 	 100       	 11.6307   	 0         	 1.28034   	 9.08408   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 71, r: 71, streamingCols: 0)                   	 0.0127324 	 101       	 99.9699   	 0         	 22.6884   	 4.40622   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00798334	 109       	 2.27556   	 0         	 0.824667  	 2.75937   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 50, Qr2: 71)       	 0.00644761	 100       	 0         	 0         	 75.0666   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 71)                                                                       	 0.00578859	 101       	 0         	 0         	 49.5526   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 50)           	 0.00507555	 8         	 19.7023   	 0         	 3.18389   	 6.18812   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 3550, k: 50) 	 0.00446567	 100       	 397.476   	 0         	 64.0441   	 6.20629   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.00416184	 101       	 6.231     	 0         	 0.970725  	 6.41892   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 71)                                                              	 0.00389456	 101       	 0         	 0         	 73.6515   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 0, n: 50, r2: 71)                    	 0.00352976	 100       	 0         	 0         	 80.4588   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3550, cols: 71, reductionFactor: 37, colBlockingSize: 12)                  	 0.00334171	 7         	 76.9993   	 0         	 4.30831   	 17.8723   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 71, r1_: 71, n: 50, r2: 71)           	 0.00278001	 7         	 90.1212   	 0         	 10.256    	 8.78713   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.00274171	 8         	 37.4594   	 0         	 2.97625   	 12.5861   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 121, r: 50, r2: 50, leftOrthog: 0)         	 0.00227971	 100       	 26.5385   	 0         	 8.12384   	 3.26674   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 71)                                                                                         	 0.00227127	 101       	 0         	 0         	 126.291   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                   	 0.00174124	 8         	 28.7153   	 0         	 9.23482   	 3.10945   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 71, m: 71, fromLeft: 0)                	 0.0016545 	 808       	 0         	 0         	 39.3895   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 50, r2: 50)              	 0.00103296	 100       	 24.2023   	 0         	 5.80856   	 4.16667   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 3550, Xcols: 71, r: 71, streamingCols: 0)                   	 0.00102348	 7         	 122.395   	 0         	 27.72     	 4.41542   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 71, m: 50, k: 71)   	 0.000941261	 100       	 53.5558   	 0         	 10.3189   	 5.19006   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50, k: 50)     	 0.00093751	 100       	 26.6664   	 0         	 6.39993   	 4.16667   
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                   	 0.000876208	 100       	 0.570641  	 0         	 2.28256   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 71)   	 0.000847212	 100       	 41.9021   	 0         	 9.06503   	 4.6224    
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 71, n: 50, r2: 1)                                                                                          	 0.000822666	 201       	 0         	 0         	 13.8778   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000792963	 201       	 0         	 0         	 10.1392   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 3550, m: 71)                                                                       	 0.000715409	 7         	 0         	 0         	 39.4594   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 3550, m: 71)                                                              	 0.000664548	 7         	 0         	 0         	 42.4794   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 50, k: 50)  	 0.000583706	 100       	 42.8298   	 0         	 10.2791   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 71, n: 50, r2: 1)                    	 0.000547186	 100       	 0         	 0         	 17.6905   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 1, r1low: 0, n: 50, r2: 50)                     	 0.000529144	 100       	 0         	 0         	 7.55938   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                          	 0.000506508	 100       	 0         	 0         	 7.89721   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                                	 0.000463898	 101       	 0         	 0         	 8.70881   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 1, Xr2: 50, Qr1: 1, Qr2: 0)          	 0.000450215	 100       	 0         	 0         	 8.88464   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                            	 0.000447077	 100       	 1.11838   	 0         	 13.4205   	 0.0833333 
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000392087	 101       	 0.64399   	 0         	 10.3038   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 71, n: 50, r2: 1)                                                                                 	 0.000358818	 101       	 0.999253  	 0         	 15.988    	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000346369	 100       	 0.721774  	 0         	 11.5484   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 71, r1_: 50, n: 50, r2: 71)           	 0.000285757	 1         	 88.2043   	 0         	 12.125    	 7.27459   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                              	 0.000274129	 8         	 0         	 0         	 58.3667   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 50)                                                                       	 0.000254706	 8         	 0         	 0         	 62.8175   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 71, reductionFactor: 37, colBlockingSize: 12)                    	 6.0601e-05	 1         	 8.54316   	 0         	 1.13411   	 7.53295   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 50, r: 50, streamingCols: 0)                     	 3.2861e-05	 1         	 3.8039    	 0         	 1.52156   	 2.5       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 71, r: 50, streamingCols: 14)                    	 2.915e-05 	 1         	 4.28816   	 0         	 1.71527   	 2.5       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 71, r1_: 71, n: 50, r2: 1)            	 1.425e-05 	 1         	 35.3754   	 0         	 6.816     	 5.19006   
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 1.0431e-05	 1         	 0.47934   	 0         	 1.91736   	 0.25      
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 1.014e-05 	 1         	 24.6548   	 0         	 5.91716   	 4.16667   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 0)                	 9.79e-06  	 9         	 0         	 0         	 36.7722   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 71, n: 50, r2: 1)                                                                                   	 9.24e-06  	 1         	 0.768398  	 0         	 3.07359   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 0, m: 3550, k: 50)  	 8.41e-06  	 100       	 0         	 0         	 16884.7   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                         	 8.07e-06  	 2         	 0         	 0         	 9.91326   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 71)                                                                	 4.55e-06  	 1         	 0         	 0         	 12.4835   	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 71, fromLeft: 0)                	 1.42e-06  	 1         	 0         	 0         	 40        	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 5.92368   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 5.92364   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                            	 4.85139   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                        	 4.85006   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 3.95008   	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 1.44548   	 1818      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 1.31048   	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_leftOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                   	 1.07217   	 100       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 1.01681   	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.871931  	 900       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.764581  	 918       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.722554  	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.429844  	 918       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.154258  	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.105311  	 1800      
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.102109  	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.0718155 	 918       
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                       	 0.0520761 	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0423949 	 900       
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                              	 0.0388537 	 918       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0359744 	 1310      
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0343391 	 1000      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0324305 	 900       
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                              	 0.0313793 	 20        
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 0.0269808 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 0.0269494 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.00816571	 18        
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00761632	 1818      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00363896	 6472      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00187008	 5273      
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.00166571	 818       
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00109727	 302       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000895879	 102       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000447077	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: L, orthoY: L
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m43->44  [0m[1;34m44->45  [0m[1;34m45->46  [0m[1;34m46->47  [0m[1;34m47->48  [0m[1;34m48->49  [0m[1;34m49->50  [0m[1;34m50->51  [0m[1;34m51->52  [0m[1;34m52->53  [0m[1;34m53->54  [0m[1;34m54->55  [0m[1;34m55->56  [0m[1;34m56->57  [0m[1;34m57->58  [0m[1;34m58->59  [0m[1;34m59->60  [0m[1;34m60->61  [0m[1;34m61->62  [0m[1;34m62->63  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 22719837353856 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 22719638792192 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 22719437465728 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 22719236139264 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 22719034812800 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 22718833486336 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 22718632159872 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 22718430833408 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 22718229506944 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 22718028180480 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 22717826854016 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 22717625527552 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 22717424201088 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 22717222874624 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 22717021548160 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 22716820221696 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 22716618895232 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 22716417568768 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 22716216242304 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 22716014915840 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 22715813589376 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 22715612262912 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 22715410936448 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 22715209609984 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 22715008283520 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 22714806957056 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 22714605630592 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 22714404304128 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 22714202977664 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 22714001651200 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 22713800324736 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 22713598998272 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 22713397667712 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 22713196341248 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 22712995014784 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 22712793688320 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 22712592361856 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 22712391035392 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 22712189708928 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 22711988382464 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 22711787056000 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 22711585729536 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 22711384403072 -> hwthread 43 - OK[0m[1;34m
[0m[1;34m	threadid 22711183076608 -> hwthread 44 - OK[0m[1;34m
[0m[1;34m	threadid 22710981750144 -> hwthread 45 - OK[0m[1;34m
[0m[1;34m	threadid 22710780423680 -> hwthread 46 - OK[0m[1;34m
[0m[1;34m	threadid 22710579097216 -> hwthread 47 - OK[0m[1;34m
[0m[1;34m	threadid 22710377770752 -> hwthread 48 - OK[0m[1;34m
[0m[1;34m	threadid 22710176444288 -> hwthread 49 - OK[0m[1;34m
[0m[1;34m	threadid 22709975117824 -> hwthread 50 - OK[0m[1;34m
[0m[1;34m	threadid 22709773791360 -> hwthread 51 - OK[0m[1;34m
[0m[1;34m	threadid 22709572464896 -> hwthread 52 - OK[0m[1;34m
[0m[1;34m	threadid 22709371138432 -> hwthread 53 - OK[0m[1;34m
[0m[1;34m	threadid 22709169811968 -> hwthread 54 - OK[0m[1;34m
[0m[1;34m	threadid 22708968485504 -> hwthread 55 - OK[0m[1;34m
[0m[1;34m	threadid 22708767159040 -> hwthread 56 - OK[0m[1;34m
[0m[1;34m	threadid 22708565832576 -> hwthread 57 - OK[0m[1;34m
[0m[1;34m	threadid 22708364506112 -> hwthread 58 - OK[0m[1;34m
[0m[1;34m	threadid 22708163179648 -> hwthread 59 - OK[0m[1;34m
[0m[1;34m	threadid 22707961853184 -> hwthread 60 - OK[0m[1;34m
[0m[1;34m	threadid 22707760526720 -> hwthread 61 - OK[0m[1;34m
[0m[1;34m	threadid 22707559200256 -> hwthread 62 - OK[0m[1;34m
[0m[1;34m	threadid 22707357873792 -> hwthread 63 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 22719731693312 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 22719725102848 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 122, m: 122)                                                               	 1.20107   	 700       	 7.40813   	 0         	 0.20876   	 35.4864   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 6100, cols: 122, reductionFactor: 37, colBlockingSize: 12)                 	 0.871842  	 600       	 128.344   	 0         	 4.1792    	 30.7101   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 122, n: 50, r: 122, r2: 122)          	 0.774123  	 600       	 140.741   	 0         	 9.32122   	 15.099    
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 122, r: 122, r2: 6100, leftOrthog: 0)      	 0.624268  	 600       	 174.526   	 0         	 17.3954   	 10.0329   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 6100, cols: 72, reductionFactor: 37, colBlockingSize: 12)                  	 0.40678   	 700       	 111.775   	 0         	 6.11768   	 18.2708   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 6100, Xcols: 72, r: 72, streamingCols: 0)                   	 0.150074  	 700       	 147.499   	 0         	 32.8742   	 4.48676   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 122, reductionFactor: 37, colBlockingSize: 12)                 	 0.113299  	 100       	 67.4597   	 0         	 2.25868   	 29.8668   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 122, Qr2: 72)      	 0.109872  	 700       	 0         	 0         	 66.687    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 72, m: 3600, k: 72) 	 0.0744219 	 700       	 351.071   	 0         	 39.398    	 8.91089   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 72, m: 72)                                                                  	 0.0625358 	 809       	 6.43807   	 0         	 1.61697   	 3.98157   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 122)                                                                	 0.0578882 	 100       	 3.68814   	 0         	 0.203841  	 18.0932   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r: 122, r2: 122)           	 0.0513114 	 100       	 145.036   	 0         	 9.74261   	 14.8868   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 6100, m: 72)                                                                       	 0.0503698 	 700       	 0         	 0         	 97.6586   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 72, reductionFactor: 37, colBlockingSize: 12)                  	 0.0482534 	 101       	 55.7198   	 0         	 3.10089   	 17.969    
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 122, r: 122, r2: 2500, leftOrthog: 0)      	 0.0476666 	 100       	 156.126   	 0         	 15.8563   	 9.84633   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 122, n: 50, r: 122, r2: 50)           	 0.0445383 	 100       	 167.092   	 0         	 18.9554   	 8.81503   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 72, k: 2500)   	 0.0409122 	 800       	 351.973   	 0         	 48.2751   	 7.29099   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0407081 	 100       	 2.14945   	 0         	 0.148373  	 14.4868   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 6100, leftOrthog: 0)        	 0.0394156 	 100       	 77.3805   	 0         	 18.6728   	 4.14402   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 6100, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.032764  	 100       	 95.6058   	 0         	 7.50823   	 12.7335   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 72, n: 50, r2: 72)                                                                                         	 0.0319381 	 707       	 0         	 0         	 91.8049   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 2500, m: 72, k: 50)	 0.0317277 	 800       	 453.862   	 0         	 62.2497   	 7.29099   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 72, n: 50, r2: 72)                   	 0.0315389 	 700       	 0         	 0         	 155.967   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 6100, m: 72)                                                              	 0.0264171 	 700       	 0         	 0         	 186.207   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 3600, k: 72) 	 0.0259952 	 700       	 697.974   	 0         	 95.3898   	 7.31707   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 122, reductionFactor: 37, colBlockingSize: 12)                   	 0.0133091 	 100       	 11.4856   	 0         	 1.26133   	 9.10591   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 72, r: 72, streamingCols: 0)                   	 0.0126414 	 101       	 103.546   	 0         	 23.1758   	 4.46783   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00810895	 109       	 2.24032   	 0         	 0.811893  	 2.75937   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 50, Qr2: 72)       	 0.00710198	 100       	 0         	 0         	 68.7133   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 72)                                                                       	 0.0068725 	 101       	 0         	 0         	 42.3252   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 72)                                                              	 0.00563184	 101       	 0         	 0         	 51.6492   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 0, n: 50, r2: 72)                    	 0.00547192	 100       	 0         	 0         	 52.6324   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 50)           	 0.00496384	 8         	 20.1457   	 0         	 3.25555   	 6.18812   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.00428932	 101       	 6.04581   	 0         	 0.941874  	 6.41892   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 3600, k: 50) 	 0.00382635	 100       	 470.422   	 0         	 75.7902   	 6.2069    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3600, cols: 72, reductionFactor: 37, colBlockingSize: 12)                  	 0.00348649	 7         	 76.9643   	 0         	 4.24654   	 18.124    
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 72, r1_: 72, n: 50, r2: 72)           	 0.00280207	 7         	 93.243    	 0         	 10.4639   	 8.91089   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.00262785	 8         	 39.0825   	 0         	 3.1052    	 12.5861   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 72)                                                                                         	 0.00238302	 101       	 0         	 0         	 122.063   	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 122, r: 50, r2: 50, leftOrthog: 0)         	 0.00237048	 100       	 25.7332   	 0         	 7.8634    	 3.27253   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                   	 0.0017008 	 8         	 29.398    	 0         	 9.4544    	 3.10945   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 72, m: 72, fromLeft: 0)                	 0.00111796	 808       	 0         	 0         	 59.9473   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 50, r2: 50)              	 0.00107132	 100       	 23.3356   	 0         	 5.60055   	 4.16667   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 3600, Xcols: 72, r: 72, streamingCols: 0)                   	 0.00106946	 7         	 122.152   	 0         	 27.2807   	 4.47761   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50, k: 50)     	 0.000984162	 100       	 25.4023   	 0         	 6.09656   	 4.16667   
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                   	 0.000900947	 100       	 0.554972  	 0         	 2.21989   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 72, m: 50, k: 72)   	 0.000874681	 100       	 59.2673   	 0         	 11.3266   	 5.23256   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 72, n: 50, r2: 1)                                                                                          	 0.000844603	 201       	 0         	 0         	 13.7077   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 72)   	 0.000813284	 100       	 44.265    	 0         	 9.54156   	 4.63918   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000789445	 201       	 0         	 0         	 10.1844   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 3600, m: 72)                                                              	 0.000619106	 7         	 0         	 0         	 46.8908   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 3600, m: 72)                                                                       	 0.000617986	 7         	 0         	 0         	 46.9758   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 50, k: 50)  	 0.000577219	 100       	 43.3111   	 0         	 10.3947   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 72, n: 50, r2: 1)                    	 0.000543103	 100       	 0         	 0         	 17.9708   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                          	 0.000513543	 100       	 0         	 0         	 7.78903   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 1, r1low: 0, n: 50, r2: 50)                     	 0.000509832	 100       	 0         	 0         	 7.84572   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                                	 0.000456555	 101       	 0         	 0         	 8.84888   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                            	 0.000449845	 100       	 1.11149   	 0         	 13.3379   	 0.0833333 
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 1, Xr2: 50, Qr1: 1, Qr2: 0)          	 0.000431703	 100       	 0         	 0         	 9.26563   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.00042044	 101       	 0.600561  	 0         	 9.60898   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 72, n: 50, r2: 1)                                                                                 	 0.000377287	 101       	 0.963723  	 0         	 15.4196   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000331231	 100       	 0.75476   	 0         	 12.0762   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 72, r1_: 50, n: 50, r2: 72)           	 0.000285648	 1         	 90.7411   	 0         	 12.4013   	 7.31707   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 50)                                                                       	 0.000256836	 8         	 0         	 0         	 62.2966   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                              	 0.000225576	 8         	 0         	 0         	 70.9295   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 72, reductionFactor: 37, colBlockingSize: 12)                    	 6.2231e-05	 1         	 8.5554    	 0         	 1.12921   	 7.57643   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 50, r: 50, streamingCols: 0)                     	 3.3781e-05	 1         	 3.7003    	 0         	 1.48012   	 2.5       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 72, r: 50, streamingCols: 16)                    	 2.9941e-05	 1         	 4.17488   	 0         	 1.66995   	 2.5       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 72, r1_: 72, n: 50, r2: 1)            	 1.3121e-05	 1         	 39.5092   	 0         	 7.55064   	 5.23256   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 0)                	 1.0341e-05	 9         	 0         	 0         	 34.8129   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 1.007e-05 	 1         	 24.8262   	 0         	 5.95829   	 4.16667   
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 72, n: 50, r2: 1)                                                                                   	 9.24e-06  	 1         	 0.779221  	 0         	 3.11688   	 0.25      
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 9.17e-06  	 1         	 0.545256  	 0         	 2.18103   	 0.25      
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                         	 8.18e-06  	 2         	 0         	 0         	 9.77995   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 0, m: 3600, k: 50)  	 6.85e-06  	 100       	 0         	 0         	 21021.9   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 72)                                                                	 4.701e-06 	 1         	 0         	 0         	 12.2527   	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 72, fromLeft: 0)                	 1.46e-06  	 1         	 0         	 0         	 39.4521   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 6.0138    	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 6.01376   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                            	 4.87313   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                        	 4.8718    	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 3.95007   	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 1.49671   	 1818      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 1.29966   	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_leftOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                   	 1.14056   	 100       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 1.03191   	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.871044  	 900       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.81124   	 918       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.71372   	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.466004  	 918       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.165549  	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.117406  	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.105938  	 1800      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.0706448 	 918       
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                       	 0.0581253 	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0418964 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0380638 	 1000      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0364687 	 1310      
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                              	 0.0333548 	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0323049 	 900       
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                              	 0.0319232 	 20        
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 0.0263199 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 0.0262906 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.00807475	 18        
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00773781	 1818      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00526231	 5273      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00355635	 6472      
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.00112976	 818       
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00112896	 302       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000919357	 102       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000449845	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: L, orthoY: L
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m43->44  [0m[1;34m44->45  [0m[1;34m45->46  [0m[1;34m46->47  [0m[1;34m47->48  [0m[1;34m48->49  [0m[1;34m49->50  [0m[1;34m50->51  [0m[1;34m51->52  [0m[1;34m52->53  [0m[1;34m53->54  [0m[1;34m54->55  [0m[1;34m55->56  [0m[1;34m56->57  [0m[1;34m57->58  [0m[1;34m58->59  [0m[1;34m59->60  [0m[1;34m60->61  [0m[1;34m61->62  [0m[1;34m62->63  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 22887266891648 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 22887075407872 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 22886874081408 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 22886672754944 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 22886471428480 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 22886270102016 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 22886068775552 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 22885867449088 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 22885666122624 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 22885464796160 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 22885263469696 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 22885062143232 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 22884860816768 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 22884659490304 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 22884458163840 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 22884256837376 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 22884055510912 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 22883854184448 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 22883652857984 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 22883451531520 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 22883250205056 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 22883048878592 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 22882847552128 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 22882646225664 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 22882444899200 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 22882243572736 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 22882042246272 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 22881840919808 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 22881639593344 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 22881438266880 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 22881236940416 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 22881035613952 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 22880834283392 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 22880632956928 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 22880431630464 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 22880230304000 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 22880028977536 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 22879827651072 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 22879626324608 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 22879424998144 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 22879223671680 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 22879022345216 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 22878821018752 -> hwthread 43 - OK[0m[1;34m
[0m[1;34m	threadid 22878619692288 -> hwthread 44 - OK[0m[1;34m
[0m[1;34m	threadid 22878418365824 -> hwthread 45 - OK[0m[1;34m
[0m[1;34m	threadid 22878217039360 -> hwthread 46 - OK[0m[1;34m
[0m[1;34m	threadid 22878015712896 -> hwthread 47 - OK[0m[1;34m
[0m[1;34m	threadid 22877814386432 -> hwthread 48 - OK[0m[1;34m
[0m[1;34m	threadid 22877613059968 -> hwthread 49 - OK[0m[1;34m
[0m[1;34m	threadid 22877411733504 -> hwthread 50 - OK[0m[1;34m
[0m[1;34m	threadid 22877210407040 -> hwthread 51 - OK[0m[1;34m
[0m[1;34m	threadid 22877009080576 -> hwthread 52 - OK[0m[1;34m
[0m[1;34m	threadid 22876807754112 -> hwthread 53 - OK[0m[1;34m
[0m[1;34m	threadid 22876606427648 -> hwthread 54 - OK[0m[1;34m
[0m[1;34m	threadid 22876405101184 -> hwthread 55 - OK[0m[1;34m
[0m[1;34m	threadid 22876203774720 -> hwthread 56 - OK[0m[1;34m
[0m[1;34m	threadid 22876002448256 -> hwthread 57 - OK[0m[1;34m
[0m[1;34m	threadid 22875801121792 -> hwthread 58 - OK[0m[1;34m
[0m[1;34m	threadid 22875599795328 -> hwthread 59 - OK[0m[1;34m
[0m[1;34m	threadid 22875398468864 -> hwthread 60 - OK[0m[1;34m
[0m[1;34m	threadid 22875197142400 -> hwthread 61 - OK[0m[1;34m
[0m[1;34m	threadid 22874995815936 -> hwthread 62 - OK[0m[1;34m
[0m[1;34m	threadid 22874794489472 -> hwthread 63 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 22887161231104 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 22887154640640 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 123, m: 123)                                                               	 1.25754   	 700       	 7.25086   	 0         	 0.202662  	 35.778    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 6150, cols: 123, reductionFactor: 37, colBlockingSize: 12)                 	 0.876981  	 600       	 130.755   	 0         	 4.2231    	 30.9618   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 123, n: 50, r: 123, r2: 123)          	 0.787072  	 600       	 141.857   	 0         	 9.31876   	 15.2228   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 123, r: 123, r2: 6150, leftOrthog: 0)      	 0.627163  	 600       	 178.027   	 0         	 17.6001   	 10.1151   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 6150, cols: 73, reductionFactor: 37, colBlockingSize: 12)                  	 0.406004  	 700       	 116.065   	 0         	 6.26586   	 18.5234   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 6150, Xcols: 73, r: 73, streamingCols: 0)                   	 0.147301  	 700       	 155.744   	 0         	 34.237    	 4.549     
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 123, reductionFactor: 37, colBlockingSize: 12)                 	 0.114578  	 100       	 67.8046   	 0         	 2.25263   	 30.1002   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 123, Qr2: 73)      	 0.107271  	 700       	 0         	 0         	 69.4523   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 73, m: 3650, k: 73) 	 0.081304  	 700       	 334.93    	 0         	 37.0718   	 9.03465   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 73, m: 73)                                                                  	 0.0685103 	 809       	 6.1249    	 0         	 1.51715   	 4.03711   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 123)                                                                	 0.0583516 	 100       	 3.68885   	 0         	 0.203593  	 18.1187   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r: 123, r2: 123)           	 0.052078  	 100       	 145.253   	 0         	 9.67976   	 15.0059   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 6150, m: 73)                                                                       	 0.0502558 	 700       	 0         	 0         	 100.053   	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 123, r: 123, r2: 2500, leftOrthog: 0)      	 0.0493873 	 100       	 153.167   	 0         	 15.4332   	 9.92448   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 73, reductionFactor: 37, colBlockingSize: 12)                  	 0.0483317 	 101       	 57.1856   	 0         	 3.14009   	 18.2115   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 123, n: 50, r: 123, r2: 50)           	 0.0476998 	 100       	 158.586   	 0         	 17.9472   	 8.83621   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 6150, leftOrthog: 0)        	 0.0434636 	 100       	 70.7488   	 0         	 17.0717   	 4.1442    
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0417192 	 100       	 2.09736   	 0         	 0.144778  	 14.4868   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 73, k: 2500)   	 0.0408877 	 800       	 357.076   	 0         	 48.7032   	 7.33167   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 73, n: 50, r2: 73)                   	 0.0344939 	 700       	 0         	 0         	 145.772   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 6150, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0324924 	 100       	 97.1954   	 0         	 7.63256   	 12.7343   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 2500, m: 73, k: 50)	 0.0322608 	 800       	 452.561   	 0         	 61.7269   	 7.33167   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 73, n: 50, r2: 73)                                                                                         	 0.032125  	 707       	 0         	 0         	 93.8235   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 6150, m: 73)                                                              	 0.0300246 	 700       	 0         	 0         	 167.471   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 3650, k: 73) 	 0.0271025 	 700       	 688.185   	 0         	 93.5177   	 7.35887   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 73, r: 73, streamingCols: 0)                   	 0.0128345 	 101       	 104.84    	 0         	 23.1464   	 4.52944   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 123, reductionFactor: 37, colBlockingSize: 12)                   	 0.0123363 	 100       	 12.5953   	 0         	 1.37993   	 9.12748   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.0084177 	 109       	 2.15814   	 0         	 0.782114  	 2.75937   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 50, Qr2: 73)       	 0.00781653	 100       	 0         	 0         	 62.9435   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 73)                                                                       	 0.00669383	 101       	 0         	 0         	 44.0585   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 0, n: 50, r2: 73)                    	 0.00601311	 100       	 0         	 0         	 48.5605   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 73)                                                              	 0.00584573	 101       	 0         	 0         	 50.4505   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 3650, k: 50) 	 0.0052651 	 100       	 346.622   	 0         	 55.8394   	 6.20748   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 50)           	 0.00484604	 8         	 20.6354   	 0         	 3.33468   	 6.18812   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.00421467	 101       	 6.1529    	 0         	 0.958557  	 6.41892   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3650, cols: 73, reductionFactor: 37, colBlockingSize: 12)                  	 0.00361342	 7         	 77.398    	 0         	 4.21197   	 18.3757   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 73, r1_: 73, n: 50, r2: 73)           	 0.00285736	 7         	 95.3019   	 0         	 10.5485   	 9.03465   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.00264477	 8         	 38.8324   	 0         	 3.08534   	 12.5861   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 123, r: 50, r2: 50, leftOrthog: 0)         	 0.00227355	 100       	 27.0502   	 0         	 8.2514    	 3.27825   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 73)                                                                                         	 0.00226997	 101       	 0         	 0         	 129.922   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                   	 0.00180865	 8         	 27.645    	 0         	 8.89063   	 3.10945   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 73, m: 73, fromLeft: 0)                	 0.00170564	 808       	 0         	 0         	 40.3915   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 3650, Xcols: 73, r: 73, streamingCols: 0)                   	 0.00110186	 7         	 123.569   	 0         	 27.2191   	 4.5398    
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 50, r2: 50)              	 0.00109575	 100       	 22.8154   	 0         	 5.4757    	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50, k: 50)     	 0.00098199	 100       	 25.4585   	 0         	 6.11004   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 73, m: 50, k: 73)   	 0.000945547	 100       	 56.3589   	 0         	 10.685    	 5.27457   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 73)   	 0.000896907	 100       	 40.6954   	 0         	 8.74115   	 4.65561   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 73, n: 50, r2: 1)                                                                                          	 0.000844355	 201       	 0         	 0         	 13.9022   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                   	 0.000793804	 100       	 0.629878  	 0         	 2.51951   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000793008	 201       	 0         	 0         	 10.1386   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 3650, m: 73)                                                              	 0.000675626	 7         	 0         	 0         	 44.17     	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 3650, m: 73)                                                                       	 0.000614684	 7         	 0         	 0         	 48.5492   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 50, k: 50)  	 0.000612944	 100       	 40.7868   	 0         	 9.78882   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 73, n: 50, r2: 1)                    	 0.000544805	 100       	 0         	 0         	 18.0615   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 1, r1low: 0, n: 50, r2: 50)                     	 0.000516576	 100       	 0         	 0         	 7.74329   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                          	 0.000493006	 100       	 0         	 0         	 8.11349   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                                	 0.000455474	 101       	 0         	 0         	 8.86988   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 1, Xr2: 50, Qr1: 1, Qr2: 0)          	 0.000452421	 100       	 0         	 0         	 8.84132   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                            	 0.000450276	 100       	 1.11043   	 0         	 13.3252   	 0.0833333 
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000376755	 101       	 0.670197  	 0         	 10.7231   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 73, n: 50, r2: 1)                                                                                 	 0.000370296	 101       	 0.995555  	 0         	 15.9289   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000341181	 100       	 0.732749  	 0         	 11.724    	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 73, r1_: 50, n: 50, r2: 73)           	 0.000291737	 1         	 91.3323   	 0         	 12.4112   	 7.35887   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                              	 0.000285226	 8         	 0         	 0         	 56.0959   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 50)                                                                       	 0.000247408	 8         	 0         	 0         	 64.6705   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 73, reductionFactor: 37, colBlockingSize: 12)                    	 6.4111e-05	 1         	 8.5368    	 0         	 1.12043   	 7.6192    
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 50, r: 50, streamingCols: 0)                     	 3.3401e-05	 1         	 3.7424    	 0         	 1.49696   	 2.5       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 73, r: 50, streamingCols: 17)                    	 2.8531e-05	 1         	 4.3812    	 0         	 1.75248   	 2.5       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 73, r1_: 73, n: 50, r2: 1)            	 1.6541e-05	 1         	 32.2169   	 0         	 6.10797   	 5.27457   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 1.165e-05 	 1         	 21.4592   	 0         	 5.15021   	 4.16667   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 0)                	 9.95e-06  	 9         	 0         	 0         	 36.1809   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 8.89e-06  	 1         	 0.56243   	 0         	 2.24972   	 0.25      
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                         	 8.7e-06   	 2         	 0         	 0         	 9.1954    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 0, m: 3650, k: 50)  	 7.87e-06  	 100       	 0         	 0         	 18551.5   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 73, n: 50, r2: 1)                                                                                   	 6.92e-06  	 1         	 1.05491   	 0         	 4.21965   	 0.25      
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 73)                                                                	 4.65e-06  	 1         	 0         	 0         	 12.5591   	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 73, fromLeft: 0)                	 1.4e-06   	 1         	 0         	 0         	 41.7143   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 6.12477   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 6.12472   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                            	 4.96455   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                        	 4.96332   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 4.03537   	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 1.50126   	 1818      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 1.35761   	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_leftOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                   	 1.1601    	 100       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 1.03708   	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.887946  	 900       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.819269  	 918       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.722287  	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.465576  	 918       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.163108  	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.11554   	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.115522  	 1800      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.0769279 	 918       
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                       	 0.0578204 	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0418697 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0415683 	 1000      
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                              	 0.0372913 	 918       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0365254 	 1310      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0328738 	 900       
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                              	 0.0327715 	 20        
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 0.0270077 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 0.0269804 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.00802333	 18        
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00674365	 1818      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00361963	 6472      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00270585	 5273      
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.00171699	 818       
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00108823	 302       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000809614	 102       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000450276	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: L, orthoY: L
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m43->44  [0m[1;34m44->45  [0m[1;34m45->46  [0m[1;34m46->47  [0m[1;34m47->48  [0m[1;34m48->49  [0m[1;34m49->50  [0m[1;34m50->51  [0m[1;34m51->52  [0m[1;34m52->53  [0m[1;34m53->54  [0m[1;34m54->55  [0m[1;34m55->56  [0m[1;34m56->57  [0m[1;34m57->58  [0m[1;34m58->59  [0m[1;34m59->60  [0m[1;34m60->61  [0m[1;34m61->62  [0m[1;34m62->63  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 22676401325952 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 22676219357184 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 22676018030720 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 22675816704256 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 22675615377792 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 22675414051328 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 22675212724864 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 22675011398400 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 22674810071936 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 22674608745472 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 22674407419008 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 22674206092544 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 22674004766080 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 22673803439616 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 22673602113152 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 22673400786688 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 22673199460224 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 22672998133760 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 22672796807296 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 22672595480832 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 22672394154368 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 22672192827904 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 22671991501440 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 22671790174976 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 22671588848512 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 22671387522048 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 22671186195584 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 22670984869120 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 22670783542656 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 22670582216192 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 22670380889728 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 22670179563264 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 22669978232704 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 22669776906240 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 22669575579776 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 22669374253312 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 22669172926848 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 22668971600384 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 22668770273920 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 22668568947456 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 22668367620992 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 22668166294528 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 22667964968064 -> hwthread 43 - OK[0m[1;34m
[0m[1;34m	threadid 22667763641600 -> hwthread 44 - OK[0m[1;34m
[0m[1;34m	threadid 22667562315136 -> hwthread 45 - OK[0m[1;34m
[0m[1;34m	threadid 22667360988672 -> hwthread 46 - OK[0m[1;34m
[0m[1;34m	threadid 22667159662208 -> hwthread 47 - OK[0m[1;34m
[0m[1;34m	threadid 22666958335744 -> hwthread 48 - OK[0m[1;34m
[0m[1;34m	threadid 22666757009280 -> hwthread 49 - OK[0m[1;34m
[0m[1;34m	threadid 22666555682816 -> hwthread 50 - OK[0m[1;34m
[0m[1;34m	threadid 22666354356352 -> hwthread 51 - OK[0m[1;34m
[0m[1;34m	threadid 22666153029888 -> hwthread 52 - OK[0m[1;34m
[0m[1;34m	threadid 22665951703424 -> hwthread 53 - OK[0m[1;34m
[0m[1;34m	threadid 22665750376960 -> hwthread 54 - OK[0m[1;34m
[0m[1;34m	threadid 22665549050496 -> hwthread 55 - OK[0m[1;34m
[0m[1;34m	threadid 22665347724032 -> hwthread 56 - OK[0m[1;34m
[0m[1;34m	threadid 22665146397568 -> hwthread 57 - OK[0m[1;34m
[0m[1;34m	threadid 22664945071104 -> hwthread 58 - OK[0m[1;34m
[0m[1;34m	threadid 22664743744640 -> hwthread 59 - OK[0m[1;34m
[0m[1;34m	threadid 22664542418176 -> hwthread 60 - OK[0m[1;34m
[0m[1;34m	threadid 22664341091712 -> hwthread 61 - OK[0m[1;34m
[0m[1;34m	threadid 22664139765248 -> hwthread 62 - OK[0m[1;34m
[0m[1;34m	threadid 22663938438784 -> hwthread 63 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 22676295665408 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 22676289074944 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 124, m: 124)                                                               	 1.23845   	 700       	 7.54369   	 0         	 0.209142  	 36.0697   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 6200, cols: 124, reductionFactor: 37, colBlockingSize: 12)                 	 0.876962  	 600       	 133.973   	 0         	 4.29214   	 31.2136   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 124, n: 50, r: 124, r2: 124)          	 0.796508  	 600       	 143.624   	 0         	 9.35871   	 15.3465   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 124, r: 124, r2: 6200, leftOrthog: 0)      	 0.601961  	 600       	 190.041   	 0         	 18.6363   	 10.1974   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 6200, cols: 74, reductionFactor: 37, colBlockingSize: 12)                  	 0.409618  	 700       	 119.175   	 0         	 6.34724   	 18.7759   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 6200, Xcols: 74, r: 74, streamingCols: 0)                   	 0.150877  	 700       	 157.518   	 0         	 34.1595   	 4.61124   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 124, reductionFactor: 37, colBlockingSize: 12)                 	 0.117288  	 100       	 67.3197   	 0         	 2.21933   	 30.3333   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 124, Qr2: 74)      	 0.116676  	 700       	 0         	 0         	 64.9196   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 74, m: 3700, k: 74) 	 0.0845519 	 700       	 335.482   	 0         	 36.631    	 9.15842   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 74, m: 74)                                                                  	 0.0693292 	 809       	 6.30471   	 0         	 1.54049   	 4.09267   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 124)                                                                	 0.0591792 	 100       	 3.66683   	 0         	 0.202098  	 18.1438   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 6200, m: 74)                                                                       	 0.0567794 	 700       	 0         	 0         	 90.5004   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r: 124, r2: 124)           	 0.0528441 	 100       	 145.484   	 0         	 9.61887   	 15.1249   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 124, r: 124, r2: 2500, leftOrthog: 0)      	 0.0527327 	 100       	 145.792   	 0         	 14.5754   	 10.0026   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 74, reductionFactor: 37, colBlockingSize: 12)                  	 0.0484554 	 101       	 58.613    	 0         	 3.17621   	 18.4538   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 124, n: 50, r: 124, r2: 50)           	 0.0451847 	 100       	 170.146   	 0         	 19.21     	 8.85714   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0437345 	 100       	 2.00071   	 0         	 0.138106  	 14.4868   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 74, k: 2500)   	 0.0405644 	 800       	 364.852   	 0         	 49.4937   	 7.37169   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 6200, m: 74)                                                              	 0.0396199 	 700       	 0         	 0         	 129.696   	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 6200, leftOrthog: 0)        	 0.0394922 	 100       	 78.4965   	 0         	 18.9405   	 4.14439   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 74, n: 50, r2: 74)                   	 0.0365069 	 700       	 0         	 0         	 140.756   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 74, n: 50, r2: 74)                                                                                         	 0.0333134 	 707       	 0         	 0         	 92.9725   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 2500, m: 74, k: 50)	 0.0328046 	 800       	 451.157   	 0         	 61.2013   	 7.37169   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 6200, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0320231 	 100       	 99.4214   	 0         	 7.80686   	 12.7351   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 3700, k: 74) 	 0.02803   	 700       	 683.767   	 0         	 92.401    	 7.4       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 124, reductionFactor: 37, colBlockingSize: 12)                   	 0.0139491 	 100       	 11.3208   	 0         	 1.23741   	 9.1488    
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 74, r: 74, streamingCols: 0)                   	 0.0131619 	 101       	 105.053   	 0         	 22.8822   	 4.59103   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00799961	 109       	 2.27093   	 0         	 0.82299   	 2.75937   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 74)                                                              	 0.00679582	 101       	 0         	 0         	 43.9917   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 74)                                                                       	 0.0065447 	 101       	 0         	 0         	 45.6797   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 50, Qr2: 74)       	 0.00650897	 100       	 0         	 0         	 76.2025   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 3700, k: 50) 	 0.00595862	 100       	 310.475   	 0         	 50.0116   	 6.20805   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 0, n: 50, r2: 74)                    	 0.00564993	 100       	 0         	 0         	 52.39     	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 50)           	 0.00511287	 8         	 19.5585   	 0         	 3.16065   	 6.18812   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.0037436 	 101       	 6.92714   	 0         	 1.07918   	 6.41892   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3700, cols: 74, reductionFactor: 37, colBlockingSize: 12)                  	 0.00369708	 7         	 78.7983   	 0         	 4.23022   	 18.6275   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 74, r1_: 74, n: 50, r2: 74)           	 0.00295281	 7         	 96.0632   	 0         	 10.4891   	 9.15842   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 124, r: 50, r2: 50, leftOrthog: 0)         	 0.00278905	 100       	 22.2298   	 0         	 6.76934   	 3.2839    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.00269226	 8         	 38.1474   	 0         	 3.03091   	 12.5861   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 74)                                                                                         	 0.00234853	 101       	 0         	 0         	 127.297   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                   	 0.00187478	 8         	 26.6698   	 0         	 8.57702   	 3.10945   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 74, m: 74, fromLeft: 0)                	 0.00150737	 808       	 0         	 0         	 46.9652   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 50, r2: 50)              	 0.00113155	 100       	 22.0936   	 0         	 5.30246   	 4.16667   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 3700, Xcols: 74, r: 74, streamingCols: 0)                   	 0.0011029 	 7         	 128.596   	 0         	 27.9436   	 4.60199   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 74, m: 50, k: 74)   	 0.00100607	 100       	 54.4298   	 0         	 10.2387   	 5.31609   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50, k: 50)     	 0.000953779	 100       	 26.2115   	 0         	 6.29077   	 4.16667   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 3700, m: 74)                                                              	 0.000891213	 7         	 0         	 0         	 34.4088   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                   	 0.000890286	 100       	 0.561617  	 0         	 2.24647   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 74)   	 0.000870421	 100       	 42.5082   	 0         	 9.09905   	 4.67172   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 3700, m: 74)                                                                       	 0.000822993	 7         	 0         	 0         	 37.2611   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 74, n: 50, r2: 1)                                                                                          	 0.000820416	 201       	 0         	 0         	 14.5039   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000769191	 201       	 0         	 0         	 10.4525   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 50, k: 50)  	 0.000592611	 100       	 42.1862   	 0         	 10.1247   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 74, n: 50, r2: 1)                    	 0.000535512	 100       	 0         	 0         	 18.5243   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 1, r1low: 0, n: 50, r2: 50)                     	 0.000532042	 100       	 0         	 0         	 7.5182    	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                          	 0.000526582	 100       	 0         	 0         	 7.59616   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                                	 0.000467224	 101       	 0         	 0         	 8.64682   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 1, Xr2: 50, Qr1: 1, Qr2: 0)          	 0.000434442	 100       	 0         	 0         	 9.20721   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                            	 0.000434057	 100       	 1.15192   	 0         	 13.8231   	 0.0833333 
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000383929	 101       	 0.657674  	 0         	 10.5228   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 74, n: 50, r2: 1)                                                                                 	 0.000366213	 101       	 1.02044   	 0         	 16.3271   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000317972	 100       	 0.786233  	 0         	 12.5797   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 74, r1_: 50, n: 50, r2: 74)           	 0.000310078	 1         	 88.3004   	 0         	 11.9325   	 7.4       
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 50)                                                                       	 0.000280885	 8         	 0         	 0         	 56.9628   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                              	 0.000223286	 8         	 0         	 0         	 71.657    	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 74, reductionFactor: 37, colBlockingSize: 12)                    	 6.5082e-05	 1         	 8.64141   	 0         	 1.12793   	 7.66129   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 50, r: 50, streamingCols: 0)                     	 3.4591e-05	 1         	 3.61366   	 0         	 1.44546   	 2.5       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 74, r: 50, streamingCols: 15)                    	 2.9081e-05	 1         	 4.29834   	 0         	 1.71934   	 2.5       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 74, r1_: 74, n: 50, r2: 1)            	 1.43e-05  	 1         	 38.2937   	 0         	 7.20336   	 5.31609   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 0)                	 1.017e-05 	 9         	 0         	 0         	 35.3982   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 1.006e-05 	 1         	 0.497018  	 0         	 1.98807   	 0.25      
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 9.581e-06 	 1         	 26.0933   	 0         	 6.26239   	 4.16667   
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 74, n: 50, r2: 1)                                                                                   	 9.19e-06  	 1         	 0.805223  	 0         	 3.22089   	 0.25      
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                         	 8.34e-06  	 2         	 0         	 0         	 9.59233   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 0, m: 3700, k: 50)  	 7.701e-06 	 100       	 0         	 0         	 19218.3   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 74)                                                                	 4.53e-06  	 1         	 0         	 0         	 13.0684   	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 74, fromLeft: 0)                	 1.52e-06  	 1         	 0         	 0         	 38.9474   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 6.17101   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 6.17097   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                            	 4.9673    	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                        	 4.96599   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 4.01198   	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 1.50849   	 1818      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 1.34136   	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_leftOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                   	 1.2036    	 100       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 1.04087   	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.895668  	 900       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.845836  	 918       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.696975  	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.468805  	 918       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.167081  	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.123619  	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.120425  	 1800      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.0773289 	 918       
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                       	 0.0644364 	 818       
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                              	 0.048002  	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0432243 	 1000      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0415181 	 900       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0377781 	 1310      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0333972 	 900       
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                              	 0.0328774 	 20        
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 0.0281249 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 0.0280938 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.00839964	 18        
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00732404	 5273      
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00485917	 1818      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00390165	 6472      
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.00151906	 818       
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00106811	 302       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000909536	 102       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000434057	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: L, orthoY: L
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m43->44  [0m[1;34m44->45  [0m[1;34m45->46  [0m[1;34m46->47  [0m[1;34m47->48  [0m[1;34m48->49  [0m[1;34m49->50  [0m[1;34m50->51  [0m[1;34m51->52  [0m[1;34m52->53  [0m[1;34m53->54  [0m[1;34m54->55  [0m[1;34m55->56  [0m[1;34m56->57  [0m[1;34m57->58  [0m[1;34m58->59  [0m[1;34m59->60  [0m[1;34m60->61  [0m[1;34m61->62  [0m[1;34m62->63  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 23145588180864 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 23145377425408 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 23145176098944 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 23144974772480 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 23144773446016 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 23144572119552 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 23144370793088 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 23144169466624 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 23143968140160 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 23143766813696 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 23143565487232 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 23143364160768 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 23143162834304 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 23142961507840 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 23142760181376 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 23142558854912 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 23142357528448 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 23142156201984 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 23141954875520 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 23141753549056 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 23141552222592 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 23141350896128 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 23141149569664 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 23140948243200 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 23140746916736 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 23140545590272 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 23140344263808 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 23140142937344 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 23139941610880 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 23139740284416 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 23139538957952 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 23139337631488 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 23139136300928 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 23138934974464 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 23138733648000 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 23138532321536 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 23138330995072 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 23138129668608 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 23137928342144 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 23137727015680 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 23137525689216 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 23137324362752 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 23137123036288 -> hwthread 43 - OK[0m[1;34m
[0m[1;34m	threadid 23136921709824 -> hwthread 44 - OK[0m[1;34m
[0m[1;34m	threadid 23136720383360 -> hwthread 45 - OK[0m[1;34m
[0m[1;34m	threadid 23136519056896 -> hwthread 46 - OK[0m[1;34m
[0m[1;34m	threadid 23136317730432 -> hwthread 47 - OK[0m[1;34m
[0m[1;34m	threadid 23136116403968 -> hwthread 48 - OK[0m[1;34m
[0m[1;34m	threadid 23135915077504 -> hwthread 49 - OK[0m[1;34m
[0m[1;34m	threadid 23135713751040 -> hwthread 50 - OK[0m[1;34m
[0m[1;34m	threadid 23135512424576 -> hwthread 51 - OK[0m[1;34m
[0m[1;34m	threadid 23135311098112 -> hwthread 52 - OK[0m[1;34m
[0m[1;34m	threadid 23135109771648 -> hwthread 53 - OK[0m[1;34m
[0m[1;34m	threadid 23134908445184 -> hwthread 54 - OK[0m[1;34m
[0m[1;34m	threadid 23134707118720 -> hwthread 55 - OK[0m[1;34m
[0m[1;34m	threadid 23134505792256 -> hwthread 56 - OK[0m[1;34m
[0m[1;34m	threadid 23134304465792 -> hwthread 57 - OK[0m[1;34m
[0m[1;34m	threadid 23134103139328 -> hwthread 58 - OK[0m[1;34m
[0m[1;34m	threadid 23133901812864 -> hwthread 59 - OK[0m[1;34m
[0m[1;34m	threadid 23133700486400 -> hwthread 60 - OK[0m[1;34m
[0m[1;34m	threadid 23133499159936 -> hwthread 61 - OK[0m[1;34m
[0m[1;34m	threadid 23133297833472 -> hwthread 62 - OK[0m[1;34m
[0m[1;34m	threadid 23133096507008 -> hwthread 63 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 23145482520320 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 23145475929856 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 125, m: 125)                                                               	 1.29632   	 700       	 7.38266   	 0         	 0.203036  	 36.3614   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 6250, cols: 125, reductionFactor: 37, colBlockingSize: 12)                 	 0.890204  	 600       	 135.199   	 0         	 4.29677   	 31.4653   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 125, n: 50, r: 125, r2: 125)          	 0.815947  	 600       	 143.621   	 0         	 9.28369   	 15.4703   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 125, r: 125, r2: 6250, leftOrthog: 0)      	 0.66822   	 600       	 175.373   	 0         	 17.0602   	 10.2796   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 6250, cols: 75, reductionFactor: 37, colBlockingSize: 12)                  	 0.427304  	 700       	 118.298   	 0         	 6.21689   	 19.0284   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 6250, Xcols: 75, r: 75, streamingCols: 0)                   	 0.157413  	 700       	 156.336   	 0         	 33.4518   	 4.67348   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 125, reductionFactor: 37, colBlockingSize: 12)                 	 0.121745  	 100       	 65.9051   	 0         	 2.15614   	 30.5663   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 125, Qr2: 75)      	 0.108689  	 700       	 0         	 0         	 70.8445   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 75, m: 3750, k: 75) 	 0.0845258 	 700       	 349.375   	 0         	 37.6394   	 9.28218   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 75, m: 75)                                                                  	 0.0724415 	 809       	 6.2818    	 0         	 1.51433   	 4.14823   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 125)                                                                	 0.059629  	 100       	 3.66852   	 0         	 0.201915  	 18.1686   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 6250, m: 75)                                                                       	 0.055144  	 700       	 0         	 0         	 95.2054   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r: 125, r2: 125)           	 0.0512651 	 100       	 152.394   	 0         	 9.99705   	 15.2439   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 125, r: 125, r2: 2500, leftOrthog: 0)      	 0.0507294 	 100       	 154.004   	 0         	 15.2772   	 10.0806   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 75, reductionFactor: 37, colBlockingSize: 12)                  	 0.0504461 	 101       	 57.8319   	 0         	 3.0933    	 18.6959   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 125, n: 50, r: 125, r2: 50)           	 0.0446895 	 100       	 174.817   	 0         	 19.6914   	 8.87784   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0416311 	 100       	 2.10179   	 0         	 0.145084  	 14.4868   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 6250, leftOrthog: 0)        	 0.0402854 	 100       	 77.5715   	 0         	 18.7164   	 4.14456   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 75, k: 2500)   	 0.0394839 	 800       	 379.902   	 0         	 51.2614   	 7.41107   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 75, n: 50, r2: 75)                   	 0.0361618 	 700       	 0         	 0         	 145.181   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 75, n: 50, r2: 75)                                                                                         	 0.0340954 	 707       	 0         	 0         	 93.3117   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 2500, m: 75, k: 50)	 0.0332899 	 800       	 450.588   	 0         	 60.7993   	 7.41107   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 6250, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0328732 	 100       	 97.6316   	 0         	 7.66583   	 12.736    
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 6250, m: 75)                                                              	 0.0307094 	 700       	 0         	 0         	 170.958   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 3750, k: 75) 	 0.028253  	 700       	 696.829   	 0         	 93.6539   	 7.44048   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 125, reductionFactor: 37, colBlockingSize: 12)                   	 0.0139923 	 100       	 11.4686   	 0         	 1.25068   	 9.16988   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 75, r: 75, streamingCols: 0)                   	 0.0134474 	 101       	 105.62    	 0         	 22.7013   	 4.65261   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00829702	 109       	 2.18953   	 0         	 0.79349   	 2.75937   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 75)                                                                       	 0.00698032	 101       	 0         	 0         	 43.4077   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 50, Qr2: 75)       	 0.00646708	 100       	 0         	 0         	 77.3147   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 3750, k: 50) 	 0.00597579	 100       	 313.766   	 0         	 50.5373   	 6.20861   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 75)                                                              	 0.00590554	 101       	 0         	 0         	 51.3078   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 0, n: 50, r2: 75)                    	 0.00585632	 100       	 0         	 0         	 51.2267   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 50)           	 0.00491597	 8         	 20.3419   	 0         	 3.28725   	 6.18812   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3750, cols: 75, reductionFactor: 37, colBlockingSize: 12)                  	 0.00380371	 7         	 79.7364   	 0         	 4.22351   	 18.8792   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.00380348	 101       	 6.81808   	 0         	 1.06219   	 6.41892   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 75, r1_: 75, n: 50, r2: 75)           	 0.00307775	 7         	 95.9509   	 0         	 10.3371   	 9.28218   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.00264357	 8         	 38.8501   	 0         	 3.08674   	 12.5861   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 125, r: 50, r2: 50, leftOrthog: 0)         	 0.00248396	 100       	 25.1615   	 0         	 7.64909   	 3.28947   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 75)                                                                                         	 0.00245223	 101       	 0         	 0         	 123.561   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                   	 0.00177141	 8         	 28.2262   	 0         	 9.07754   	 3.10945   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 75, m: 75, fromLeft: 0)                	 0.00176351	 808       	 0         	 0         	 41.2361   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 50, r2: 50)              	 0.00112883	 100       	 22.1468   	 0         	 5.31524   	 4.16667   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 3750, Xcols: 75, r: 75, streamingCols: 0)                   	 0.00112332	 7         	 131.446   	 0         	 28.1821   	 4.66418   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 75, n: 50, r2: 1)                                                                                          	 0.00109909	 201       	 0         	 0         	 10.9727   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 3750, m: 75)                                                                       	 0.00106813	 7         	 0         	 0         	 29.4909   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50, k: 50)     	 0.000968145	 100       	 25.8226   	 0         	 6.19742   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 75, m: 50, k: 75)   	 0.00096365	 100       	 58.3718   	 0         	 10.8961   	 5.35714   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 75)   	 0.000886543	 100       	 42.2991   	 0         	 9.02381   	 4.6875    
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                   	 0.00080412	 100       	 0.621798  	 0         	 2.48719   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000797914	 201       	 0         	 0         	 10.0763   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 50, k: 50)  	 0.000587978	 100       	 42.5186   	 0         	 10.2045   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 75, n: 50, r2: 1)                    	 0.000532277	 100       	 0         	 0         	 18.7872   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                          	 0.000506832	 100       	 0         	 0         	 7.89216   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 1, r1low: 0, n: 50, r2: 50)                     	 0.000498343	 100       	 0         	 0         	 8.0266    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 1, Xr2: 50, Qr1: 1, Qr2: 0)          	 0.000447219	 100       	 0         	 0         	 8.94416   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                                	 0.000433534	 101       	 0         	 0         	 9.31876   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 3750, m: 75)                                                              	 0.000432423	 7         	 0         	 0         	 72.8453   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                            	 0.000414682	 100       	 1.20574   	 0         	 14.4689   	 0.0833333 
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000395609	 101       	 0.638256  	 0         	 10.2121   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 75, n: 50, r2: 1)                                                                                 	 0.000363918	 101       	 1.04076   	 0         	 16.6521   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000352247	 100       	 0.709729  	 0         	 11.3557   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 75, r1_: 50, n: 50, r2: 75)           	 0.000318058	 1         	 88.4273   	 0         	 11.8846   	 7.44048   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 50)                                                                       	 0.000280418	 8         	 0         	 0         	 57.0577   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                              	 0.000201977	 8         	 0         	 0         	 79.2169   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 75, reductionFactor: 37, colBlockingSize: 12)                    	 6.7842e-05	 1         	 8.51541   	 0         	 1.10551   	 7.7027    
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 50, r: 50, streamingCols: 0)                     	 3.2891e-05	 1         	 3.80043   	 0         	 1.52017   	 2.5       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 75, r: 50, streamingCols: 18)                    	 2.9911e-05	 1         	 4.17906   	 0         	 1.67163   	 2.5       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 75, r1_: 75, n: 50, r2: 1)            	 1.515e-05 	 1         	 37.1287   	 0         	 6.93069   	 5.35714   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 1.006e-05 	 1         	 24.8509   	 0         	 5.96421   	 4.16667   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 0)                	 9.8e-06   	 9         	 0         	 0         	 36.7347   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 9.731e-06 	 1         	 0.513822  	 0         	 2.05529   	 0.25      
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                         	 8.68e-06  	 2         	 0         	 0         	 9.21659   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 75, n: 50, r2: 1)                                                                                   	 8.61e-06  	 1         	 0.87108   	 0         	 3.48432   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 0, m: 3750, k: 50)  	 7.92e-06  	 100       	 0         	 0         	 18939.4   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 75)                                                                	 5.18e-06  	 1         	 0         	 0         	 11.583    	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 75, fromLeft: 0)                	 1.61e-06  	 1         	 0         	 0         	 37.2671   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 6.33721   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 6.33715   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                            	 5.12264   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                        	 5.12139   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 4.16594   	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 1.54688   	 1818      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 1.39758   	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_leftOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                   	 1.21445   	 100       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 1.05951   	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.913031  	 900       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.863263  	 918       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.761719  	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.488577  	 918       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.173818  	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.120613  	 1800      
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.115603  	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.0807385 	 918       
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                       	 0.0634815 	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0430487 	 1000      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.040452  	 900       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0389515 	 1310      
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                              	 0.037688  	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0338778 	 900       
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                              	 0.0331112 	 20        
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 0.027674  	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 0.0276449 	 2         
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.0087033 	 5273      
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.00833698	 18        
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00653255	 1818      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00378474	 6472      
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.00177492	 818       
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00111177	 302       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000822461	 102       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000414682	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: L, orthoY: L
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m43->44  [0m[1;34m44->45  [0m[1;34m45->46  [0m[1;34m46->47  [0m[1;34m47->48  [0m[1;34m48->49  [0m[1;34m49->50  [0m[1;34m50->51  [0m[1;34m51->52  [0m[1;34m52->53  [0m[1;34m53->54  [0m[1;34m54->55  [0m[1;34m55->56  [0m[1;34m56->57  [0m[1;34m57->58  [0m[1;34m58->59  [0m[1;34m59->60  [0m[1;34m60->61  [0m[1;34m61->62  [0m[1;34m62->63  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 22359434438528 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 22359197083648 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 22358995757184 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 22358794430720 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 22358593104256 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 22358391777792 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 22358190451328 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 22357989124864 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 22357787798400 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 22357586471936 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 22357385145472 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 22357183819008 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 22356982492544 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 22356781166080 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 22356579839616 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 22356378513152 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 22356177186688 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 22355975860224 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 22355774533760 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 22355573207296 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 22355371880832 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 22355170554368 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 22354969227904 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 22354767901440 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 22354566574976 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 22354365248512 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 22354163922048 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 22353962595584 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 22353761269120 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 22353559942656 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 22353358616192 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 22353157289728 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 22352955959168 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 22352754632704 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 22352553306240 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 22352351979776 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 22352150653312 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 22351949326848 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 22351748000384 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 22351546673920 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 22351345347456 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 22351144020992 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 22350942694528 -> hwthread 43 - OK[0m[1;34m
[0m[1;34m	threadid 22350741368064 -> hwthread 44 - OK[0m[1;34m
[0m[1;34m	threadid 22350540041600 -> hwthread 45 - OK[0m[1;34m
[0m[1;34m	threadid 22350338715136 -> hwthread 46 - OK[0m[1;34m
[0m[1;34m	threadid 22350137388672 -> hwthread 47 - OK[0m[1;34m
[0m[1;34m	threadid 22349936062208 -> hwthread 48 - OK[0m[1;34m
[0m[1;34m	threadid 22349734735744 -> hwthread 49 - OK[0m[1;34m
[0m[1;34m	threadid 22349533409280 -> hwthread 50 - OK[0m[1;34m
[0m[1;34m	threadid 22349332082816 -> hwthread 51 - OK[0m[1;34m
[0m[1;34m	threadid 22349130756352 -> hwthread 52 - OK[0m[1;34m
[0m[1;34m	threadid 22348929429888 -> hwthread 53 - OK[0m[1;34m
[0m[1;34m	threadid 22348728103424 -> hwthread 54 - OK[0m[1;34m
[0m[1;34m	threadid 22348526776960 -> hwthread 55 - OK[0m[1;34m
[0m[1;34m	threadid 22348325450496 -> hwthread 56 - OK[0m[1;34m
[0m[1;34m	threadid 22348124124032 -> hwthread 57 - OK[0m[1;34m
[0m[1;34m	threadid 22347922797568 -> hwthread 58 - OK[0m[1;34m
[0m[1;34m	threadid 22347721471104 -> hwthread 59 - OK[0m[1;34m
[0m[1;34m	threadid 22347520144640 -> hwthread 60 - OK[0m[1;34m
[0m[1;34m	threadid 22347318818176 -> hwthread 61 - OK[0m[1;34m
[0m[1;34m	threadid 22347117491712 -> hwthread 62 - OK[0m[1;34m
[0m[1;34m	threadid 22346916165248 -> hwthread 63 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 22359328777984 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 22359322187520 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 126, m: 126)                                                               	 1.28905   	 700       	 7.60391   	 0         	 0.207456  	 36.653    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 6300, cols: 126, reductionFactor: 37, colBlockingSize: 12)                 	 0.898874  	 600       	 137.134   	 0         	 4.32368   	 31.717    
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 126, n: 50, r: 126, r2: 126)          	 0.845858  	 600       	 141.894   	 0         	 9.09927   	 15.5941   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 126, r: 126, r2: 6300, leftOrthog: 0)      	 0.660373  	 600       	 181.75    	 0         	 17.5403   	 10.3618   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 6300, cols: 76, reductionFactor: 37, colBlockingSize: 12)                  	 0.434261  	 700       	 120.483   	 0         	 6.24884   	 19.2809   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 6300, Xcols: 76, r: 76, streamingCols: 0)                   	 0.159634  	 700       	 159.566   	 0         	 33.6942   	 4.73572   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 126, reductionFactor: 37, colBlockingSize: 12)                 	 0.118912  	 100       	 68.5594   	 0         	 2.22602   	 30.7991   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 126, Qr2: 76)      	 0.10405   	 700       	 0         	 0         	 75.2189   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 76, m: 3800, k: 76) 	 0.0824918 	 700       	 372.501   	 0         	 39.6028   	 9.40594   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 76, m: 76)                                                                  	 0.0717867 	 809       	 6.59604   	 0         	 1.56908   	 4.20377   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 126)                                                                	 0.059926  	 100       	 3.67954   	 0         	 0.202249  	 18.1931   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 6300, m: 76)                                                                       	 0.0563206 	 700       	 0         	 0         	 95.2148   	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 126, r: 126, r2: 2500, leftOrthog: 0)      	 0.0543792 	 100       	 145.975   	 0         	 14.3695   	 10.1587   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 76, reductionFactor: 37, colBlockingSize: 12)                  	 0.0534092 	 101       	 56.0898   	 0         	 2.96179   	 18.9378   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r: 126, r2: 126)           	 0.0529994 	 100       	 149.775   	 0         	 9.74918   	 15.3629   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 76, k: 2500)   	 0.0468496 	 800       	 324.442   	 0         	 43.5504   	 7.44981   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 126, n: 50, r: 126, r2: 50)           	 0.0452748 	 100       	 175.329   	 0         	 19.7037   	 8.89831   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0420035 	 100       	 2.08316   	 0         	 0.143798  	 14.4868   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 6300, leftOrthog: 0)        	 0.0418789 	 100       	 75.2168   	 0         	 18.1475   	 4.14474   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 6300, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0367444 	 100       	 88.0444   	 0         	 6.91262   	 12.7368   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 76, n: 50, r2: 76)                   	 0.0341649 	 700       	 0         	 0         	 156.961   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 2500, m: 76, k: 50)	 0.0334593 	 800       	 454.284   	 0         	 60.9792   	 7.44981   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 76, n: 50, r2: 76)                                                                                         	 0.0334374 	 707       	 0         	 0         	 97.7021   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 6300, m: 76)                                                              	 0.0309558 	 700       	 0         	 0         	 173.233   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 3800, k: 76) 	 0.0293397 	 700       	 689.033   	 0         	 92.1129   	 7.48031   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 76, r: 76, streamingCols: 0)                   	 0.0136039 	 101       	 107.207   	 0         	 22.7415   	 4.71417   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 126, reductionFactor: 37, colBlockingSize: 12)                   	 0.0134807 	 100       	 12.0951   	 0         	 1.31601   	 9.19072   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00837555	 109       	 2.169     	 0         	 0.78605   	 2.75937   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 76)                                                                       	 0.00705556	 101       	 0         	 0         	 43.5174   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 50, Qr2: 76)       	 0.00671259	 100       	 0         	 0         	 75.0828   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 0, n: 50, r2: 76)                    	 0.00550666	 100       	 0         	 0         	 55.2059   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 76)                                                              	 0.0052529 	 101       	 0         	 0         	 58.4516   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 50)           	 0.00494284	 8         	 20.2313   	 0         	 3.26938   	 6.18812   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 3800, k: 50) 	 0.0043415 	 100       	 437.637   	 0         	 70.4826   	 6.20915   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.00393502	 101       	 6.59016   	 0         	 1.02668   	 6.41892   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3800, cols: 76, reductionFactor: 37, colBlockingSize: 12)                  	 0.00387627	 7         	 81.4155   	 0         	 4.25571   	 19.1309   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 76, r1_: 76, n: 50, r2: 76)           	 0.00307853	 7         	 99.8149   	 0         	 10.6119   	 9.40594   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.00268976	 8         	 38.1829   	 0         	 3.03373   	 12.5861   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 76)                                                                                         	 0.00261349	 101       	 0         	 0         	 117.483   	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 126, r: 50, r2: 50, leftOrthog: 0)         	 0.00234294	 100       	 26.8892   	 0         	 8.16067   	 3.29498   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                   	 0.0018408 	 8         	 27.1621   	 0         	 8.73535   	 3.10945   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 76, m: 76, fromLeft: 0)                	 0.00128316	 808       	 0         	 0         	 58.1939   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 3800, Xcols: 76, r: 76, streamingCols: 0)                   	 0.00116648	 7         	 131.714   	 0         	 27.8679   	 4.72637   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 50, r2: 50)              	 0.00103808	 100       	 24.0829   	 0         	 5.77988   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50, k: 50)     	 0.00101274	 100       	 24.6856   	 0         	 5.92453   	 4.16667   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 3800, m: 76)                                                              	 0.000962085	 7         	 0         	 0         	 33.6203   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 76, m: 50, k: 76)   	 0.000956128	 100       	 60.4103   	 0         	 11.1918   	 5.39773   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 76)   	 0.000881649	 100       	 43.1011   	 0         	 9.16464   	 4.70297   
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                   	 0.000839379	 100       	 0.595678  	 0         	 2.38271   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 76, n: 50, r2: 1)                                                                                          	 0.000823104	 201       	 0         	 0         	 14.8472   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000818411	 201       	 0         	 0         	 9.82391   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 3800, m: 76)                                                                       	 0.000761339	 7         	 0         	 0         	 42.4851   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 50, k: 50)  	 0.000583784	 100       	 42.8241   	 0         	 10.2778   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 76, n: 50, r2: 1)                    	 0.000564558	 100       	 0         	 0         	 17.8547   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                          	 0.000506056	 100       	 0         	 0         	 7.90426   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 1, r1low: 0, n: 50, r2: 50)                     	 0.000502729	 100       	 0         	 0         	 7.95657   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                            	 0.00044763	 100       	 1.11699   	 0         	 13.4039   	 0.0833333 
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 1, Xr2: 50, Qr1: 1, Qr2: 0)          	 0.000437777	 100       	 0         	 0         	 9.13707   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                                	 0.000431638	 101       	 0         	 0         	 9.35969   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000394678	 101       	 0.639762  	 0         	 10.2362   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 76, n: 50, r2: 1)                                                                                 	 0.00036726	 101       	 1.04504   	 0         	 16.7206   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.00033358	 100       	 0.749445  	 0         	 11.9911   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 76, r1_: 50, n: 50, r2: 76)           	 0.000311008	 1         	 92.8593   	 0         	 12.4138   	 7.48031   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                              	 0.000270418	 8         	 0         	 0         	 59.1677   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 50)                                                                       	 0.000252205	 8         	 0         	 0         	 63.4405   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 76, reductionFactor: 37, colBlockingSize: 12)                    	 6.9702e-05	 1         	 8.51067   	 0         	 1.09908   	 7.74346   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 50, r: 50, streamingCols: 0)                     	 3.1791e-05	 1         	 3.93193   	 0         	 1.57277   	 2.5       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 76, r: 50, streamingCols: 18)                    	 2.8301e-05	 1         	 4.41681   	 0         	 1.76672   	 2.5       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 76, r1_: 76, n: 50, r2: 1)            	 1.499e-05 	 1         	 38.5324   	 0         	 7.13863   	 5.39773   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 1.098e-05 	 1         	 22.7687   	 0         	 5.46448   	 4.16667   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 0)                	 9.74e-06  	 9         	 0         	 0         	 36.961    	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 76, n: 50, r2: 1)                                                                                   	 9.12e-06  	 1         	 0.833333  	 0         	 3.33333   	 0.25      
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                         	 8.61e-06  	 2         	 0         	 0         	 9.29152   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 0, m: 3800, k: 50)  	 7.35e-06  	 100       	 0         	 0         	 20680.3   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 7.13e-06  	 1         	 0.701262  	 0         	 2.80505   	 0.25      
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 76)                                                                	 4.83e-06  	 1         	 0         	 0         	 12.588    	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 76, fromLeft: 0)                	 1.51e-06  	 1         	 0         	 0         	 40.2649   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 6.39048   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 6.39042   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                            	 5.17032   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                        	 5.16905   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 4.18243   	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 1.56625   	 1818      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 1.39098   	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_leftOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                   	 1.22003   	 100       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 1.06867   	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.94517   	 900       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.876922  	 918       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.758974  	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.498795  	 918       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.176305  	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.118018  	 1800      
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.111201  	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.0801622 	 918       
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                       	 0.0643984 	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0478624 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0407388 	 1000      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0381985 	 1310      
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                              	 0.0378777 	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.034043  	 900       
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                              	 0.0340413 	 20        
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 0.0285056 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 0.028478  	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.00835834	 18        
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00787921	 1818      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00364244	 6472      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00203321	 5273      
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.00129441	 818       
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00109552	 302       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000855629	 102       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.00044763	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: L, orthoY: L
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m43->44  [0m[1;34m44->45  [0m[1;34m45->46  [0m[1;34m46->47  [0m[1;34m47->48  [0m[1;34m48->49  [0m[1;34m49->50  [0m[1;34m50->51  [0m[1;34m51->52  [0m[1;34m52->53  [0m[1;34m53->54  [0m[1;34m54->55  [0m[1;34m55->56  [0m[1;34m56->57  [0m[1;34m57->58  [0m[1;34m58->59  [0m[1;34m59->60  [0m[1;34m60->61  [0m[1;34m61->62  [0m[1;34m62->63  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 23377329670016 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 23377104332800 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 23376903006336 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 23376701679872 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 23376500353408 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 23376299026944 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 23376097700480 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 23375896374016 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 23375695047552 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 23375493721088 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 23375292394624 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 23375091068160 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 23374889741696 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 23374688415232 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 23374487088768 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 23374285762304 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 23374084435840 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 23373883109376 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 23373681782912 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 23373480456448 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 23373279129984 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 23373077803520 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 23372876477056 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 23372675150592 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 23372473824128 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 23372272497664 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 23372071171200 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 23371869844736 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 23371668518272 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 23371467191808 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 23371265865344 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 23371064538880 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 23370863208320 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 23370661881856 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 23370460555392 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 23370259228928 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 23370057902464 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 23369856576000 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 23369655249536 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 23369453923072 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 23369252596608 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 23369051270144 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 23368849943680 -> hwthread 43 - OK[0m[1;34m
[0m[1;34m	threadid 23368648617216 -> hwthread 44 - OK[0m[1;34m
[0m[1;34m	threadid 23368447290752 -> hwthread 45 - OK[0m[1;34m
[0m[1;34m	threadid 23368245964288 -> hwthread 46 - OK[0m[1;34m
[0m[1;34m	threadid 23368044637824 -> hwthread 47 - OK[0m[1;34m
[0m[1;34m	threadid 23367843311360 -> hwthread 48 - OK[0m[1;34m
[0m[1;34m	threadid 23367641984896 -> hwthread 49 - OK[0m[1;34m
[0m[1;34m	threadid 23367440658432 -> hwthread 50 - OK[0m[1;34m
[0m[1;34m	threadid 23367239331968 -> hwthread 51 - OK[0m[1;34m
[0m[1;34m	threadid 23367038005504 -> hwthread 52 - OK[0m[1;34m
[0m[1;34m	threadid 23366836679040 -> hwthread 53 - OK[0m[1;34m
[0m[1;34m	threadid 23366635352576 -> hwthread 54 - OK[0m[1;34m
[0m[1;34m	threadid 23366434026112 -> hwthread 55 - OK[0m[1;34m
[0m[1;34m	threadid 23366232699648 -> hwthread 56 - OK[0m[1;34m
[0m[1;34m	threadid 23366031373184 -> hwthread 57 - OK[0m[1;34m
[0m[1;34m	threadid 23365830046720 -> hwthread 58 - OK[0m[1;34m
[0m[1;34m	threadid 23365628720256 -> hwthread 59 - OK[0m[1;34m
[0m[1;34m	threadid 23365427393792 -> hwthread 60 - OK[0m[1;34m
[0m[1;34m	threadid 23365226067328 -> hwthread 61 - OK[0m[1;34m
[0m[1;34m	threadid 23365024740864 -> hwthread 62 - OK[0m[1;34m
[0m[1;34m	threadid 23364823414400 -> hwthread 63 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 23377224009472 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 23377217419008 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 127, m: 127)                                                               	 1.34215   	 700       	 7.47835   	 0         	 0.20242   	 36.9447   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 6350, cols: 127, reductionFactor: 37, colBlockingSize: 12)                 	 0.911605  	 600       	 138.464   	 0         	 4.33124   	 31.9687   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 127, n: 50, r: 127, r2: 127)          	 0.827126  	 600       	 148.59    	 0         	 9.45363   	 15.7178   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 127, r: 127, r2: 6350, leftOrthog: 0)      	 0.671598  	 600       	 183.001   	 0         	 17.522    	 10.4441   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 6350, cols: 77, reductionFactor: 37, colBlockingSize: 12)                  	 0.431325  	 700       	 125.505   	 0         	 6.42514   	 19.5334   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 6350, Xcols: 77, r: 77, streamingCols: 0)                   	 0.16377   	 700       	 160.923   	 0         	 33.54     	 4.79796   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 127, reductionFactor: 37, colBlockingSize: 12)                 	 0.124523  	 100       	 66.5137   	 0         	 2.14341   	 31.0317   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 127, Qr2: 77)      	 0.114496  	 700       	 0         	 0         	 69.4716   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 77, m: 3850, k: 77) 	 0.0906659 	 700       	 352.473   	 0         	 36.9868   	 9.5297    
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 77, m: 77)                                                                  	 0.0769956 	 809       	 6.39577   	 0         	 1.50159   	 4.25933   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 127)                                                                	 0.0615447 	 100       	 3.61119   	 0         	 0.19823   	 18.2172   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 6350, m: 77)                                                                       	 0.055678  	 700       	 0         	 0         	 98.3556   	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 127, r: 127, r2: 2500, leftOrthog: 0)      	 0.0536891 	 100       	 150.208   	 0         	 14.6735   	 10.2367   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r: 127, r2: 127)           	 0.0532852 	 100       	 151.346   	 0         	 9.77576   	 15.4818   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 77, reductionFactor: 37, colBlockingSize: 12)                  	 0.0514701 	 101       	 59.7448   	 0         	 3.11503   	 19.1795   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 127, n: 50, r: 127, r2: 50)           	 0.0470821 	 100       	 171.286   	 0         	 19.2056   	 8.91854   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 77, k: 2500)   	 0.0432637 	 800       	 355.957   	 0         	 47.5373   	 7.48794   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0409487 	 100       	 2.13682   	 0         	 0.147502  	 14.4868   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 6350, leftOrthog: 0)        	 0.0360629 	 100       	 88.0406   	 0         	 21.2407   	 4.14491   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 77, n: 50, r2: 77)                   	 0.0358861 	 700       	 0         	 0         	 152.601   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 77, n: 50, r2: 77)                                                                                         	 0.035214  	 707       	 0         	 0         	 95.2304   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 2500, m: 77, k: 50)	 0.0346893 	 800       	 443.941   	 0         	 59.2874   	 7.48794   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 6350, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0329547 	 100       	 98.9483   	 0         	 7.76824   	 12.7375   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 6350, m: 77)                                                              	 0.0312765 	 700       	 0         	 0         	 175.091   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 3850, k: 77) 	 0.0295613 	 700       	 701.983   	 0         	 93.3546   	 7.51953   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 77, r: 77, streamingCols: 0)                   	 0.0138288 	 101       	 108.258   	 0         	 22.6684   	 4.77573   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 127, reductionFactor: 37, colBlockingSize: 12)                   	 0.0127081 	 100       	 13.0349   	 0         	 1.41509   	 9.21133   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00817578	 109       	 2.222     	 0         	 0.805256  	 2.75937   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 77)                                                                       	 0.00750267	 101       	 0         	 0         	 41.4626   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 0, n: 50, r2: 77)                    	 0.00664208	 100       	 0         	 0         	 46.371    	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 77)                                                              	 0.00651216	 101       	 0         	 0         	 47.7691   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 50, Qr2: 77)       	 0.00634858	 100       	 0         	 0         	 80.018    	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 50)           	 0.0048325 	 8         	 20.6932   	 0         	 3.34402   	 6.18812   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 3850, k: 50) 	 0.00440641	 100       	 436.863   	 0         	 70.352    	 6.20968   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.00433979	 101       	 5.97551   	 0         	 0.930921  	 6.41892   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3850, cols: 77, reductionFactor: 37, colBlockingSize: 12)                  	 0.00396346	 7         	 82.809    	 0         	 4.27233   	 19.3826   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 77, r1_: 77, n: 50, r2: 77)           	 0.00320954	 7         	 99.5697   	 0         	 10.4484   	 9.5297    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.00268717	 8         	 38.2197   	 0         	 3.03666   	 12.5861   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 77)                                                                                         	 0.00255548	 101       	 0         	 0         	 121.73    	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 127, r: 50, r2: 50, leftOrthog: 0)         	 0.00225977	 100       	 28.1002   	 0         	 8.51414   	 3.30042   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                   	 0.00198886	 8         	 25.14     	 0         	 8.08503   	 3.10945   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 77, m: 77, fromLeft: 0)                	 0.00180956	 808       	 0         	 0         	 42.3584   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 3850, Xcols: 77, r: 77, streamingCols: 0)                   	 0.00119132	 7         	 134.126   	 0         	 28.0096   	 4.78856   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 3850, m: 77)                                                                       	 0.00111419	 7         	 0         	 0         	 29.7996   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 50, r2: 50)              	 0.00109411	 100       	 22.8495   	 0         	 5.48389   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50, k: 50)     	 0.000984654	 100       	 25.3896   	 0         	 6.09351   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 77, m: 50, k: 77)   	 0.000960906	 100       	 61.7022   	 0         	 11.3468   	 5.43785   
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                   	 0.000896513	 100       	 0.557716  	 0         	 2.23087   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 77)   	 0.000886841	 100       	 43.4125   	 0         	 9.2012    	 4.71814   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 77, n: 50, r2: 1)                                                                                          	 0.000855358	 201       	 0         	 0         	 14.4753   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000798135	 201       	 0         	 0         	 10.0735   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 50, k: 50)  	 0.000597317	 100       	 41.8538   	 0         	 10.0449   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 77, n: 50, r2: 1)                    	 0.000563783	 100       	 0         	 0         	 18.0211   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 1, r1low: 0, n: 50, r2: 50)                     	 0.000536738	 100       	 0         	 0         	 7.45243   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                          	 0.000503058	 100       	 0         	 0         	 7.95137   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                                	 0.000461838	 101       	 0         	 0         	 8.74766   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                            	 0.000456288	 100       	 1.0958    	 0         	 13.1496   	 0.0833333 
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 1, Xr2: 50, Qr1: 1, Qr2: 0)          	 0.000437066	 100       	 0         	 0         	 9.15194   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 3850, m: 77)                                                              	 0.000390921	 7         	 0         	 0         	 84.9338   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.00038529	 101       	 0.655351  	 0         	 10.4856   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 77, n: 50, r2: 1)                                                                                 	 0.0003701 	 101       	 1.05066   	 0         	 16.8106   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 77, r1_: 50, n: 50, r2: 77)           	 0.000333139	 1         	 88.9869   	 0         	 11.8341   	 7.51953   
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.0003253 	 100       	 0.768521  	 0         	 12.2963   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 50)                                                                       	 0.000269176	 8         	 0         	 0         	 59.4407   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                              	 0.000198779	 8         	 0         	 0         	 80.4914   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 77, reductionFactor: 37, colBlockingSize: 12)                    	 7.0142e-05	 1         	 8.68131   	 0         	 1.11534   	 7.78357   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 50, r: 50, streamingCols: 0)                     	 3.464e-05 	 1         	 3.60855   	 0         	 1.44342   	 2.5       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 77, r: 50, streamingCols: 19)                    	 2.9351e-05	 1         	 4.2588    	 0         	 1.70352   	 2.5       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 77, r1_: 77, n: 50, r2: 1)            	 1.522e-05 	 1         	 38.9553   	 0         	 7.16373   	 5.43785   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 1.007e-05 	 1         	 24.8262   	 0         	 5.95829   	 4.16667   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 0)                	 9.99e-06  	 9         	 0         	 0         	 36.036    	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 77, n: 50, r2: 1)                                                                                   	 9.34e-06  	 1         	 0.824411  	 0         	 3.29764   	 0.25      
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 8.881e-06 	 1         	 0.563     	 0         	 2.252     	 0.25      
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                         	 8.421e-06 	 2         	 0         	 0         	 9.50006   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 0, m: 3850, k: 50)  	 8.32e-06  	 100       	 0         	 0         	 18509.6   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 77)                                                                	 4.81e-06  	 1         	 0         	 0         	 12.8067   	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 77, fromLeft: 0)                	 1.54e-06  	 1         	 0         	 0         	 40        	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 6.52007   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 6.52003   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                            	 5.27112   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                        	 5.26981   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 4.29101   	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 1.57565   	 1818      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 1.44464   	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_leftOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                   	 1.24883   	 100       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 1.08244   	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.928587  	 900       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.883835  	 918       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.76361   	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.494354  	 918       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.180843  	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.12649   	 1800      
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.121282  	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.0851714 	 918       
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                       	 0.0645724 	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0442483 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0436287 	 1000      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.039926  	 1310      
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                              	 0.038845  	 918       
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                              	 0.0353153 	 20        
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0352866 	 900       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 0.0284133 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 0.0283832 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.00840047	 18        
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00710577	 1818      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00475124	 5273      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00361521	 6472      
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.00182109	 818       
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00108069	 302       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000914734	 102       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000456288	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: L, orthoY: L
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m43->44  [0m[1;34m44->45  [0m[1;34m45->46  [0m[1;34m46->47  [0m[1;34m47->48  [0m[1;34m48->49  [0m[1;34m49->50  [0m[1;34m50->51  [0m[1;34m51->52  [0m[1;34m52->53  [0m[1;34m53->54  [0m[1;34m54->55  [0m[1;34m55->56  [0m[1;34m56->57  [0m[1;34m57->58  [0m[1;34m58->59  [0m[1;34m59->60  [0m[1;34m60->61  [0m[1;34m61->62  [0m[1;34m62->63  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 22700632999808 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 22700445657088 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 22700244330624 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 22700043004160 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 22699841677696 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 22699640351232 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 22699439024768 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 22699237698304 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 22699036371840 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 22698835045376 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 22698633718912 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 22698432392448 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 22698231065984 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 22698029739520 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 22697828413056 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 22697627086592 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 22697425760128 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 22697224433664 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 22697023107200 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 22696821780736 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 22696620454272 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 22696419127808 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 22696217801344 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 22696016474880 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 22695815148416 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 22695613821952 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 22695412495488 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 22695211169024 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 22695009842560 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 22694808516096 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 22694607189632 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 22694405863168 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 22694204532608 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 22694003206144 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 22693801879680 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 22693600553216 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 22693399226752 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 22693197900288 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 22692996573824 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 22692795247360 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 22692593920896 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 22692392594432 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 22692191267968 -> hwthread 43 - OK[0m[1;34m
[0m[1;34m	threadid 22691989941504 -> hwthread 44 - OK[0m[1;34m
[0m[1;34m	threadid 22691788615040 -> hwthread 45 - OK[0m[1;34m
[0m[1;34m	threadid 22691587288576 -> hwthread 46 - OK[0m[1;34m
[0m[1;34m	threadid 22691385962112 -> hwthread 47 - OK[0m[1;34m
[0m[1;34m	threadid 22691184635648 -> hwthread 48 - OK[0m[1;34m
[0m[1;34m	threadid 22690983309184 -> hwthread 49 - OK[0m[1;34m
[0m[1;34m	threadid 22690781982720 -> hwthread 50 - OK[0m[1;34m
[0m[1;34m	threadid 22690580656256 -> hwthread 51 - OK[0m[1;34m
[0m[1;34m	threadid 22690379329792 -> hwthread 52 - OK[0m[1;34m
[0m[1;34m	threadid 22690178003328 -> hwthread 53 - OK[0m[1;34m
[0m[1;34m	threadid 22689976676864 -> hwthread 54 - OK[0m[1;34m
[0m[1;34m	threadid 22689775350400 -> hwthread 55 - OK[0m[1;34m
[0m[1;34m	threadid 22689574023936 -> hwthread 56 - OK[0m[1;34m
[0m[1;34m	threadid 22689372697472 -> hwthread 57 - OK[0m[1;34m
[0m[1;34m	threadid 22689171371008 -> hwthread 58 - OK[0m[1;34m
[0m[1;34m	threadid 22688970044544 -> hwthread 59 - OK[0m[1;34m
[0m[1;34m	threadid 22688768718080 -> hwthread 60 - OK[0m[1;34m
[0m[1;34m	threadid 22688567391616 -> hwthread 61 - OK[0m[1;34m
[0m[1;34m	threadid 22688366065152 -> hwthread 62 - OK[0m[1;34m
[0m[1;34m	threadid 22688164738688 -> hwthread 63 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 22700527339264 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 22700520748800 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 128, m: 128)                                                               	 1.38096   	 700       	 7.44124   	 0         	 0.199838  	 37.2364   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 6400, cols: 128, reductionFactor: 37, colBlockingSize: 12)                 	 0.93999   	 600       	 137.48    	 0         	 4.26686   	 32.2205   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 128, n: 50, r: 128, r2: 128)          	 0.867902  	 600       	 144.981   	 0         	 9.15191   	 15.8416   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 128, r: 128, r2: 6400, leftOrthog: 0)      	 0.640544  	 600       	 196.441   	 0         	 18.6619   	 10.5263   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 6400, cols: 78, reductionFactor: 37, colBlockingSize: 12)                  	 0.442026  	 700       	 126.658   	 0         	 6.40141   	 19.7859   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 6400, Xcols: 78, r: 78, streamingCols: 0)                   	 0.169403  	 700       	 160.896   	 0         	 33.1049   	 4.86019   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 128, reductionFactor: 37, colBlockingSize: 12)                 	 0.124778  	 100       	 67.427    	 0         	 2.15669   	 31.2641   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 128, Qr2: 78)      	 0.106957  	 700       	 0         	 0         	 75.5729   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 78, m: 3900, k: 78) 	 0.0914813 	 700       	 363.12    	 0         	 37.6155   	 9.65347   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 78, m: 78)                                                                  	 0.0775321 	 809       	 6.60221   	 0         	 1.5301    	 4.31489   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 128)                                                                	 0.0615226 	 100       	 3.64094   	 0         	 0.199601  	 18.241    
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 6400, m: 78)                                                                       	 0.0546369 	 700       	 0         	 0         	 102.331   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r: 128, r2: 128)           	 0.0544757 	 100       	 150.379   	 0         	 9.63929   	 15.6006   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 78, reductionFactor: 37, colBlockingSize: 12)                  	 0.0527189 	 101       	 59.8544   	 0         	 3.08193   	 19.4211   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 128, r: 128, r2: 2500, leftOrthog: 0)      	 0.0523154 	 100       	 156.589   	 0         	 15.1813   	 10.3146   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 128, n: 50, r: 128, r2: 50)           	 0.048828  	 100       	 167.773   	 0         	 18.7696   	 8.93855   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 78, k: 2500)   	 0.0432993 	 800       	 360.283   	 0         	 47.8751   	 7.52547   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 6400, leftOrthog: 0)        	 0.0427264 	 100       	 74.8951   	 0         	 18.0685   	 4.14508   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0413404 	 100       	 2.11658   	 0         	 0.146104  	 14.4868   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 6400, m: 78)                                                              	 0.038982  	 700       	 0         	 0         	 143.426   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 78, n: 50, r2: 78)                                                                                         	 0.0364793 	 707       	 0         	 0         	 94.3304   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 78, n: 50, r2: 78)                   	 0.0358201 	 700       	 0         	 0         	 156.087   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 2500, m: 78, k: 50)	 0.0341342 	 800       	 457.019   	 0         	 60.7297   	 7.52547   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 6400, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0327157 	 100       	 100.456   	 0         	 7.88613   	 12.7383   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 3900, k: 78) 	 0.0300622 	 700       	 708.332   	 0         	 93.7178   	 7.55814   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 78, r: 78, streamingCols: 0)                   	 0.0140314 	 101       	 109.483   	 0         	 22.6333   	 4.83727   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 128, reductionFactor: 37, colBlockingSize: 12)                   	 0.0137243 	 100       	 12.2606   	 0         	 1.32809   	 9.2317    
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00815216	 109       	 2.22844   	 0         	 0.80759   	 2.75937   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 50, Qr2: 78)       	 0.00758476	 100       	 0         	 0         	 67.5038   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 78)                                                                       	 0.0059884 	 101       	 0         	 0         	 52.6218   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 0, n: 50, r2: 78)                    	 0.00496529	 100       	 0         	 0         	 62.8363   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 50)           	 0.00492564	 8         	 20.3019   	 0         	 3.28079   	 6.18812   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 3900, k: 50) 	 0.00462117	 100       	 421.971   	 0         	 67.9481   	 6.21019   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 78)                                                              	 0.00452559	 101       	 0         	 0         	 69.6307   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3900, cols: 78, reductionFactor: 37, colBlockingSize: 12)                  	 0.00411143	 7         	 82.9796   	 0         	 4.22625   	 19.6343   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 78, r1_: 78, n: 50, r2: 78)           	 0.00403022	 7         	 82.4239   	 0         	 8.53827   	 9.65347   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.00364328	 101       	 7.11788   	 0         	 1.10889   	 6.41892   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.00276104	 8         	 37.1971   	 0         	 2.95541   	 12.5861   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 78)                                                                                         	 0.00273001	 101       	 0         	 0         	 115.428   	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 128, r: 50, r2: 50, leftOrthog: 0)         	 0.00223868	 100       	 28.5883   	 0         	 8.64796   	 3.30579   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                   	 0.0017351 	 8         	 28.8167   	 0         	 9.26746   	 3.10945   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 78, m: 78, fromLeft: 0)                	 0.0016187 	 808       	 0         	 0         	 48.5907   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 3900, Xcols: 78, r: 78, streamingCols: 0)                   	 0.00146506	 7         	 113.37    	 0         	 23.3716   	 4.85075   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50, k: 50)     	 0.00114891	 100       	 21.7597   	 0         	 5.22233   	 4.16667   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 50, r2: 50)              	 0.00107648	 100       	 23.2238   	 0         	 5.57371   	 4.16667   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 3900, m: 78)                                                              	 0.000998753	 7         	 0         	 0         	 34.1129   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 78, m: 50, k: 78)   	 0.000936585	 100       	 64.9594   	 0         	 11.8593   	 5.47753   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 78)   	 0.000899165	 100       	 43.3736   	 0         	 9.16406   	 4.73301   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 3900, m: 78)                                                                       	 0.000892693	 7         	 0         	 0         	 38.1659   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 78, n: 50, r2: 1)                                                                                          	 0.000839102	 201       	 0         	 0         	 14.9474   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                   	 0.000819667	 100       	 0.610004  	 0         	 2.44002   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000780139	 201       	 0         	 0         	 10.3059   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 50, k: 50)  	 0.000588809	 100       	 42.4586   	 0         	 10.1901   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 1, r1low: 0, n: 50, r2: 50)                     	 0.000528213	 100       	 0         	 0         	 7.5727    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 78, n: 50, r2: 1)                    	 0.000526845	 100       	 0         	 0         	 19.4365   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                          	 0.000505598	 100       	 0         	 0         	 7.91142   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                                	 0.000455805	 101       	 0         	 0         	 8.86344   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                            	 0.000452632	 100       	 1.10465   	 0         	 13.2558   	 0.0833333 
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 1, Xr2: 50, Qr1: 1, Qr2: 0)          	 0.000422604	 100       	 0         	 0         	 9.46513   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000391296	 101       	 0.645292  	 0         	 10.3247   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 78, n: 50, r2: 1)                                                                                 	 0.000379602	 101       	 1.03767   	 0         	 16.6027   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000332441	 100       	 0.752013  	 0         	 12.0322   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 78, r1_: 50, n: 50, r2: 78)           	 0.000319258	 1         	 95.2834   	 0         	 12.6067   	 7.55814   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 50)                                                                       	 0.000275868	 8         	 0         	 0         	 57.9988   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                              	 0.000219656	 8         	 0         	 0         	 72.8412   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 78, reductionFactor: 37, colBlockingSize: 12)                    	 7.0741e-05	 1         	 8.83283   	 0         	 1.12908   	 7.82306   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 50, r: 50, streamingCols: 0)                     	 3.2701e-05	 1         	 3.82251   	 0         	 1.52901   	 2.5       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 78, r: 50, streamingCols: 18)                    	 2.9081e-05	 1         	 4.29834   	 0         	 1.71934   	 2.5       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 78, r1_: 78, n: 50, r2: 1)            	 1.627e-05 	 1         	 37.394    	 0         	 6.8268    	 5.47753   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 1.073e-05 	 1         	 23.2992   	 0         	 5.5918    	 4.16667   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 0)                	 9.92e-06  	 9         	 0         	 0         	 36.2903   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 78, n: 50, r2: 1)                                                                                   	 9.22e-06  	 1         	 0.845987  	 0         	 3.38395   	 0.25      
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                         	 8.32e-06  	 2         	 0         	 0         	 9.61538   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 0, m: 3900, k: 50)  	 8.2e-06   	 100       	 0         	 0         	 19024.4   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 7.84e-06  	 1         	 0.637755  	 0         	 2.55102   	 0.25      
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 78)                                                                	 4.521e-06 	 1         	 0         	 0         	 13.8023   	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 78, fromLeft: 0)                	 1.6e-06   	 1         	 0         	 0         	 39        	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 7.10443   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 7.10438   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                            	 5.84493   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                        	 5.84368   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 4.83338   	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 1.61654   	 1818      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 1.48382   	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_leftOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                   	 1.25938   	 100       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 1.11187   	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.972283  	 900       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.905099  	 918       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.737824  	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.505913  	 918       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.186697  	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.128009  	 1800      
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.114964  	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.0856843 	 918       
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                       	 0.0618022 	 818       
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                              	 0.0451863 	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0444482 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0418404 	 1000      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0413342 	 1310      
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                              	 0.0358457 	 20        
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.034723  	 900       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 0.0303818 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 0.0303535 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.00930212	 18        
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00503945	 1818      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00395707	 6472      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00258079	 5273      
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.00163022	 818       
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00110334	 302       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000836727	 102       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000452632	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: L, orthoY: L
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m43->44  [0m[1;34m44->45  [0m[1;34m45->46  [0m[1;34m46->47  [0m[1;34m47->48  [0m[1;34m48->49  [0m[1;34m49->50  [0m[1;34m50->51  [0m[1;34m51->52  [0m[1;34m52->53  [0m[1;34m53->54  [0m[1;34m54->55  [0m[1;34m55->56  [0m[1;34m56->57  [0m[1;34m57->58  [0m[1;34m58->59  [0m[1;34m59->60  [0m[1;34m60->61  [0m[1;34m61->62  [0m[1;34m62->63  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 23383015602048 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 23382808586240 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 23382607259776 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 23382405933312 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 23382204606848 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 23382003280384 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 23381801953920 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 23381600627456 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 23381399300992 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 23381197974528 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 23380996648064 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 23380795321600 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 23380593995136 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 23380392668672 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 23380191342208 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 23379990015744 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 23379788689280 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 23379587362816 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 23379386036352 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 23379184709888 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 23378983383424 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 23378782056960 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 23378580730496 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 23378379404032 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 23378178077568 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 23377976751104 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 23377775424640 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 23377574098176 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 23377372771712 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 23377171445248 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 23376970118784 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 23376768792320 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 23376567461760 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 23376366135296 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 23376164808832 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 23375963482368 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 23375762155904 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 23375560829440 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 23375359502976 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 23375158176512 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 23374956850048 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 23374755523584 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 23374554197120 -> hwthread 43 - OK[0m[1;34m
[0m[1;34m	threadid 23374352870656 -> hwthread 44 - OK[0m[1;34m
[0m[1;34m	threadid 23374151544192 -> hwthread 45 - OK[0m[1;34m
[0m[1;34m	threadid 23373950217728 -> hwthread 46 - OK[0m[1;34m
[0m[1;34m	threadid 23373748891264 -> hwthread 47 - OK[0m[1;34m
[0m[1;34m	threadid 23373547564800 -> hwthread 48 - OK[0m[1;34m
[0m[1;34m	threadid 23373346238336 -> hwthread 49 - OK[0m[1;34m
[0m[1;34m	threadid 23373144911872 -> hwthread 50 - OK[0m[1;34m
[0m[1;34m	threadid 23372943585408 -> hwthread 51 - OK[0m[1;34m
[0m[1;34m	threadid 23372742258944 -> hwthread 52 - OK[0m[1;34m
[0m[1;34m	threadid 23372540932480 -> hwthread 53 - OK[0m[1;34m
[0m[1;34m	threadid 23372339606016 -> hwthread 54 - OK[0m[1;34m
[0m[1;34m	threadid 23372138279552 -> hwthread 55 - OK[0m[1;34m
[0m[1;34m	threadid 23371936953088 -> hwthread 56 - OK[0m[1;34m
[0m[1;34m	threadid 23371735626624 -> hwthread 57 - OK[0m[1;34m
[0m[1;34m	threadid 23371534300160 -> hwthread 58 - OK[0m[1;34m
[0m[1;34m	threadid 23371332973696 -> hwthread 59 - OK[0m[1;34m
[0m[1;34m	threadid 23371131647232 -> hwthread 60 - OK[0m[1;34m
[0m[1;34m	threadid 23370930320768 -> hwthread 61 - OK[0m[1;34m
[0m[1;34m	threadid 23370728994304 -> hwthread 62 - OK[0m[1;34m
[0m[1;34m	threadid 23370527667840 -> hwthread 63 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 23382909941504 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 23382903351040 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 129, m: 129)                                                               	 1.4329    	 700       	 7.3409    	 0         	 0.195611  	 37.528    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 6450, cols: 129, reductionFactor: 37, colBlockingSize: 12)                 	 0.946421  	 600       	 139.771   	 0         	 4.30434   	 32.4722   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 129, n: 50, r: 129, r2: 129)          	 0.872743  	 600       	 147.582   	 0         	 9.2439    	 15.9653   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 129, r: 129, r2: 6450, leftOrthog: 0)      	 0.684177  	 600       	 188.257   	 0         	 17.7458   	 10.6086   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 6450, cols: 79, reductionFactor: 37, colBlockingSize: 12)                  	 0.448249  	 700       	 129.123   	 0         	 6.44381   	 20.0384   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 6450, Xcols: 79, r: 79, streamingCols: 0)                   	 0.172476  	 700       	 163.374   	 0         	 33.1898   	 4.92243   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 129, reductionFactor: 37, colBlockingSize: 12)                 	 0.127924  	 100       	 66.8005   	 0         	 2.12089   	 31.4964   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 129, Qr2: 79)      	 0.117621  	 700       	 0         	 0         	 69.8255   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 79, m: 3950, k: 79) 	 0.0962742 	 700       	 358.484   	 0         	 36.6651   	 9.77723   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 79, m: 79)                                                                  	 0.0803481 	 809       	 6.61899   	 0         	 1.51449   	 4.37044   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 129)                                                                	 0.0632632 	 100       	 3.56842   	 0         	 0.195374  	 18.2646   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 6450, m: 79)                                                                       	 0.058287  	 700       	 0         	 0         	 97.9114   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r: 129, r2: 129)           	 0.0547978 	 100       	 151.84    	 0         	 9.65937   	 15.7194   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 79, reductionFactor: 37, colBlockingSize: 12)                  	 0.0530781 	 101       	 60.9834   	 0         	 3.10152   	 19.6625   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 129, r: 129, r2: 2500, leftOrthog: 0)      	 0.052804  	 100       	 157.573   	 0         	 15.1622   	 10.3925   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 129, n: 50, r: 129, r2: 50)           	 0.0450535 	 100       	 184.68    	 0         	 20.6155   	 8.95833   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 79, k: 2500)   	 0.0430125 	 800       	 367.335   	 0         	 48.5737   	 7.56241   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.040457  	 100       	 2.16279   	 0         	 0.149294  	 14.4868   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 79, n: 50, r2: 79)                   	 0.0402387 	 700       	 0         	 0         	 141.828   	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 6450, leftOrthog: 0)        	 0.0393536 	 100       	 81.9492   	 0         	 19.7695   	 4.14524   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 79, n: 50, r2: 79)                                                                                         	 0.0368276 	 707       	 0         	 0         	 95.8497   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 6450, m: 79)                                                              	 0.0349223 	 700       	 0         	 0         	 163.419   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 2500, m: 79, k: 50)	 0.0345843 	 800       	 456.854   	 0         	 60.4111   	 7.56241   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 6450, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0329076 	 100       	 100.65    	 0         	 7.90091   	 12.7391   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 3950, k: 79) 	 0.0315955 	 700       	 691.348   	 0         	 91.0129   	 7.59615   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 129, reductionFactor: 37, colBlockingSize: 12)                   	 0.014618  	 100       	 11.6916   	 0         	 1.2637    	 9.25185   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 79, r: 79, streamingCols: 0)                   	 0.0144584 	 101       	 108.993   	 0         	 22.2488   	 4.8988    
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00812812	 109       	 2.23503   	 0         	 0.809978  	 2.75937   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 50, Qr2: 79)       	 0.00699744	 100       	 0         	 0         	 73.7412   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 79)                                                                       	 0.00694704	 101       	 0         	 0         	 45.9419   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 3950, k: 50) 	 0.00617727	 100       	 319.72    	 0         	 51.479    	 6.21069   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 0, n: 50, r2: 79)                    	 0.00567676	 100       	 0         	 0         	 55.6655   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 79)                                                              	 0.00559705	 101       	 0         	 0         	 57.0229   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 50)           	 0.00489275	 8         	 20.4384   	 0         	 3.30284   	 6.18812   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3950, cols: 79, reductionFactor: 37, colBlockingSize: 12)                  	 0.00405636	 7         	 87.3825   	 0         	 4.39416   	 19.8861   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.0037159 	 101       	 6.97878   	 0         	 1.08722   	 6.41892   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 79, r1_: 79, n: 50, r2: 79)           	 0.00336256	 7         	 102.638   	 0         	 10.4977   	 9.77723   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.00266803	 8         	 38.4939   	 0         	 3.05844   	 12.5861   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 79)                                                                                         	 0.00260501	 101       	 0         	 0         	 122.518   	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 129, r: 50, r2: 50, leftOrthog: 0)         	 0.00249055	 100       	 25.8979   	 0         	 7.82156   	 3.31109   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                   	 0.00210156	 8         	 23.7918   	 0         	 7.65145   	 3.10945   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 79, m: 79, fromLeft: 0)                	 0.00190937	 808       	 0         	 0         	 42.2567   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 3950, Xcols: 79, r: 79, streamingCols: 0)                   	 0.00126111	 7         	 136.835   	 0         	 27.8519   	 4.91294   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 50, r2: 50)              	 0.00108131	 100       	 23.1201   	 0         	 5.54883   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50, k: 50)     	 0.00104469	 100       	 23.9306   	 0         	 5.74335   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 79, m: 50, k: 79)   	 0.000983266	 100       	 63.4721   	 0         	 11.5053   	 5.51676   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 79)   	 0.000901284	 100       	 43.8264   	 0         	 9.23127   	 4.7476    
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 3950, m: 79)                                                              	 0.000841121	 7         	 0         	 0         	 41.5512   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 79, n: 50, r2: 1)                                                                                          	 0.00083931	 201       	 0         	 0         	 15.1353   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                   	 0.000829568	 100       	 0.602723  	 0         	 2.41089   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000793002	 201       	 0         	 0         	 10.1387   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 3950, m: 79)                                                                       	 0.00077075	 7         	 0         	 0         	 45.3449   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 50, k: 50)  	 0.000585738	 100       	 42.6812   	 0         	 10.2435   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 79, n: 50, r2: 1)                    	 0.000563172	 100       	 0         	 0         	 18.3248   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 1, r1low: 0, n: 50, r2: 50)                     	 0.000518818	 100       	 0         	 0         	 7.70983   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                          	 0.000485224	 100       	 0         	 0         	 8.24362   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 1, Xr2: 50, Qr1: 1, Qr2: 0)          	 0.000460771	 100       	 0         	 0         	 8.6811    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                            	 0.000438006	 100       	 1.14154   	 0         	 13.6984   	 0.0833333 
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                                	 0.000437271	 101       	 0         	 0         	 9.23912   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000392941	 101       	 0.64259   	 0         	 10.2814   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 79, n: 50, r2: 1)                                                                                 	 0.000366099	 101       	 1.08973   	 0         	 17.4357   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000335776	 100       	 0.744544  	 0         	 11.9127   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 79, r1_: 50, n: 50, r2: 79)           	 0.000317848	 1         	 98.1759   	 0         	 12.9244   	 7.59615   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                              	 0.000291545	 8         	 0         	 0         	 54.88     	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 50)                                                                       	 0.000245777	 8         	 0         	 0         	 65.0997   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 79, reductionFactor: 37, colBlockingSize: 12)                    	 7.2602e-05	 1         	 8.82851   	 0         	 1.12294   	 7.86193   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 50, r: 50, streamingCols: 0)                     	 3.113e-05 	 1         	 4.01542   	 0         	 1.60617   	 2.5       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 79, r: 50, streamingCols: 19)                    	 2.907e-05 	 1         	 4.29997   	 0         	 1.71999   	 2.5       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 79, r1_: 79, n: 50, r2: 1)            	 1.555e-05 	 1         	 40.135    	 0         	 7.27511   	 5.51676   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 1.015e-05 	 1         	 24.6305   	 0         	 5.91133   	 4.16667   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 0)                	 9.73e-06  	 9         	 0         	 0         	 36.999    	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 9.001e-06 	 1         	 0.555494  	 0         	 2.22198   	 0.25      
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 79, n: 50, r2: 1)                                                                                   	 8.62e-06  	 1         	 0.916473  	 0         	 3.66589   	 0.25      
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                         	 7.981e-06 	 2         	 0         	 0         	 10.0238   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 0, m: 3950, k: 50)  	 7.621e-06 	 100       	 0         	 0         	 20732.2   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 79)                                                                	 5.4e-06   	 1         	 0         	 0         	 11.7037   	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 79, fromLeft: 0)                	 1.56e-06  	 1         	 0         	 0         	 40.5128   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 6.76273   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 6.76268   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                            	 5.45755   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                        	 5.45628   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 4.43672   	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 1.63371   	 1818      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 1.53662   	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_leftOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                   	 1.30506   	 100       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 1.12256   	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.973676  	 900       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.918974  	 918       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.778826  	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.512399  	 918       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.190357  	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.135939  	 1800      
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.125079  	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.0884762 	 918       
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                       	 0.0662585 	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0469974 	 1000      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0440572 	 900       
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                              	 0.0420946 	 918       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0415501 	 1310      
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                              	 0.0361758 	 20        
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0351701 	 900       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 0.0291797 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 0.0291505 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.00859886	 18        
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00643738	 5273      
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00504663	 1818      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00401511	 6472      
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.00192066	 818       
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00109482	 302       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000847189	 102       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000438006	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: L, orthoY: L
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m43->44  [0m[1;34m44->45  [0m[1;34m45->46  [0m[1;34m46->47  [0m[1;34m47->48  [0m[1;34m48->49  [0m[1;34m49->50  [0m[1;34m50->51  [0m[1;34m51->52  [0m[1;34m52->53  [0m[1;34m53->54  [0m[1;34m54->55  [0m[1;34m55->56  [0m[1;34m56->57  [0m[1;34m57->58  [0m[1;34m58->59  [0m[1;34m59->60  [0m[1;34m60->61  [0m[1;34m61->62  [0m[1;34m62->63  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 22915779069824 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 22915596675072 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 22915395348608 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 22915194022144 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 22914992695680 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 22914791369216 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 22914590042752 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 22914388716288 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 22914187389824 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 22913986063360 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 22913784736896 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 22913583410432 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 22913382083968 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 22913180757504 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 22912979431040 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 22912778104576 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 22912576778112 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 22912375451648 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 22912174125184 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 22911972798720 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 22911771472256 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 22911570145792 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 22911368819328 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 22911167492864 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 22910966166400 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 22910764839936 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 22910563513472 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 22910362187008 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 22910160860544 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 22909959534080 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 22909758207616 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 22909556881152 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 22909355550592 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 22909154224128 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 22908952897664 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 22908751571200 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 22908550244736 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 22908348918272 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 22908147591808 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 22907946265344 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 22907744938880 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 22907543612416 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 22907342285952 -> hwthread 43 - OK[0m[1;34m
[0m[1;34m	threadid 22907140959488 -> hwthread 44 - OK[0m[1;34m
[0m[1;34m	threadid 22906939633024 -> hwthread 45 - OK[0m[1;34m
[0m[1;34m	threadid 22906738306560 -> hwthread 46 - OK[0m[1;34m
[0m[1;34m	threadid 22906536980096 -> hwthread 47 - OK[0m[1;34m
[0m[1;34m	threadid 22906335653632 -> hwthread 48 - OK[0m[1;34m
[0m[1;34m	threadid 22906134327168 -> hwthread 49 - OK[0m[1;34m
[0m[1;34m	threadid 22905933000704 -> hwthread 50 - OK[0m[1;34m
[0m[1;34m	threadid 22905731674240 -> hwthread 51 - OK[0m[1;34m
[0m[1;34m	threadid 22905530347776 -> hwthread 52 - OK[0m[1;34m
[0m[1;34m	threadid 22905329021312 -> hwthread 53 - OK[0m[1;34m
[0m[1;34m	threadid 22905127694848 -> hwthread 54 - OK[0m[1;34m
[0m[1;34m	threadid 22904926368384 -> hwthread 55 - OK[0m[1;34m
[0m[1;34m	threadid 22904725041920 -> hwthread 56 - OK[0m[1;34m
[0m[1;34m	threadid 22904523715456 -> hwthread 57 - OK[0m[1;34m
[0m[1;34m	threadid 22904322388992 -> hwthread 58 - OK[0m[1;34m
[0m[1;34m	threadid 22904121062528 -> hwthread 59 - OK[0m[1;34m
[0m[1;34m	threadid 22903919736064 -> hwthread 60 - OK[0m[1;34m
[0m[1;34m	threadid 22903718409600 -> hwthread 61 - OK[0m[1;34m
[0m[1;34m	threadid 22903517083136 -> hwthread 62 - OK[0m[1;34m
[0m[1;34m	threadid 22903315756672 -> hwthread 63 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 22915673409280 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 22915666818816 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 130, m: 130)                                                               	 1.41439   	 700       	 7.61124   	 0         	 0.201251  	 37.8197   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 6500, cols: 130, reductionFactor: 37, colBlockingSize: 12)                 	 0.954258  	 600       	 141.872   	 0         	 4.33543   	 32.7239   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 130, n: 50, r: 130, r2: 130)          	 0.918931  	 600       	 143.449   	 0         	 8.91592   	 16.0891   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 130, r: 130, r2: 6500, leftOrthog: 0)      	 0.754629  	 600       	 174.682   	 0         	 16.3395   	 10.6908   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 6500, cols: 80, reductionFactor: 37, colBlockingSize: 12)                  	 0.466886  	 700       	 128.113   	 0         	 6.31383   	 20.2908   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 6500, Xcols: 80, r: 80, streamingCols: 0)                   	 0.173594  	 700       	 167.748   	 0         	 33.6528   	 4.98466   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 130, reductionFactor: 37, colBlockingSize: 12)                 	 0.125592  	 100       	 69.0997   	 0         	 2.17784   	 31.7285   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 130, Qr2: 80)      	 0.111431  	 700       	 0         	 0         	 74.8804   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 80, m: 4000, k: 80) 	 0.0930012 	 700       	 385.372   	 0         	 38.9225   	 9.90099   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 80, m: 80)                                                                  	 0.0788322 	 809       	 7.00572   	 0         	 1.58286   	 4.426     
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 130)                                                                	 0.0623508 	 100       	 3.64871   	 0         	 0.199516  	 18.2878   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 6500, m: 80)                                                                       	 0.0587752 	 700       	 0         	 0         	 99.0895   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r: 130, r2: 130)           	 0.0570939 	 100       	 148.002   	 0         	 9.3446    	 15.8382   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 130, r: 130, r2: 2500, leftOrthog: 0)      	 0.0547043 	 100       	 154.467   	 0         	 14.7528   	 10.4704   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 80, reductionFactor: 37, colBlockingSize: 12)                  	 0.0547037 	 101       	 60.6787   	 0         	 3.04863   	 19.9036   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 130, n: 50, r: 130, r2: 50)           	 0.0536198 	 100       	 157.591   	 0         	 17.5532   	 8.9779    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 80, k: 2500)   	 0.043689  	 800       	 366.224   	 0         	 48.1951   	 7.59878   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0422375 	 100       	 2.07162   	 0         	 0.143001  	 14.4868   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 6500, leftOrthog: 0)        	 0.0421042 	 100       	 77.1894   	 0         	 18.6205   	 4.14541   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 80, n: 50, r2: 80)                                                                                         	 0.0402972 	 707       	 0         	 0         	 89.8286   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 6500, m: 80)                                                              	 0.0384896 	 700       	 0         	 0         	 151.314   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 80, n: 50, r2: 80)                   	 0.0360029 	 700       	 0         	 0         	 161.765   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 2500, m: 80, k: 50)	 0.0346732 	 800       	 461.452   	 0         	 60.727    	 7.59878   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 6500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.033458  	 100       	 99.7621   	 0         	 7.83072   	 12.7398   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 4000, k: 80) 	 0.0330669 	 700       	 677.415   	 0         	 88.7414   	 7.63359   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 80, r: 80, streamingCols: 0)                   	 0.0147456 	 101       	 109.592   	 0         	 22.0938   	 4.96032   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 130, reductionFactor: 37, colBlockingSize: 12)                   	 0.0136556 	 100       	 12.7104   	 0         	 1.37087   	 9.27177   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00822067	 109       	 2.20987   	 0         	 0.800859  	 2.75937   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 50, Qr2: 80)       	 0.00792493	 100       	 0         	 0         	 65.6157   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 80)                                                                       	 0.00615736	 101       	 0         	 0         	 52.4901   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 80)                                                              	 0.00531425	 101       	 0         	 0         	 60.8176   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 50)           	 0.00485175	 8         	 20.6111   	 0         	 3.33076   	 6.18812   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 0, n: 50, r2: 80)                    	 0.00475577	 100       	 0         	 0         	 67.2867   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4000, cols: 80, reductionFactor: 37, colBlockingSize: 12)                  	 0.00437829	 7         	 84.0708   	 0         	 4.17478   	 20.1378   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 4000, k: 50) 	 0.00415879	 100       	 480.91    	 0         	 77.4265   	 6.21118   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.00387891	 101       	 6.68549   	 0         	 1.04153   	 6.41892   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 80, r1_: 80, n: 50, r2: 80)           	 0.00348555	 7         	 102.825   	 0         	 10.3853   	 9.90099   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.00268189	 8         	 38.2949   	 0         	 3.04263   	 12.5861   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 80)                                                                                         	 0.00257011	 101       	 0         	 0         	 125.754   	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 130, r: 50, r2: 50, leftOrthog: 0)         	 0.00244988	 100       	 26.5319   	 0         	 8.00038   	 3.31633   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                   	 0.00177112	 8         	 28.2308   	 0         	 9.07902   	 3.10945   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 80, m: 80, fromLeft: 0)                	 0.00134434	 808       	 0         	 0         	 61.5464   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 4000, Xcols: 80, r: 80, streamingCols: 0)                   	 0.00127392	 7         	 140.668   	 0         	 28.2742   	 4.97512   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 4000, m: 80)                                                                       	 0.00116076	 7         	 0         	 0         	 30.8763   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 50, r2: 50)              	 0.00114471	 100       	 21.8396   	 0         	 5.24149   	 4.16667   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 4000, m: 80)                                                              	 0.00106335	 7         	 0         	 0         	 33.7049   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50, k: 50)     	 0.00101534	 100       	 24.6224   	 0         	 5.90937   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 80)   	 0.000933246	 100       	 42.8612   	 0         	 9.00084   	 4.7619    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 80, m: 50, k: 80)   	 0.000896598	 100       	 71.3809   	 0         	 12.8486   	 5.55556   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 80, n: 50, r2: 1)                                                                                          	 0.000853224	 201       	 0         	 0         	 15.0769   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000797757	 201       	 0         	 0         	 10.0783   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                   	 0.000797504	 100       	 0.626956  	 0         	 2.50782   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 50, k: 50)  	 0.000598456	 100       	 41.7742   	 0         	 10.0258   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 80, n: 50, r2: 1)                    	 0.000573408	 100       	 0         	 0         	 18.1372   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 1, r1low: 0, n: 50, r2: 50)                     	 0.000508142	 100       	 0         	 0         	 7.87182   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                          	 0.000501752	 100       	 0         	 0         	 7.97207   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                                	 0.000475794	 101       	 0         	 0         	 8.49107   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                            	 0.000445926	 100       	 1.12126   	 0         	 13.4551   	 0.0833333 
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 1, Xr2: 50, Qr1: 1, Qr2: 0)          	 0.000439278	 100       	 0         	 0         	 9.10585   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.00038186	 101       	 0.661237  	 0         	 10.5798   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 80, n: 50, r2: 1)                                                                                 	 0.000371479	 101       	 1.08754   	 0         	 17.4007   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 80, r1_: 50, n: 50, r2: 80)           	 0.000356669	 1         	 89.719    	 0         	 11.7532   	 7.63359   
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000355276	 100       	 0.703678  	 0         	 11.2589   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 50)                                                                       	 0.000284297	 8         	 0         	 0         	 56.2792   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                              	 0.000263537	 8         	 0         	 0         	 60.7125   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 80, reductionFactor: 37, colBlockingSize: 12)                    	 7.4742e-05	 1         	 8.79422   	 0         	 1.11316   	 7.90021   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 50, r: 50, streamingCols: 0)                     	 3.3171e-05	 1         	 3.76835   	 0         	 1.50734   	 2.5       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 80, r: 50, streamingCols: 22)                    	 2.9691e-05	 1         	 4.21003   	 0         	 1.68401   	 2.5       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 80, r1_: 80, n: 50, r2: 1)            	 1.499e-05 	 1         	 42.6951   	 0         	 7.68512   	 5.55556   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 1.073e-05 	 1         	 23.2992   	 0         	 5.5918    	 4.16667   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 0)                	 9.941e-06 	 9         	 0         	 0         	 36.2137   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                         	 8.33e-06  	 2         	 0         	 0         	 9.60384   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 8.07e-06  	 1         	 0.619579  	 0         	 2.47831   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 0, m: 4000, k: 50)  	 7.89e-06  	 100       	 0         	 0         	 20278.8   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 80, n: 50, r2: 1)                                                                                   	 7.87e-06  	 1         	 1.01652   	 0         	 4.06607   	 0.25      
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 80)                                                                	 4.731e-06 	 1         	 0         	 0         	 13.5278   	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 80, fromLeft: 0)                	 1.64e-06  	 1         	 0         	 0         	 39.0244   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 6.93126   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 6.9312    	 100       
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                            	 5.62409   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                        	 5.62284   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 4.55339   	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 1.65957   	 1818      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 1.51898   	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_leftOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                   	 1.30704   	 100       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 1.12761   	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 1.03079   	 900       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.942535  	 918       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.853888  	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.533192  	 918       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.191447  	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.132065  	 1800      
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.119795  	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.0870529 	 918       
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                       	 0.0663859 	 818       
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                              	 0.0456113 	 918       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.04502   	 1310      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0447044 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0418402 	 1000      
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                              	 0.036771  	 20        
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0352716 	 900       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 0.0301128 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 0.0300851 	 2         
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00909809	 1818      
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.00871969	 18        
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.003893  	 6472      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00236126	 5273      
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.00135592	 818       
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00110862	 302       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000813444	 102       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000445926	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: L, orthoY: L
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m43->44  [0m[1;34m44->45  [0m[1;34m45->46  [0m[1;34m46->47  [0m[1;34m47->48  [0m[1;34m48->49  [0m[1;34m49->50  [0m[1;34m50->51  [0m[1;34m51->52  [0m[1;34m52->53  [0m[1;34m53->54  [0m[1;34m54->55  [0m[1;34m55->56  [0m[1;34m56->57  [0m[1;34m57->58  [0m[1;34m58->59  [0m[1;34m59->60  [0m[1;34m60->61  [0m[1;34m61->62  [0m[1;34m62->63  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 22545388787584 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 22545155745792 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 22544954419328 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 22544753092864 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 22544551766400 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 22544350439936 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 22544149113472 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 22543947787008 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 22543746460544 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 22543545134080 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 22543343807616 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 22543142481152 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 22542941154688 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 22542739828224 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 22542538501760 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 22542337175296 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 22542135848832 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 22541934522368 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 22541733195904 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 22541531869440 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 22541330542976 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 22541129216512 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 22540927890048 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 22540726563584 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 22540525237120 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 22540323910656 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 22540122584192 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 22539921257728 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 22539719931264 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 22539518604800 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 22539317278336 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 22539115951872 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 22538914621312 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 22538713294848 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 22538511968384 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 22538310641920 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 22538109315456 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 22537907988992 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 22537706662528 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 22537505336064 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 22537304009600 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 22537102683136 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 22536901356672 -> hwthread 43 - OK[0m[1;34m
[0m[1;34m	threadid 22536700030208 -> hwthread 44 - OK[0m[1;34m
[0m[1;34m	threadid 22536498703744 -> hwthread 45 - OK[0m[1;34m
[0m[1;34m	threadid 22536297377280 -> hwthread 46 - OK[0m[1;34m
[0m[1;34m	threadid 22536096050816 -> hwthread 47 - OK[0m[1;34m
[0m[1;34m	threadid 22535894724352 -> hwthread 48 - OK[0m[1;34m
[0m[1;34m	threadid 22535693397888 -> hwthread 49 - OK[0m[1;34m
[0m[1;34m	threadid 22535492071424 -> hwthread 50 - OK[0m[1;34m
[0m[1;34m	threadid 22535290744960 -> hwthread 51 - OK[0m[1;34m
[0m[1;34m	threadid 22535089418496 -> hwthread 52 - OK[0m[1;34m
[0m[1;34m	threadid 22534888092032 -> hwthread 53 - OK[0m[1;34m
[0m[1;34m	threadid 22534686765568 -> hwthread 54 - OK[0m[1;34m
[0m[1;34m	threadid 22534485439104 -> hwthread 55 - OK[0m[1;34m
[0m[1;34m	threadid 22534284112640 -> hwthread 56 - OK[0m[1;34m
[0m[1;34m	threadid 22534082786176 -> hwthread 57 - OK[0m[1;34m
[0m[1;34m	threadid 22533881459712 -> hwthread 58 - OK[0m[1;34m
[0m[1;34m	threadid 22533680133248 -> hwthread 59 - OK[0m[1;34m
[0m[1;34m	threadid 22533478806784 -> hwthread 60 - OK[0m[1;34m
[0m[1;34m	threadid 22533277480320 -> hwthread 61 - OK[0m[1;34m
[0m[1;34m	threadid 22533076153856 -> hwthread 62 - OK[0m[1;34m
[0m[1;34m	threadid 22532874827392 -> hwthread 63 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 22545283127040 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 22545276536576 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 131, m: 131)                                                               	 1.45317   	 700       	 7.58043   	 0         	 0.198902  	 38.1114   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 6550, cols: 131, reductionFactor: 37, colBlockingSize: 12)                 	 0.996064  	 600       	 139.078   	 0         	 4.21761   	 32.9756   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 131, n: 50, r: 131, r2: 131)          	 0.893015  	 600       	 151.045   	 0         	 9.31637   	 16.2129   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 131, r: 131, r2: 6550, leftOrthog: 0)      	 0.71485   	 600       	 188.691   	 0         	 17.5151   	 10.773    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 6550, cols: 81, reductionFactor: 37, colBlockingSize: 12)                  	 0.475341  	 700       	 129.992   	 0         	 6.32771   	 20.5433   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 6550, Xcols: 81, r: 81, streamingCols: 0)                   	 0.180563  	 700       	 166.602   	 0         	 33.0108   	 5.0469    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 131, reductionFactor: 37, colBlockingSize: 12)                 	 0.127374  	 100       	 69.1852   	 0         	 2.16472   	 31.9604   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 131, Qr2: 81)      	 0.111222  	 700       	 0         	 0         	 76.2092   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 81, m: 4050, k: 81) 	 0.0933895 	 700       	 398.341   	 0         	 39.7357   	 10.0248   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 81, m: 81)                                                                  	 0.0869437 	 809       	 6.59332   	 0         	 1.47121   	 4.48156   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 6550, m: 81)                                                                       	 0.0672666 	 700       	 0         	 0         	 88.3375   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r: 131, r2: 131)           	 0.0627181 	 100       	 136.811   	 0         	 8.57374   	 15.9569   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 131)                                                                	 0.0623288 	 100       	 3.67807   	 0         	 0.20087   	 18.3107   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 81, reductionFactor: 37, colBlockingSize: 12)                  	 0.0574075 	 101       	 59.2754   	 0         	 2.94249   	 20.1446   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 131, r: 131, r2: 2500, leftOrthog: 0)      	 0.0541324 	 100       	 158.51    	 0         	 15.0272   	 10.5482   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 131, n: 50, r: 131, r2: 50)           	 0.0535093 	 100       	 160.355   	 0         	 17.8227   	 8.99725   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 81, k: 2500)   	 0.0442267 	 800       	 366.294   	 0         	 47.9782   	 7.6346    
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 81, n: 50, r2: 81)                                                                                         	 0.0417721 	 707       	 0         	 0         	 88.8368   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0406543 	 100       	 2.15229   	 0         	 0.14857   	 14.4868   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 6550, leftOrthog: 0)        	 0.0388347 	 100       	 84.3319   	 0         	 20.3426   	 4.14557   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 81, n: 50, r2: 81)                   	 0.0368305 	 700       	 0         	 0         	 161.338   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 6550, m: 81)                                                              	 0.0351356 	 700       	 0         	 0         	 169.121   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 4050, k: 81) 	 0.0348178 	 700       	 659.533   	 0         	 85.9835   	 7.67045   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 2500, m: 81, k: 50)	 0.0347552 	 800       	 466.117   	 0         	 61.0533   	 7.6346    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 6550, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0335121 	 100       	 100.367   	 0         	 7.87776   	 12.7406   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 81, r: 81, streamingCols: 0)                   	 0.0149846 	 101       	 110.557   	 0         	 22.0154   	 5.02182   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 131, reductionFactor: 37, colBlockingSize: 12)                   	 0.0147638 	 100       	 11.9379   	 0         	 1.28482   	 9.29147   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00849346	 109       	 2.13889   	 0         	 0.775137  	 2.75937   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 81)                                                                       	 0.00739814	 101       	 0         	 0         	 44.2328   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 50, Qr2: 81)       	 0.00697321	 100       	 0         	 0         	 75.1447   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 81)                                                              	 0.00537052	 101       	 0         	 0         	 60.9327   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 50)           	 0.00512718	 8         	 19.5039   	 0         	 3.15183   	 6.18812   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4050, cols: 81, reductionFactor: 37, colBlockingSize: 12)                  	 0.00435411	 7         	 87.7477   	 0         	 4.30357   	 20.3895   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 4050, k: 50) 	 0.00419381	 100       	 482.855   	 0         	 77.7336   	 6.21166   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.00383136	 101       	 6.76847   	 0         	 1.05446   	 6.41892   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 81, r1_: 81, n: 50, r2: 81)           	 0.00355117	 7         	 104.757   	 0         	 10.4498   	 10.0248   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.00267731	 8         	 38.3605   	 0         	 3.04784   	 12.5861   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 81)                                                                                         	 0.00244977	 101       	 0         	 0         	 133.58    	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 131, r: 50, r2: 50, leftOrthog: 0)         	 0.00237952	 100       	 27.5266   	 0         	 8.28739   	 3.3215    
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 0, n: 50, r2: 81)                    	 0.00217715	 100       	 0         	 0         	 148.818   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                   	 0.00202345	 8         	 24.7103   	 0         	 7.94682   	 3.10945   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 81, m: 81, fromLeft: 0)                	 0.00201223	 808       	 0         	 0         	 42.1525   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 4050, Xcols: 81, r: 81, streamingCols: 0)                   	 0.00129533	 7         	 143.596   	 0         	 28.5064   	 5.03731   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 50, r2: 50)              	 0.00107328	 100       	 23.2931   	 0         	 5.59035   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 81, m: 50, k: 81)   	 0.00102339	 100       	 64.1105   	 0         	 11.4607   	 5.59392   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50, k: 50)     	 0.000971411	 100       	 25.7358   	 0         	 6.17658   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 81)   	 0.000948663	 100       	 42.6917   	 0         	 8.9389    	 4.77594   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 4050, m: 81)                                                              	 0.000936194	 7         	 0         	 0         	 39.2457   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                   	 0.000916671	 100       	 0.545452  	 0         	 2.18181   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 81, n: 50, r2: 1)                                                                                          	 0.000857298	 201       	 0         	 0         	 15.1929   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 4050, m: 81)                                                                       	 0.000833313	 7         	 0         	 0         	 44.091    	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000800405	 201       	 0         	 0         	 10.0449   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 50, k: 50)  	 0.000589696	 100       	 42.3947   	 0         	 10.1747   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 81, n: 50, r2: 1)                    	 0.000576297	 100       	 0         	 0         	 18.1851   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 1, r1low: 0, n: 50, r2: 50)                     	 0.000514746	 100       	 0         	 0         	 7.77082   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                          	 0.000505507	 100       	 0         	 0         	 7.91285   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                            	 0.000459114	 100       	 1.08905   	 0         	 13.0686   	 0.0833333 
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                                	 0.000458108	 101       	 0         	 0         	 8.81888   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 1, Xr2: 50, Qr1: 1, Qr2: 0)          	 0.000443031	 100       	 0         	 0         	 9.02871   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000405723	 101       	 0.622346  	 0         	 9.95753   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 81, n: 50, r2: 1)                                                                                 	 0.000392537	 101       	 1.04207   	 0         	 16.6731   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 81, r1_: 50, n: 50, r2: 81)           	 0.000332309	 1         	 98.7184   	 0         	 12.8699   	 7.67045   
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000326755	 100       	 0.765099  	 0         	 12.2416   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 50)                                                                       	 0.000268558	 8         	 0         	 0         	 59.5774   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                              	 0.000207186	 8         	 0         	 0         	 77.2253   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 81, reductionFactor: 37, colBlockingSize: 12)                    	 7.8152e-05	 1         	 8.62208   	 0         	 1.08619   	 7.9379    
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 50, r: 50, streamingCols: 0)                     	 3.232e-05 	 1         	 3.86757   	 0         	 1.54703   	 2.5       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 81, r: 50, streamingCols: 21)                    	 2.7501e-05	 1         	 4.54529   	 0         	 1.81812   	 2.5       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 81, r1_: 81, n: 50, r2: 1)            	 1.572e-05 	 1         	 41.7366   	 0         	 7.46107   	 5.59392   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 0)                	 1.015e-05 	 9         	 0         	 0         	 35.468    	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 9.59e-06  	 1         	 26.0688   	 0         	 6.25652   	 4.16667   
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 81, n: 50, r2: 1)                                                                                   	 9.34e-06  	 1         	 0.867238  	 0         	 3.46895   	 0.25      
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 8.741e-06 	 1         	 0.572017  	 0         	 2.28807   	 0.25      
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                         	 8.101e-06 	 2         	 0         	 0         	 9.87532   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 0, m: 4050, k: 50)  	 7.721e-06 	 100       	 0         	 0         	 20981.7   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 81)                                                                	 4.68e-06  	 1         	 0         	 0         	 13.8462   	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 81, fromLeft: 0)                	 1.81e-06  	 1         	 0         	 0         	 35.8011   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 6.9637    	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 6.96366   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                            	 5.62374   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                        	 5.6224    	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 4.57413   	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 1.7154    	 1818      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 1.55615   	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_leftOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                   	 1.33983   	 100       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 1.17231   	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 1.01032   	 900       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.975652  	 918       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.810196  	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.544208  	 918       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.198926  	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.134381  	 1800      
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.118639  	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.0954372 	 918       
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                       	 0.0757747 	 818       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0463851 	 1310      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0451981 	 900       
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                              	 0.0421123 	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0400987 	 1000      
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                              	 0.0373892 	 20        
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0353449 	 900       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 0.0308322 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 0.0308031 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.00903597	 18        
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00820938	 1818      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00782342	 5273      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00387117	 6472      
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.00202419	 818       
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00112502	 302       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000934752	 102       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000459114	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: L, orthoY: L
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m43->44  [0m[1;34m44->45  [0m[1;34m45->46  [0m[1;34m46->47  [0m[1;34m47->48  [0m[1;34m48->49  [0m[1;34m49->50  [0m[1;34m50->51  [0m[1;34m51->52  [0m[1;34m52->53  [0m[1;34m53->54  [0m[1;34m54->55  [0m[1;34m55->56  [0m[1;34m56->57  [0m[1;34m57->58  [0m[1;34m58->59  [0m[1;34m59->60  [0m[1;34m60->61  [0m[1;34m61->62  [0m[1;34m62->63  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 22988341720960 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 22988141357056 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 22987940030592 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 22987738704128 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 22987537377664 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 22987336051200 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 22987134724736 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 22986933398272 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 22986732071808 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 22986530745344 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 22986329418880 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 22986128092416 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 22985926765952 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 22985725439488 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 22985524113024 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 22985322786560 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 22985121460096 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 22984920133632 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 22984718807168 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 22984517480704 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 22984316154240 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 22984114827776 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 22983913501312 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 22983712174848 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 22983510848384 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 22983309521920 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 22983108195456 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 22982906868992 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 22982705542528 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 22982504216064 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 22982302889600 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 22982101563136 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 22981900232576 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 22981698906112 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 22981497579648 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 22981296253184 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 22981094926720 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 22980893600256 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 22980692273792 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 22980490947328 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 22980289620864 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 22980088294400 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 22979886967936 -> hwthread 43 - OK[0m[1;34m
[0m[1;34m	threadid 22979685641472 -> hwthread 44 - OK[0m[1;34m
[0m[1;34m	threadid 22979484315008 -> hwthread 45 - OK[0m[1;34m
[0m[1;34m	threadid 22979282988544 -> hwthread 46 - OK[0m[1;34m
[0m[1;34m	threadid 22979081662080 -> hwthread 47 - OK[0m[1;34m
[0m[1;34m	threadid 22978880335616 -> hwthread 48 - OK[0m[1;34m
[0m[1;34m	threadid 22978679009152 -> hwthread 49 - OK[0m[1;34m
[0m[1;34m	threadid 22978477682688 -> hwthread 50 - OK[0m[1;34m
[0m[1;34m	threadid 22978276356224 -> hwthread 51 - OK[0m[1;34m
[0m[1;34m	threadid 22978075029760 -> hwthread 52 - OK[0m[1;34m
[0m[1;34m	threadid 22977873703296 -> hwthread 53 - OK[0m[1;34m
[0m[1;34m	threadid 22977672376832 -> hwthread 54 - OK[0m[1;34m
[0m[1;34m	threadid 22977471050368 -> hwthread 55 - OK[0m[1;34m
[0m[1;34m	threadid 22977269723904 -> hwthread 56 - OK[0m[1;34m
[0m[1;34m	threadid 22977068397440 -> hwthread 57 - OK[0m[1;34m
[0m[1;34m	threadid 22976867070976 -> hwthread 58 - OK[0m[1;34m
[0m[1;34m	threadid 22976665744512 -> hwthread 59 - OK[0m[1;34m
[0m[1;34m	threadid 22976464418048 -> hwthread 60 - OK[0m[1;34m
[0m[1;34m	threadid 22976263091584 -> hwthread 61 - OK[0m[1;34m
[0m[1;34m	threadid 22976061765120 -> hwthread 62 - OK[0m[1;34m
[0m[1;34m	threadid 22975860438656 -> hwthread 63 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 22988236060416 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 22988229469952 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 132, m: 132)                                                               	 1.41813   	 700       	 7.94696   	 0         	 0.206936  	 38.403    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 6600, cols: 132, reductionFactor: 37, colBlockingSize: 12)                 	 1.00123   	 600       	 141.554   	 0         	 4.26015   	 33.2273   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 132, n: 50, r: 132, r2: 132)          	 0.92114   	 600       	 149.812   	 0         	 9.17033   	 16.3366   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 132, r: 132, r2: 6600, leftOrthog: 0)      	 0.71975   	 600       	 191.731   	 0         	 17.6624   	 10.8553   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 6600, cols: 82, reductionFactor: 37, colBlockingSize: 12)                  	 0.47818   	 700       	 133.441   	 0         	 6.41677   	 20.7957   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 6600, Xcols: 82, r: 82, streamingCols: 0)                   	 0.180389  	 700       	 172.21    	 0         	 33.7064   	 5.10913   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 132, reductionFactor: 37, colBlockingSize: 12)                 	 0.135901  	 100       	 65.8381   	 0         	 2.04516   	 32.1921   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 132, Qr2: 82)      	 0.118006  	 700       	 0         	 0         	 72.9579   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 82, m: 4100, k: 82) 	 0.0996877 	 700       	 387.167   	 0         	 38.1501   	 10.1485   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 82, m: 82)                                                                  	 0.0840384 	 809       	 7.07701   	 0         	 1.55981   	 4.5371    
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r: 132, r2: 132)           	 0.0648748 	 100       	 134.289   	 0         	 8.35361   	 16.0756   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 132)                                                                	 0.0633016 	 100       	 3.6492    	 0         	 0.199047  	 18.3333   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 6600, m: 82)                                                                       	 0.0632597 	 700       	 0         	 0         	 95.8183   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 82, reductionFactor: 37, colBlockingSize: 12)                  	 0.0569637 	 101       	 61.2213   	 0         	 3.00319   	 20.3854   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 132, n: 50, r: 132, r2: 50)           	 0.0560467 	 100       	 155.442   	 0         	 17.2399   	 9.01639   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 132, r: 132, r2: 2500, leftOrthog: 0)      	 0.0515363 	 100       	 169.046   	 0         	 15.9088   	 10.626    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 82, k: 2500)   	 0.0445738 	 800       	 367.929   	 0         	 47.9708   	 7.66986   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 82, n: 50, r2: 82)                                                                                         	 0.0439935 	 707       	 0         	 0         	 86.4467   	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 6600, leftOrthog: 0)        	 0.0430137 	 100       	 76.7197   	 0         	 18.5057   	 4.14573   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 6600, m: 82)                                                              	 0.04147   	 700       	 0         	 0         	 146.164   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0412564 	 100       	 2.12088   	 0         	 0.146401  	 14.4868   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 82, n: 50, r2: 82)                   	 0.0379796 	 700       	 0         	 0         	 159.597   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 4100, k: 82) 	 0.0366216 	 700       	 642.626   	 0         	 83.3847   	 7.70677   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 2500, m: 82, k: 50)	 0.0360791 	 800       	 454.557   	 0         	 59.2654   	 7.66986   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 6600, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0330433 	 100       	 102.568   	 0         	 8.05005   	 12.7413   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 132, reductionFactor: 37, colBlockingSize: 12)                   	 0.0174751 	 100       	 10.2402   	 0         	 1.09981   	 9.31096   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 82, r: 82, streamingCols: 0)                   	 0.015342  	 101       	 110.664   	 0         	 21.7701   	 5.08332   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00830578	 109       	 2.18722   	 0         	 0.792653  	 2.75937   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 50, Qr2: 82)       	 0.00787526	 100       	 0         	 0         	 67.0454   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 82)                                                              	 0.00654733	 101       	 0         	 0         	 50.5977   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 82)                                                                       	 0.00647538	 101       	 0         	 0         	 51.1599   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 4100, k: 50) 	 0.00613284	 100       	 334.266   	 0         	 53.8087   	 6.21212   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 0, n: 50, r2: 82)                    	 0.00599527	 100       	 0         	 0         	 54.7098   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 50)           	 0.00491613	 8         	 20.3412   	 0         	 3.28714   	 6.18812   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4100, cols: 82, reductionFactor: 37, colBlockingSize: 12)                  	 0.00443983	 7         	 89.2802   	 0         	 4.32533   	 20.6412   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.00425605	 101       	 6.09307   	 0         	 0.949237  	 6.41892   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 82, r1_: 82, n: 50, r2: 82)           	 0.00366308	 7         	 105.364   	 0         	 10.3822   	 10.1485   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0026556 	 8         	 38.674    	 0         	 3.07275   	 12.5861   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 82)                                                                                         	 0.00265113	 101       	 0         	 0         	 124.958   	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 132, r: 50, r2: 50, leftOrthog: 0)         	 0.00256905	 100       	 25.6904   	 0         	 7.7227    	 3.32661   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                   	 0.00210917	 8         	 23.706    	 0         	 7.62384   	 3.10945   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 82, m: 82, fromLeft: 0)                	 0.00172534	 808       	 0         	 0         	 50.3832   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 4100, Xcols: 82, r: 82, streamingCols: 0)                   	 0.00133201	 7         	 144.878   	 0         	 28.4103   	 5.0995    
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 4100, m: 82)                                                                       	 0.0012309 	 7         	 0         	 0         	 30.5909   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 50, r2: 50)              	 0.001092  	 100       	 22.8938   	 0         	 5.49452   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 82, m: 50, k: 82)   	 0.00107349	 100       	 62.6371   	 0         	 11.1219   	 5.63187   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50, k: 50)     	 0.00104056	 100       	 24.0255   	 0         	 5.76612   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 82)   	 0.000925921	 100       	 44.2802   	 0         	 9.24485   	 4.78972   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 82, n: 50, r2: 1)                                                                                          	 0.000868656	 201       	 0         	 0         	 15.1793   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000812723	 201       	 0         	 0         	 9.89267   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                   	 0.000774992	 100       	 0.645168  	 0         	 2.58067   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 50, k: 50)  	 0.000599416	 100       	 41.7073   	 0         	 10.0097   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 82, n: 50, r2: 1)                    	 0.00058572	 100       	 0         	 0         	 18.0291   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 1, r1low: 0, n: 50, r2: 50)                     	 0.000522098	 100       	 0         	 0         	 7.6614    	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                          	 0.000514539	 100       	 0         	 0         	 7.77395   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 4100, m: 82)                                                              	 0.000461953	 7         	 0         	 0         	 81.5113   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 1, Xr2: 50, Qr1: 1, Qr2: 0)          	 0.000452244	 100       	 0         	 0         	 8.84478   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                                	 0.000436416	 101       	 0         	 0         	 9.25722   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                            	 0.000433763	 100       	 1.1527    	 0         	 13.8324   	 0.0833333 
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000406292	 101       	 0.621474  	 0         	 9.94359   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 82, n: 50, r2: 1)                                                                                 	 0.00037977	 101       	 1.0904    	 0         	 17.4463   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 82, r1_: 50, n: 50, r2: 82)           	 0.000346318	 1         	 97.0784   	 0         	 12.5965   	 7.70677   
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.00034426	 100       	 0.726195  	 0         	 11.6191   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 50)                                                                       	 0.00027107	 8         	 0         	 0         	 59.0253   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                              	 0.000204914	 8         	 0         	 0         	 78.0815   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 82, reductionFactor: 37, colBlockingSize: 12)                    	 7.8051e-05	 1         	 8.84771   	 0         	 1.10943   	 7.97502   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 50, r: 50, streamingCols: 0)                     	 3.2761e-05	 1         	 3.81551   	 0         	 1.5262    	 2.5       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 82, r: 50, streamingCols: 20)                    	 2.984e-05 	 1         	 4.18901   	 0         	 1.6756    	 2.5       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 82, r1_: 82, n: 50, r2: 1)            	 1.6571e-05	 1         	 40.5769   	 0         	 7.20488   	 5.63187   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 1.059e-05 	 1         	 23.6072   	 0         	 5.66572   	 4.16667   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 0)                	 1.05e-05  	 9         	 0         	 0         	 34.2857   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 9.95e-06  	 1         	 0.502513  	 0         	 2.01005   	 0.25      
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 82, n: 50, r2: 1)                                                                                   	 9.151e-06 	 1         	 0.896077  	 0         	 3.58431   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 0, m: 4100, k: 50)  	 8.48e-06  	 100       	 0         	 0         	 19339.6   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                         	 8.44e-06  	 2         	 0         	 0         	 9.47867   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 82)                                                                	 4.8e-06   	 1         	 0         	 0         	 13.6667   	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 82, fromLeft: 0)                	 1.63e-06  	 1         	 0         	 0         	 40.2454   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 7.0843    	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 7.08425   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                            	 5.70646   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                        	 5.70524   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 4.61729   	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 1.73422   	 1818      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 1.52269   	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_leftOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                   	 1.3777    	 100       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 1.18839   	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 1.04315   	 900       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.982877  	 918       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.816869  	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.547139  	 918       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.199235  	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.14445   	 1800      
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.126333  	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.0923442 	 918       
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                       	 0.0712455 	 818       
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                              	 0.0491255 	 918       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0488405 	 1310      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0456144 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0450827 	 1000      
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                              	 0.0386513 	 20        
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0366785 	 900       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 0.0300715 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 0.0300404 	 2         
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.010537  	 5273      
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00958358	 1818      
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.0089527 	 18        
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00397232	 6472      
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.00173747	 818       
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00113032	 302       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000794093	 102       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000433763	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: L, orthoY: L
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m43->44  [0m[1;34m44->45  [0m[1;34m45->46  [0m[1;34m46->47  [0m[1;34m47->48  [0m[1;34m48->49  [0m[1;34m49->50  [0m[1;34m50->51  [0m[1;34m51->52  [0m[1;34m52->53  [0m[1;34m53->54  [0m[1;34m54->55  [0m[1;34m55->56  [0m[1;34m56->57  [0m[1;34m57->58  [0m[1;34m58->59  [0m[1;34m59->60  [0m[1;34m60->61  [0m[1;34m61->62  [0m[1;34m62->63  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 23086301464448 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 23086120298496 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 23085918972032 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 23085717645568 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 23085516319104 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 23085314992640 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 23085113666176 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 23084912339712 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 23084711013248 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 23084509686784 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 23084308360320 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 23084107033856 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 23083905707392 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 23083704380928 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 23083503054464 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 23083301728000 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 23083100401536 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 23082899075072 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 23082697748608 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 23082496422144 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 23082295095680 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 23082093769216 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 23081892442752 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 23081691116288 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 23081489789824 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 23081288463360 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 23081087136896 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 23080885810432 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 23080684483968 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 23080483157504 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 23080281831040 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 23080080504576 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 23079879174016 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 23079677847552 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 23079476521088 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 23079275194624 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 23079073868160 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 23078872541696 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 23078671215232 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 23078469888768 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 23078268562304 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 23078067235840 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 23077865909376 -> hwthread 43 - OK[0m[1;34m
[0m[1;34m	threadid 23077664582912 -> hwthread 44 - OK[0m[1;34m
[0m[1;34m	threadid 23077463256448 -> hwthread 45 - OK[0m[1;34m
[0m[1;34m	threadid 23077261929984 -> hwthread 46 - OK[0m[1;34m
[0m[1;34m	threadid 23077060603520 -> hwthread 47 - OK[0m[1;34m
[0m[1;34m	threadid 23076859277056 -> hwthread 48 - OK[0m[1;34m
[0m[1;34m	threadid 23076657950592 -> hwthread 49 - OK[0m[1;34m
[0m[1;34m	threadid 23076456624128 -> hwthread 50 - OK[0m[1;34m
[0m[1;34m	threadid 23076255297664 -> hwthread 51 - OK[0m[1;34m
[0m[1;34m	threadid 23076053971200 -> hwthread 52 - OK[0m[1;34m
[0m[1;34m	threadid 23075852644736 -> hwthread 53 - OK[0m[1;34m
[0m[1;34m	threadid 23075651318272 -> hwthread 54 - OK[0m[1;34m
[0m[1;34m	threadid 23075449991808 -> hwthread 55 - OK[0m[1;34m
[0m[1;34m	threadid 23075248665344 -> hwthread 56 - OK[0m[1;34m
[0m[1;34m	threadid 23075047338880 -> hwthread 57 - OK[0m[1;34m
[0m[1;34m	threadid 23074846012416 -> hwthread 58 - OK[0m[1;34m
[0m[1;34m	threadid 23074644685952 -> hwthread 59 - OK[0m[1;34m
[0m[1;34m	threadid 23074443359488 -> hwthread 60 - OK[0m[1;34m
[0m[1;34m	threadid 23074242033024 -> hwthread 61 - OK[0m[1;34m
[0m[1;34m	threadid 23074040706560 -> hwthread 62 - OK[0m[1;34m
[0m[1;34m	threadid 23073839380096 -> hwthread 63 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 23086195803904 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 23086015436544 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 133, m: 133)                                                               	 1.47469   	 700       	 7.8172    	 0         	 0.202023  	 38.6947   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 6650, cols: 133, reductionFactor: 37, colBlockingSize: 12)                 	 1.01767   	 600       	 142.457   	 0         	 4.2551    	 33.4791   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 133, n: 50, r: 133, r2: 133)          	 0.933     	 600       	 151.295   	 0         	 9.19145   	 16.4604   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 133, r: 133, r2: 6650, leftOrthog: 0)      	 0.724737  	 600       	 194.772   	 0         	 17.8077   	 10.9375   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 6650, cols: 83, reductionFactor: 37, colBlockingSize: 12)                  	 0.487223  	 700       	 135.195   	 0         	 6.42313   	 21.0481   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 6650, Xcols: 83, r: 83, streamingCols: 0)                   	 0.18393   	 700       	 174.351   	 0         	 33.7147   	 5.17136   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 133, reductionFactor: 37, colBlockingSize: 12)                 	 0.131779  	 100       	 68.9302   	 0         	 2.12592   	 32.4237   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 133, Qr2: 83)      	 0.122018  	 700       	 0         	 0         	 71.6601   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 83, m: 4150, k: 83) 	 0.0989165 	 700       	 404.635   	 0         	 39.391    	 10.2723   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 83, m: 83)                                                                  	 0.0892082 	 809       	 6.9138    	 0         	 1.5054    	 4.59266   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 6650, m: 83)                                                                       	 0.0646825 	 700       	 0         	 0         	 95.572    	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r: 133, r2: 133)           	 0.0642674 	 100       	 137.62    	 0         	 8.4981    	 16.1942   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 133)                                                                	 0.0633951 	 100       	 3.67142   	 0         	 0.200016  	 18.3557   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 83, reductionFactor: 37, colBlockingSize: 12)                  	 0.059205  	 101       	 60.3491   	 0         	 2.92587   	 20.626    
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 133, n: 50, r: 133, r2: 50)           	 0.0561774 	 100       	 157.439   	 0         	 17.4248   	 9.03533   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 133, r: 133, r2: 2500, leftOrthog: 0)      	 0.0522259 	 100       	 169.351   	 0         	 15.8217   	 10.7037   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 6650, leftOrthog: 0)        	 0.049004  	 100       	 67.8516   	 0         	 16.366    	 4.14589   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 83, n: 50, r2: 83)                                                                                         	 0.0472247 	 707       	 0         	 0         	 82.5081   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 83, k: 2500)   	 0.0459117 	 800       	 361.564   	 0         	 46.9283   	 7.70459   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0426019 	 100       	 2.0539    	 0         	 0.141778  	 14.4868   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 83, n: 50, r2: 83)                   	 0.0424292 	 700       	 0         	 0         	 145.698   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 6650, m: 83)                                                              	 0.0374358 	 700       	 0         	 0         	 165.132   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 2500, m: 83, k: 50)	 0.0370145 	 800       	 448.473   	 0         	 58.2086   	 7.70459   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 4150, k: 83) 	 0.033932  	 700       	 710.584   	 0         	 91.7766   	 7.74254   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 6650, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0320754 	 100       	 106.464   	 0         	 8.3553    	 12.742    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 133, reductionFactor: 37, colBlockingSize: 12)                   	 0.0159297 	 100       	 11.4046   	 0         	 1.22232   	 9.33023   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 83, r: 83, streamingCols: 0)                   	 0.0154677 	 101       	 112.458   	 0         	 21.8587   	 5.1448    
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00808799	 109       	 2.24612   	 0         	 0.813997  	 2.75937   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 50, Qr2: 83)       	 0.00738256	 100       	 0         	 0         	 72.0617   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 83)                                                                       	 0.00557641	 101       	 0         	 0         	 60.1319   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.00520952	 101       	 4.97789   	 0         	 0.775503  	 6.41892   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 50)           	 0.0048384 	 8         	 20.668    	 0         	 3.33995   	 6.18812   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4150, cols: 83, reductionFactor: 37, colBlockingSize: 12)                  	 0.00462295	 7         	 88.9191   	 0         	 4.25594   	 20.893    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 4150, k: 50) 	 0.00441689	 100       	 469.787   	 0         	 75.6187   	 6.21257   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 83)                                                              	 0.00428134	 101       	 0         	 0         	 78.3212   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 83, r1_: 83, n: 50, r2: 83)           	 0.00373398	 7         	 107.191   	 0         	 10.435    	 10.2723   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 83)                                                                                         	 0.00268352	 101       	 0         	 0         	 124.955   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.00265085	 8         	 38.7433   	 0         	 3.07826   	 12.5861   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 133, r: 50, r2: 50, leftOrthog: 0)         	 0.00257155	 100       	 25.8598   	 0         	 7.76184   	 3.33166   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 0, n: 50, r2: 83)                    	 0.00244227	 100       	 0         	 0         	 135.939   	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 83, m: 83, fromLeft: 0)                	 0.00204598	 808       	 0         	 0         	 43.5298   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                   	 0.00194326	 8         	 25.73     	 0         	 8.27475   	 3.10945   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 4150, Xcols: 83, r: 83, streamingCols: 0)                   	 0.0013386 	 7         	 149.503   	 0         	 28.964    	 5.16169   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 83, m: 50, k: 83)   	 0.00109615	 100       	 62.8471   	 0         	 11.0853   	 5.6694    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50, k: 50)     	 0.00109581	 100       	 22.8141   	 0         	 5.47538   	 4.16667   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 50, r2: 50)              	 0.00106974	 100       	 23.3702   	 0         	 5.60885   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 83)   	 0.000923575	 100       	 44.9341   	 0         	 9.35495   	 4.80324   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 4150, m: 83)                                                              	 0.000910854	 7         	 0         	 0         	 42.3541   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 83, n: 50, r2: 1)                                                                                          	 0.000850119	 201       	 0         	 0         	 15.6994   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                   	 0.000821278	 100       	 0.608807  	 0         	 2.43523   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000817055	 201       	 0         	 0         	 9.84022   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 4150, m: 83)                                                                       	 0.000797592	 7         	 0         	 0         	 48.3686   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 50, k: 50)  	 0.000609032	 100       	 41.0487   	 0         	 9.8517    	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 83, n: 50, r2: 1)                    	 0.000558488	 100       	 0         	 0         	 19.0514   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 1, r1low: 0, n: 50, r2: 50)                     	 0.000533677	 100       	 0         	 0         	 7.49517   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                          	 0.000528908	 100       	 0         	 0         	 7.56275   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 1, Xr2: 50, Qr1: 1, Qr2: 0)          	 0.000451442	 100       	 0         	 0         	 8.8605    	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                                	 0.000444119	 101       	 0         	 0         	 9.09666   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                            	 0.000436366	 100       	 1.14583   	 0         	 13.7499   	 0.0833333 
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000384918	 101       	 0.655984  	 0         	 10.4957   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 83, n: 50, r2: 1)                                                                                 	 0.000380037	 101       	 1.10292   	 0         	 17.6467   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 83, r1_: 50, n: 50, r2: 83)           	 0.000344609	 1         	 99.9539   	 0         	 12.9097   	 7.74254   
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000333359	 100       	 0.749942  	 0         	 11.9991   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                              	 0.000268269	 8         	 0         	 0         	 59.6416   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 50)                                                                       	 0.000200845	 8         	 0         	 0         	 79.6634   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 83, reductionFactor: 37, colBlockingSize: 12)                    	 8.1052e-05	 1         	 8.7292    	 0         	 1.08957   	 8.01158   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 50, r: 50, streamingCols: 0)                     	 3.2931e-05	 1         	 3.79582   	 0         	 1.51833   	 2.5       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 83, r: 50, streamingCols: 20)                    	 2.9271e-05	 1         	 4.27044   	 0         	 1.70818   	 2.5       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 83, r1_: 83, n: 50, r2: 1)            	 1.4521e-05	 1         	 47.4416   	 0         	 8.36802   	 5.6694    
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 1.1101e-05	 1         	 22.5205   	 0         	 5.40492   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 0, m: 4150, k: 50)  	 1.099e-05 	 100       	 0         	 0         	 15104.6   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 83, n: 50, r2: 1)                                                                                   	 1.0491e-05	 1         	 0.791154  	 0         	 3.16462   	 0.25      
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 0)                	 1.012e-05 	 9         	 0         	 0         	 35.5731   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                         	 8.55e-06  	 2         	 0         	 0         	 9.35673   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 7.44e-06  	 1         	 0.672043  	 0         	 2.68817   	 0.25      
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 83)                                                                	 4.54e-06  	 1         	 0         	 0         	 14.6256   	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 83, fromLeft: 0)                	 1.63e-06  	 1         	 0         	 0         	 40.7362   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 7.20108   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 7.20103   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                            	 5.81468   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                        	 5.81342   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 4.69922   	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 1.75644   	 1818      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 1.58068   	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_leftOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                   	 1.38628   	 100       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 1.19815   	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 1.05451   	 900       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.997851  	 918       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.828538  	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.559516  	 918       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.202742  	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.139296  	 1800      
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.129852  	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.0972962 	 918       
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                       	 0.0712659 	 818       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0521043 	 1310      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0470075 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0459636 	 1000      
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                              	 0.043345  	 918       
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                              	 0.0391664 	 20        
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0376235 	 900       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 0.0305572 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 0.0305282 	 2         
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.0104257 	 1818      
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.00894262	 18        
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00444704	 5273      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.004213  	 6472      
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.00205773	 818       
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00109831	 302       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000839209	 102       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000436366	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: L, orthoY: L
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m43->44  [0m[1;34m44->45  [0m[1;34m45->46  [0m[1;34m46->47  [0m[1;34m47->48  [0m[1;34m48->49  [0m[1;34m49->50  [0m[1;34m50->51  [0m[1;34m51->52  [0m[1;34m52->53  [0m[1;34m53->54  [0m[1;34m54->55  [0m[1;34m55->56  [0m[1;34m56->57  [0m[1;34m57->58  [0m[1;34m58->59  [0m[1;34m59->60  [0m[1;34m60->61  [0m[1;34m61->62  [0m[1;34m62->63  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 22579877406592 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 22579649701888 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 22579448375424 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 22579247048960 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 22579045722496 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 22578844396032 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 22578643069568 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 22578441743104 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 22578240416640 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 22578039090176 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 22577837763712 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 22577636437248 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 22577435110784 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 22577233784320 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 22577032457856 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 22576831131392 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 22576629804928 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 22576428478464 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 22576227152000 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 22576025825536 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 22575824499072 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 22575623172608 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 22575421846144 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 22575220519680 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 22575019193216 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 22574817866752 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 22574616540288 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 22574415213824 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 22574213887360 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 22574012560896 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 22573811234432 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 22573609907968 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 22573408577408 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 22573207250944 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 22573005924480 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 22572804598016 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 22572603271552 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 22572401945088 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 22572200618624 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 22571999292160 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 22571797965696 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 22571596639232 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 22571395312768 -> hwthread 43 - OK[0m[1;34m
[0m[1;34m	threadid 22571193986304 -> hwthread 44 - OK[0m[1;34m
[0m[1;34m	threadid 22570992659840 -> hwthread 45 - OK[0m[1;34m
[0m[1;34m	threadid 22570791333376 -> hwthread 46 - OK[0m[1;34m
[0m[1;34m	threadid 22570590006912 -> hwthread 47 - OK[0m[1;34m
[0m[1;34m	threadid 22570388680448 -> hwthread 48 - OK[0m[1;34m
[0m[1;34m	threadid 22570187353984 -> hwthread 49 - OK[0m[1;34m
[0m[1;34m	threadid 22569986027520 -> hwthread 50 - OK[0m[1;34m
[0m[1;34m	threadid 22569784701056 -> hwthread 51 - OK[0m[1;34m
[0m[1;34m	threadid 22569583374592 -> hwthread 52 - OK[0m[1;34m
[0m[1;34m	threadid 22569382048128 -> hwthread 53 - OK[0m[1;34m
[0m[1;34m	threadid 22569180721664 -> hwthread 54 - OK[0m[1;34m
[0m[1;34m	threadid 22568979395200 -> hwthread 55 - OK[0m[1;34m
[0m[1;34m	threadid 22568778068736 -> hwthread 56 - OK[0m[1;34m
[0m[1;34m	threadid 22568576742272 -> hwthread 57 - OK[0m[1;34m
[0m[1;34m	threadid 22568375415808 -> hwthread 58 - OK[0m[1;34m
[0m[1;34m	threadid 22568174089344 -> hwthread 59 - OK[0m[1;34m
[0m[1;34m	threadid 22567972762880 -> hwthread 60 - OK[0m[1;34m
[0m[1;34m	threadid 22567771436416 -> hwthread 61 - OK[0m[1;34m
[0m[1;34m	threadid 22567570109952 -> hwthread 62 - OK[0m[1;34m
[0m[1;34m	threadid 22567368783488 -> hwthread 63 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 22579771746048 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 22579765155584 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 134, m: 134)                                                               	 1.48128   	 700       	 7.95925   	 0         	 0.204155  	 38.9864   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 6700, cols: 134, reductionFactor: 37, colBlockingSize: 12)                 	 1.01397   	 600       	 146.225   	 0         	 4.33507   	 33.7308   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 134, n: 50, r: 134, r2: 134)          	 0.961329  	 600       	 150.174   	 0         	 9.05524   	 16.5842   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 134, r: 134, r2: 6700, leftOrthog: 0)      	 0.733822  	 600       	 196.732   	 0         	 17.8527   	 11.0197   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 6700, cols: 84, reductionFactor: 37, colBlockingSize: 12)                  	 0.51593   	 700       	 131.751   	 0         	 6.18532   	 21.3005   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 6700, Xcols: 84, r: 84, streamingCols: 0)                   	 0.186116  	 700       	 177.806   	 0         	 33.974    	 5.2336    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 134, reductionFactor: 37, colBlockingSize: 12)                 	 0.139148  	 100       	 66.2652   	 0         	 2.02925   	 32.6551   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 134, Qr2: 84)      	 0.118202  	 700       	 0         	 0         	 75.1199   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 84, m: 4200, k: 84) 	 0.100154  	 700       	 414.255   	 0         	 39.8474   	 10.396    
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 84, m: 84)                                                                  	 0.0886222 	 809       	 7.21411   	 0         	 1.55201   	 4.64822   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 6700, m: 84)                                                                       	 0.0660762 	 700       	 0         	 0         	 95.3953   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 84, reductionFactor: 37, colBlockingSize: 12)                  	 0.0636435 	 101       	 57.5013   	 0         	 2.75568   	 20.8665   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r: 134, r2: 134)           	 0.063323  	 100       	 141.781   	 0         	 8.69139   	 16.3128   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 134)                                                                	 0.0631459 	 100       	 3.71362   	 0         	 0.202072  	 18.3777   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 134, r: 134, r2: 2500, leftOrthog: 0)      	 0.054327  	 100       	 165.259   	 0         	 15.3281   	 10.7814   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 134, n: 50, r: 134, r2: 50)           	 0.0532038 	 100       	 168.747   	 0         	 18.6378   	 9.05405   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 6700, leftOrthog: 0)        	 0.0507498 	 100       	 66.0101   	 0         	 15.9213   	 4.14604   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 84, k: 2500)   	 0.0458721 	 800       	 366.236   	 0         	 47.3247   	 7.7388    
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 84, n: 50, r2: 84)                                                                                         	 0.0450651 	 707       	 0         	 0         	 88.558    	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.04312   	 100       	 2.02922   	 0         	 0.140074  	 14.4868   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 84, n: 50, r2: 84)                   	 0.0415006 	 700       	 0         	 0         	 151.886   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 6700, m: 84)                                                              	 0.0401935 	 700       	 0         	 0         	 156.825   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 2500, m: 84, k: 50)	 0.0378151 	 800       	 444.267   	 0         	 57.4077   	 7.7388    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 4200, k: 84) 	 0.0344999 	 700       	 715.828   	 0         	 92.035    	 7.77778   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 6700, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0335972 	 100       	 102.406   	 0         	 8.03639   	 12.7427   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 84, r: 84, streamingCols: 0)                   	 0.0157623 	 101       	 113.031   	 0         	 21.7107   	 5.20627   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 134, reductionFactor: 37, colBlockingSize: 12)                   	 0.0156219 	 100       	 11.8048   	 0         	 1.26264   	 9.34929   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.0080712 	 109       	 2.25079   	 0         	 0.81569   	 2.75937   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 84)                                                                       	 0.00779164	 101       	 0         	 0         	 43.5544   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 50, Qr2: 84)       	 0.0074484 	 100       	 0         	 0         	 71.9617   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 84)                                                              	 0.00600181	 101       	 0         	 0         	 56.543    	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.00591036	 101       	 4.38762   	 0         	 0.683545  	 6.41892   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 4200, k: 50) 	 0.00531651	 100       	 394.996   	 0         	 63.5755   	 6.21302   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 0, n: 50, r2: 84)                    	 0.00517112	 100       	 0         	 0         	 64.9763   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 50)           	 0.00487208	 8         	 20.5251   	 0         	 3.31686   	 6.18812   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4200, cols: 84, reductionFactor: 37, colBlockingSize: 12)                  	 0.00482554	 7         	 88.3022   	 0         	 4.1761    	 21.1447   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 84, r1_: 84, n: 50, r2: 84)           	 0.00385346	 7         	 107.668   	 0         	 10.3566   	 10.396    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.00268204	 8         	 38.2928   	 0         	 3.04246   	 12.5861   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 84)                                                                                         	 0.00251173	 101       	 0         	 0         	 135.11    	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 134, r: 50, r2: 50, leftOrthog: 0)         	 0.00248751	 100       	 26.9346   	 0         	 8.07233   	 3.33665   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                   	 0.00176588	 8         	 28.3144   	 0         	 9.10592   	 3.10945   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 84, m: 84, fromLeft: 0)                	 0.00145467	 808       	 0         	 0         	 62.7084   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 4200, Xcols: 84, r: 84, streamingCols: 0)                   	 0.00137882	 7         	 150.453   	 0         	 28.8009   	 5.22388   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 50, r2: 50)              	 0.0011357 	 100       	 22.0129   	 0         	 5.28309   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 84, m: 50, k: 84)   	 0.00102605	 100       	 68.7687   	 0         	 12.0509   	 5.70652   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50, k: 50)     	 0.00101306	 100       	 24.6778   	 0         	 5.92267   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 84)   	 0.000973546	 100       	 43.1413   	 0         	 8.95695   	 4.81651   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 4200, m: 84)                                                              	 0.000906614	 7         	 0         	 0         	 43.5837   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 4200, m: 84)                                                                       	 0.000877292	 7         	 0         	 0         	 45.0404   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 84, n: 50, r2: 1)                                                                                          	 0.00085117	 201       	 0         	 0         	 15.869    	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                   	 0.000842433	 100       	 0.593519  	 0         	 2.37408   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.00077913	 201       	 0         	 0         	 10.3192   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 50, k: 50)  	 0.000612795	 100       	 40.7967   	 0         	 9.7912    	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 84, n: 50, r2: 1)                    	 0.000559436	 100       	 0         	 0         	 19.1622   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 1, r1low: 0, n: 50, r2: 50)                     	 0.000538817	 100       	 0         	 0         	 7.42367   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                          	 0.000501257	 100       	 0         	 0         	 7.97994   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                                	 0.000465165	 101       	 0         	 0         	 8.68509   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 1, Xr2: 50, Qr1: 1, Qr2: 0)          	 0.000433466	 100       	 0         	 0         	 9.22794   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                            	 0.000430453	 100       	 1.16157   	 0         	 13.9388   	 0.0833333 
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 84, n: 50, r2: 1)                                                                                 	 0.000386858	 101       	 1.09653   	 0         	 17.5444   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000376709	 101       	 0.670279  	 0         	 10.7245   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 84, r1_: 50, n: 50, r2: 84)           	 0.000351059	 1         	 100.496   	 0         	 12.9209   	 7.77778   
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000322904	 100       	 0.774224  	 0         	 12.3876   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                              	 0.000276876	 8         	 0         	 0         	 57.7876   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 50)                                                                       	 0.000270016	 8         	 0         	 0         	 59.2557   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 84, reductionFactor: 37, colBlockingSize: 12)                    	 8.3492e-05	 1         	 8.67952   	 0         	 1.07852   	 8.0476    
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 50, r: 50, streamingCols: 0)                     	 3.2771e-05	 1         	 3.81435   	 0         	 1.52574   	 2.5       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 84, r: 50, streamingCols: 24)                    	 2.9101e-05	 1         	 4.29539   	 0         	 1.71815   	 2.5       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 84, r1_: 84, n: 50, r2: 1)            	 1.563e-05 	 1         	 45.144    	 0         	 7.91094   	 5.70652   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 1.015e-05 	 1         	 24.6305   	 0         	 5.91133   	 4.16667   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 0)                	 9.851e-06 	 9         	 0         	 0         	 36.5445   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 9.181e-06 	 1         	 0.544603  	 0         	 2.17841   	 0.25      
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 84, n: 50, r2: 1)                                                                                   	 8.98e-06  	 1         	 0.935412  	 0         	 3.74165   	 0.25      
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                         	 8.09e-06  	 2         	 0         	 0         	 9.88875   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 0, m: 4200, k: 50)  	 8.04e-06  	 100       	 0         	 0         	 20895.5   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 84)                                                                	 4.81e-06  	 1         	 0         	 0         	 13.9709   	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 84, fromLeft: 0)                	 1.74e-06  	 1         	 0         	 0         	 38.6207   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 7.28404   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 7.28399   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                            	 5.8522    	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                        	 5.85094   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 4.72509   	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 1.79541   	 1818      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 1.58755   	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_leftOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                   	 1.43171   	 100       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 1.20307   	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 1.07899   	 900       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 1.04062   	 918       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.841386  	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.5936    	 918       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.205085  	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.141978  	 1800      
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.126084  	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.0966934 	 918       
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                       	 0.0750232 	 818       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0497083 	 1310      
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                              	 0.0478487 	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.04777   	 1000      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0468851 	 900       
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                              	 0.0395919 	 20        
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0384279 	 900       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 0.0309669 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 0.0309375 	 2         
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00945297	 1818      
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.00910238	 18        
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00482762	 5273      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00390218	 6472      
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.00146626	 818       
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00108647	 302       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000860594	 102       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000430453	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: L, orthoY: L
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m43->44  [0m[1;34m44->45  [0m[1;34m45->46  [0m[1;34m46->47  [0m[1;34m47->48  [0m[1;34m48->49  [0m[1;34m49->50  [0m[1;34m50->51  [0m[1;34m51->52  [0m[1;34m52->53  [0m[1;34m53->54  [0m[1;34m54->55  [0m[1;34m55->56  [0m[1;34m56->57  [0m[1;34m57->58  [0m[1;34m58->59  [0m[1;34m59->60  [0m[1;34m60->61  [0m[1;34m61->62  [0m[1;34m62->63  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 23140361172864 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 23140142934016 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 23139941607552 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 23139740281088 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 23139538954624 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 23139337628160 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 23139136301696 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 23138934975232 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 23138733648768 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 23138532322304 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 23138330995840 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 23138129669376 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 23137928342912 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 23137727016448 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 23137525689984 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 23137324363520 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 23137123037056 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 23136921710592 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 23136720384128 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 23136519057664 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 23136317731200 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 23136116404736 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 23135915078272 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 23135713751808 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 23135512425344 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 23135311098880 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 23135109772416 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 23134908445952 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 23134707119488 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 23134505793024 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 23134304466560 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 23134103140096 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 23133901809536 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 23133700483072 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 23133499156608 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 23133297830144 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 23133096503680 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 23132895177216 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 23132693850752 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 23132492524288 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 23132291197824 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 23132089871360 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 23131888544896 -> hwthread 43 - OK[0m[1;34m
[0m[1;34m	threadid 23131687218432 -> hwthread 44 - OK[0m[1;34m
[0m[1;34m	threadid 23131485891968 -> hwthread 45 - OK[0m[1;34m
[0m[1;34m	threadid 23131284565504 -> hwthread 46 - OK[0m[1;34m
[0m[1;34m	threadid 23131083239040 -> hwthread 47 - OK[0m[1;34m
[0m[1;34m	threadid 23130881912576 -> hwthread 48 - OK[0m[1;34m
[0m[1;34m	threadid 23130680586112 -> hwthread 49 - OK[0m[1;34m
[0m[1;34m	threadid 23130479259648 -> hwthread 50 - OK[0m[1;34m
[0m[1;34m	threadid 23130277933184 -> hwthread 51 - OK[0m[1;34m
[0m[1;34m	threadid 23130076606720 -> hwthread 52 - OK[0m[1;34m
[0m[1;34m	threadid 23129875280256 -> hwthread 53 - OK[0m[1;34m
[0m[1;34m	threadid 23129673953792 -> hwthread 54 - OK[0m[1;34m
[0m[1;34m	threadid 23129472627328 -> hwthread 55 - OK[0m[1;34m
[0m[1;34m	threadid 23129271300864 -> hwthread 56 - OK[0m[1;34m
[0m[1;34m	threadid 23129069974400 -> hwthread 57 - OK[0m[1;34m
[0m[1;34m	threadid 23128868647936 -> hwthread 58 - OK[0m[1;34m
[0m[1;34m	threadid 23128667321472 -> hwthread 59 - OK[0m[1;34m
[0m[1;34m	threadid 23128465995008 -> hwthread 60 - OK[0m[1;34m
[0m[1;34m	threadid 23128264668544 -> hwthread 61 - OK[0m[1;34m
[0m[1;34m	threadid 23128063342080 -> hwthread 62 - OK[0m[1;34m
[0m[1;34m	threadid 23127862015616 -> hwthread 63 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 23140255512320 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 23140248921856 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 135, m: 135)                                                               	 1.51143   	 700       	 7.97643   	 0         	 0.203076  	 39.278    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 6750, cols: 135, reductionFactor: 37, colBlockingSize: 12)                 	 1.02655   	 600       	 147.691   	 0         	 4.34609   	 33.9825   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 135, n: 50, r: 135, r2: 135)          	 0.957885  	 600       	 154.113   	 0         	 9.22395   	 16.7079   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 135, r: 135, r2: 6750, leftOrthog: 0)      	 0.788589  	 600       	 187.198   	 0         	 16.8617   	 11.102    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 6750, cols: 85, reductionFactor: 37, colBlockingSize: 12)                  	 0.512901  	 700       	 136.716   	 0         	 6.34325   	 21.5529   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 6750, Xcols: 85, r: 85, streamingCols: 0)                   	 0.193832  	 700       	 176.123   	 0         	 33.2569   	 5.29583   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 135, reductionFactor: 37, colBlockingSize: 12)                 	 0.136224  	 100       	 68.7015   	 0         	 2.08906   	 32.8863   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 135, Qr2: 85)      	 0.117891  	 700       	 0         	 0         	 76.4772   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 85, m: 4250, k: 85) 	 0.103447  	 700       	 415.564   	 0         	 39.503    	 10.5198   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 85, m: 85)                                                                  	 0.0976966 	 809       	 6.78054   	 0         	 1.44151   	 4.70377   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 135)                                                                	 0.0664962 	 100       	 3.55283   	 0         	 0.193094  	 18.3995   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 6750, m: 85)                                                                       	 0.0622527 	 700       	 0         	 0         	 103.224   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r: 135, r2: 135)           	 0.0616124 	 100       	 147.9     	 0         	 9.00111   	 16.4314   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 85, reductionFactor: 37, colBlockingSize: 12)                  	 0.0609647 	 101       	 61.4657   	 0         	 2.91214   	 21.1067   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 135, n: 50, r: 135, r2: 50)           	 0.0541123 	 100       	 168.4     	 0         	 18.5614   	 9.07258   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 135, r: 135, r2: 2500, leftOrthog: 0)      	 0.0532771 	 100       	 171.04    	 0         	 15.7509   	 10.8591   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 6750, leftOrthog: 0)        	 0.0492718 	 100       	 68.4976   	 0         	 16.5206   	 4.14619   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 85, n: 50, r2: 85)                                                                                         	 0.0467841 	 707       	 0         	 0         	 87.3472   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 85, k: 2500)   	 0.0454867 	 800       	 373.736   	 0         	 48.0844   	 7.77249   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 85, n: 50, r2: 85)                   	 0.0436006 	 700       	 0         	 0         	 147.383   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0434036 	 100       	 2.01596   	 0         	 0.139159  	 14.4868   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 2500, m: 85, k: 50)	 0.0371802 	 800       	 457.233   	 0         	 58.8271   	 7.77249   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 4250, k: 85) 	 0.0350514 	 700       	 721.44    	 0         	 92.3444   	 7.8125    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 6750, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0339099 	 100       	 102.218   	 0         	 8.02126   	 12.7434   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 6750, m: 85)                                                              	 0.0336311 	 700       	 0         	 0         	 191.073   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 85, r: 85, streamingCols: 0)                   	 0.016074  	 101       	 113.495   	 0         	 21.5453   	 5.26772   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 135, reductionFactor: 37, colBlockingSize: 12)                   	 0.0151078 	 100       	 12.3893   	 0         	 1.3225    	 9.36815   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00806755	 109       	 2.25181   	 0         	 0.816059  	 2.75937   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 50, Qr2: 85)       	 0.00709004	 100       	 0         	 0         	 76.1632   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 85)                                                                       	 0.00650113	 101       	 0         	 0         	 52.8216   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 0, n: 50, r2: 85)                    	 0.00548024	 100       	 0         	 0         	 62.0411   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 4250, k: 50) 	 0.00528666	 100       	 401.955   	 0         	 64.6912   	 6.21345   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 85)                                                              	 0.00522283	 101       	 0         	 0         	 65.7498   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.00513415	 101       	 5.05097   	 0         	 0.786888  	 6.41892   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 50)           	 0.00490468	 8         	 20.3887   	 0         	 3.29481   	 6.18812   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4250, cols: 85, reductionFactor: 37, colBlockingSize: 12)                  	 0.00475769	 7         	 92.7984   	 0         	 4.3371    	 21.3964   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 85, r1_: 85, n: 50, r2: 85)           	 0.00388917	 7         	 110.535   	 0         	 10.5073   	 10.5198   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 135, r: 50, r2: 50, leftOrthog: 0)         	 0.00294993	 100       	 22.8819   	 0         	 6.84762   	 3.34158   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.00270192	 8         	 38.011    	 0         	 3.02007   	 12.5861   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 85)                                                                                         	 0.00259704	 101       	 0         	 0         	 132.227   	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 85, m: 85, fromLeft: 0)                	 0.00214623	 808       	 0         	 0         	 43.5205   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                   	 0.0017162 	 8         	 29.1341   	 0         	 9.36952   	 3.10945   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 4250, Xcols: 85, r: 85, streamingCols: 0)                   	 0.0014334 	 7         	 149.954   	 0         	 28.3678   	 5.28607   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 85, m: 50, k: 85)   	 0.00108396	 100       	 66.6539   	 0         	 11.6056   	 5.74324   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 50, r2: 50)              	 0.00106281	 100       	 23.5225   	 0         	 5.64541   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50, k: 50)     	 0.00100718	 100       	 24.8217   	 0         	 5.95722   	 4.16667   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 4250, m: 85)                                                              	 0.000998387	 7         	 0         	 0         	 40.5254   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 85)   	 0.000948073	 100       	 44.8278   	 0         	 9.28199   	 4.82955   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 4250, m: 85)                                                                       	 0.000876313	 7         	 0         	 0         	 46.1707   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                   	 0.000873932	 100       	 0.572127  	 0         	 2.28851   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 85, n: 50, r2: 1)                                                                                          	 0.00085186	 201       	 0         	 0         	 16.0449   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000805079	 201       	 0         	 0         	 9.9866    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 50, k: 50)  	 0.00060375	 100       	 41.4079   	 0         	 9.93789   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 85, n: 50, r2: 1)                    	 0.000564417	 100       	 0         	 0         	 19.1348   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 1, r1low: 0, n: 50, r2: 50)                     	 0.000544341	 100       	 0         	 0         	 7.34833   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                          	 0.000502972	 100       	 0         	 0         	 7.95273   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                                	 0.00045413	 101       	 0         	 0         	 8.89613   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 1, Xr2: 50, Qr1: 1, Qr2: 0)          	 0.000438638	 100       	 0         	 0         	 9.11914   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                            	 0.000435856	 100       	 1.14717   	 0         	 13.766    	 0.0833333 
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000379556	 101       	 0.665251  	 0         	 10.644    	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 85, n: 50, r2: 1)                                                                                 	 0.000367175	 101       	 1.16906   	 0         	 18.705    	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 85, r1_: 50, n: 50, r2: 85)           	 0.000360499	 1         	 100.208   	 0         	 12.8267   	 7.8125    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000320791	 100       	 0.779324  	 0         	 12.4692   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                              	 0.000278236	 8         	 0         	 0         	 57.5051   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 50)                                                                       	 0.000270778	 8         	 0         	 0         	 59.089    	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 85, reductionFactor: 37, colBlockingSize: 12)                    	 8.3012e-05	 1         	 8.93879   	 0         	 1.10586   	 8.08308   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 50, r: 50, streamingCols: 0)                     	 3.129e-05 	 1         	 3.99489   	 0         	 1.59795   	 2.5       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 85, r: 50, streamingCols: 24)                    	 2.884e-05 	 1         	 4.33426   	 0         	 1.7337    	 2.5       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 85, r1_: 85, n: 50, r2: 1)            	 1.6821e-05	 1         	 42.9523   	 0         	 7.47875   	 5.74324   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 0)                	 1.01e-05  	 9         	 0         	 0         	 35.6436   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 9.841e-06 	 1         	 25.4039   	 0         	 6.09694   	 4.16667   
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 9.38e-06  	 1         	 0.533049  	 0         	 2.1322    	 0.25      
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 85, n: 50, r2: 1)                                                                                   	 9.33e-06  	 1         	 0.91104   	 0         	 3.64416   	 0.25      
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                         	 8.23e-06  	 2         	 0         	 0         	 9.72053   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 0, m: 4250, k: 50)  	 6.91e-06  	 100       	 0         	 0         	 24602     	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 85)                                                                	 5.23e-06  	 1         	 0         	 0         	 13.0019   	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 85, fromLeft: 0)                	 1.68e-06  	 1         	 0         	 0         	 40.4762   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 7.4182    	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 7.41816   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                            	 5.9849    	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                        	 5.98361   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 4.86663   	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 1.79833   	 1818      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 1.62133   	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_leftOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                   	 1.43317   	 100       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 1.2125    	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 1.07467   	 900       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 1.03839   	 918       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.894087  	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.587123  	 918       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.213115  	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.145824  	 1800      
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.12542   	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.105764  	 918       
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                       	 0.0699092 	 818       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0515411 	 1310      
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0501896 	 1000      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0464938 	 900       
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                              	 0.0405899 	 918       
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                              	 0.0399174 	 20        
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0377839 	 900       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 0.0313192 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 0.0312886 	 2         
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00945326	 1818      
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.00918101	 18        
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00372303	 6472      
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.00215801	 818       
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00213961	 5273      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00106752	 302       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000892642	 102       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000435856	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: L, orthoY: L
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m43->44  [0m[1;34m44->45  [0m[1;34m45->46  [0m[1;34m46->47  [0m[1;34m47->48  [0m[1;34m48->49  [0m[1;34m49->50  [0m[1;34m50->51  [0m[1;34m51->52  [0m[1;34m52->53  [0m[1;34m53->54  [0m[1;34m54->55  [0m[1;34m55->56  [0m[1;34m56->57  [0m[1;34m57->58  [0m[1;34m58->59  [0m[1;34m59->60  [0m[1;34m60->61  [0m[1;34m61->62  [0m[1;34m62->63  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 22621591455616 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 22621391415296 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 22621190088832 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 22620988762368 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 22620787435904 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 22620586109440 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 22620384782976 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 22620183456512 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 22619982130048 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 22619780803584 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 22619579477120 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 22619378150656 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 22619176824192 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 22618975497728 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 22618774171264 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 22618572844800 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 22618371518336 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 22618170191872 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 22617968865408 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 22617767538944 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 22617566212480 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 22617364886016 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 22617163559552 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 22616962233088 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 22616760906624 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 22616559580160 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 22616358253696 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 22616156927232 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 22615955600768 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 22615754274304 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 22615552947840 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 22615351621376 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 22615150290816 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 22614948964352 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 22614747637888 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 22614546311424 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 22614344984960 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 22614143658496 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 22613942332032 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 22613741005568 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 22613539679104 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 22613338352640 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 22613137026176 -> hwthread 43 - OK[0m[1;34m
[0m[1;34m	threadid 22612935699712 -> hwthread 44 - OK[0m[1;34m
[0m[1;34m	threadid 22612734373248 -> hwthread 45 - OK[0m[1;34m
[0m[1;34m	threadid 22612533046784 -> hwthread 46 - OK[0m[1;34m
[0m[1;34m	threadid 22612331720320 -> hwthread 47 - OK[0m[1;34m
[0m[1;34m	threadid 22612130393856 -> hwthread 48 - OK[0m[1;34m
[0m[1;34m	threadid 22611929067392 -> hwthread 49 - OK[0m[1;34m
[0m[1;34m	threadid 22611727740928 -> hwthread 50 - OK[0m[1;34m
[0m[1;34m	threadid 22611526414464 -> hwthread 51 - OK[0m[1;34m
[0m[1;34m	threadid 22611325088000 -> hwthread 52 - OK[0m[1;34m
[0m[1;34m	threadid 22611123761536 -> hwthread 53 - OK[0m[1;34m
[0m[1;34m	threadid 22610922435072 -> hwthread 54 - OK[0m[1;34m
[0m[1;34m	threadid 22610721108608 -> hwthread 55 - OK[0m[1;34m
[0m[1;34m	threadid 22610519782144 -> hwthread 56 - OK[0m[1;34m
[0m[1;34m	threadid 22610318455680 -> hwthread 57 - OK[0m[1;34m
[0m[1;34m	threadid 22610117129216 -> hwthread 58 - OK[0m[1;34m
[0m[1;34m	threadid 22609915802752 -> hwthread 59 - OK[0m[1;34m
[0m[1;34m	threadid 22609714476288 -> hwthread 60 - OK[0m[1;34m
[0m[1;34m	threadid 22609513149824 -> hwthread 61 - OK[0m[1;34m
[0m[1;34m	threadid 22609311823360 -> hwthread 62 - OK[0m[1;34m
[0m[1;34m	threadid 22609110496896 -> hwthread 63 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 22621485795072 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 22621479204608 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 136, m: 136)                                                               	 1.50351   	 700       	 8.198     	 0         	 0.207179  	 39.5697   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 6800, cols: 136, reductionFactor: 37, colBlockingSize: 12)                 	 1.04253   	 600       	 148.683   	 0         	 4.34311   	 34.2342   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 136, n: 50, r: 136, r2: 136)          	 0.994964  	 600       	 151.691   	 0         	 9.01225   	 16.8317   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 136, r: 136, r2: 6800, leftOrthog: 0)      	 0.776229  	 600       	 194.437   	 0         	 17.3849   	 11.1842   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 6800, cols: 86, reductionFactor: 37, colBlockingSize: 12)                  	 0.529076  	 700       	 136.678   	 0         	 6.26809   	 21.8053   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 6800, Xcols: 86, r: 86, streamingCols: 0)                   	 0.197018  	 700       	 178.689   	 0         	 33.3495   	 5.35806   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 136, reductionFactor: 37, colBlockingSize: 12)                 	 0.139665  	 100       	 68.0054   	 0         	 2.05347   	 33.1173   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 136, Qr2: 86)      	 0.128482  	 700       	 0         	 0         	 71.2454   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 86, m: 4300, k: 86) 	 0.108687  	 700       	 409.653   	 0         	 38.4884   	 10.6436   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 86, m: 86)                                                                  	 0.101905  	 809       	 6.73267   	 0         	 1.41463   	 4.75933   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 6800, m: 86)                                                                       	 0.0693364 	 700       	 0         	 0         	 94.4635   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 136)                                                                	 0.0651439 	 100       	 3.65345   	 0         	 0.19833   	 18.4211   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r: 136, r2: 136)           	 0.0635116 	 100       	 145.611   	 0         	 8.79835   	 16.5498   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 86, reductionFactor: 37, colBlockingSize: 12)                  	 0.0619186 	 101       	 61.9511   	 0         	 2.90213   	 21.3468   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 136, n: 50, r: 136, r2: 50)           	 0.0561864 	 100       	 164.595   	 0         	 18.1054   	 9.09091   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 136, r: 136, r2: 2500, leftOrthog: 0)      	 0.0526525 	 100       	 175.642   	 0         	 16.0599   	 10.9367   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 86, n: 50, r2: 86)                                                                                         	 0.0502693 	 707       	 0         	 0         	 83.2153   	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 6800, leftOrthog: 0)        	 0.049827  	 100       	 68.2361   	 0         	 16.4569   	 4.14634   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 86, k: 2500)   	 0.0466473 	 800       	 368.724   	 0         	 47.2378   	 7.80569   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0427927 	 100       	 2.04474   	 0         	 0.141145  	 14.4868   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 86, n: 50, r2: 86)                   	 0.0423017 	 700       	 0         	 0         	 154.834   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 6800, m: 86)                                                              	 0.0413431 	 700       	 0         	 0         	 158.424   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 2500, m: 86, k: 50)	 0.0380497 	 800       	 452.041   	 0         	 57.9117   	 7.80569   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 4300, k: 86) 	 0.0369346 	 700       	 700.86    	 0         	 89.3189   	 7.84672   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 6800, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0342476 	 100       	 101.96    	 0         	 8.00056   	 12.7441   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 86, r: 86, streamingCols: 0)                   	 0.0164005 	 101       	 113.868   	 0         	 21.3669   	 5.32917   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 136, reductionFactor: 37, colBlockingSize: 12)                   	 0.01605   	 100       	 11.8354   	 0         	 1.26086   	 9.38681   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 4300, k: 50) 	 0.00876496	 100       	 245.295   	 0         	 39.4754   	 6.21387   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00821672	 109       	 2.21093   	 0         	 0.801244  	 2.75937   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 86)                                                                       	 0.00765431	 101       	 0         	 0         	 45.3914   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 50, Qr2: 86)       	 0.00741551	 100       	 0         	 0         	 73.3598   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 86)                                                              	 0.00627732	 101       	 0         	 0         	 55.3485   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 0, n: 50, r2: 86)                    	 0.00576348	 100       	 0         	 0         	 59.6861   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4300, cols: 86, reductionFactor: 37, colBlockingSize: 12)                  	 0.00495618	 7         	 92.2632   	 0         	 4.26195   	 21.6481   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 50)           	 0.00489707	 8         	 20.4204   	 0         	 3.29993   	 6.18812   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 86, r1_: 86, n: 50, r2: 86)           	 0.00422456	 7         	 105.393   	 0         	 9.90205   	 10.6436   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.00397486	 101       	 6.52411   	 0         	 1.01639   	 6.41892   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 136, r: 50, r2: 50, leftOrthog: 0)         	 0.0029606 	 100       	 22.9683   	 0         	 6.86347   	 3.34646   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 86)                                                                                         	 0.00269654	 101       	 0         	 0         	 128.847   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0026457 	 8         	 38.8188   	 0         	 3.08425   	 12.5861   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                   	 0.00196627	 8         	 25.4288   	 0         	 8.17792   	 3.10945   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 86, m: 86, fromLeft: 0)                	 0.00192251	 808       	 0         	 0         	 49.7347   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 4300, Xcols: 86, r: 86, streamingCols: 0)                   	 0.00145009	 7         	 153.522   	 0         	 28.705    	 5.34826   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 50, r2: 50)              	 0.00127862	 100       	 19.5524   	 0         	 4.69257   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 86, m: 50, k: 86)   	 0.00108809	 100       	 67.9724   	 0         	 11.7608   	 5.77957   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50, k: 50)     	 0.001029  	 100       	 24.2954   	 0         	 5.8309    	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 86)   	 0.000952777	 100       	 45.1312   	 0         	 9.32012   	 4.84234   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 4300, m: 86)                                                              	 0.000927073	 7         	 0         	 0         	 44.6757   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 4300, m: 86)                                                                       	 0.000886021	 7         	 0         	 0         	 46.7456   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                   	 0.000882784	 100       	 0.56639   	 0         	 2.26556   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 86, n: 50, r2: 1)                                                                                          	 0.000853522	 201       	 0         	 0         	 16.202    	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000802941	 201       	 0         	 0         	 10.0132   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 50, k: 50)  	 0.000614592	 100       	 40.6774   	 0         	 9.76257   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 86, n: 50, r2: 1)                    	 0.00059128	 100       	 0         	 0         	 18.4008   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 1, r1low: 0, n: 50, r2: 50)                     	 0.000564076	 100       	 0         	 0         	 7.09124   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                          	 0.000494469	 100       	 0         	 0         	 8.08949   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                                	 0.000472499	 101       	 0         	 0         	 8.55028   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                            	 0.000457851	 100       	 1.09206   	 0         	 13.1047   	 0.0833333 
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 1, Xr2: 50, Qr1: 1, Qr2: 0)          	 0.000450053	 100       	 0         	 0         	 8.88784   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000383928	 101       	 0.657675  	 0         	 10.5228   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 86, n: 50, r2: 1)                                                                                 	 0.000382534	 101       	 1.13532   	 0         	 18.1652   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 86, r1_: 50, n: 50, r2: 86)           	 0.0003571 	 1         	 103.556   	 0         	 13.1974   	 7.84672   
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000324041	 100       	 0.771507  	 0         	 12.3441   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                              	 0.000268217	 8         	 0         	 0         	 59.6532   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 50)                                                                       	 0.000204914	 8         	 0         	 0         	 78.0815   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 86, reductionFactor: 37, colBlockingSize: 12)                    	 8.6692e-05	 1         	 8.76193   	 0         	 1.07932   	 8.11804   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 50, r: 50, streamingCols: 0)                     	 4.1031e-05	 1         	 3.04648   	 0         	 1.21859   	 2.5       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 86, r: 50, streamingCols: 21)                    	 2.9971e-05	 1         	 4.1707    	 0         	 1.66828   	 2.5       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 86, r1_: 86, n: 50, r2: 1)            	 1.8061e-05	 1         	 40.9501   	 0         	 7.08532   	 5.77957   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 0)                	 1.075e-05 	 9         	 0         	 0         	 33.4884   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 1.0661e-05	 1         	 23.45     	 0         	 5.62799   	 4.16667   
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 86, n: 50, r2: 1)                                                                                   	 9.22e-06  	 1         	 0.932755  	 0         	 3.73102   	 0.25      
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 8.87e-06  	 1         	 0.563698  	 0         	 2.25479   	 0.25      
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                         	 8.18e-06  	 2         	 0         	 0         	 9.77995   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 0, m: 4300, k: 50)  	 7.96e-06  	 100       	 0         	 0         	 21608     	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 86)                                                                	 5.09e-06  	 1         	 0         	 0         	 13.5167   	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 86, fromLeft: 0)                	 1.73e-06  	 1         	 0         	 0         	 39.7688   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 7.56      	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 7.55996   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                            	 6.07199   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                        	 6.07067   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 4.8969    	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 1.83515   	 1818      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 1.61144   	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_leftOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                   	 1.48788   	 100       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 1.23317   	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 1.11594   	 900       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 1.07274   	 918       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.881669  	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.603218  	 918       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.216906  	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.156435  	 1800      
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.136348  	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.110122  	 918       
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                       	 0.0780898 	 818       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0551168 	 1310      
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                              	 0.0492933 	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0492205 	 1000      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0476763 	 900       
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                              	 0.0413441 	 20        
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0386643 	 900       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 0.0319918 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 0.0319625 	 2         
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.0103383 	 1818      
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.00950745	 18        
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00766261	 5273      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00405004	 6472      
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.00193499	 818       
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.0010905 	 302       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000900874	 102       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000457851	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: L, orthoY: L
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m43->44  [0m[1;34m44->45  [0m[1;34m45->46  [0m[1;34m46->47  [0m[1;34m47->48  [0m[1;34m48->49  [0m[1;34m49->50  [0m[1;34m50->51  [0m[1;34m51->52  [0m[1;34m52->53  [0m[1;34m53->54  [0m[1;34m54->55  [0m[1;34m55->56  [0m[1;34m56->57  [0m[1;34m57->58  [0m[1;34m58->59  [0m[1;34m59->60  [0m[1;34m60->61  [0m[1;34m61->62  [0m[1;34m62->63  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 22506205808512 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 22506031278080 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 22505829951616 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 22505628625152 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 22505427298688 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 22505225972224 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 22505024645760 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 22504823319296 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 22504621992832 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 22504420666368 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 22504219339904 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 22504018013440 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 22503816686976 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 22503615360512 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 22503414034048 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 22503212707584 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 22503011381120 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 22502810054656 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 22502608728192 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 22502407401728 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 22502206075264 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 22502004748800 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 22501803422336 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 22501602095872 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 22501400769408 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 22501199442944 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 22500998116480 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 22500796790016 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 22500595463552 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 22500394137088 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 22500192810624 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 22499991484160 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 22499790153600 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 22499588827136 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 22499387500672 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 22499186174208 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 22498984847744 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 22498783521280 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 22498582194816 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 22498380868352 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 22498179541888 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 22497978215424 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 22497776888960 -> hwthread 43 - OK[0m[1;34m
[0m[1;34m	threadid 22497575562496 -> hwthread 44 - OK[0m[1;34m
[0m[1;34m	threadid 22497374236032 -> hwthread 45 - OK[0m[1;34m
[0m[1;34m	threadid 22497172909568 -> hwthread 46 - OK[0m[1;34m
[0m[1;34m	threadid 22496971583104 -> hwthread 47 - OK[0m[1;34m
[0m[1;34m	threadid 22496770256640 -> hwthread 48 - OK[0m[1;34m
[0m[1;34m	threadid 22496568930176 -> hwthread 49 - OK[0m[1;34m
[0m[1;34m	threadid 22496367603712 -> hwthread 50 - OK[0m[1;34m
[0m[1;34m	threadid 22496166277248 -> hwthread 51 - OK[0m[1;34m
[0m[1;34m	threadid 22495964950784 -> hwthread 52 - OK[0m[1;34m
[0m[1;34m	threadid 22495763624320 -> hwthread 53 - OK[0m[1;34m
[0m[1;34m	threadid 22495562297856 -> hwthread 54 - OK[0m[1;34m
[0m[1;34m	threadid 22495360971392 -> hwthread 55 - OK[0m[1;34m
[0m[1;34m	threadid 22495159644928 -> hwthread 56 - OK[0m[1;34m
[0m[1;34m	threadid 22494958318464 -> hwthread 57 - OK[0m[1;34m
[0m[1;34m	threadid 22494756992000 -> hwthread 58 - OK[0m[1;34m
[0m[1;34m	threadid 22494555665536 -> hwthread 59 - OK[0m[1;34m
[0m[1;34m	threadid 22494354339072 -> hwthread 60 - OK[0m[1;34m
[0m[1;34m	threadid 22494153012608 -> hwthread 61 - OK[0m[1;34m
[0m[1;34m	threadid 22493951686144 -> hwthread 62 - OK[0m[1;34m
[0m[1;34m	threadid 22493750359680 -> hwthread 63 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 22505926416128 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 22505921525504 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 137, m: 137)                                                               	 1.57164   	 700       	 8.01688   	 0         	 0.201119  	 39.8613   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 6850, cols: 137, reductionFactor: 37, colBlockingSize: 12)                 	 1.04748   	 600       	 151.269   	 0         	 4.38639   	 34.486    
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 137, n: 50, r: 137, r2: 137)          	 0.985778  	 600       	 156.507   	 0         	 9.23049   	 16.9554   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 137, r: 137, r2: 6850, leftOrthog: 0)      	 0.789285  	 600       	 195.469   	 0         	 17.3497   	 11.2664   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 6850, cols: 87, reductionFactor: 37, colBlockingSize: 12)                  	 0.528277  	 700       	 141.116   	 0         	 6.39761   	 22.0577   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 6850, Xcols: 87, r: 87, streamingCols: 0)                   	 0.203798  	 700       	 178.085   	 0         	 32.8552   	 5.42029   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 137, reductionFactor: 37, colBlockingSize: 12)                 	 0.139076  	 100       	 69.3013   	 0         	 2.07811   	 33.3482   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 137, Qr2: 87)      	 0.134256  	 700       	 0         	 0         	 69.2158   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 87, m: 4350, k: 87) 	 0.110978  	 700       	 415.353   	 0         	 38.5753   	 10.7673   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 87, m: 87)                                                                  	 0.0990109 	 809       	 7.17401   	 0         	 1.48996   	 4.81489   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 6850, m: 87)                                                                       	 0.067978  	 700       	 0         	 0         	 98.1882   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r: 137, r2: 137)           	 0.0662954 	 100       	 141.556   	 0         	 8.49252   	 16.6683   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 137)                                                                	 0.0657802 	 100       	 3.64472   	 0         	 0.197628  	 18.4423   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 87, reductionFactor: 37, colBlockingSize: 12)                  	 0.0650961 	 101       	 60.3055   	 0         	 2.79365   	 21.5866   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 137, n: 50, r: 137, r2: 50)           	 0.0556448 	 100       	 168.65    	 0         	 18.5146   	 9.10904   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 137, r: 137, r2: 2500, leftOrthog: 0)      	 0.0528069 	 100       	 177.714   	 0         	 16.1348   	 11.0143   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 87, k: 2500)   	 0.0516645 	 800       	 336.789   	 0         	 42.9665   	 7.8384    
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 6850, leftOrthog: 0)        	 0.0505867 	 100       	 67.7056   	 0         	 16.3284   	 4.14649   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 87, n: 50, r2: 87)                                                                                         	 0.0505635 	 707       	 0         	 0         	 84.6663   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 87, n: 50, r2: 87)                   	 0.0439364 	 700       	 0         	 0         	 151.916   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0436292 	 100       	 2.00554   	 0         	 0.138439  	 14.4868   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 2500, m: 87, k: 50)	 0.0413734 	 800       	 420.56    	 0         	 53.6538   	 7.8384    
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 6850, m: 87)                                                              	 0.0402961 	 700       	 0         	 0         	 165.64    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 4350, k: 87) 	 0.0367872 	 700       	 720.129   	 0         	 91.3819   	 7.88043   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 6850, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0365777 	 100       	 96.167    	 0         	 7.54558   	 12.7448   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 87, r: 87, streamingCols: 0)                   	 0.0169452 	 101       	 112.786   	 0         	 20.9227   	 5.3906    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 137, reductionFactor: 37, colBlockingSize: 12)                   	 0.0151017 	 100       	 12.7643   	 0         	 1.35715   	 9.40526   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00821551	 109       	 2.21126   	 0         	 0.801362  	 2.75937   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 50, Qr2: 87)       	 0.00794645	 100       	 0         	 0         	 68.9617   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 87)                                                                       	 0.00703225	 101       	 0         	 0         	 49.9812   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 87)                                                              	 0.00628333	 101       	 0         	 0         	 55.9385   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 0, n: 50, r2: 87)                    	 0.00615145	 100       	 0         	 0         	 56.5721   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4350, cols: 87, reductionFactor: 37, colBlockingSize: 12)                  	 0.00501458	 7         	 94.4068   	 0         	 4.31084   	 21.8998   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 50)           	 0.00484109	 8         	 20.6565   	 0         	 3.33809   	 6.18812   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 4350, k: 50) 	 0.00458819	 100       	 474.043   	 0         	 76.2828   	 6.21429   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 87, r1_: 87, n: 50, r2: 87)           	 0.00405738	 7         	 113.608   	 0         	 10.5512   	 10.7673   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.00403141	 101       	 6.43259   	 0         	 1.00213   	 6.41892   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 87)                                                                                         	 0.00266065	 101       	 0         	 0         	 132.103   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0026355 	 8         	 38.969    	 0         	 3.09619   	 12.5861   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 137, r: 50, r2: 50, leftOrthog: 0)         	 0.00229192	 100       	 29.8876   	 0         	 8.91828   	 3.35127   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 87, m: 87, fromLeft: 0)                	 0.00218148	 808       	 0         	 0         	 44.8559   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                   	 0.00212101	 8         	 23.5736   	 0         	 7.58128   	 3.10945   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 4350, Xcols: 87, r: 87, streamingCols: 0)                   	 0.0014786 	 7         	 155.875   	 0         	 28.8099   	 5.41045   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 87, m: 50, k: 87)   	 0.00112819	 100       	 67.09     	 0         	 11.5364   	 5.81551   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 50, r2: 50)              	 0.0011168 	 100       	 22.3855   	 0         	 5.37251   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50, k: 50)     	 0.00100207	 100       	 24.9483   	 0         	 5.98758   	 4.16667   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 4350, m: 87)                                                              	 0.000978752	 7         	 0         	 0         	 43.3066   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 87)   	 0.000951028	 100       	 45.74     	 0         	 9.42138   	 4.85491   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 4350, m: 87)                                                                       	 0.000890443	 7         	 0         	 0         	 47.6015   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 87, n: 50, r2: 1)                                                                                          	 0.000852251	 201       	 0         	 0         	 16.4149   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000801478	 201       	 0         	 0         	 10.0315   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                   	 0.000756986	 100       	 0.660514  	 0         	 2.64206   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 50, k: 50)  	 0.000620854	 100       	 40.2671   	 0         	 9.66411   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 87, n: 50, r2: 1)                    	 0.000567847	 100       	 0         	 0         	 19.301    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 1, r1low: 0, n: 50, r2: 50)                     	 0.000516934	 100       	 0         	 0         	 7.73793   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                          	 0.000514232	 100       	 0         	 0         	 7.77859   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                            	 0.000448869	 100       	 1.11391   	 0         	 13.3669   	 0.0833333 
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                                	 0.000442578	 101       	 0         	 0         	 9.12833   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 1, Xr2: 50, Qr1: 1, Qr2: 0)          	 0.00043764	 100       	 0         	 0         	 9.13993   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000394531	 101       	 0.64      	 0         	 10.24     	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 87, n: 50, r2: 1)                                                                                 	 0.000370628	 101       	 1.18542   	 0         	 18.9667   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 87, r1_: 50, n: 50, r2: 87)           	 0.00036376	 1         	 104.038   	 0         	 13.2021   	 7.88043   
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000333006	 100       	 0.750737  	 0         	 12.0118   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 50)                                                                       	 0.000269127	 8         	 0         	 0         	 59.4515   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                              	 0.000197844	 8         	 0         	 0         	 80.8718   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 87, reductionFactor: 37, colBlockingSize: 12)                    	 8.6652e-05	 1         	 8.97102   	 0         	 1.1004    	 8.1525    
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 50, r: 50, streamingCols: 0)                     	 3.2111e-05	 1         	 3.89275   	 0         	 1.5571    	 2.5       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 87, r: 50, streamingCols: 23)                    	 2.7251e-05	 1         	 4.58699   	 0         	 1.8348    	 2.5       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 87, r1_: 87, n: 50, r2: 1)            	 1.638e-05 	 1         	 46.2088   	 0         	 7.94579   	 5.81551   
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 87, n: 50, r2: 1)                                                                                   	 1.179e-05 	 1         	 0.737913  	 0         	 2.95165   	 0.25      
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 1.115e-05 	 1         	 22.4215   	 0         	 5.38117   	 4.16667   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 0)                	 9.83e-06  	 9         	 0         	 0         	 36.6226   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 8.15e-06  	 1         	 0.613497  	 0         	 2.45399   	 0.25      
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                         	 8.1e-06   	 2         	 0         	 0         	 9.87654   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 0, m: 4350, k: 50)  	 7.82e-06  	 100       	 0         	 0         	 22250.6   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 87)                                                                	 4.861e-06 	 1         	 0         	 0         	 14.318    	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 87, fromLeft: 0)                	 1.73e-06  	 1         	 0         	 0         	 40.2312   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 7.66495   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 7.66489   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                            	 6.14686   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                        	 6.14565   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 4.97176   	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 1.84337   	 1818      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 1.68105   	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_leftOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                   	 1.51796   	 100       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 1.23903   	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 1.10883   	 900       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 1.08724   	 918       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.894971  	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.605789  	 918       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.224402  	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.154441  	 1800      
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.14264   	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.107226  	 918       
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                       	 0.0761779 	 818       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0553921 	 1310      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0526665 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0511726 	 1000      
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                              	 0.0482035 	 918       
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                              	 0.0421475 	 20        
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0419943 	 900       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 0.0323964 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 0.0323652 	 2         
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.0100252 	 1818      
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.00928976	 18        
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00752235	 5273      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00435429	 6472      
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.00219304	 818       
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00109816	 302       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000776926	 102       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000448869	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: L, orthoY: L
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m43->44  [0m[1;34m44->45  [0m[1;34m45->46  [0m[1;34m46->47  [0m[1;34m47->48  [0m[1;34m48->49  [0m[1;34m49->50  [0m[1;34m50->51  [0m[1;34m51->52  [0m[1;34m52->53  [0m[1;34m53->54  [0m[1;34m54->55  [0m[1;34m55->56  [0m[1;34m56->57  [0m[1;34m57->58  [0m[1;34m58->59  [0m[1;34m59->60  [0m[1;34m60->61  [0m[1;34m61->62  [0m[1;34m62->63  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 22758857815936 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 22758629042176 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 22758427715712 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 22758226389248 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 22758025062784 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 22757823736320 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 22757622409856 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 22757421083392 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 22757219756928 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 22757018430464 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 22756817104000 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 22756615777536 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 22756414451072 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 22756213124608 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 22756011798144 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 22755810471680 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 22755609145216 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 22755407818752 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 22755206492288 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 22755005165824 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 22754803839360 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 22754602512896 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 22754401186432 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 22754199859968 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 22753998533504 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 22753797207040 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 22753595880576 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 22753394554112 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 22753193227648 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 22752991901184 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 22752790574720 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 22752589248256 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 22752387917696 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 22752186591232 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 22751985264768 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 22751783938304 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 22751582611840 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 22751381285376 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 22751179958912 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 22750978632448 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 22750777305984 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 22750575979520 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 22750374653056 -> hwthread 43 - OK[0m[1;34m
[0m[1;34m	threadid 22750173326592 -> hwthread 44 - OK[0m[1;34m
[0m[1;34m	threadid 22749972000128 -> hwthread 45 - OK[0m[1;34m
[0m[1;34m	threadid 22749770673664 -> hwthread 46 - OK[0m[1;34m
[0m[1;34m	threadid 22749569347200 -> hwthread 47 - OK[0m[1;34m
[0m[1;34m	threadid 22749368020736 -> hwthread 48 - OK[0m[1;34m
[0m[1;34m	threadid 22749166694272 -> hwthread 49 - OK[0m[1;34m
[0m[1;34m	threadid 22748965367808 -> hwthread 50 - OK[0m[1;34m
[0m[1;34m	threadid 22748764041344 -> hwthread 51 - OK[0m[1;34m
[0m[1;34m	threadid 22748562714880 -> hwthread 52 - OK[0m[1;34m
[0m[1;34m	threadid 22748361388416 -> hwthread 53 - OK[0m[1;34m
[0m[1;34m	threadid 22748160061952 -> hwthread 54 - OK[0m[1;34m
[0m[1;34m	threadid 22747958735488 -> hwthread 55 - OK[0m[1;34m
[0m[1;34m	threadid 22747757409024 -> hwthread 56 - OK[0m[1;34m
[0m[1;34m	threadid 22747556082560 -> hwthread 57 - OK[0m[1;34m
[0m[1;34m	threadid 22747354756096 -> hwthread 58 - OK[0m[1;34m
[0m[1;34m	threadid 22747153429632 -> hwthread 59 - OK[0m[1;34m
[0m[1;34m	threadid 22746952103168 -> hwthread 60 - OK[0m[1;34m
[0m[1;34m	threadid 22746750776704 -> hwthread 61 - OK[0m[1;34m
[0m[1;34m	threadid 22746549450240 -> hwthread 62 - OK[0m[1;34m
[0m[1;34m	threadid 22746348123776 -> hwthread 63 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 22758752155392 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 22758745564928 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 138, m: 138)                                                               	 1.58419   	 700       	 8.12877   	 0         	 0.202445  	 40.153    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 6900, cols: 138, reductionFactor: 37, colBlockingSize: 12)                 	 1.06774   	 600       	 151.672   	 0         	 4.36621   	 34.7377   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 138, n: 50, r: 138, r2: 138)          	 0.998442  	 600       	 157.93    	 0         	 9.24694   	 17.0792   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 138, r: 138, r2: 6900, leftOrthog: 0)      	 0.792498  	 600       	 198.971   	 0         	 17.5325   	 11.3487   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 6900, cols: 88, reductionFactor: 37, colBlockingSize: 12)                  	 0.547125  	 700       	 140.423   	 0         	 6.29415   	 22.3101   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 6900, Xcols: 88, r: 88, streamingCols: 0)                   	 0.207409  	 700       	 180.337   	 0         	 32.8931   	 5.48252   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 138, reductionFactor: 37, colBlockingSize: 12)                 	 0.165274  	 100       	 59.1706   	 0         	 1.76214   	 33.5789   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 138, Qr2: 88)      	 0.132358  	 700       	 0         	 0         	 71.2663   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 88, m: 4400, k: 88) 	 0.111236  	 700       	 428.844   	 0         	 39.3757   	 10.8911   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 88, m: 88)                                                                  	 0.0983541 	 809       	 7.47381   	 0         	 1.53453   	 4.87043   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 6900, m: 88)                                                                       	 0.0705923 	 700       	 0         	 0         	 96.3369   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 138)                                                                	 0.0665803 	 100       	 3.6272    	 0         	 0.196454  	 18.4633   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 88, reductionFactor: 37, colBlockingSize: 12)                  	 0.0650696 	 101       	 61.7249   	 0         	 2.82801   	 21.8263   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r: 138, r2: 138)           	 0.0646145 	 100       	 147.366   	 0         	 8.77876   	 16.7867   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 138, n: 50, r: 138, r2: 50)           	 0.0588535 	 100       	 161.792   	 0         	 17.7267   	 9.12698   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 138, r: 138, r2: 2500, leftOrthog: 0)      	 0.0554184 	 100       	 171.82    	 0         	 15.4907   	 11.0918   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 88, n: 50, r2: 88)                                                                                         	 0.0523415 	 707       	 0         	 0         	 83.6814   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 88, k: 2500)   	 0.0458109 	 800       	 384.188   	 0         	 48.8128   	 7.87064   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 6900, leftOrthog: 0)        	 0.0432052 	 100       	 79.8515   	 0         	 19.257    	 4.14663   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0429639 	 100       	 2.03659   	 0         	 0.140583  	 14.4868   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 88, n: 50, r2: 88)                   	 0.0428057 	 700       	 0         	 0         	 158.872   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 2500, m: 88, k: 50)	 0.0393373 	 800       	 447.413   	 0         	 56.8458   	 7.87064   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 6900, m: 88)                                                              	 0.038552  	 700       	 0         	 0         	 176.402   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 4400, k: 88) 	 0.0375222 	 700       	 722.346   	 0         	 91.2783   	 7.91367   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 6900, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0361815 	 100       	 97.9298   	 0         	 7.68349   	 12.7455   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 138, reductionFactor: 37, colBlockingSize: 12)                   	 0.0182691 	 100       	 10.7059   	 0         	 1.13608   	 9.42352   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 88, r: 88, streamingCols: 0)                   	 0.016856  	 101       	 116.004   	 0         	 21.2773   	 5.45202   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00800365	 109       	 2.26979   	 0         	 0.822575  	 2.75937   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 50, Qr2: 88)       	 0.0071494 	 100       	 0         	 0         	 77.2093   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4400, cols: 88, reductionFactor: 37, colBlockingSize: 12)                  	 0.00521607	 7         	 93.9257   	 0         	 4.24014   	 22.1516   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 50)           	 0.0051452 	 8         	 19.4356   	 0         	 3.14079   	 6.18812   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 4400, k: 50) 	 0.00512204	 100       	 429.517   	 0         	 69.1131   	 6.21469   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 88, r1_: 88, n: 50, r2: 88)           	 0.00409519	 7         	 116.485   	 0         	 10.6955   	 10.8911   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.00400245	 101       	 6.47913   	 0         	 1.00938   	 6.41892   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 0, n: 50, r2: 88)                    	 0.00322734	 100       	 0         	 0         	 109.068   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 88)                                                                       	 0.00313818	 101       	 0         	 0         	 113.288   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 88)                                                                                         	 0.00268756	 101       	 0         	 0         	 132.283   	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 138, r: 50, r2: 50, leftOrthog: 0)         	 0.00267714	 100       	 25.7738   	 0         	 7.67984   	 3.35603   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.00264746	 8         	 38.7929   	 0         	 3.0822    	 12.5861   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 88)                                                              	 0.00219311	 101       	 0         	 0         	 162.108   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                   	 0.00195685	 8         	 25.5513   	 0         	 8.21729   	 3.10945   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 4400, Xcols: 88, r: 88, streamingCols: 0)                   	 0.00152101	 7         	 156.814   	 0         	 28.6542   	 5.47264   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 88, m: 88, fromLeft: 0)                	 0.0015181 	 808       	 0         	 0         	 65.9473   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 50, r2: 50)              	 0.00110634	 100       	 22.5971   	 0         	 5.4233    	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 88, m: 50, k: 88)   	 0.00108351	 100       	 71.4713   	 0         	 12.2151   	 5.85106   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50, k: 50)     	 0.00102712	 100       	 24.34     	 0         	 5.8416    	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 88)   	 0.00101069	 100       	 43.5344   	 0         	 8.94435   	 4.86726   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 4400, m: 88)                                                              	 0.000999135	 7         	 0         	 0         	 43.4039   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 4400, m: 88)                                                                       	 0.000926023	 7         	 0         	 0         	 46.8308   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 88, n: 50, r2: 1)                                                                                          	 0.000854911	 201       	 0         	 0         	 16.5519   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                   	 0.000801  	 100       	 0.62422   	 0         	 2.49688   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000791121	 201       	 0         	 0         	 10.1628   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 50, k: 50)  	 0.000625479	 100       	 39.9694   	 0         	 9.59265   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 88, n: 50, r2: 1)                    	 0.000572744	 100       	 0         	 0         	 19.2756   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 1, r1low: 0, n: 50, r2: 50)                     	 0.000544043	 100       	 0         	 0         	 7.35236   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                          	 0.00051834	 100       	 0         	 0         	 7.71694   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 1, Xr2: 50, Qr1: 1, Qr2: 0)          	 0.000446075	 100       	 0         	 0         	 8.9671    	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                                	 0.000444862	 101       	 0         	 0         	 9.08147   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                            	 0.000440664	 100       	 1.13465   	 0         	 13.6158   	 0.0833333 
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000372631	 101       	 0.677614  	 0         	 10.8418   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 88, r1_: 50, n: 50, r2: 88)           	 0.000366469	 1         	 105.657   	 0         	 13.3512   	 7.91367   
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 88, n: 50, r2: 1)                                                                                 	 0.000366236	 101       	 1.21343   	 0         	 19.4148   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000327647	 100       	 0.763016  	 0         	 12.2083   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 50)                                                                       	 0.000292559	 8         	 0         	 0         	 54.6898   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                              	 0.000274696	 8         	 0         	 0         	 58.2462   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 88, reductionFactor: 37, colBlockingSize: 12)                    	 9.0262e-05	 1         	 8.81135   	 0         	 1.07633   	 8.18645   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 88, r: 50, streamingCols: 18)                    	 3.4051e-05	 1         	 3.67096   	 0         	 1.46839   	 2.5       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 50, r: 50, streamingCols: 0)                     	 3.2021e-05	 1         	 3.90369   	 0         	 1.56148   	 2.5       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 88, r1_: 88, n: 50, r2: 1)            	 1.7291e-05	 1         	 44.7863   	 0         	 7.65439   	 5.85106   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 9.811e-06 	 1         	 25.4816   	 0         	 6.11558   	 4.16667   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 0)                	 9.701e-06 	 9         	 0         	 0         	 37.1096   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 88, n: 50, r2: 1)                                                                                   	 9.501e-06 	 1         	 0.926218  	 0         	 3.70487   	 0.25      
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 8.81e-06  	 1         	 0.567537  	 0         	 2.27015   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 0, m: 4400, k: 50)  	 8.142e-06 	 100       	 0         	 0         	 21616.3   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                         	 8.04e-06  	 2         	 0         	 0         	 9.95025   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 88)                                                                	 4.99e-06  	 1         	 0         	 0         	 14.1082   	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 88, fromLeft: 0)                	 1.82e-06  	 1         	 0         	 0         	 38.6813   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 7.73449   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 7.73442   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                            	 6.20928   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                        	 6.20805   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 5.02639   	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 1.91161   	 1818      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 1.69374   	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_leftOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                   	 1.52507   	 100       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 1.28819   	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 1.12302   	 900       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 1.10166   	 918       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.893798  	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.624665  	 918       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.227809  	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.155983  	 1800      
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.139953  	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.106358  	 918       
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                       	 0.0749571 	 818       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0571934 	 1310      
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0471499 	 1000      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0468381 	 900       
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                              	 0.0424688 	 918       
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                              	 0.0420837 	 20        
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0399628 	 900       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 0.0329065 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 0.0328767 	 2         
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.0130971 	 5273      
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.00963397	 18        
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00829521	 1818      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00420097	 6472      
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.00152962	 818       
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00106651	 302       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000819311	 102       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000440664	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: L, orthoY: L
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m43->44  [0m[1;34m44->45  [0m[1;34m45->46  [0m[1;34m46->47  [0m[1;34m47->48  [0m[1;34m48->49  [0m[1;34m49->50  [0m[1;34m50->51  [0m[1;34m51->52  [0m[1;34m52->53  [0m[1;34m53->54  [0m[1;34m54->55  [0m[1;34m55->56  [0m[1;34m56->57  [0m[1;34m57->58  [0m[1;34m58->59  [0m[1;34m59->60  [0m[1;34m60->61  [0m[1;34m61->62  [0m[1;34m62->63  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 23122711639936 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 23122493302784 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 23122291976320 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 23122090649856 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 23121889323392 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 23121687996928 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 23121486670464 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 23121285344000 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 23121084017536 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 23120882691072 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 23120681364608 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 23120480038144 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 23120278711680 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 23120077385216 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 23119876058752 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 23119674732288 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 23119473405824 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 23119272079360 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 23119070752896 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 23118869426432 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 23118668099968 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 23118466773504 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 23118265447040 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 23118064120576 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 23117862794112 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 23117661467648 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 23117460141184 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 23117258814720 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 23117057488256 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 23116856161792 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 23116654835328 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 23116453508864 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 23116252178304 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 23116050851840 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 23115849525376 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 23115648198912 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 23115446872448 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 23115245545984 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 23115044219520 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 23114842893056 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 23114641566592 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 23114440240128 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 23114238913664 -> hwthread 43 - OK[0m[1;34m
[0m[1;34m	threadid 23114037587200 -> hwthread 44 - OK[0m[1;34m
[0m[1;34m	threadid 23113836260736 -> hwthread 45 - OK[0m[1;34m
[0m[1;34m	threadid 23113634934272 -> hwthread 46 - OK[0m[1;34m
[0m[1;34m	threadid 23113433607808 -> hwthread 47 - OK[0m[1;34m
[0m[1;34m	threadid 23113232281344 -> hwthread 48 - OK[0m[1;34m
[0m[1;34m	threadid 23113030954880 -> hwthread 49 - OK[0m[1;34m
[0m[1;34m	threadid 23112829628416 -> hwthread 50 - OK[0m[1;34m
[0m[1;34m	threadid 23112628301952 -> hwthread 51 - OK[0m[1;34m
[0m[1;34m	threadid 23112426975488 -> hwthread 52 - OK[0m[1;34m
[0m[1;34m	threadid 23112225649024 -> hwthread 53 - OK[0m[1;34m
[0m[1;34m	threadid 23112024322560 -> hwthread 54 - OK[0m[1;34m
[0m[1;34m	threadid 23111822996096 -> hwthread 55 - OK[0m[1;34m
[0m[1;34m	threadid 23111621669632 -> hwthread 56 - OK[0m[1;34m
[0m[1;34m	threadid 23111420343168 -> hwthread 57 - OK[0m[1;34m
[0m[1;34m	threadid 23111219016704 -> hwthread 58 - OK[0m[1;34m
[0m[1;34m	threadid 23111017690240 -> hwthread 59 - OK[0m[1;34m
[0m[1;34m	threadid 23110816363776 -> hwthread 60 - OK[0m[1;34m
[0m[1;34m	threadid 23110615037312 -> hwthread 61 - OK[0m[1;34m
[0m[1;34m	threadid 23110413710848 -> hwthread 62 - OK[0m[1;34m
[0m[1;34m	threadid 23110212384384 -> hwthread 63 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 23122605979392 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 23122599388928 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 139, m: 139)                                                               	 1.60647   	 700       	 8.1916    	 0         	 0.202538  	 40.4447   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 6950, cols: 139, reductionFactor: 37, colBlockingSize: 12)                 	 1.07785   	 600       	 153.539   	 0         	 4.38816   	 34.9894   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 139, n: 50, r: 139, r2: 139)          	 1.01795   	 600       	 158.295   	 0         	 9.20162   	 17.203    
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 139, r: 139, r2: 6950, leftOrthog: 0)      	 0.835222  	 600       	 192.927   	 0         	 16.8777   	 11.4309   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 6950, cols: 89, reductionFactor: 37, colBlockingSize: 12)                  	 0.555289  	 700       	 142.546   	 0         	 6.31786   	 22.5624   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 6950, Xcols: 89, r: 89, streamingCols: 0)                   	 0.209932  	 700       	 183.563   	 0         	 33.1057   	 5.54475   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 139, reductionFactor: 37, colBlockingSize: 12)                 	 0.145952  	 100       	 67.9787   	 0         	 2.01064   	 33.8094   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 139, Qr2: 89)      	 0.132926  	 700       	 0         	 0         	 72.023    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 89, m: 4450, k: 89) 	 0.120168  	 700       	 410.659   	 0         	 37.2823   	 11.0149   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 89, m: 89)                                                                  	 0.106378  	 809       	 7.14833   	 0         	 1.45115   	 4.92599   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 6950, m: 89)                                                                       	 0.0699974 	 700       	 0         	 0         	 98.9717   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r: 139, r2: 139)           	 0.0682343 	 100       	 141.578   	 0         	 8.37492   	 16.905    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 89, reductionFactor: 37, colBlockingSize: 12)                  	 0.0681472 	 101       	 60.2844   	 0         	 2.73203   	 22.0658   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 139)                                                                	 0.0641809 	 100       	 3.79007   	 0         	 0.205046  	 18.484    
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 139, r: 139, r2: 2500, leftOrthog: 0)      	 0.0573237 	 100       	 168.525   	 0         	 15.0882   	 11.1693   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 89, n: 50, r2: 89)                                                                                         	 0.0556917 	 707       	 0         	 0         	 80.445    	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 139, n: 50, r: 139, r2: 50)           	 0.0548227 	 100       	 176.214   	 0         	 19.2694   	 9.14474   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 6950, leftOrthog: 0)        	 0.0529243 	 100       	 65.6599   	 0         	 15.8339   	 4.14678   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 89, k: 2500)   	 0.0469186 	 800       	 379.381   	 0         	 48.0083   	 7.9024    
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 89, n: 50, r2: 89)                   	 0.043935  	 700       	 0         	 0         	 157.682   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.041728  	 100       	 2.09691   	 0         	 0.144747  	 14.4868   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 2500, m: 89, k: 50)	 0.0386359 	 800       	 460.711   	 0         	 58.3001   	 7.9024    
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 6950, m: 89)                                                              	 0.0384926 	 700       	 0         	 0         	 179.976   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 4450, k: 89) 	 0.038274  	 700       	 724.343   	 0         	 91.1533   	 7.94643   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 6950, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0336442 	 100       	 106.078   	 0         	 8.32238   	 12.7461   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 139, reductionFactor: 37, colBlockingSize: 12)                   	 0.0173506 	 100       	 11.4366   	 0         	 1.2113    	 9.44158   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 89, r: 89, streamingCols: 0)                   	 0.0170573 	 101       	 117.255   	 0         	 21.2671   	 5.51343   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00821559	 109       	 2.21123   	 0         	 0.801354  	 2.75937   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 89)                                                                       	 0.00820812	 101       	 0         	 0         	 43.8054   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 50, Qr2: 89)       	 0.00790033	 100       	 0         	 0         	 70.3768   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 89)                                                              	 0.00644078	 101       	 0         	 0         	 55.8256   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 0, n: 50, r2: 89)                    	 0.00578414	 100       	 0         	 0         	 61.5476   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4450, cols: 89, reductionFactor: 37, colBlockingSize: 12)                  	 0.00549115	 7         	 92.2968   	 0         	 4.11979   	 22.4033   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 4450, k: 50) 	 0.00519621	 100       	 428.196   	 0         	 68.8963   	 6.21508   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 50)           	 0.00508568	 8         	 19.6631   	 0         	 3.17755   	 6.18812   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 89, r1_: 89, n: 50, r2: 89)           	 0.00440231	 7         	 112.095   	 0         	 10.1767   	 11.0149   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.00416816	 101       	 6.22155   	 0         	 0.969252  	 6.41892   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 139, r: 50, r2: 50, leftOrthog: 0)         	 0.0028287 	 100       	 24.5696   	 0         	 7.31077   	 3.36074   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.00276514	 8         	 37.142    	 0         	 2.95103   	 12.5861   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 89)                                                                                         	 0.00270734	 101       	 0         	 0         	 132.809   	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 89, m: 89, fromLeft: 0)                	 0.00230132	 808       	 0         	 0         	 44.4973   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                   	 0.00230044	 8         	 21.735    	 0         	 6.98997   	 3.10945   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 4450, Xcols: 89, r: 89, streamingCols: 0)                   	 0.00155289	 7         	 158.89    	 0         	 28.7074   	 5.53483   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 50, r2: 50)              	 0.00126487	 100       	 19.7649   	 0         	 4.74357   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 89, m: 50, k: 89)   	 0.00113989	 100       	 69.4892   	 0         	 11.8054   	 5.88624   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 4450, m: 89)                                                              	 0.00110045	 7         	 0         	 0         	 40.3087   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50, k: 50)     	 0.00100861	 100       	 24.7866   	 0         	 5.94878   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 89)   	 0.000994286	 100       	 44.7557   	 0         	 9.17241   	 4.87939   
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                   	 0.000874867	 100       	 0.571515  	 0         	 2.28606   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 89, n: 50, r2: 1)                                                                                          	 0.000847857	 201       	 0         	 0         	 16.8793   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 4450, m: 89)                                                                       	 0.000833581	 7         	 0         	 0         	 53.2133   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000790652	 201       	 0         	 0         	 10.1688   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                          	 0.000679354	 100       	 0         	 0         	 5.88795   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 50, k: 50)  	 0.000619526	 100       	 40.3534   	 0         	 9.68482   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 89, n: 50, r2: 1)                    	 0.000547451	 100       	 0         	 0         	 20.3123   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 1, r1low: 0, n: 50, r2: 50)                     	 0.0005321 	 100       	 0         	 0         	 7.51738   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 89, r1_: 50, n: 50, r2: 89)           	 0.000473412	 1         	 83.6586   	 0         	 10.5278   	 7.94643   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                                	 0.000468594	 101       	 0         	 0         	 8.62154   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 1, Xr2: 50, Qr1: 1, Qr2: 0)          	 0.000451189	 100       	 0         	 0         	 8.86546   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                            	 0.000444527	 100       	 1.12479   	 0         	 13.4975   	 0.0833333 
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000391445	 101       	 0.645046  	 0         	 10.3207   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 89, n: 50, r2: 1)                                                                                 	 0.000373836	 101       	 1.20227   	 0         	 19.2362   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000352027	 100       	 0.710173  	 0         	 11.3628   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                              	 0.00029979	 8         	 0         	 0         	 53.3707   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 50)                                                                       	 0.00026919	 8         	 0         	 0         	 59.4376   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 89, reductionFactor: 37, colBlockingSize: 12)                    	 0.000105182	 1         	 7.73429   	 0         	 0.940921  	 8.21991   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 50, r: 50, streamingCols: 0)                     	 3.19e-05  	 1         	 3.9185    	 0         	 1.5674    	 2.5       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 89, r: 50, streamingCols: 27)                    	 2.8521e-05	 1         	 4.38274   	 0         	 1.75309   	 2.5       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 89, r1_: 89, n: 50, r2: 1)            	 1.606e-05 	 1         	 49.3213   	 0         	 8.37908   	 5.88624   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 1.139e-05 	 1         	 21.9491   	 0         	 5.26778   	 4.16667   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 0)                	 9.9e-06   	 9         	 0         	 0         	 36.3636   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 89, n: 50, r2: 1)                                                                                   	 8.94e-06  	 1         	 0.995526  	 0         	 3.9821    	 0.25      
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 8.78e-06  	 1         	 0.569476  	 0         	 2.2779    	 0.25      
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                         	 8.741e-06 	 2         	 0         	 0         	 9.15227   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 0, m: 4450, k: 50)  	 8.04e-06  	 100       	 0         	 0         	 22139.3   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 89)                                                                	 5.65e-06  	 1         	 0         	 0         	 12.6018   	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 89, fromLeft: 0)                	 1.78e-06  	 1         	 0         	 0         	 40        	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 7.87227   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 7.87223   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                            	 6.30553   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                        	 6.30421   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 5.10447   	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 1.91076   	 1818      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 1.71238   	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_leftOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                   	 1.56661   	 100       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 1.27543   	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 1.14228   	 900       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 1.13309   	 918       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.948299  	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.636477  	 918       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.230903  	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.16578   	 1800      
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.141278  	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.114594  	 918       
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                       	 0.079317  	 818       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0607169 	 1310      
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0507987 	 1000      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0479272 	 900       
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                              	 0.0468079 	 918       
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                              	 0.042629  	 20        
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0392555 	 900       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 0.034333  	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 0.0343031 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.00998885	 18        
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00739328	 1818      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.0042875 	 5273      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00412407	 6472      
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.002313  	 818       
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00111731	 302       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000892587	 102       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000444527	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: L, orthoY: L
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m43->44  [0m[1;34m44->45  [0m[1;34m45->46  [0m[1;34m46->47  [0m[1;34m47->48  [0m[1;34m48->49  [0m[1;34m49->50  [0m[1;34m50->51  [0m[1;34m51->52  [0m[1;34m52->53  [0m[1;34m53->54  [0m[1;34m54->55  [0m[1;34m55->56  [0m[1;34m56->57  [0m[1;34m57->58  [0m[1;34m58->59  [0m[1;34m59->60  [0m[1;34m60->61  [0m[1;34m61->62  [0m[1;34m62->63  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 23037961570176 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 23037734807552 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 23037533481088 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 23037332154624 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 23037130828160 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 23036929501696 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 23036728175232 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 23036526848768 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 23036325522304 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 23036124195840 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 23035922869376 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 23035721542912 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 23035520216448 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 23035318889984 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 23035117563520 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 23034916237056 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 23034714910592 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 23034513584128 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 23034312257664 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 23034110931200 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 23033909604736 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 23033708278272 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 23033506951808 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 23033305625344 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 23033104298880 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 23032902972416 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 23032701645952 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 23032500319488 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 23032298993024 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 23032097666560 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 23031896340096 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 23031695013632 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 23031493683072 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 23031292356608 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 23031091030144 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 23030889703680 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 23030688377216 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 23030487050752 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 23030285724288 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 23030084397824 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 23029883071360 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 23029681744896 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 23029480418432 -> hwthread 43 - OK[0m[1;34m
[0m[1;34m	threadid 23029279091968 -> hwthread 44 - OK[0m[1;34m
[0m[1;34m	threadid 23029077765504 -> hwthread 45 - OK[0m[1;34m
[0m[1;34m	threadid 23028876439040 -> hwthread 46 - OK[0m[1;34m
[0m[1;34m	threadid 23028675112576 -> hwthread 47 - OK[0m[1;34m
[0m[1;34m	threadid 23028473786112 -> hwthread 48 - OK[0m[1;34m
[0m[1;34m	threadid 23028272459648 -> hwthread 49 - OK[0m[1;34m
[0m[1;34m	threadid 23028071133184 -> hwthread 50 - OK[0m[1;34m
[0m[1;34m	threadid 23027869806720 -> hwthread 51 - OK[0m[1;34m
[0m[1;34m	threadid 23027668480256 -> hwthread 52 - OK[0m[1;34m
[0m[1;34m	threadid 23027467153792 -> hwthread 53 - OK[0m[1;34m
[0m[1;34m	threadid 23027265827328 -> hwthread 54 - OK[0m[1;34m
[0m[1;34m	threadid 23027064500864 -> hwthread 55 - OK[0m[1;34m
[0m[1;34m	threadid 23026863174400 -> hwthread 56 - OK[0m[1;34m
[0m[1;34m	threadid 23026661847936 -> hwthread 57 - OK[0m[1;34m
[0m[1;34m	threadid 23026460521472 -> hwthread 58 - OK[0m[1;34m
[0m[1;34m	threadid 23026259195008 -> hwthread 59 - OK[0m[1;34m
[0m[1;34m	threadid 23026057868544 -> hwthread 60 - OK[0m[1;34m
[0m[1;34m	threadid 23025856542080 -> hwthread 61 - OK[0m[1;34m
[0m[1;34m	threadid 23025655215616 -> hwthread 62 - OK[0m[1;34m
[0m[1;34m	threadid 23025453889152 -> hwthread 63 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 23037855909632 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 23037849319168 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 140, m: 140)                                                               	 1.59383   	 700       	 8.43603   	 0         	 0.207088  	 40.7363   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 7000, cols: 140, reductionFactor: 37, colBlockingSize: 12)                 	 1.09923   	 600       	 153.825   	 0         	 4.36494   	 35.2411   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 140, n: 50, r: 140, r2: 140)          	 1.03804   	 600       	 158.607   	 0         	 9.15388   	 17.3267   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 140, r: 140, r2: 7000, leftOrthog: 0)      	 0.843347  	 600       	 195.222   	 0         	 16.9564   	 11.5132   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 7000, cols: 90, reductionFactor: 37, colBlockingSize: 12)                  	 0.579706  	 700       	 140.632   	 0         	 6.16409   	 22.8148   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 7000, Xcols: 90, r: 90, streamingCols: 0)                   	 0.222122  	 700       	 178.685   	 0         	 31.8684   	 5.60698   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 140, reductionFactor: 37, colBlockingSize: 12)                 	 0.14608   	 100       	 68.8998   	 0         	 2.0241    	 34.0397   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 140, Qr2: 90)      	 0.137891  	 700       	 0         	 0         	 70.4617   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 90, m: 4500, k: 90) 	 0.129331  	 700       	 394.569   	 0         	 35.4236   	 11.1386   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 90, m: 90)                                                                  	 0.105541  	 809       	 7.45061   	 0         	 1.49564   	 4.98155   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 90, reductionFactor: 37, colBlockingSize: 12)                  	 0.0712525 	 101       	 58.9601   	 0         	 2.64334   	 22.3051   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 7000, m: 90)                                                                       	 0.0704121 	 700       	 0         	 0         	 100.21    	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r: 140, r2: 140)           	 0.0673109 	 100       	 145.593   	 0         	 8.55255   	 17.0233   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 140)                                                                	 0.0647714 	 100       	 3.78254   	 0         	 0.204411  	 18.5045   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 140, r: 140, r2: 2500, leftOrthog: 0)      	 0.0604614 	 100       	 162.087   	 0         	 14.4118   	 11.2468   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 90, n: 50, r2: 90)                                                                                         	 0.0544937 	 707       	 0         	 0         	 84.0714   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 140, n: 50, r: 140, r2: 50)           	 0.0544669 	 100       	 179.926   	 0         	 19.6376   	 9.1623    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 90, k: 2500)   	 0.0480555 	 800       	 374.567   	 0         	 47.212    	 7.93371   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 7000, leftOrthog: 0)        	 0.0454948 	 100       	 76.9319   	 0         	 18.5516   	 4.14692   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 90, n: 50, r2: 90)                   	 0.0429272 	 700       	 0         	 0         	 164.371   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0418927 	 100       	 2.08867   	 0         	 0.144178  	 14.4868   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 2500, m: 90, k: 50)	 0.0411728 	 800       	 437.182   	 0         	 55.1043   	 7.93371   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 4500, k: 90) 	 0.0387305 	 700       	 731.982   	 0         	 91.7418   	 7.97872   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 7000, m: 90)                                                              	 0.0381339 	 700       	 0         	 0         	 185.032   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 7000, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0322873 	 100       	 111.331   	 0         	 8.73408   	 12.7468   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 90, r: 90, streamingCols: 0)                   	 0.0170592 	 101       	 119.891   	 0         	 21.5058   	 5.57483   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 140, reductionFactor: 37, colBlockingSize: 12)                   	 0.0154022 	 100       	 13.0694   	 0         	 1.38162   	 9.45946   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 90)                                                                       	 0.00827926	 101       	 0         	 0         	 43.917    	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00820126	 109       	 2.2151    	 0         	 0.802755  	 2.75937   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 50, Qr2: 90)       	 0.00796518	 100       	 0         	 0         	 70.306    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 0, n: 50, r2: 90)                    	 0.00652631	 100       	 0         	 0         	 55.1613   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 90)                                                              	 0.00647144	 101       	 0         	 0         	 56.1853   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 4500, k: 50) 	 0.0057216 	 100       	 393.247   	 0         	 63.2691   	 6.21547   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4500, cols: 90, reductionFactor: 37, colBlockingSize: 12)                  	 0.00545574	 7         	 96.0625   	 0         	 4.24023   	 22.655    
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 50)           	 0.00492621	 8         	 20.2996   	 0         	 3.28041   	 6.18812   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 90, r1_: 90, n: 50, r2: 90)           	 0.00432401	 7         	 118.015   	 0         	 10.5952   	 11.1386   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.0040148 	 101       	 6.45921   	 0         	 1.00628   	 6.41892   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 90)                                                                                         	 0.00278919	 101       	 0         	 0         	 130.36    	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.00274152	 8         	 37.462    	 0         	 2.97645   	 12.5861   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 140, r: 50, r2: 50, leftOrthog: 0)         	 0.00240749	 100       	 29.0759   	 0         	 8.63969   	 3.36538   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                   	 0.00223871	 8         	 22.3343   	 0         	 7.1827    	 3.10945   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 90, m: 90, fromLeft: 0)                	 0.00203249	 808       	 0         	 0         	 51.5213   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 4500, Xcols: 90, r: 90, streamingCols: 0)                   	 0.00159565	 7         	 159.903   	 0         	 28.5694   	 5.59701   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 90, m: 50, k: 90)   	 0.00121846	 100       	 66.4775   	 0         	 11.2273   	 5.92105   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 50, r2: 50)              	 0.00111069	 100       	 22.5085   	 0         	 5.40204   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50, k: 50)     	 0.00104242	 100       	 23.9826   	 0         	 5.75583   	 4.16667   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 4500, m: 90)                                                              	 0.00100722	 7         	 0         	 0         	 45.035    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 90)   	 0.000999962	 100       	 45.0017   	 0         	 9.20035   	 4.8913    
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 4500, m: 90)                                                                       	 0.000932273	 7         	 0         	 0         	 48.6553   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                   	 0.000898712	 100       	 0.556352  	 0         	 2.22541   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 90, n: 50, r2: 1)                                                                                          	 0.000882884	 201       	 0         	 0         	 16.3917   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000815689	 201       	 0         	 0         	 9.8567    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 50, k: 50)  	 0.000616245	 100       	 40.5683   	 0         	 9.73639   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 90, n: 50, r2: 1)                    	 0.000559236	 100       	 0         	 0         	 20.0273   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 1, r1low: 0, n: 50, r2: 50)                     	 0.000551448	 100       	 0         	 0         	 7.25363   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                          	 0.000535706	 100       	 0         	 0         	 7.46678   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                            	 0.000492182	 100       	 1.01588   	 0         	 12.1906   	 0.0833333 
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                                	 0.000468687	 101       	 0         	 0         	 8.61983   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 1, Xr2: 50, Qr1: 1, Qr2: 0)          	 0.000462678	 100       	 0         	 0         	 8.64532   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 90, r1_: 50, n: 50, r2: 90)           	 0.000396671	 1         	 102.1     	 0         	 12.7965   	 7.97872   
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000390923	 101       	 0.645907  	 0         	 10.3345   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 90, n: 50, r2: 1)                                                                                 	 0.00038842	 101       	 1.17013   	 0         	 18.722    	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000332016	 100       	 0.752976  	 0         	 12.0476   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                              	 0.000298389	 8         	 0         	 0         	 53.6213   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 50)                                                                       	 0.000276537	 8         	 0         	 0         	 57.8584   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 90, reductionFactor: 37, colBlockingSize: 12)                    	 9.3053e-05	 1         	 8.93998   	 0         	 1.08325   	 8.2529    
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 50, r: 50, streamingCols: 0)                     	 3.5091e-05	 1         	 3.56217   	 0         	 1.42487   	 2.5       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 90, r: 50, streamingCols: 22)                    	 2.794e-05 	 1         	 4.47387   	 0         	 1.78955   	 2.5       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 90, r1_: 90, n: 50, r2: 1)            	 1.902e-05 	 1         	 42.5868   	 0         	 7.19243   	 5.92105   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 0)                	 1.03e-05  	 9         	 0         	 0         	 34.9515   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 9.97e-06  	 1         	 25.0752   	 0         	 6.01805   	 4.16667   
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 90, n: 50, r2: 1)                                                                                   	 9.52e-06  	 1         	 0.945378  	 0         	 3.78151   	 0.25      
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 8.27e-06  	 1         	 0.604595  	 0         	 2.41838   	 0.25      
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                         	 7.94e-06  	 2         	 0         	 0         	 10.0756   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 0, m: 4500, k: 50)  	 7.4e-06   	 100       	 0         	 0         	 24324.3   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 90)                                                                	 4.97e-06  	 1         	 0         	 0         	 14.4869   	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 90, fromLeft: 0)                	 1.81e-06  	 1         	 0         	 0         	 39.779    	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 8.01706   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 8.01702   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                            	 6.38963   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                        	 6.3883    	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 5.17578   	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 1.95626   	 1818      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 1.7005    	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_leftOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                   	 1.62731   	 100       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 1.29367   	 900       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 1.17087   	 918       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 1.16093   	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.951711  	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.663885  	 918       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.243079  	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.176009  	 1800      
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.146318  	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.113743  	 918       
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                       	 0.0799081 	 818       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0595171 	 1310      
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0505642 	 1000      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.049098  	 900       
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                              	 0.0463846 	 918       
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                              	 0.0440497 	 20        
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0417891 	 900       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 0.0338037 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 0.0337745 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.00967588	 18        
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00786336	 1818      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00640929	 5273      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00419428	 6472      
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.0020446 	 818       
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00111136	 302       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000916502	 102       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000492182	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: L, orthoY: L
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m43->44  [0m[1;34m44->45  [0m[1;34m45->46  [0m[1;34m46->47  [0m[1;34m47->48  [0m[1;34m48->49  [0m[1;34m49->50  [0m[1;34m50->51  [0m[1;34m51->52  [0m[1;34m52->53  [0m[1;34m53->54  [0m[1;34m54->55  [0m[1;34m55->56  [0m[1;34m56->57  [0m[1;34m57->58  [0m[1;34m58->59  [0m[1;34m59->60  [0m[1;34m60->61  [0m[1;34m61->62  [0m[1;34m62->63  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 23230137612160 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 23229934594048 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 23229733267584 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 23229531941120 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 23229330614656 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 23229129288192 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 23228927961728 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 23228726635264 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 23228525308800 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 23228323982336 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 23228122655872 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 23227921329408 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 23227720002944 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 23227518676480 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 23227317350016 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 23227116023552 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 23226914697088 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 23226713370624 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 23226512044160 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 23226310717696 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 23226109391232 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 23225908064768 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 23225706738304 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 23225505411840 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 23225304085376 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 23225102758912 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 23224901432448 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 23224700105984 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 23224498779520 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 23224297453056 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 23224096126592 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 23223894800128 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 23223693469568 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 23223492143104 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 23223290816640 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 23223089490176 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 23222888163712 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 23222686837248 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 23222485510784 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 23222284184320 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 23222082857856 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 23221881531392 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 23221680204928 -> hwthread 43 - OK[0m[1;34m
[0m[1;34m	threadid 23221478878464 -> hwthread 44 - OK[0m[1;34m
[0m[1;34m	threadid 23221277552000 -> hwthread 45 - OK[0m[1;34m
[0m[1;34m	threadid 23221076225536 -> hwthread 46 - OK[0m[1;34m
[0m[1;34m	threadid 23220874899072 -> hwthread 47 - OK[0m[1;34m
[0m[1;34m	threadid 23220673572608 -> hwthread 48 - OK[0m[1;34m
[0m[1;34m	threadid 23220472246144 -> hwthread 49 - OK[0m[1;34m
[0m[1;34m	threadid 23220270919680 -> hwthread 50 - OK[0m[1;34m
[0m[1;34m	threadid 23220069593216 -> hwthread 51 - OK[0m[1;34m
[0m[1;34m	threadid 23219868266752 -> hwthread 52 - OK[0m[1;34m
[0m[1;34m	threadid 23219666940288 -> hwthread 53 - OK[0m[1;34m
[0m[1;34m	threadid 23219465613824 -> hwthread 54 - OK[0m[1;34m
[0m[1;34m	threadid 23219264287360 -> hwthread 55 - OK[0m[1;34m
[0m[1;34m	threadid 23219062960896 -> hwthread 56 - OK[0m[1;34m
[0m[1;34m	threadid 23218861634432 -> hwthread 57 - OK[0m[1;34m
[0m[1;34m	threadid 23218660307968 -> hwthread 58 - OK[0m[1;34m
[0m[1;34m	threadid 23218458981504 -> hwthread 59 - OK[0m[1;34m
[0m[1;34m	threadid 23218257655040 -> hwthread 60 - OK[0m[1;34m
[0m[1;34m	threadid 23218056328576 -> hwthread 61 - OK[0m[1;34m
[0m[1;34m	threadid 23217855002112 -> hwthread 62 - OK[0m[1;34m
[0m[1;34m	threadid 23217653675648 -> hwthread 63 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 23230031951616 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 23230025361152 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 141, m: 141)                                                               	 1.67552   	 700       	 8.19795   	 0         	 0.199813  	 41.028    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 7050, cols: 141, reductionFactor: 37, colBlockingSize: 12)                 	 1.10603   	 600       	 156.179   	 0         	 4.40029   	 35.4928   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 141, n: 50, r: 141, r2: 141)          	 1.05214   	 600       	 159.859   	 0         	 9.1607    	 17.4505   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 141, r: 141, r2: 7050, leftOrthog: 0)      	 0.8196    	 600       	 205.214   	 0         	 17.6979   	 11.5954   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 7050, cols: 91, reductionFactor: 37, colBlockingSize: 12)                  	 0.584949  	 700       	 143.504   	 0         	 6.22115   	 23.0671   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 7050, Xcols: 91, r: 91, streamingCols: 0)                   	 0.222306  	 700       	 183.831   	 0         	 32.4262   	 5.66921   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 141, reductionFactor: 37, colBlockingSize: 12)                 	 0.146785  	 100       	 69.5518   	 0         	 2.02953   	 34.2699   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 141, Qr2: 91)      	 0.142211  	 700       	 0         	 0         	 69.3289   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 91, m: 4550, k: 91) 	 0.125779  	 700       	 419.388   	 0         	 37.2379   	 11.2624   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 91, m: 91)                                                                  	 0.108815  	 809       	 7.47004   	 0         	 1.48301   	 5.0371    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 91, reductionFactor: 37, colBlockingSize: 12)                  	 0.0719806 	 101       	 59.6679   	 0         	 2.6467    	 22.5443   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 7050, m: 91)                                                                       	 0.07082   	 700       	 0         	 0         	 101.459   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r: 141, r2: 141)           	 0.0669866 	 100       	 148.395   	 0         	 8.65702   	 17.1416   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 141)                                                                	 0.0661153 	 100       	 3.73212   	 0         	 0.201466  	 18.5248   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 91, n: 50, r2: 91)                                                                                         	 0.060579  	 707       	 0         	 0         	 77.3161   	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 141, r: 141, r2: 2500, leftOrthog: 0)      	 0.0579535 	 100       	 171.525   	 0         	 15.1468   	 11.3242   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 141, n: 50, r: 141, r2: 50)           	 0.0547591 	 100       	 181.531   	 0         	 19.7753   	 9.17969   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 7050, m: 91)                                                              	 0.0498971 	 700       	 0         	 0         	 144.004   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 91, k: 2500)   	 0.0484956 	 800       	 375.292   	 0         	 47.1202   	 7.96457   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 7050, leftOrthog: 0)        	 0.0479605 	 100       	 73.4979   	 0         	 17.7229   	 4.14706   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 91, n: 50, r2: 91)                   	 0.0447992 	 700       	 0         	 0         	 160.39    	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0439766 	 100       	 1.9897    	 0         	 0.137346  	 14.4868   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 4550, k: 91) 	 0.0398919 	 700       	 726.551   	 0         	 90.6991   	 8.01056   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 2500, m: 91, k: 50)	 0.0392144 	 800       	 464.115   	 0         	 58.2725   	 7.96457   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 7050, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0336313 	 100       	 107.646   	 0         	 8.44451   	 12.7474   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 91, r: 91, streamingCols: 0)                   	 0.0174461 	 101       	 119.852   	 0         	 21.2647   	 5.63621   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 141, reductionFactor: 37, colBlockingSize: 12)                   	 0.016431  	 100       	 12.4267   	 0         	 1.31123   	 9.47715   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.0082418 	 109       	 2.2042    	 0         	 0.798806  	 2.75937   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 91)                                                                       	 0.00767611	 101       	 0         	 0         	 47.8941   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 50, Qr2: 91)       	 0.00757589	 100       	 0         	 0         	 74.4466   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 91)                                                              	 0.00696658	 101       	 0         	 0         	 52.772    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 0, n: 50, r2: 91)                    	 0.00666792	 100       	 0         	 0         	 54.5898   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 4550, k: 50) 	 0.00603612	 100       	 376.898   	 0         	 60.635    	 6.21585   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4550, cols: 91, reductionFactor: 37, colBlockingSize: 12)                  	 0.00549295	 7         	 98.6276   	 0         	 4.30562   	 22.9067   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 50)           	 0.00483063	 8         	 20.7012   	 0         	 3.34532   	 6.18812   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 91, r1_: 91, n: 50, r2: 91)           	 0.00441521	 7         	 119.473   	 0         	 10.6082   	 11.2624   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.00371978	 101       	 6.97149   	 0         	 1.08608   	 6.41892   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 50, r2: 50)              	 0.00348345	 100       	 7.17679   	 0         	 1.72243   	 4.16667   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 141, r: 50, r2: 50, leftOrthog: 0)         	 0.00298252	 100       	 23.6378   	 0         	 7.01421   	 3.36998   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 91)                                                                                         	 0.00288123	 101       	 0         	 0         	 127.598   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.00271191	 8         	 37.871    	 0         	 3.00895   	 12.5861   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 91, m: 91, fromLeft: 0)                	 0.00233151	 808       	 0         	 0         	 45.9174   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                   	 0.00221233	 8         	 22.6007   	 0         	 7.26837   	 3.10945   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 4550, Xcols: 91, r: 91, streamingCols: 0)                   	 0.00162762	 7         	 162.046   	 0         	 28.6341   	 5.6592    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 91, m: 50, k: 91)   	 0.00118238	 100       	 70.0365   	 0         	 11.76     	 5.9555    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50, k: 50)     	 0.00107112	 100       	 23.3401   	 0         	 5.60161   	 4.16667   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 4550, m: 91)                                                              	 0.00105784	 7         	 0         	 0         	 43.8381   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 91)   	 0.00102512	 100       	 44.3849   	 0         	 9.05257   	 4.90302   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 4550, m: 91)                                                                       	 0.000910803	 7         	 0         	 0         	 50.9151   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 91, n: 50, r2: 1)                                                                                          	 0.000881592	 201       	 0         	 0         	 16.5982   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                   	 0.0008397 	 100       	 0.595451  	 0         	 2.3818    	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000829783	 201       	 0         	 0         	 9.68928   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 50, k: 50)  	 0.000616509	 100       	 40.5509   	 0         	 9.73222   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 91, n: 50, r2: 1)                    	 0.000564812	 100       	 0         	 0         	 19.9712   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                          	 0.000536256	 100       	 0         	 0         	 7.45912   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 1, r1low: 0, n: 50, r2: 50)                     	 0.000509816	 100       	 0         	 0         	 7.84597   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                                	 0.000445735	 101       	 0         	 0         	 9.06368   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                            	 0.00044461	 100       	 1.12458   	 0         	 13.495    	 0.0833333 
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 1, Xr2: 50, Qr1: 1, Qr2: 0)          	 0.00043929	 100       	 0         	 0         	 9.1056    	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 91, r1_: 50, n: 50, r2: 91)           	 0.00040274	 1         	 102.808   	 0         	 12.8341   	 8.01056   
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000371381	 101       	 0.679895  	 0         	 10.8783   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 91, n: 50, r2: 1)                                                                                 	 0.000368666	 101       	 1.24652   	 0         	 19.9443   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000338337	 100       	 0.738908  	 0         	 11.8225   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                              	 0.000289917	 8         	 0         	 0         	 55.1882   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 50)                                                                       	 0.000240625	 8         	 0         	 0         	 66.4935   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 91, reductionFactor: 37, colBlockingSize: 12)                    	 9.3973e-05	 1         	 9.05027   	 0         	 1.09231   	 8.28541   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 50, r: 50, streamingCols: 0)                     	 3.8771e-05	 1         	 3.22406   	 0         	 1.28962   	 2.5       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 91, r: 50, streamingCols: 30)                    	 2.85e-05  	 1         	 4.38596   	 0         	 1.75439   	 2.5       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 91, r1_: 91, n: 50, r2: 1)            	 1.639e-05 	 1         	 50.5247   	 0         	 8.48371   	 5.9555    
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 0)                	 1.004e-05 	 9         	 0         	 0         	 35.8566   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 9.841e-06 	 1         	 25.4039   	 0         	 6.09694   	 4.16667   
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 9.42e-06  	 1         	 0.530786  	 0         	 2.12314   	 0.25      
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 91, n: 50, r2: 1)                                                                                   	 9.26e-06  	 1         	 0.982721  	 0         	 3.93089   	 0.25      
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                         	 8.331e-06 	 2         	 0         	 0         	 9.60269   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 0, m: 4550, k: 50)  	 8.08e-06  	 100       	 0         	 0         	 22524.8   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 91)                                                                	 4.72e-06  	 1         	 0         	 0         	 15.4237   	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 91, fromLeft: 0)                	 1.9e-06   	 1         	 0         	 0         	 38.3158   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 8.11677   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 8.11671   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                            	 6.46015   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                        	 6.45888   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 5.2207    	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 1.97183   	 1818      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 1.78561   	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_leftOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                   	 1.65648   	 100       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 1.30346   	 900       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 1.19517   	 918       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 1.17737   	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.928496  	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.669612  	 918       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.24366   	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.173922  	 1800      
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.150227  	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.117057  	 918       
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                       	 0.0796559 	 818       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0657079 	 1310      
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                              	 0.0586619 	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0525418 	 1000      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0495667 	 900       
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                              	 0.0456382 	 20        
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0398309 	 900       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 0.0341005 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 0.0340704 	 2         
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.0157665 	 5273      
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.00967482	 18        
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00760413	 1818      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00413928	 6472      
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.00234345	 818       
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00107838	 302       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.00085838	 102       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.00044461	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: L, orthoY: L
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m43->44  [0m[1;34m44->45  [0m[1;34m45->46  [0m[1;34m46->47  [0m[1;34m47->48  [0m[1;34m48->49  [0m[1;34m49->50  [0m[1;34m50->51  [0m[1;34m51->52  [0m[1;34m52->53  [0m[1;34m53->54  [0m[1;34m54->55  [0m[1;34m55->56  [0m[1;34m56->57  [0m[1;34m57->58  [0m[1;34m58->59  [0m[1;34m59->60  [0m[1;34m60->61  [0m[1;34m61->62  [0m[1;34m62->63  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 23046748678016 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 23046526068736 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 23046324742272 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 23046123415808 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 23045922089344 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 23045720762880 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 23045519436416 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 23045318109952 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 23045116783488 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 23044915457024 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 23044714130560 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 23044512804096 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 23044311477632 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 23044110151168 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 23043908824704 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 23043707498240 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 23043506171776 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 23043304845312 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 23043103518848 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 23042902192384 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 23042700865920 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 23042499539456 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 23042298212992 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 23042096886528 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 23041895560064 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 23041694233600 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 23041492907136 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 23041291580672 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 23041090254208 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 23040888927744 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 23040687601280 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 23040486274816 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 23040284944256 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 23040083617792 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 23039882291328 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 23039680964864 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 23039479638400 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 23039278311936 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 23039076985472 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 23038875659008 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 23038674332544 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 23038473006080 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 23038271679616 -> hwthread 43 - OK[0m[1;34m
[0m[1;34m	threadid 23038070353152 -> hwthread 44 - OK[0m[1;34m
[0m[1;34m	threadid 23037869026688 -> hwthread 45 - OK[0m[1;34m
[0m[1;34m	threadid 23037667700224 -> hwthread 46 - OK[0m[1;34m
[0m[1;34m	threadid 23037466373760 -> hwthread 47 - OK[0m[1;34m
[0m[1;34m	threadid 23037265047296 -> hwthread 48 - OK[0m[1;34m
[0m[1;34m	threadid 23037063720832 -> hwthread 49 - OK[0m[1;34m
[0m[1;34m	threadid 23036862394368 -> hwthread 50 - OK[0m[1;34m
[0m[1;34m	threadid 23036661067904 -> hwthread 51 - OK[0m[1;34m
[0m[1;34m	threadid 23036459741440 -> hwthread 52 - OK[0m[1;34m
[0m[1;34m	threadid 23036258414976 -> hwthread 53 - OK[0m[1;34m
[0m[1;34m	threadid 23036057088512 -> hwthread 54 - OK[0m[1;34m
[0m[1;34m	threadid 23035855762048 -> hwthread 55 - OK[0m[1;34m
[0m[1;34m	threadid 23035654435584 -> hwthread 56 - OK[0m[1;34m
[0m[1;34m	threadid 23035453109120 -> hwthread 57 - OK[0m[1;34m
[0m[1;34m	threadid 23035251782656 -> hwthread 58 - OK[0m[1;34m
[0m[1;34m	threadid 23035050456192 -> hwthread 59 - OK[0m[1;34m
[0m[1;34m	threadid 23034849129728 -> hwthread 60 - OK[0m[1;34m
[0m[1;34m	threadid 23034647803264 -> hwthread 61 - OK[0m[1;34m
[0m[1;34m	threadid 23034446476800 -> hwthread 62 - OK[0m[1;34m
[0m[1;34m	threadid 23034245150336 -> hwthread 63 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 23046643017472 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 23046636427008 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 142, m: 142)                                                               	 1.64538   	 700       	 8.52697   	 0         	 0.206366  	 41.3197   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 7100, cols: 142, reductionFactor: 37, colBlockingSize: 12)                 	 1.10972   	 600       	 158.995   	 0         	 4.44809   	 35.7446   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 142, n: 50, r: 142, r2: 142)          	 1.06251   	 600       	 161.69    	 0         	 9.20037   	 17.5743   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 142, r: 142, r2: 7100, leftOrthog: 0)      	 0.829171  	 600       	 207.192   	 0         	 17.7426   	 11.6776   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 7100, cols: 92, reductionFactor: 37, colBlockingSize: 12)                  	 0.592859  	 700       	 145.745   	 0         	 6.24991   	 23.3195   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 7100, Xcols: 92, r: 92, streamingCols: 0)                   	 0.226416  	 700       	 185.791   	 0         	 32.4162   	 5.73143   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 142, reductionFactor: 37, colBlockingSize: 12)                 	 0.151519  	 100       	 68.338    	 0         	 1.98082   	 34.4999   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 142, Qr2: 92)      	 0.143094  	 700       	 0         	 0         	 69.9108   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 92, m: 4600, k: 92) 	 0.126246  	 700       	 431.76    	 0         	 37.9198   	 11.3861   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 92, m: 92)                                                                  	 0.110282  	 809       	 7.61636   	 0         	 1.49556   	 5.09266   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 92, reductionFactor: 37, colBlockingSize: 12)                  	 0.0724568 	 101       	 60.5856   	 0         	 2.65922   	 22.7832   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 7100, m: 92)                                                                       	 0.0703289 	 700       	 0         	 0         	 104.023   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r: 142, r2: 142)           	 0.0661822 	 100       	 152.337   	 0         	 8.82611   	 17.2598   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 142)                                                                	 0.0642656 	 100       	 3.86676   	 0         	 0.20851   	 18.5448   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 142, r: 142, r2: 2500, leftOrthog: 0)      	 0.0603128 	 100       	 167.162   	 0         	 14.6613   	 11.4016   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 92, n: 50, r2: 92)                                                                                         	 0.0562796 	 707       	 0         	 0         	 85.0617   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 142, n: 50, r: 142, r2: 50)           	 0.054055  	 100       	 186.514   	 0         	 20.2801   	 9.19689   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 92, k: 2500)   	 0.0494997 	 800       	 371.72    	 0         	 46.4941   	 7.99499   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 7100, leftOrthog: 0)        	 0.0465421 	 100       	 76.275    	 0         	 18.3919   	 4.1472    
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 92, n: 50, r2: 92)                   	 0.0445042 	 700       	 0         	 0         	 164.386   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 2500, m: 92, k: 50)	 0.040108  	 800       	 458.761   	 0         	 57.3811   	 7.99499   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 4600, k: 92) 	 0.0399751 	 700       	 741.061   	 0         	 92.1493   	 8.04196   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0398101 	 100       	 2.19794   	 0         	 0.15172   	 14.4868   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 7100, m: 92)                                                              	 0.0388537 	 700       	 0         	 0         	 188.292   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 7100, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0331034 	 100       	 110.138   	 0         	 8.6396    	 12.7481   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 92, r: 92, streamingCols: 0)                   	 0.0177568 	 101       	 120.357   	 0         	 21.1242   	 5.69758   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 142, reductionFactor: 37, colBlockingSize: 12)                   	 0.0156754 	 100       	 13.2111   	 0         	 1.39143   	 9.49465   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 50, Qr2: 92)       	 0.00843152	 100       	 0         	 0         	 67.3662   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00821161	 109       	 2.2123    	 0         	 0.801742  	 2.75937   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 92)                                                                       	 0.00782045	 101       	 0         	 0         	 47.5267   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 4600, k: 50) 	 0.00714303	 100       	 321.992   	 0         	 51.7987   	 6.21622   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 0, n: 50, r2: 92)                    	 0.00640364	 100       	 0         	 0         	 57.4673   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 92)                                                              	 0.00598025	 101       	 0         	 0         	 62.1513   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4600, cols: 92, reductionFactor: 37, colBlockingSize: 12)                  	 0.00564429	 7         	 99.1822   	 0         	 4.28276   	 23.1585   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 50)           	 0.00494787	 8         	 20.2107   	 0         	 3.26605   	 6.18812   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 92, r1_: 92, n: 50, r2: 92)           	 0.00454949	 7         	 119.812   	 0         	 10.5226   	 11.3861   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.00368209	 101       	 7.04286   	 0         	 1.0972    	 6.41892   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 92)                                                                                         	 0.00284409	 101       	 0         	 0         	 130.685   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.00272588	 8         	 37.6769   	 0         	 2.99353   	 12.5861   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 142, r: 50, r2: 50, leftOrthog: 0)         	 0.00250481	 100       	 28.3455   	 0         	 8.39985   	 3.37452   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                   	 0.00196609	 8         	 25.4312   	 0         	 8.17866   	 3.10945   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 92, m: 92, fromLeft: 0)                	 0.0016848 	 808       	 0         	 0         	 64.9468   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 4600, Xcols: 92, r: 92, streamingCols: 0)                   	 0.0016627 	 7         	 163.914   	 0         	 28.6494   	 5.72139   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 50, r2: 50)              	 0.00127118	 100       	 19.6668   	 0         	 4.72004   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 92, m: 50, k: 92)   	 0.00115728	 100       	 73.1367   	 0         	 12.2106   	 5.98958   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50, k: 50)     	 0.00104319	 100       	 23.965    	 0         	 5.75161   	 4.16667   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 4600, m: 92)                                                              	 0.00103315	 7         	 0         	 0         	 45.8778   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 92)   	 0.00102374	 100       	 44.9335   	 0         	 9.14298   	 4.91453   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 4600, m: 92)                                                                       	 0.000963445	 7         	 0         	 0         	 49.1968   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                   	 0.00094351	 100       	 0.529936  	 0         	 2.11974   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 92, n: 50, r2: 1)                                                                                          	 0.000853078	 201       	 0         	 0         	 17.3414   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000794168	 201       	 0         	 0         	 10.1238   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 50, k: 50)  	 0.000595284	 100       	 41.9968   	 0         	 10.0792   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 92, n: 50, r2: 1)                    	 0.000579961	 100       	 0         	 0         	 19.5875   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 1, r1low: 0, n: 50, r2: 50)                     	 0.000527301	 100       	 0         	 0         	 7.5858    	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                          	 0.000526222	 100       	 0         	 0         	 7.60135   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                                	 0.000458758	 101       	 0         	 0         	 8.80639   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                            	 0.000450586	 100       	 1.10967   	 0         	 13.316    	 0.0833333 
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 1, Xr2: 50, Qr1: 1, Qr2: 0)          	 0.000445948	 100       	 0         	 0         	 8.96966   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 92, r1_: 50, n: 50, r2: 92)           	 0.000418081	 1         	 101.224   	 0         	 12.587    	 8.04196   
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000390743	 101       	 0.646205  	 0         	 10.3393   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 92, n: 50, r2: 1)                                                                                 	 0.000379542	 101       	 1.22411   	 0         	 19.5857   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000325696	 100       	 0.767587  	 0         	 12.2814   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                              	 0.000266888	 8         	 0         	 0         	 59.9502   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 50)                                                                       	 0.000221535	 8         	 0         	 0         	 72.2234   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 92, reductionFactor: 37, colBlockingSize: 12)                    	 9.6602e-05	 1         	 8.99853   	 0         	 1.08188   	 8.31747   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 50, r: 50, streamingCols: 0)                     	 3.3921e-05	 1         	 3.68503   	 0         	 1.47401   	 2.5       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 92, r: 50, streamingCols: 26)                    	 2.8731e-05	 1         	 4.3507    	 0         	 1.74028   	 2.5       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 92, r1_: 92, n: 50, r2: 1)            	 1.793e-05 	 1         	 47.2058   	 0         	 7.88132   	 5.98958   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 1.056e-05 	 1         	 23.6742   	 0         	 5.68182   	 4.16667   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 0)                	 9.931e-06 	 9         	 0         	 0         	 36.2501   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 9.351e-06 	 1         	 0.534702  	 0         	 2.13881   	 0.25      
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 92, n: 50, r2: 1)                                                                                   	 9.17e-06  	 1         	 1.00327   	 0         	 4.01309   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 0, m: 4600, k: 50)  	 8.06e-06  	 100       	 0         	 0         	 22828.8   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                         	 8.06e-06  	 2         	 0         	 0         	 9.92556   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 92)                                                                	 5.63e-06  	 1         	 0         	 0         	 13.0728   	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 92, fromLeft: 0)                	 1.94e-06  	 1         	 0         	 0         	 37.9381   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 8.14218   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 8.14213   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                            	 6.48509   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                        	 6.4837    	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 5.24018   	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 1.98749   	 1818      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 1.74946   	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_leftOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                   	 1.65694   	 100       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 1.31063   	 900       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 1.19652   	 918       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 1.18402   	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.938531  	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.678046  	 918       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.247864  	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.175554  	 1800      
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.151972  	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.118493  	 918       
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                       	 0.0793424 	 818       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0612972 	 1310      
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0520151 	 1000      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0505428 	 900       
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                              	 0.0465983 	 918       
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                              	 0.044921  	 20        
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0407033 	 900       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 0.0341481 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 0.0341185 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.00994393	 18        
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00952733	 5273      
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00778933	 1818      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00420229	 6472      
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.00169668	 818       
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00109598	 302       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000962031	 102       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000450586	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: L, orthoY: L
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m43->44  [0m[1;34m44->45  [0m[1;34m45->46  [0m[1;34m46->47  [0m[1;34m47->48  [0m[1;34m48->49  [0m[1;34m49->50  [0m[1;34m50->51  [0m[1;34m51->52  [0m[1;34m52->53  [0m[1;34m53->54  [0m[1;34m54->55  [0m[1;34m55->56  [0m[1;34m56->57  [0m[1;34m57->58  [0m[1;34m58->59  [0m[1;34m59->60  [0m[1;34m60->61  [0m[1;34m61->62  [0m[1;34m62->63  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 23166885427072 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 23166650935296 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 23166449608832 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 23166248282368 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 23166046955904 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 23165845629440 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 23165644302976 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 23165442976512 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 23165241650048 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 23165040323584 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 23164838997120 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 23164637670656 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 23164436344192 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 23164235017728 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 23164033691264 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 23163832364800 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 23163631038336 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 23163429711872 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 23163228385408 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 23163027058944 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 23162825732480 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 23162624406016 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 23162423079552 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 23162221753088 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 23162020426624 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 23161819100160 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 23161617773696 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 23161416447232 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 23161215120768 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 23161013794304 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 23160812467840 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 23160611141376 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 23160409810816 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 23160208484352 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 23160007157888 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 23159805831424 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 23159604504960 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 23159403178496 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 23159201852032 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 23159000525568 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 23158799199104 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 23158597872640 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 23158396546176 -> hwthread 43 - OK[0m[1;34m
[0m[1;34m	threadid 23158195219712 -> hwthread 44 - OK[0m[1;34m
[0m[1;34m	threadid 23157993893248 -> hwthread 45 - OK[0m[1;34m
[0m[1;34m	threadid 23157792566784 -> hwthread 46 - OK[0m[1;34m
[0m[1;34m	threadid 23157591240320 -> hwthread 47 - OK[0m[1;34m
[0m[1;34m	threadid 23157389913856 -> hwthread 48 - OK[0m[1;34m
[0m[1;34m	threadid 23157188587392 -> hwthread 49 - OK[0m[1;34m
[0m[1;34m	threadid 23156987260928 -> hwthread 50 - OK[0m[1;34m
[0m[1;34m	threadid 23156785934464 -> hwthread 51 - OK[0m[1;34m
[0m[1;34m	threadid 23156584608000 -> hwthread 52 - OK[0m[1;34m
[0m[1;34m	threadid 23156383281536 -> hwthread 53 - OK[0m[1;34m
[0m[1;34m	threadid 23156181955072 -> hwthread 54 - OK[0m[1;34m
[0m[1;34m	threadid 23155980628608 -> hwthread 55 - OK[0m[1;34m
[0m[1;34m	threadid 23155779302144 -> hwthread 56 - OK[0m[1;34m
[0m[1;34m	threadid 23155577975680 -> hwthread 57 - OK[0m[1;34m
[0m[1;34m	threadid 23155376649216 -> hwthread 58 - OK[0m[1;34m
[0m[1;34m	threadid 23155175322752 -> hwthread 59 - OK[0m[1;34m
[0m[1;34m	threadid 23154973996288 -> hwthread 60 - OK[0m[1;34m
[0m[1;34m	threadid 23154772669824 -> hwthread 61 - OK[0m[1;34m
[0m[1;34m	threadid 23154571343360 -> hwthread 62 - OK[0m[1;34m
[0m[1;34m	threadid 23154370016896 -> hwthread 63 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 23166779766528 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 23166773176064 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 143, m: 143)                                                               	 1.71044   	 700       	 8.37713   	 0         	 0.201318  	 41.6113   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 7150, cols: 143, reductionFactor: 37, colBlockingSize: 12)                 	 1.14112   	 600       	 157.91    	 0         	 4.38685   	 35.9963   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 143, n: 50, r: 143, r2: 143)          	 1.07118   	 600       	 163.794   	 0         	 9.25491   	 17.698    
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 143, r: 143, r2: 7150, leftOrthog: 0)      	 0.829455  	 600       	 211.527   	 0         	 17.9872   	 11.7599   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 7150, cols: 93, reductionFactor: 37, colBlockingSize: 12)                  	 0.598491  	 700       	 148.568   	 0         	 6.30278   	 23.5718   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 7150, Xcols: 93, r: 93, streamingCols: 0)                   	 0.230261  	 700       	 187.996   	 0         	 32.4486   	 5.79366   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 143, reductionFactor: 37, colBlockingSize: 12)                 	 0.154138  	 100       	 68.1264   	 0         	 1.96162   	 34.7297   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 143, Qr2: 93)      	 0.151144  	 700       	 0         	 0         	 67.1509   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 93, m: 4650, k: 93) 	 0.130024  	 700       	 433.036   	 0         	 37.6229   	 11.5099   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 93, m: 93)                                                                  	 0.11347   	 809       	 7.64633   	 0         	 1.48524   	 5.14821   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 7150, m: 93)                                                                       	 0.0798022 	 700       	 0         	 0         	 93.3237   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 93, reductionFactor: 37, colBlockingSize: 12)                  	 0.0732854 	 101       	 61.2099   	 0         	 2.65876   	 23.022    
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r: 143, r2: 143)           	 0.0666445 	 100       	 153.418   	 0         	 8.82832   	 17.378    
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 143)                                                                	 0.0658103 	 100       	 3.8026    	 0         	 0.204831  	 18.5645   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 143, r: 143, r2: 2500, leftOrthog: 0)      	 0.0596117 	 100       	 171.518   	 0         	 14.942    	 11.4789   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 143, n: 50, r: 143, r2: 50)           	 0.0590282 	 100       	 173.214   	 0         	 18.7992   	 9.21392   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 93, n: 50, r2: 93)                                                                                         	 0.0568284 	 707       	 0         	 0         	 86.0814   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 93, k: 2500)   	 0.0482514 	 800       	 385.481   	 0         	 48.0351   	 8.02499   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 93, n: 50, r2: 93)                   	 0.0456711 	 700       	 0         	 0         	 163.067   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0421215 	 100       	 2.07733   	 0         	 0.143395  	 14.4868   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 7150, leftOrthog: 0)        	 0.0417136 	 100       	 85.7034   	 0         	 20.6647   	 4.14733   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 4650, k: 93) 	 0.0413759 	 700       	 731.621   	 0         	 90.6266   	 8.07292   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 2500, m: 93, k: 50)	 0.038652  	 800       	 481.218   	 0         	 59.9649   	 8.02499   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 7150, m: 93)                                                              	 0.0384708 	 700       	 0         	 0         	 193.587   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 7150, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0331337 	 100       	 110.812   	 0         	 8.69205   	 12.7487   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 93, r: 93, streamingCols: 0)                   	 0.0182002 	 101       	 119.992   	 0         	 20.8357   	 5.75894   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 143, reductionFactor: 37, colBlockingSize: 12)                   	 0.0164113 	 100       	 12.7971   	 0         	 1.34536   	 9.51197   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00809317	 109       	 2.24468   	 0         	 0.813476  	 2.75937   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 93)                                                                       	 0.00800614	 101       	 0         	 0         	 46.929    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 50, Qr2: 93)       	 0.00747429	 100       	 0         	 0         	 76.529    	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 93)                                                              	 0.00594875	 101       	 0         	 0         	 63.1595   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 0, n: 50, r2: 93)                    	 0.00591165	 100       	 0         	 0         	 62.9266   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4650, cols: 93, reductionFactor: 37, colBlockingSize: 12)                  	 0.00564387	 7         	 102.459   	 0         	 4.3767    	 23.4102   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 50)           	 0.00524084	 8         	 19.0809   	 0         	 3.08348   	 6.18812   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 93, r1_: 93, n: 50, r2: 93)           	 0.00494585	 7         	 113.843   	 0         	 9.89087   	 11.5099   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 4650, k: 50) 	 0.00461105	 100       	 504.224   	 0         	 81.1096   	 6.21658   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.00420717	 101       	 6.16386   	 0         	 0.960265  	 6.41892   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.00305434	 8         	 33.6252   	 0         	 2.67161   	 12.5861   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 93)                                                                                         	 0.00264727	 101       	 0         	 0         	 141.927   	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 93, m: 93, fromLeft: 0)                	 0.00247248	 808       	 0         	 0         	 45.2234   	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 143, r: 50, r2: 50, leftOrthog: 0)         	 0.00235252	 100       	 30.3929   	 0         	 8.99459   	 3.37902   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                   	 0.00216528	 8         	 23.0917   	 0         	 7.42631   	 3.10945   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 4650, Xcols: 93, r: 93, streamingCols: 0)                   	 0.00174157	 7         	 161.651   	 0         	 27.9499   	 5.78358   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 93, m: 50, k: 93)   	 0.00127981	 100       	 67.5805   	 0         	 11.2198   	 6.02332   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 4650, m: 93)                                                              	 0.00121774	 7         	 0         	 0         	 39.7739   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 50, r2: 50)              	 0.0011128 	 100       	 22.466    	 0         	 5.39183   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50, k: 50)     	 0.00106667	 100       	 23.4375   	 0         	 5.625     	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 93)   	 0.00106364	 100       	 43.7176   	 0         	 8.87515   	 4.92585   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 4650, m: 93)                                                                       	 0.00100374	 7         	 0         	 0         	 48.2541   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 93, n: 50, r2: 1)                                                                                          	 0.000864756	 201       	 0         	 0         	 17.2932   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                   	 0.000809709	 100       	 0.617506  	 0         	 2.47002   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000797653	 201       	 0         	 0         	 10.0796   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 50, k: 50)  	 0.000625606	 100       	 39.9613   	 0         	 9.5907    	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 93, n: 50, r2: 1)                    	 0.000551281	 100       	 0         	 0         	 20.7517   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                          	 0.000529953	 100       	 0         	 0         	 7.54784   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 1, r1low: 0, n: 50, r2: 50)                     	 0.000511996	 100       	 0         	 0         	 7.81256   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 93, r1_: 50, n: 50, r2: 93)           	 0.000502482	 1         	 86.0628   	 0         	 10.6607   	 8.07292   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                            	 0.000455111	 100       	 1.09863   	 0         	 13.1836   	 0.0833333 
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 1, Xr2: 50, Qr1: 1, Qr2: 0)          	 0.000453268	 100       	 0         	 0         	 8.8248    	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                                	 0.000447304	 101       	 0         	 0         	 9.03189   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000382563	 101       	 0.660022  	 0         	 10.5604   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 93, n: 50, r2: 1)                                                                                 	 0.000372459	 101       	 1.26094   	 0         	 20.1751   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000321502	 100       	 0.7776    	 0         	 12.4416   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 50)                                                                       	 0.000315735	 8         	 0         	 0         	 50.6754   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                              	 0.000237135	 8         	 0         	 0         	 67.4721   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 93, reductionFactor: 37, colBlockingSize: 12)                    	 0.000113323	 1         	 7.83844   	 0         	 0.938839  	 8.34908   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 93, r: 50, streamingCols: 23)                    	 3.4731e-05	 1         	 3.59909   	 0         	 1.43964   	 2.5       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 50, r: 50, streamingCols: 0)                     	 3.3481e-05	 1         	 3.73346   	 0         	 1.49338   	 2.5       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 93, r1_: 93, n: 50, r2: 1)            	 1.902e-05 	 1         	 45.4732   	 0         	 7.54953   	 6.02332   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 1.0171e-05	 1         	 24.5797   	 0         	 5.89912   	 4.16667   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 0)                	 1.0141e-05	 9         	 0         	 0         	 35.4995   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 93, n: 50, r2: 1)                                                                                   	 9.84e-06  	 1         	 0.945122  	 0         	 3.78049   	 0.25      
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                         	 8.851e-06 	 2         	 0         	 0         	 9.03853   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 8.61e-06  	 1         	 0.58072   	 0         	 2.32288   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 0, m: 4650, k: 50)  	 7.47e-06  	 100       	 0         	 0         	 24899.6   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 93)                                                                	 6.06e-06  	 1         	 0         	 0         	 12.2772   	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 93, fromLeft: 0)                	 1.85e-06  	 1         	 0         	 0         	 40.2162   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 8.31298   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 8.31293   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                            	 6.62044   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                        	 6.61922   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 5.35556   	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 2.0296    	 1818      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 1.81838   	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_leftOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                   	 1.69242   	 100       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 1.34554   	 900       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 1.22062   	 918       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 1.19797   	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.933132  	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.685324  	 918       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.252436  	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.178362  	 1800      
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.159071  	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.121564  	 918       
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                       	 0.0891367 	 818       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0616681 	 1310      
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.052646  	 1000      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0493181 	 900       
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                              	 0.0463278 	 918       
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                              	 0.0456884 	 20        
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0392776 	 900       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 0.0362595 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 0.0362289 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.0107184 	 18        
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.010534  	 5273      
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00792341	 1818      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00407266	 6472      
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.00248448	 818       
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00107652	 302       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000828159	 102       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000455111	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: L, orthoY: L
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m43->44  [0m[1;34m44->45  [0m[1;34m45->46  [0m[1;34m46->47  [0m[1;34m47->48  [0m[1;34m48->49  [0m[1;34m49->50  [0m[1;34m50->51  [0m[1;34m51->52  [0m[1;34m52->53  [0m[1;34m53->54  [0m[1;34m54->55  [0m[1;34m55->56  [0m[1;34m56->57  [0m[1;34m57->58  [0m[1;34m58->59  [0m[1;34m59->60  [0m[1;34m60->61  [0m[1;34m61->62  [0m[1;34m62->63  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 22902157617024 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 22901973575680 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 22901772249216 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 22901570922752 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 22901369596288 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 22901168269824 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 22900966943360 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 22900765616896 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 22900564290432 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 22900362963968 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 22900161637504 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 22899960311040 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 22899758984576 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 22899557658112 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 22899356331648 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 22899155005184 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 22898953678720 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 22898752352256 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 22898551025792 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 22898349699328 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 22898148372864 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 22897947046400 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 22897745719936 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 22897544393472 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 22897343067008 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 22897141740544 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 22896940414080 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 22896739087616 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 22896537761152 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 22896336434688 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 22896135108224 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 22895933781760 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 22895732451200 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 22895531124736 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 22895329798272 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 22895128471808 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 22894927145344 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 22894725818880 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 22894524492416 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 22894323165952 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 22894121839488 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 22893920513024 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 22893719186560 -> hwthread 43 - OK[0m[1;34m
[0m[1;34m	threadid 22893517860096 -> hwthread 44 - OK[0m[1;34m
[0m[1;34m	threadid 22893316533632 -> hwthread 45 - OK[0m[1;34m
[0m[1;34m	threadid 22893115207168 -> hwthread 46 - OK[0m[1;34m
[0m[1;34m	threadid 22892913880704 -> hwthread 47 - OK[0m[1;34m
[0m[1;34m	threadid 22892712554240 -> hwthread 48 - OK[0m[1;34m
[0m[1;34m	threadid 22892511227776 -> hwthread 49 - OK[0m[1;34m
[0m[1;34m	threadid 22892309901312 -> hwthread 50 - OK[0m[1;34m
[0m[1;34m	threadid 22892108574848 -> hwthread 51 - OK[0m[1;34m
[0m[1;34m	threadid 22891907248384 -> hwthread 52 - OK[0m[1;34m
[0m[1;34m	threadid 22891705921920 -> hwthread 53 - OK[0m[1;34m
[0m[1;34m	threadid 22891504595456 -> hwthread 54 - OK[0m[1;34m
[0m[1;34m	threadid 22891303268992 -> hwthread 55 - OK[0m[1;34m
[0m[1;34m	threadid 22891101942528 -> hwthread 56 - OK[0m[1;34m
[0m[1;34m	threadid 22890900616064 -> hwthread 57 - OK[0m[1;34m
[0m[1;34m	threadid 22890699289600 -> hwthread 58 - OK[0m[1;34m
[0m[1;34m	threadid 22890497963136 -> hwthread 59 - OK[0m[1;34m
[0m[1;34m	threadid 22890296636672 -> hwthread 60 - OK[0m[1;34m
[0m[1;34m	threadid 22890095310208 -> hwthread 61 - OK[0m[1;34m
[0m[1;34m	threadid 22889893983744 -> hwthread 62 - OK[0m[1;34m
[0m[1;34m	threadid 22889692657280 -> hwthread 63 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 22902051956480 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 22902045366016 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 144, m: 144)                                                               	 1.67749   	 700       	 8.72215   	 0         	 0.208151  	 41.903    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 7200, cols: 144, reductionFactor: 37, colBlockingSize: 12)                 	 1.16839   	 600       	 157.483   	 0         	 4.34459   	 36.248    
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 144, n: 50, r: 144, r2: 144)          	 1.08416   	 600       	 165.252   	 0         	 9.27247   	 17.8218   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 144, r: 144, r2: 7200, leftOrthog: 0)      	 0.912091  	 600       	 196.427   	 0         	 16.5871   	 11.8421   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 7200, cols: 94, reductionFactor: 37, colBlockingSize: 12)                  	 0.608299  	 700       	 150.377   	 0         	 6.31197   	 23.8241   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 7200, Xcols: 94, r: 94, streamingCols: 0)                   	 0.235549  	 700       	 189.063   	 0         	 32.2859   	 5.85589   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 144, Qr2: 94)      	 0.157991  	 700       	 0         	 0         	 65.1694   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 144, reductionFactor: 37, colBlockingSize: 12)                 	 0.155478  	 100       	 68.487    	 0         	 1.95905   	 34.9593   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 94, m: 4700, k: 94) 	 0.136512  	 700       	 425.902   	 0         	 36.6094   	 11.6337   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 94, m: 94)                                                                  	 0.115492  	 809       	 7.75741   	 0         	 1.49073   	 5.20376   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 94, reductionFactor: 37, colBlockingSize: 12)                  	 0.0753611 	 101       	 60.8109   	 0         	 2.61434   	 23.2605   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 7200, m: 94)                                                                       	 0.0670628 	 700       	 0         	 0         	 113.031   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r: 144, r2: 144)           	 0.0663412 	 100       	 156.283   	 0         	 8.93244   	 17.4961   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 144)                                                                	 0.0656406 	 100       	 3.83909   	 0         	 0.20658   	 18.5841   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 94, n: 50, r2: 94)                                                                                         	 0.0623497 	 707       	 0         	 0         	 80.155    	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 144, n: 50, r: 144, r2: 50)           	 0.0598123 	 100       	 173.342   	 0         	 18.7788   	 9.23077   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 144, r: 144, r2: 2500, leftOrthog: 0)      	 0.0562462 	 100       	 184.332   	 0         	 15.9509   	 11.5562   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 94, k: 2500)   	 0.0478742 	 800       	 392.696   	 0         	 48.7544   	 8.05457   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 94, n: 50, r2: 94)                   	 0.0471571 	 700       	 0         	 0         	 160.743   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 7200, m: 94)                                                              	 0.0460739 	 700       	 0         	 0         	 164.522   	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 7200, leftOrthog: 0)        	 0.0458183 	 100       	 78.5713   	 0         	 18.9444   	 4.14747   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0429841 	 100       	 2.03564   	 0         	 0.140517  	 14.4868   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 4700, k: 94) 	 0.0417564 	 700       	 740.629   	 0         	 91.3968   	 8.10345   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 2500, m: 94, k: 50)	 0.0401099 	 800       	 468.712   	 0         	 58.1921   	 8.05457   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 7200, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0336816 	 100       	 109.772   	 0         	 8.61005   	 12.7493   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 94, r: 94, streamingCols: 0)                   	 0.0184283 	 101       	 121.069   	 0         	 20.8012   	 5.82029   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 144, reductionFactor: 37, colBlockingSize: 12)                   	 0.0173208 	 100       	 12.2953   	 0         	 1.29028   	 9.52912   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00797249	 109       	 2.27866   	 0         	 0.82579   	 2.75937   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 94)                                                                       	 0.00795243	 101       	 0         	 0         	 47.754    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 50, Qr2: 94)       	 0.00761988	 100       	 0         	 0         	 75.5917   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 0, n: 50, r2: 94)                    	 0.00637352	 100       	 0         	 0         	 58.9941   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 94)                                                              	 0.00627187	 101       	 0         	 0         	 60.5497   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4700, cols: 94, reductionFactor: 37, colBlockingSize: 12)                  	 0.00581372	 7         	 102.709   	 0         	 4.3407    	 23.6619   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 50)           	 0.00563956	 8         	 17.7319   	 0         	 2.86547   	 6.18812   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 94, r1_: 94, n: 50, r2: 94)           	 0.00537033	 7         	 108.263   	 0         	 9.30603   	 11.6337   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 4700, k: 50) 	 0.00509608	 100       	 461.139   	 0         	 74.1746   	 6.21693   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.00419126	 101       	 6.18727   	 0         	 0.963911  	 6.41892   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 94)                                                                                         	 0.00286327	 101       	 0         	 0         	 132.631   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.00273642	 8         	 37.5318   	 0         	 2.982     	 12.5861   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 144, r: 50, r2: 50, leftOrthog: 0)         	 0.0022724 	 100       	 31.6846   	 0         	 9.36455   	 3.38346   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 94, m: 94, fromLeft: 0)                	 0.00217283	 808       	 0         	 0         	 52.5729   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                   	 0.0021404 	 8         	 23.3601   	 0         	 7.5126    	 3.10945   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 4700, Xcols: 94, r: 94, streamingCols: 0)                   	 0.00183944	 7         	 158.04    	 0         	 27.0349   	 5.84577   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 94, m: 50, k: 94)   	 0.00119029	 100       	 74.2341   	 0         	 12.2565   	 6.0567    
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 4700, m: 94)                                                              	 0.0011443 	 7         	 0         	 0         	 43.2418   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 50, r2: 50)              	 0.00108133	 100       	 23.1196   	 0         	 5.54871   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 94)   	 0.00104859	 100       	 44.8219   	 0         	 9.07882   	 4.93697   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50, k: 50)     	 0.00103718	 100       	 24.1039   	 0         	 5.78493   	 4.16667   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 4700, m: 94)                                                                       	 0.000994916	 7         	 0         	 0         	 49.7344   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                   	 0.000919341	 100       	 0.543868  	 0         	 2.17547   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 94, n: 50, r2: 1)                                                                                          	 0.000878033	 201       	 0         	 0         	 17.2148   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000825737	 201       	 0         	 0         	 9.73676   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 50, k: 50)  	 0.000612599	 100       	 40.8097   	 0         	 9.79434   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 94, n: 50, r2: 1)                    	 0.000545246	 100       	 0         	 0         	 21.1281   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 1, r1low: 0, n: 50, r2: 50)                     	 0.000538105	 100       	 0         	 0         	 7.43349   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                          	 0.000518956	 100       	 0         	 0         	 7.70778   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 94, r1_: 50, n: 50, r2: 94)           	 0.000516193	 1         	 85.5881   	 0         	 10.5619   	 8.10345   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                                	 0.00046009	 101       	 0         	 0         	 8.78089   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 1, Xr2: 50, Qr1: 1, Qr2: 0)          	 0.000441308	 100       	 0         	 0         	 9.06396   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                            	 0.000430681	 100       	 1.16095   	 0         	 13.9314   	 0.0833333 
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000388536	 101       	 0.649875  	 0         	 10.398    	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 94, n: 50, r2: 1)                                                                                 	 0.00038216	 101       	 1.24215   	 0         	 19.8744   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000334695	 100       	 0.746949  	 0         	 11.9512   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                              	 0.000322929	 8         	 0         	 0         	 49.5465   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 50)                                                                       	 0.000275117	 8         	 0         	 0         	 58.1571   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 94, reductionFactor: 37, colBlockingSize: 12)                    	 0.000110712	 1         	 8.19677   	 0         	 0.978105  	 8.38026   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 50, r: 50, streamingCols: 0)                     	 3.2541e-05	 1         	 3.84131   	 0         	 1.53652   	 2.5       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 94, r: 50, streamingCols: 20)                    	 3.0641e-05	 1         	 4.0795    	 0         	 1.6318    	 2.5       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 94, r1_: 94, n: 50, r2: 1)            	 1.8001e-05	 1         	 49.0862   	 0         	 8.10444   	 6.0567    
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 1.109e-05 	 1         	 0.450857  	 0         	 1.80343   	 0.25      
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 1.067e-05 	 1         	 23.4302   	 0         	 5.62324   	 4.16667   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 0)                	 9.762e-06 	 9         	 0         	 0         	 36.8777   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                         	 9.11e-06  	 2         	 0         	 0         	 8.78156   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 0, m: 4700, k: 50)  	 8.04e-06  	 100       	 0         	 0         	 23383.1   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 94, n: 50, r2: 1)                                                                                   	 7.72e-06  	 1         	 1.21762   	 0         	 4.87047   	 0.25      
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 94)                                                                	 5.711e-06 	 1         	 0         	 0         	 13.1676   	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 94, fromLeft: 0)                	 1.97e-06  	 1         	 0         	 0         	 38.1726   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 8.63569   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 8.63564   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                            	 6.90928   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                        	 6.90792   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 5.63342   	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 2.07138   	 1818      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 1.78611   	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_leftOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                   	 1.72627   	 100       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 1.37554   	 900       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 1.23769   	 918       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 1.21139   	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 1.01643   	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.697343  	 918       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.25802   	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.185612  	 1800      
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.166052  	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.123465  	 918       
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                       	 0.0762944 	 818       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0674357 	 1310      
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.054614  	 1000      
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                              	 0.0542788 	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0489114 	 900       
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                              	 0.0467561 	 20        
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0407225 	 900       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 0.036863  	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 0.0368321 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.0115548 	 18        
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00707174	 1818      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00704099	 5273      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00437645	 6472      
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.00218456	 818       
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00110539	 302       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000938151	 102       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000430681	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: L, orthoY: L
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m43->44  [0m[1;34m44->45  [0m[1;34m45->46  [0m[1;34m46->47  [0m[1;34m47->48  [0m[1;34m48->49  [0m[1;34m49->50  [0m[1;34m50->51  [0m[1;34m51->52  [0m[1;34m52->53  [0m[1;34m53->54  [0m[1;34m54->55  [0m[1;34m55->56  [0m[1;34m56->57  [0m[1;34m57->58  [0m[1;34m58->59  [0m[1;34m59->60  [0m[1;34m60->61  [0m[1;34m61->62  [0m[1;34m62->63  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 22573179312000 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 22573005924352 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 22572804597888 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 22572603271424 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 22572401944960 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 22572200618496 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 22571999292032 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 22571797965568 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 22571596639104 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 22571395312640 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 22571193986176 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 22570992659712 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 22570791333248 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 22570590006784 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 22570388680320 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 22570187353856 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 22569986027392 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 22569784700928 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 22569583374464 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 22569382048000 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 22569180721536 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 22568979395072 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 22568778068608 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 22568576742144 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 22568375415680 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 22568174089216 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 22567972762752 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 22567771436288 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 22567570109824 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 22567368783360 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 22567167456896 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 22566966130432 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 22566764799872 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 22566563473408 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 22566362146944 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 22566160820480 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 22565959494016 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 22565758167552 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 22565556841088 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 22565355514624 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 22565154188160 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 22564952861696 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 22564751535232 -> hwthread 43 - OK[0m[1;34m
[0m[1;34m	threadid 22564550208768 -> hwthread 44 - OK[0m[1;34m
[0m[1;34m	threadid 22564348882304 -> hwthread 45 - OK[0m[1;34m
[0m[1;34m	threadid 22564147555840 -> hwthread 46 - OK[0m[1;34m
[0m[1;34m	threadid 22563946229376 -> hwthread 47 - OK[0m[1;34m
[0m[1;34m	threadid 22563744902912 -> hwthread 48 - OK[0m[1;34m
[0m[1;34m	threadid 22563543576448 -> hwthread 49 - OK[0m[1;34m
[0m[1;34m	threadid 22563342249984 -> hwthread 50 - OK[0m[1;34m
[0m[1;34m	threadid 22563140923520 -> hwthread 51 - OK[0m[1;34m
[0m[1;34m	threadid 22562939597056 -> hwthread 52 - OK[0m[1;34m
[0m[1;34m	threadid 22562738270592 -> hwthread 53 - OK[0m[1;34m
[0m[1;34m	threadid 22562536944128 -> hwthread 54 - OK[0m[1;34m
[0m[1;34m	threadid 22562335617664 -> hwthread 55 - OK[0m[1;34m
[0m[1;34m	threadid 22562134291200 -> hwthread 56 - OK[0m[1;34m
[0m[1;34m	threadid 22561932964736 -> hwthread 57 - OK[0m[1;34m
[0m[1;34m	threadid 22561731638272 -> hwthread 58 - OK[0m[1;34m
[0m[1;34m	threadid 22561530311808 -> hwthread 59 - OK[0m[1;34m
[0m[1;34m	threadid 22561328985344 -> hwthread 60 - OK[0m[1;34m
[0m[1;34m	threadid 22561127658880 -> hwthread 61 - OK[0m[1;34m
[0m[1;34m	threadid 22560926332416 -> hwthread 62 - OK[0m[1;34m
[0m[1;34m	threadid 22560725005952 -> hwthread 63 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 22572901062400 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 22572895078144 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 145, m: 145)                                                               	 1.80108   	 700       	 8.29405   	 0         	 0.196566  	 42.1947   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 7250, cols: 145, reductionFactor: 37, colBlockingSize: 12)                 	 1.17105   	 600       	 160.422   	 0         	 4.39514   	 36.4997   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 145, n: 50, r: 145, r2: 145)          	 0.985776  	 600       	 185.557   	 0         	 10.34     	 17.9455   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 145, r: 145, r2: 7250, leftOrthog: 0)      	 0.899859  	 600       	 203.274   	 0         	 17.0469   	 11.9243   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 7250, cols: 95, reductionFactor: 37, colBlockingSize: 12)                  	 0.618388  	 700       	 152.137   	 0         	 6.31891   	 24.0764   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 7250, Xcols: 95, r: 95, streamingCols: 0)                   	 0.242986  	 700       	 188.496   	 0         	 31.8507   	 5.91811   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 145, Qr2: 95)      	 0.164521  	 700       	 0         	 0         	 63.4813   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 145, reductionFactor: 37, colBlockingSize: 12)                 	 0.16163   	 100       	 66.7983   	 0         	 1.89828   	 35.1888   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 95, m: 4750, k: 95) 	 0.153044  	 700       	 392.151   	 0         	 33.3535   	 11.7574   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 95, m: 95)                                                                  	 0.121819  	 809       	 7.59175   	 0         	 1.44349   	 5.25932   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 7250, m: 95)                                                                       	 0.082554  	 700       	 0         	 0         	 93.4419   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 145)                                                                	 0.0750498 	 100       	 3.38109   	 0         	 0.181746  	 18.6034   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 95, reductionFactor: 37, colBlockingSize: 12)                  	 0.074801  	 101       	 62.5767   	 0         	 2.66296   	 23.4989   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r: 145, r2: 145)           	 0.0634112 	 100       	 165.783   	 0         	 9.4119    	 17.6142   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 95, n: 50, r2: 95)                                                                                         	 0.0601424 	 707       	 0         	 0         	 84.8742   	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 145, r: 145, r2: 2500, leftOrthog: 0)      	 0.0597138 	 100       	 176.048   	 0         	 15.1329   	 11.6335   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 145, n: 50, r: 145, r2: 50)           	 0.0580524 	 100       	 181.086   	 0         	 19.5823   	 9.24745   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 95, k: 2500)   	 0.0553793 	 800       	 343.088   	 0         	 42.4418   	 8.08373   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 95, n: 50, r2: 95)                   	 0.0500524 	 700       	 0         	 0         	 154.119   	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 7250, leftOrthog: 0)        	 0.0498903 	 100       	 72.6594   	 0         	 17.5184   	 4.1476    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 4750, k: 95) 	 0.0436154 	 700       	 724.228   	 0         	 89.0419   	 8.13356   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 7250, m: 95)                                                              	 0.0435269 	 700       	 0         	 0         	 177.224   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 2500, m: 95, k: 50)	 0.042554  	 800       	 446.491   	 0         	 55.2333   	 8.08373   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0421909 	 100       	 2.07391   	 0         	 0.143159  	 14.4868   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 7250, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0370603 	 100       	 100.457   	 0         	 7.87904   	 12.7499   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 95, r: 95, streamingCols: 0)                   	 0.0188235 	 101       	 121.062   	 0         	 20.5831   	 5.88162   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 145, reductionFactor: 37, colBlockingSize: 12)                   	 0.0174959 	 100       	 12.3419   	 0         	 1.29287   	 9.54608   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 95)                                                                       	 0.00859981	 101       	 0         	 0         	 44.6289   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 50, Qr2: 95)       	 0.00848609	 100       	 0         	 0         	 68.3471   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 4750, k: 50) 	 0.00835568	 100       	 284.238   	 0         	 45.7174   	 6.21728   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00808182	 109       	 2.24783   	 0         	 0.814618  	 2.75937   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 0, n: 50, r2: 95)                    	 0.00716683	 100       	 0         	 0         	 53.022    	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 95)                                                              	 0.00704855	 101       	 0         	 0         	 54.4509   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4750, cols: 95, reductionFactor: 37, colBlockingSize: 12)                  	 0.00658026	 7         	 93.6716   	 0         	 3.91708   	 23.9136   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 50)           	 0.00510122	 8         	 19.6032   	 0         	 3.16787   	 6.18812   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 95, r1_: 95, n: 50, r2: 95)           	 0.00486449	 7         	 123.376   	 0         	 10.4935   	 11.7574   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.00432431	 101       	 5.99689   	 0         	 0.934253  	 6.41892   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 50, r2: 50)              	 0.0034088 	 100       	 7.33396   	 0         	 1.76015   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 95)                                                                                         	 0.00275953	 101       	 0         	 0         	 139.082   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.00275362	 8         	 37.2973   	 0         	 2.96337   	 12.5861   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 145, r: 50, r2: 50, leftOrthog: 0)         	 0.00274473	 100       	 26.4143   	 0         	 7.79676   	 3.38785   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 95, m: 95, fromLeft: 0)                	 0.00248152	 808       	 0         	 0         	 47.0176   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                   	 0.00207734	 8         	 24.0692   	 0         	 7.74066   	 3.10945   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 4750, Xcols: 95, r: 95, streamingCols: 0)                   	 0.00177761	 7         	 168.812   	 0         	 28.5737   	 5.90796   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 95, m: 50, k: 95)   	 0.0011931 	 100       	 75.6434   	 0         	 12.4214   	 6.08974   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 4750, m: 95)                                                              	 0.00110326	 7         	 0         	 0         	 45.8098   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50, k: 50)     	 0.00109008	 100       	 22.9342   	 0         	 5.5042    	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 95)   	 0.00107442	 100       	 44.2099   	 0         	 8.93506   	 4.94792   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 4750, m: 95)                                                                       	 0.000981936	 7         	 0         	 0         	 51.4697   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                   	 0.000855508	 100       	 0.584448  	 0         	 2.33779   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 95, n: 50, r2: 1)                                                                                          	 0.00084275	 201       	 0         	 0         	 18.1264   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000787276	 201       	 0         	 0         	 10.2124   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 1, Xr2: 50, Qr1: 1, Qr2: 0)          	 0.000637668	 100       	 0         	 0         	 6.27286   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 50, k: 50)  	 0.000627984	 100       	 39.8099   	 0         	 9.55438   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 95, n: 50, r2: 1)                    	 0.000560977	 100       	 0         	 0         	 20.6782   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                          	 0.00054931	 100       	 0         	 0         	 7.28186   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 1, r1low: 0, n: 50, r2: 50)                     	 0.000546959	 100       	 0         	 0         	 7.31316   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                                	 0.000453099	 101       	 0         	 0         	 8.91637   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 95, r1_: 50, n: 50, r2: 95)           	 0.000434251	 1         	 103.915   	 0         	 12.776    	 8.13356   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                            	 0.000418905	 100       	 1.19359   	 0         	 14.3231   	 0.0833333 
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 95, n: 50, r2: 1)                                                                                 	 0.000381609	 101       	 1.25718   	 0         	 20.1148   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000379713	 101       	 0.664976  	 0         	 10.6396   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000335848	 100       	 0.744384  	 0         	 11.9101   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                              	 0.000285046	 8         	 0         	 0         	 56.1313   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 50)                                                                       	 0.000282129	 8         	 0         	 0         	 56.7116   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 95, reductionFactor: 37, colBlockingSize: 12)                    	 0.000105682	 1         	 8.77057   	 0         	 1.04275   	 8.411     
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 50, r: 50, streamingCols: 0)                     	 3.7571e-05	 1         	 3.32703   	 0         	 1.33081   	 2.5       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 95, r: 50, streamingCols: 22)                    	 2.955e-05 	 1         	 4.23012   	 0         	 1.69205   	 2.5       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 95, r1_: 95, n: 50, r2: 1)            	 1.768e-05 	 1         	 51.0464   	 0         	 8.38235   	 6.08974   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 1.036e-05 	 1         	 24.1313   	 0         	 5.79151   	 4.16667   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 0)                	 1.007e-05 	 9         	 0         	 0         	 35.7498   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 95, n: 50, r2: 1)                                                                                   	 9.451e-06 	 1         	 1.00518   	 0         	 4.02074   	 0.25      
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                         	 8.43e-06  	 2         	 0         	 0         	 9.48992   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 8.34e-06  	 1         	 0.59952   	 0         	 2.39808   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 0, m: 4750, k: 50)  	 7.6e-06   	 100       	 0         	 0         	 25000     	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 95)                                                                	 4.73e-06  	 1         	 0         	 0         	 16.0677   	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 95, fromLeft: 0)                	 2e-06     	 1         	 0         	 0         	 38        	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 8.63244   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 8.63239   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                            	 6.81971   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                        	 6.8184    	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 5.62783   	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 2.09419   	 1818      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 1.91832   	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_leftOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                   	 1.81261   	 100       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 1.38788   	 900       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 1.27475   	 918       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 1.11065   	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 1.01221   	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.707516  	 918       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.265732  	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.20729   	 1800      
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.173645  	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.129901  	 918       
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                       	 0.0924263 	 818       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0650813 	 1310      
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0583271 	 1000      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0564694 	 900       
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                              	 0.0524216 	 918       
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                              	 0.0466092 	 20        
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.043182  	 900       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 0.0363963 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 0.0363669 	 2         
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.0186213 	 5273      
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.010428  	 18        
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00761922	 1818      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00409482	 6472      
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.00249359	 818       
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00109717	 302       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000873299	 102       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000418905	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: L, orthoY: L
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m43->44  [0m[1;34m44->45  [0m[1;34m45->46  [0m[1;34m46->47  [0m[1;34m47->48  [0m[1;34m48->49  [0m[1;34m49->50  [0m[1;34m50->51  [0m[1;34m51->52  [0m[1;34m52->53  [0m[1;34m53->54  [0m[1;34m54->55  [0m[1;34m55->56  [0m[1;34m56->57  [0m[1;34m57->58  [0m[1;34m58->59  [0m[1;34m59->60  [0m[1;34m60->61  [0m[1;34m61->62  [0m[1;34m62->63  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 22426908055424 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 22426708600832 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 22426507274368 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 22426305947904 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 22426104621440 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 22425903294976 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 22425701968512 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 22425500642048 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 22425299315584 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 22425097989120 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 22424896662656 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 22424695336192 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 22424494009728 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 22424292683264 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 22424091356800 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 22423890030336 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 22423688703872 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 22423487377408 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 22423286050944 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 22423084724480 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 22422883398016 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 22422682071552 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 22422480745088 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 22422279418624 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 22422078092160 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 22421876765696 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 22421675439232 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 22421474112768 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 22421272786304 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 22421071459840 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 22420870133376 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 22420668806912 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 22420467476352 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 22420266149888 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 22420064823424 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 22419863496960 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 22419662170496 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 22419460844032 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 22419259517568 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 22419058191104 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 22418856864640 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 22418655538176 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 22418454211712 -> hwthread 43 - OK[0m[1;34m
[0m[1;34m	threadid 22418252885248 -> hwthread 44 - OK[0m[1;34m
[0m[1;34m	threadid 22418051558784 -> hwthread 45 - OK[0m[1;34m
[0m[1;34m	threadid 22417850232320 -> hwthread 46 - OK[0m[1;34m
[0m[1;34m	threadid 22417648905856 -> hwthread 47 - OK[0m[1;34m
[0m[1;34m	threadid 22417447579392 -> hwthread 48 - OK[0m[1;34m
[0m[1;34m	threadid 22417246252928 -> hwthread 49 - OK[0m[1;34m
[0m[1;34m	threadid 22417044926464 -> hwthread 50 - OK[0m[1;34m
[0m[1;34m	threadid 22416843600000 -> hwthread 51 - OK[0m[1;34m
[0m[1;34m	threadid 22416642273536 -> hwthread 52 - OK[0m[1;34m
[0m[1;34m	threadid 22416440947072 -> hwthread 53 - OK[0m[1;34m
[0m[1;34m	threadid 22416239620608 -> hwthread 54 - OK[0m[1;34m
[0m[1;34m	threadid 22416038294144 -> hwthread 55 - OK[0m[1;34m
[0m[1;34m	threadid 22415836967680 -> hwthread 56 - OK[0m[1;34m
[0m[1;34m	threadid 22415635641216 -> hwthread 57 - OK[0m[1;34m
[0m[1;34m	threadid 22415434314752 -> hwthread 58 - OK[0m[1;34m
[0m[1;34m	threadid 22415232988288 -> hwthread 59 - OK[0m[1;34m
[0m[1;34m	threadid 22415031661824 -> hwthread 60 - OK[0m[1;34m
[0m[1;34m	threadid 22414830335360 -> hwthread 61 - OK[0m[1;34m
[0m[1;34m	threadid 22414629008896 -> hwthread 62 - OK[0m[1;34m
[0m[1;34m	threadid 22414427682432 -> hwthread 63 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 22426802394880 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 22426795804416 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 146, m: 146)                                                               	 1.80075   	 700       	 8.46838   	 0         	 0.19932   	 42.4863   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 7300, cols: 146, reductionFactor: 37, colBlockingSize: 12)                 	 1.18074   	 600       	 162.42    	 0         	 4.41941   	 36.7515   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 146, n: 50, r: 146, r2: 146)          	 1.02892   	 600       	 181.48    	 0         	 10.0436   	 18.0693   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 146, r: 146, r2: 7300, leftOrthog: 0)      	 0.91251   	 600       	 204.631   	 0         	 17.0433   	 12.0066   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 7300, cols: 96, reductionFactor: 37, colBlockingSize: 12)                  	 0.641937  	 700       	 150.689   	 0         	 6.1939    	 24.3287   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 7300, Xcols: 96, r: 96, streamingCols: 0)                   	 0.23875   	 700       	 197.251   	 0         	 32.9832   	 5.98034   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 146, Qr2: 96)      	 0.158043  	 700       	 0         	 0         	 67.0256   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 146, reductionFactor: 37, colBlockingSize: 12)                 	 0.157944  	 100       	 69.3032   	 0         	 1.95672   	 35.4181   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 96, m: 4800, k: 96) 	 0.152208  	 700       	 406.886   	 0         	 34.2463   	 11.8812   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 96, m: 96)                                                                  	 0.121096  	 809       	 7.88083   	 0         	 1.48279   	 5.31488   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 7300, m: 96)                                                                       	 0.0801846 	 700       	 0         	 0         	 97.8862   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 146)                                                                	 0.0758033 	 100       	 3.37056   	 0         	 0.180995  	 18.6224   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 96, reductionFactor: 37, colBlockingSize: 12)                  	 0.0756328 	 101       	 63.1984   	 0         	 2.66242   	 23.7371   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r: 146, r2: 146)           	 0.067014  	 100       	 159.041   	 0         	 8.96906   	 17.7322   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 146, n: 50, r: 146, r2: 50)           	 0.0627676 	 100       	 169.801   	 0         	 18.3292   	 9.26396   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 96, n: 50, r2: 96)                                                                                         	 0.0614849 	 707       	 0         	 0         	 84.778    	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 146, r: 146, r2: 2500, leftOrthog: 0)      	 0.060713  	 100       	 175.547   	 0         	 14.9903   	 11.7107   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 96, k: 2500)   	 0.0520733 	 800       	 368.711   	 0         	 45.4498   	 8.11249   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 7300, leftOrthog: 0)        	 0.0486268 	 100       	 75.0614   	 0         	 18.097    	 4.14773   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 96, n: 50, r2: 96)                   	 0.0481485 	 700       	 0         	 0         	 163.016   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 2500, m: 96, k: 50)	 0.0475507 	 800       	 403.78    	 0         	 49.7726   	 8.11249   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 4800, k: 96) 	 0.0447006 	 700       	 721.601   	 0         	 88.3962   	 8.16327   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0438216 	 100       	 1.99673   	 0         	 0.137831  	 14.4868   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 7300, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0330745 	 100       	 113.339   	 0         	 8.88901   	 12.7505   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 7300, m: 96)                                                              	 0.0328205 	 700       	 0         	 0         	 239.148   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 96, r: 96, streamingCols: 0)                   	 0.0187218 	 101       	 124.295   	 0         	 20.9148   	 5.94295   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 146, reductionFactor: 37, colBlockingSize: 12)                   	 0.0177683 	 100       	 12.3209   	 0         	 1.2884    	 9.56288   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00833194	 109       	 2.18036   	 0         	 0.790164  	 2.75937   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 50, Qr2: 96)       	 0.00810995	 100       	 0         	 0         	 72.0103   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 96)                                                                       	 0.00695852	 101       	 0         	 0         	 55.736    	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4800, cols: 96, reductionFactor: 37, colBlockingSize: 12)                  	 0.00675806	 7         	 94.1177   	 0         	 3.89474   	 24.1653   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 0, n: 50, r2: 96)                    	 0.00599702	 100       	 0         	 0         	 64.0318   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 4800, k: 50) 	 0.00572647	 100       	 419.106   	 0         	 67.4062   	 6.21762   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 96)                                                              	 0.00553477	 101       	 0         	 0         	 70.0734   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 50)           	 0.00514528	 8         	 19.4353   	 0         	 3.14074   	 6.18812   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 96, r1_: 96, n: 50, r2: 96)           	 0.00495552	 7         	 124.975   	 0         	 10.5187   	 11.8812   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.00398882	 101       	 6.50128   	 0         	 1.01283   	 6.41892   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 96)                                                                                         	 0.00290045	 101       	 0         	 0         	 133.717   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.00272658	 8         	 37.6673   	 0         	 2.99276   	 12.5861   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 146, r: 50, r2: 50, leftOrthog: 0)         	 0.00264725	 100       	 27.5757   	 0         	 8.12918   	 3.39219   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                   	 0.00184984	 8         	 27.0294   	 0         	 8.69267   	 3.10945   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 4800, Xcols: 96, r: 96, streamingCols: 0)                   	 0.00179914	 7         	 172.115   	 0         	 28.8292   	 5.97015   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 96, m: 96, fromLeft: 0)                	 0.00175191	 808       	 0         	 0         	 68.0085   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 96, m: 50, k: 96)   	 0.00118275	 100       	 77.9202   	 0         	 12.727    	 6.12245   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 50, r2: 50)              	 0.00112034	 100       	 22.3146   	 0         	 5.35551   	 4.16667   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 4800, m: 96)                                                              	 0.00107702	 7         	 0         	 0         	 47.9189   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 96)   	 0.00105203	 100       	 45.6262   	 0         	 9.20128   	 4.95868   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50, k: 50)     	 0.00102849	 100       	 24.3074   	 0         	 5.83377   	 4.16667   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 4800, m: 96)                                                                       	 0.00101442	 7         	 0         	 0         	 50.8762   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                   	 0.000891327	 100       	 0.560961  	 0         	 2.24385   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 96, n: 50, r2: 1)                                                                                          	 0.000865018	 201       	 0         	 0         	 17.8456   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000820513	 201       	 0         	 0         	 9.79875   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 50, k: 50)  	 0.000607112	 100       	 41.1786   	 0         	 9.88286   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 96, n: 50, r2: 1)                    	 0.000595795	 100       	 0         	 0         	 19.6041   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 1, r1low: 0, n: 50, r2: 50)                     	 0.000547995	 100       	 0         	 0         	 7.29934   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                          	 0.000529846	 100       	 0         	 0         	 7.54936   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                                	 0.000479383	 101       	 0         	 0         	 8.4275    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 1, Xr2: 50, Qr1: 1, Qr2: 0)          	 0.000460695	 100       	 0         	 0         	 8.68253   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 96, r1_: 50, n: 50, r2: 96)           	 0.000434791	 1         	 105.982   	 0         	 12.9828   	 8.16327   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                            	 0.000423813	 100       	 1.17977   	 0         	 14.1572   	 0.0833333 
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 96, n: 50, r2: 1)                                                                                 	 0.000391582	 101       	 1.23805   	 0         	 19.8089   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000386906	 101       	 0.652613  	 0         	 10.4418   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000322849	 100       	 0.774356  	 0         	 12.3897   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                              	 0.000277427	 8         	 0         	 0         	 57.6728   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 50)                                                                       	 0.000250097	 8         	 0         	 0         	 63.9752   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 96, reductionFactor: 37, colBlockingSize: 12)                    	 0.000106273	 1         	 8.90638   	 0         	 1.05509   	 8.44132   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 50, r: 50, streamingCols: 0)                     	 4.9881e-05	 1         	 2.50596   	 0         	 1.00239   	 2.5       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 96, r: 50, streamingCols: 22)                    	 3.4421e-05	 1         	 3.6315    	 0         	 1.4526    	 2.5       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 96, r1_: 96, n: 50, r2: 1)            	 1.7741e-05	 1         	 51.9475   	 0         	 8.48475   	 6.12245   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 1.133e-05 	 1         	 22.0653   	 0         	 5.29568   	 4.16667   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 0)                	 9.95e-06  	 9         	 0         	 0         	 36.1809   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 96, n: 50, r2: 1)                                                                                   	 8.8e-06   	 1         	 1.09091   	 0         	 4.36364   	 0.25      
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 8.551e-06 	 1         	 0.584727  	 0         	 2.33891   	 0.25      
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                         	 8.15e-06  	 2         	 0         	 0         	 9.81595   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 0, m: 4800, k: 50)  	 7.72e-06  	 100       	 0         	 0         	 24870.5   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 96)                                                                	 4.99e-06  	 1         	 0         	 0         	 15.3908   	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 96, fromLeft: 0)                	 2.03e-06  	 1         	 0         	 0         	 37.8325   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 8.72836   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 8.72831   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                            	 6.93746   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                        	 6.93613   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 5.71257   	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 2.12067   	 1818      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 1.92038   	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_leftOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                   	 1.79076   	 100       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 1.39019   	 900       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 1.27622   	 918       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 1.15982   	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 1.0245    	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.731671  	 918       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.261206  	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.204878  	 1800      
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.166614  	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.129428  	 918       
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                       	 0.0884157 	 818       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0666007 	 1310      
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0552893 	 1000      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0531018 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0481578 	 900       
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                              	 0.0481351 	 20        
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                              	 0.0401941 	 918       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 0.036271  	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 0.0362419 	 2         
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.012214  	 1818      
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.0105647 	 18        
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00389788	 6472      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00325457	 5273      
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.00176389	 818       
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00110134	 302       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000908678	 102       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000423813	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: L, orthoY: L
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m43->44  [0m[1;34m44->45  [0m[1;34m45->46  [0m[1;34m46->47  [0m[1;34m47->48  [0m[1;34m48->49  [0m[1;34m49->50  [0m[1;34m50->51  [0m[1;34m51->52  [0m[1;34m52->53  [0m[1;34m53->54  [0m[1;34m54->55  [0m[1;34m55->56  [0m[1;34m56->57  [0m[1;34m57->58  [0m[1;34m58->59  [0m[1;34m59->60  [0m[1;34m60->61  [0m[1;34m61->62  [0m[1;34m62->63  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 23335844595584 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 23335631054848 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 23335429728384 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 23335228401920 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 23335027075456 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 23334825748992 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 23334624422528 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 23334423096064 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 23334221769600 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 23334020443136 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 23333819116672 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 23333617790208 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 23333416463744 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 23333215137280 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 23333013810816 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 23332812484352 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 23332611157888 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 23332409831424 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 23332208504960 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 23332007178496 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 23331805852032 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 23331604525568 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 23331403199104 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 23331201872640 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 23331000546176 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 23330799219712 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 23330597893248 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 23330396566784 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 23330195240320 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 23329993913856 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 23329792587392 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 23329591260928 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 23329389930368 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 23329188603904 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 23328987277440 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 23328785950976 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 23328584624512 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 23328383298048 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 23328181971584 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 23327980645120 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 23327779318656 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 23327577992192 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 23327376665728 -> hwthread 43 - OK[0m[1;34m
[0m[1;34m	threadid 23327175339264 -> hwthread 44 - OK[0m[1;34m
[0m[1;34m	threadid 23326974012800 -> hwthread 45 - OK[0m[1;34m
[0m[1;34m	threadid 23326772686336 -> hwthread 46 - OK[0m[1;34m
[0m[1;34m	threadid 23326571359872 -> hwthread 47 - OK[0m[1;34m
[0m[1;34m	threadid 23326370033408 -> hwthread 48 - OK[0m[1;34m
[0m[1;34m	threadid 23326168706944 -> hwthread 49 - OK[0m[1;34m
[0m[1;34m	threadid 23325967380480 -> hwthread 50 - OK[0m[1;34m
[0m[1;34m	threadid 23325766054016 -> hwthread 51 - OK[0m[1;34m
[0m[1;34m	threadid 23325564727552 -> hwthread 52 - OK[0m[1;34m
[0m[1;34m	threadid 23325363401088 -> hwthread 53 - OK[0m[1;34m
[0m[1;34m	threadid 23325162074624 -> hwthread 54 - OK[0m[1;34m
[0m[1;34m	threadid 23324960748160 -> hwthread 55 - OK[0m[1;34m
[0m[1;34m	threadid 23324759421696 -> hwthread 56 - OK[0m[1;34m
[0m[1;34m	threadid 23324558095232 -> hwthread 57 - OK[0m[1;34m
[0m[1;34m	threadid 23324356768768 -> hwthread 58 - OK[0m[1;34m
[0m[1;34m	threadid 23324155442304 -> hwthread 59 - OK[0m[1;34m
[0m[1;34m	threadid 23323954115840 -> hwthread 60 - OK[0m[1;34m
[0m[1;34m	threadid 23323752789376 -> hwthread 61 - OK[0m[1;34m
[0m[1;34m	threadid 23323551462912 -> hwthread 62 - OK[0m[1;34m
[0m[1;34m	threadid 23323350136448 -> hwthread 63 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 23335738935040 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 23335732344576 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 147, m: 147)                                                               	 1.86171   	 700       	 8.36058   	 0         	 0.195441  	 42.778    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 7350, cols: 147, reductionFactor: 37, colBlockingSize: 12)                 	 1.21293   	 600       	 161.379   	 0         	 4.36123   	 37.0032   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 147, n: 50, r: 147, r2: 147)          	 1.01324   	 600       	 188.101   	 0         	 10.3392   	 18.1931   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 147, r: 147, r2: 7350, leftOrthog: 0)      	 0.911949  	 600       	 208.993   	 0         	 17.2882   	 12.0888   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 7350, cols: 97, reductionFactor: 37, colBlockingSize: 12)                  	 0.663278  	 700       	 149.915   	 0         	 6.09881   	 24.581    
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 7350, Xcols: 97, r: 97, streamingCols: 0)                   	 0.24314   	 700       	 199.1     	 0         	 32.9496   	 6.04256   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 147, Qr2: 97)      	 0.178989  	 700       	 0         	 0         	 60.0208   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 147, reductionFactor: 37, colBlockingSize: 12)                 	 0.164933  	 100       	 67.279    	 0         	 1.88736   	 35.6472   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 97, m: 97)                                                                  	 0.127949  	 809       	 7.69424   	 0         	 1.43271   	 5.37043   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 97, m: 4850, k: 97) 	 0.0894755 	 700       	 714.018   	 0         	 59.477    	 12.005    
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 7350, m: 97)                                                                       	 0.0839559 	 700       	 0         	 0         	 95.11     	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 97, reductionFactor: 37, colBlockingSize: 12)                  	 0.0786066 	 101       	 62.0808   	 0         	 2.58938   	 23.9752   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 147)                                                                	 0.0764756 	 100       	 3.36382   	 0         	 0.18045   	 18.6413   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r: 147, r2: 147)           	 0.0667482 	 100       	 161.869   	 0         	 9.06821   	 17.8502   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 147, r: 147, r2: 2500, leftOrthog: 0)      	 0.065543  	 100       	 164.846   	 0         	 13.9843   	 11.7879   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 97, n: 50, r2: 97)                                                                                         	 0.0652184 	 707       	 0         	 0         	 81.5986   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 147, n: 50, r: 147, r2: 50)           	 0.0643219 	 100       	 167.976   	 0         	 18.1002   	 9.2803    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 97, k: 2500)   	 0.052022  	 800       	 372.919   	 0         	 45.8084   	 8.14086   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 7350, leftOrthog: 0)        	 0.0516898 	 100       	 71.0972   	 0         	 17.1407   	 4.14786   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 4850, k: 97) 	 0.0460984 	 700       	 714.373   	 0         	 87.1977   	 8.19257   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0436479 	 100       	 2.00468   	 0         	 0.13838   	 14.4868   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 7350, m: 97)                                                              	 0.0427656 	 700       	 0         	 0         	 186.716   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 2500, m: 97, k: 50)	 0.0403485 	 800       	 480.811   	 0         	 59.0615   	 8.14086   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 7350, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.034464  	 100       	 109.515   	 0         	 8.58867   	 12.7511   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 97, n: 50, r2: 97)                   	 0.0321932 	 700       	 0         	 0         	 248.035   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 97, r: 97, streamingCols: 0)                   	 0.018733  	 101       	 126.823   	 0         	 21.1222   	 6.00426   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 147, reductionFactor: 37, colBlockingSize: 12)                   	 0.0180413 	 100       	 12.3012   	 0         	 1.28412   	 9.5795    
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00825602	 109       	 2.20041   	 0         	 0.79743   	 2.75937   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 97)                                                                       	 0.00824263	 101       	 0         	 0         	 47.5431   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 50, Qr2: 97)       	 0.00806351	 100       	 0         	 0         	 72.9211   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 4850, k: 50) 	 0.00731472	 100       	 331.523   	 0         	 53.3172   	 6.21795   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4850, cols: 97, reductionFactor: 37, colBlockingSize: 12)                  	 0.00694234	 7         	 94.5126   	 0         	 3.87076   	 24.4171   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 97)                                                              	 0.00647572	 101       	 0         	 0         	 60.5153   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 0, n: 50, r2: 97)                    	 0.00632438	 100       	 0         	 0         	 61.3499   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 97, r1_: 97, n: 50, r2: 97)           	 0.005163  	 7         	 123.74    	 0         	 10.3074   	 12.005    
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 50)           	 0.00514474	 8         	 19.4373   	 0         	 3.14107   	 6.18812   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.00393411	 101       	 6.5917    	 0         	 1.02692   	 6.41892   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 97)                                                                                         	 0.00308047	 101       	 0         	 0         	 127.214   	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 147, r: 50, r2: 50, leftOrthog: 0)         	 0.00292056	 100       	 25.1664   	 0         	 7.40953   	 3.39649   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 97, m: 97, fromLeft: 0)                	 0.00262564	 808       	 0         	 0         	 46.3276   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0025947 	 8         	 39.5817   	 0         	 3.14487   	 12.5861   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                   	 0.00204051	 8         	 24.5037   	 0         	 7.88038   	 3.10945   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 4850, Xcols: 97, r: 97, streamingCols: 0)                   	 0.00181695	 7         	 175.809   	 0         	 29.1444   	 6.03234   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 97, m: 50, k: 97)   	 0.00130799	 100       	 71.9351   	 0         	 11.6876   	 6.15482   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 50, r2: 50)              	 0.0011667 	 100       	 21.4279   	 0         	 5.1427    	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 97)   	 0.00111752	 100       	 43.3995   	 0         	 8.73359   	 4.96926   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 97, n: 50, r2: 1)                                                                                          	 0.00109488	 201       	 0         	 0         	 14.246    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50, k: 50)     	 0.00105997	 100       	 23.5855   	 0         	 5.66051   	 4.16667   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 4850, m: 97)                                                                       	 0.000989797	 7         	 0         	 0         	 53.2335   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 4850, m: 97)                                                              	 0.000968446	 7         	 0         	 0         	 54.4072   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000798949	 201       	 0         	 0         	 10.0632   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                   	 0.000761731	 100       	 0.6564    	 0         	 2.6256    	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 50, k: 50)  	 0.000612921	 100       	 40.7883   	 0         	 9.78919   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 1, r1low: 0, n: 50, r2: 50)                     	 0.000594754	 100       	 0         	 0         	 6.72547   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 97, n: 50, r2: 1)                    	 0.000562606	 100       	 0         	 0         	 20.9027   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                          	 0.000519221	 100       	 0         	 0         	 7.70385   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 97, r1_: 50, n: 50, r2: 97)           	 0.000459812	 1         	 102.314   	 0         	 12.4886   	 8.19257   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 1, Xr2: 50, Qr1: 1, Qr2: 0)          	 0.000448481	 100       	 0         	 0         	 8.919     	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                                	 0.000440958	 101       	 0         	 0         	 9.16187   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                            	 0.000431719	 100       	 1.15816   	 0         	 13.8979   	 0.0833333 
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000367119	 101       	 0.687788  	 0         	 11.0046   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 97, n: 50, r2: 1)                                                                                 	 0.000365724	 101       	 1.3394    	 0         	 21.4304   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000345725	 100       	 0.723118  	 0         	 11.5699   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 50)                                                                       	 0.000270457	 8         	 0         	 0         	 59.1591   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                              	 0.000248045	 8         	 0         	 0         	 64.5044   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 97, reductionFactor: 37, colBlockingSize: 12)                    	 0.000105093	 1         	 9.195     	 0         	 1.08544   	 8.47123   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 50, r: 50, streamingCols: 0)                     	 3.3181e-05	 1         	 3.76722   	 0         	 1.50689   	 2.5       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 97, r: 50, streamingCols: 25)                    	 2.7751e-05	 1         	 4.50434   	 0         	 1.80174   	 2.5       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 97, r1_: 97, n: 50, r2: 1)            	 2.0201e-05	 1         	 46.5769   	 0         	 7.56755   	 6.15482   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 0)                	 9.89e-06  	 9         	 0         	 0         	 36.4004   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 9.4e-06   	 1         	 26.5957   	 0         	 6.38298   	 4.16667   
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 8.551e-06 	 1         	 0.584727  	 0         	 2.33891   	 0.25      
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                         	 8.54e-06  	 2         	 0         	 0         	 9.36768   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 97, n: 50, r2: 1)                                                                                   	 8.03e-06  	 1         	 1.20797   	 0         	 4.83188   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 0, m: 4850, k: 50)  	 7.641e-06 	 100       	 0         	 0         	 25389.3   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 97)                                                                	 5.03e-06  	 1         	 0         	 0         	 15.4274   	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 97, fromLeft: 0)                	 1.96e-06  	 1         	 0         	 0         	 39.5918   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 8.8077    	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 8.80764   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                            	 7.02479   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                        	 7.02356   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 5.80754   	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 2.18583   	 1818      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 1.98183   	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_leftOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                   	 1.78278   	 100       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 1.43107   	 900       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 1.32728   	 918       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 1.14547   	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 1.0321    	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.756036  	 918       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.265792  	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.187501  	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.145322  	 1800      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.136205  	 918       
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                       	 0.0934673 	 818       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.070712  	 1310      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0530819 	 900       
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                              	 0.0509038 	 918       
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                              	 0.0486657 	 20        
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0409614 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0396749 	 1000      
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 0.0368154 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 0.036788  	 2         
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.0121762 	 5273      
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.0107972 	 18        
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00584674	 1818      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00405076	 6472      
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.00263749	 818       
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00107857	 302       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000778312	 102       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000431719	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: L, orthoY: L
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m43->44  [0m[1;34m44->45  [0m[1;34m45->46  [0m[1;34m46->47  [0m[1;34m47->48  [0m[1;34m48->49  [0m[1;34m49->50  [0m[1;34m50->51  [0m[1;34m51->52  [0m[1;34m52->53  [0m[1;34m53->54  [0m[1;34m54->55  [0m[1;34m55->56  [0m[1;34m56->57  [0m[1;34m57->58  [0m[1;34m58->59  [0m[1;34m59->60  [0m[1;34m60->61  [0m[1;34m61->62  [0m[1;34m62->63  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 23030562449280 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 23030352832512 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 23030151506048 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 23029950179584 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 23029748853120 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 23029547526656 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 23029346200192 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 23029144873728 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 23028943547264 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 23028742220800 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 23028540894336 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 23028339567872 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 23028138241408 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 23027936914944 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 23027735588480 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 23027534262016 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 23027332935552 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 23027131609088 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 23026930282624 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 23026728956160 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 23026527629696 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 23026326303232 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 23026124976768 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 23025923650304 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 23025722323840 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 23025520997376 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 23025319670912 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 23025118344448 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 23024917017984 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 23024715691520 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 23024514365056 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 23024313038592 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 23024111708032 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 23023910381568 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 23023709055104 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 23023507728640 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 23023306402176 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 23023105075712 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 23022903749248 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 23022702422784 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 23022501096320 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 23022299769856 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 23022098443392 -> hwthread 43 - OK[0m[1;34m
[0m[1;34m	threadid 23021897116928 -> hwthread 44 - OK[0m[1;34m
[0m[1;34m	threadid 23021695790464 -> hwthread 45 - OK[0m[1;34m
[0m[1;34m	threadid 23021494464000 -> hwthread 46 - OK[0m[1;34m
[0m[1;34m	threadid 23021293137536 -> hwthread 47 - OK[0m[1;34m
[0m[1;34m	threadid 23021091811072 -> hwthread 48 - OK[0m[1;34m
[0m[1;34m	threadid 23020890484608 -> hwthread 49 - OK[0m[1;34m
[0m[1;34m	threadid 23020689158144 -> hwthread 50 - OK[0m[1;34m
[0m[1;34m	threadid 23020487831680 -> hwthread 51 - OK[0m[1;34m
[0m[1;34m	threadid 23020286505216 -> hwthread 52 - OK[0m[1;34m
[0m[1;34m	threadid 23020085178752 -> hwthread 53 - OK[0m[1;34m
[0m[1;34m	threadid 23019883852288 -> hwthread 54 - OK[0m[1;34m
[0m[1;34m	threadid 23019682525824 -> hwthread 55 - OK[0m[1;34m
[0m[1;34m	threadid 23019481199360 -> hwthread 56 - OK[0m[1;34m
[0m[1;34m	threadid 23019279872896 -> hwthread 57 - OK[0m[1;34m
[0m[1;34m	threadid 23019078546432 -> hwthread 58 - OK[0m[1;34m
[0m[1;34m	threadid 23018877219968 -> hwthread 59 - OK[0m[1;34m
[0m[1;34m	threadid 23018675893504 -> hwthread 60 - OK[0m[1;34m
[0m[1;34m	threadid 23018474567040 -> hwthread 61 - OK[0m[1;34m
[0m[1;34m	threadid 23018273240576 -> hwthread 62 - OK[0m[1;34m
[0m[1;34m	threadid 23018071914112 -> hwthread 63 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 23030456788736 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 23030450198272 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 148, m: 148)                                                               	 1.81765   	 700       	 8.73918   	 0         	 0.202908  	 43.0697   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 7400, cols: 148, reductionFactor: 37, colBlockingSize: 12)                 	 1.23026   	 600       	 162.376   	 0         	 4.35852   	 37.2549   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 148, n: 50, r: 148, r2: 148)          	 1.05118   	 600       	 185.036   	 0         	 10.102    	 18.3168   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 148, r: 148, r2: 7400, leftOrthog: 0)      	 0.973109  	 600       	 199.883   	 0         	 16.4228   	 12.1711   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 7400, cols: 98, reductionFactor: 37, colBlockingSize: 12)                  	 0.676572  	 700       	 151.036   	 0         	 6.08199   	 24.8333   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 7400, Xcols: 98, r: 98, streamingCols: 0)                   	 0.246881  	 700       	 201.509   	 0         	 33.0084   	 6.10479   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 148, Qr2: 98)      	 0.172319  	 700       	 0         	 0         	 63.2213   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 148, reductionFactor: 37, colBlockingSize: 12)                 	 0.167704  	 100       	 67.0705   	 0         	 1.8695    	 35.8761   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 98, m: 98)                                                                  	 0.127366  	 809       	 7.97098   	 0         	 1.46904   	 5.42599   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 98, m: 4900, k: 98) 	 0.0875162 	 700       	 752.815   	 0         	 62.0688   	 12.1287   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 98, reductionFactor: 37, colBlockingSize: 12)                  	 0.0816327 	 101       	 61.0185   	 0         	 2.52007   	 24.213    
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 7400, m: 98)                                                                       	 0.0806564 	 700       	 0         	 0         	 100.702   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 148)                                                                	 0.0774573 	 100       	 3.34378   	 0         	 0.179196  	 18.6599   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r: 148, r2: 148)           	 0.0659822 	 100       	 165.984   	 0         	 9.23769   	 17.9681   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 7400, leftOrthog: 0)        	 0.0633995 	 100       	 58.3601   	 0         	 14.0695   	 4.14798   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 148, n: 50, r: 148, r2: 50)           	 0.0618285 	 100       	 177.135   	 0         	 19.054    	 9.29648   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 148, r: 148, r2: 2500, leftOrthog: 0)      	 0.0610513 	 100       	 179.39    	 0         	 15.1192   	 11.8651   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 98, n: 50, r2: 98)                                                                                         	 0.0597177 	 707       	 0         	 0         	 90.9617   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 7400, m: 98)                                                              	 0.0531882 	 700       	 0         	 0         	 152.707   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 98, k: 2500)   	 0.050736  	 800       	 386.314   	 0         	 47.2911   	 8.16885   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 4900, k: 98) 	 0.0461457 	 700       	 728.431   	 0         	 88.601    	 8.22148   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0436401 	 100       	 2.00504   	 0         	 0.138405  	 14.4868   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 2500, m: 98, k: 50)	 0.0393841 	 800       	 497.663   	 0         	 60.9221   	 8.16885   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 7400, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0333303 	 100       	 114.01    	 0         	 8.94082   	 12.7517   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 98, n: 50, r2: 98)                   	 0.0256872 	 700       	 0         	 0         	 316.198   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 98, r: 98, streamingCols: 0)                   	 0.0193131 	 101       	 125.563   	 0         	 20.701    	 6.06556   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 148, reductionFactor: 37, colBlockingSize: 12)                   	 0.0182814 	 100       	 12.3054   	 0         	 1.28235   	 9.59596   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 50)           	 0.0174067 	 8         	 5.7449    	 0         	 0.928376  	 6.18812   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00822631	 109       	 2.20835   	 0         	 0.80031   	 2.75937   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 50, Qr2: 98)       	 0.00799459	 100       	 0         	 0         	 74.0501   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4900, cols: 98, reductionFactor: 37, colBlockingSize: 12)                  	 0.00732368	 7         	 92.3909   	 0         	 3.74525   	 24.6688   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 98)                                                                       	 0.006548  	 101       	 0         	 0         	 60.4642   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 4900, k: 50) 	 0.0060138 	 100       	 407.396   	 0         	 65.5159   	 6.21827   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 0, n: 50, r2: 98)                    	 0.00597724	 100       	 0         	 0         	 65.5821   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 98)                                                              	 0.00564847	 101       	 0         	 0         	 70.0933   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 98, r1_: 98, n: 50, r2: 98)           	 0.00534359	 7         	 123.294   	 0         	 10.1655   	 12.1287   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.00447289	 101       	 5.79769   	 0         	 0.903219  	 6.41892   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 98)                                                                                         	 0.00288422	 101       	 0         	 0         	 137.271   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.00272998	 8         	 37.6203   	 0         	 2.98904   	 12.5861   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 148, r: 50, r2: 50, leftOrthog: 0)         	 0.00268769	 100       	 27.533    	 0         	 8.09618   	 3.40074   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                   	 0.00241044	 8         	 20.7431   	 0         	 6.67098   	 3.10945   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 98, m: 98, fromLeft: 0)                	 0.00233934	 808       	 0         	 0         	 53.0749   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 4900, Xcols: 98, r: 98, streamingCols: 0)                   	 0.00188688	 7         	 174.583   	 0         	 28.6459   	 6.09453   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 98, m: 50, k: 98)   	 0.00133755	 100       	 71.8031   	 0         	 11.6057   	 6.18687   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 4900, m: 98)                                                              	 0.00124156	 7         	 0         	 0         	 43.3183   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 50, r2: 50)              	 0.00111496	 100       	 22.4224   	 0         	 5.38137   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50, k: 50)     	 0.00109204	 100       	 22.8929   	 0         	 5.4943    	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 98)   	 0.00109062	 100       	 44.9286   	 0         	 9.0224    	 4.97967   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 4900, m: 98)                                                                       	 0.00100322	 7         	 0         	 0         	 53.6095   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 98, n: 50, r2: 1)                                                                                          	 0.000861498	 201       	 0         	 0         	 18.2919   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000814599	 201       	 0         	 0         	 9.86989   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                   	 0.000808887	 100       	 0.618133  	 0         	 2.47253   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 50, k: 50)  	 0.000630045	 100       	 39.6797   	 0         	 9.52313   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 98, n: 50, r2: 1)                    	 0.000559554	 100       	 0         	 0         	 21.1597   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 1, r1low: 0, n: 50, r2: 50)                     	 0.0005559 	 100       	 0         	 0         	 7.19554   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                          	 0.000515458	 100       	 0         	 0         	 7.76009   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                            	 0.00045411	 100       	 1.10105   	 0         	 13.2127   	 0.0833333 
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                                	 0.000451798	 101       	 0         	 0         	 8.94205   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 98, r1_: 50, n: 50, r2: 98)           	 0.000450821	 1         	 106.517   	 0         	 12.9559   	 8.22148   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 1, Xr2: 50, Qr1: 1, Qr2: 0)          	 0.000445283	 100       	 0         	 0         	 8.98305   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000401143	 101       	 0.629451  	 0         	 10.0712   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 98, n: 50, r2: 1)                                                                                 	 0.00037328	 101       	 1.32581   	 0         	 21.213    	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000346902	 100       	 0.720665  	 0         	 11.5306   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 50)                                                                       	 0.000276157	 8         	 0         	 0         	 57.9381   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                              	 0.000219304	 8         	 0         	 0         	 72.9581   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 98, reductionFactor: 37, colBlockingSize: 12)                    	 0.000111583	 1         	 8.83967   	 0         	 1.03987   	 8.50073   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 50, r: 50, streamingCols: 0)                     	 3.16e-05  	 1         	 3.9557    	 0         	 1.58228   	 2.5       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 98, r: 50, streamingCols: 26)                    	 2.8931e-05	 1         	 4.32062   	 0         	 1.72825   	 2.5       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 98, r1_: 98, n: 50, r2: 1)            	 1.9241e-05	 1         	 49.9142   	 0         	 8.06777   	 6.18687   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 1.046e-05 	 1         	 23.9006   	 0         	 5.73614   	 4.16667   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 0)                	 9.811e-06 	 9         	 0         	 0         	 36.6935   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                         	 8.541e-06 	 2         	 0         	 0         	 9.36658   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 0, m: 4900, k: 50)  	 8.263e-06 	 100       	 0         	 0         	 23720.2   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 98, n: 50, r2: 1)                                                                                   	 7.61e-06  	 1         	 1.28778   	 0         	 5.15112   	 0.25      
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 7.36e-06  	 1         	 0.679348  	 0         	 2.71739   	 0.25      
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 98)                                                                	 5.22e-06  	 1         	 0         	 0         	 15.0192   	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 98, fromLeft: 0)                	 1.9e-06   	 1         	 0         	 0         	 41.2632   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 8.95451   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 8.95445   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                            	 7.16137   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                        	 7.16009   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 5.92748   	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 2.22242   	 1818      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 1.93875   	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_leftOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                   	 1.79299   	 100       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 1.45027   	 900       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 1.35729   	 918       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 1.18011   	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 1.10025   	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.773355  	 918       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.270552  	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.180759  	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.142112  	 1800      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.135592  	 918       
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                       	 0.0884924 	 818       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0647935 	 1310      
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                              	 0.0607546 	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.051828  	 900       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 0.0506847 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 0.0506584 	 2         
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                              	 0.0497542 	 20        
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0400141 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0327799 	 1000      
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.0232308 	 18        
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.0115999 	 1818      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00423358	 6472      
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.00235106	 818       
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00233576	 5273      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00112132	 302       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000823857	 102       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.00045411	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: L, orthoY: L
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m43->44  [0m[1;34m44->45  [0m[1;34m45->46  [0m[1;34m46->47  [0m[1;34m47->48  [0m[1;34m48->49  [0m[1;34m49->50  [0m[1;34m50->51  [0m[1;34m51->52  [0m[1;34m52->53  [0m[1;34m53->54  [0m[1;34m54->55  [0m[1;34m55->56  [0m[1;34m56->57  [0m[1;34m57->58  [0m[1;34m58->59  [0m[1;34m59->60  [0m[1;34m60->61  [0m[1;34m61->62  [0m[1;34m62->63  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 23409896298368 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 23409719240704 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 23409517914240 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 23409316587776 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 23409115261312 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 23408913934848 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 23408712608384 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 23408511281920 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 23408309955456 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 23408108628992 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 23407907302528 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 23407705976064 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 23407504649600 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 23407303323136 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 23407101996672 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 23406900670208 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 23406699343744 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 23406498017280 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 23406296690816 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 23406095364352 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 23405894037888 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 23405692711424 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 23405491384960 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 23405290058496 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 23405088732032 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 23404887405568 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 23404686079104 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 23404484752640 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 23404283426176 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 23404082099712 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 23403880773248 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 23403679446784 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 23403478116224 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 23403276789760 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 23403075463296 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 23402874136832 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 23402672810368 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 23402471483904 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 23402270157440 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 23402068830976 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 23401867504512 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 23401666178048 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 23401464851584 -> hwthread 43 - OK[0m[1;34m
[0m[1;34m	threadid 23401263525120 -> hwthread 44 - OK[0m[1;34m
[0m[1;34m	threadid 23401062198656 -> hwthread 45 - OK[0m[1;34m
[0m[1;34m	threadid 23400860872192 -> hwthread 46 - OK[0m[1;34m
[0m[1;34m	threadid 23400659545728 -> hwthread 47 - OK[0m[1;34m
[0m[1;34m	threadid 23400458219264 -> hwthread 48 - OK[0m[1;34m
[0m[1;34m	threadid 23400256892800 -> hwthread 49 - OK[0m[1;34m
[0m[1;34m	threadid 23400055566336 -> hwthread 50 - OK[0m[1;34m
[0m[1;34m	threadid 23399854239872 -> hwthread 51 - OK[0m[1;34m
[0m[1;34m	threadid 23399652913408 -> hwthread 52 - OK[0m[1;34m
[0m[1;34m	threadid 23399451586944 -> hwthread 53 - OK[0m[1;34m
[0m[1;34m	threadid 23399250260480 -> hwthread 54 - OK[0m[1;34m
[0m[1;34m	threadid 23399048934016 -> hwthread 55 - OK[0m[1;34m
[0m[1;34m	threadid 23398847607552 -> hwthread 56 - OK[0m[1;34m
[0m[1;34m	threadid 23398646281088 -> hwthread 57 - OK[0m[1;34m
[0m[1;34m	threadid 23398444954624 -> hwthread 58 - OK[0m[1;34m
[0m[1;34m	threadid 23398243628160 -> hwthread 59 - OK[0m[1;34m
[0m[1;34m	threadid 23398042301696 -> hwthread 60 - OK[0m[1;34m
[0m[1;34m	threadid 23397840975232 -> hwthread 61 - OK[0m[1;34m
[0m[1;34m	threadid 23397639648768 -> hwthread 62 - OK[0m[1;34m
[0m[1;34m	threadid 23397438322304 -> hwthread 63 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 23409790637824 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 23409612031744 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 149, m: 149)                                                               	 1.90646   	 700       	 8.50213   	 0         	 0.196076  	 43.3613   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 7450, cols: 149, reductionFactor: 37, colBlockingSize: 12)                 	 1.24005   	 600       	 164.381   	 0         	 4.38273   	 37.5066   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 149, n: 50, r: 149, r2: 149)          	 1.04161   	 600       	 190.548   	 0         	 10.3331   	 18.4406   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 149, r: 149, r2: 7450, leftOrthog: 0)      	 0.948978  	 600       	 209.148   	 0         	 17.0687   	 12.2533   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 7450, cols: 99, reductionFactor: 37, colBlockingSize: 12)                  	 0.68497   	 700       	 153.273   	 0         	 6.11      	 25.0856   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 7450, Xcols: 99, r: 99, streamingCols: 0)                   	 0.250777  	 700       	 203.816   	 0         	 33.0493   	 6.16701   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 149, Qr2: 99)      	 0.179533  	 700       	 0         	 0         	 61.5294   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 149, reductionFactor: 37, colBlockingSize: 12)                 	 0.167945  	 100       	 67.8825   	 0         	 1.88015   	 36.1049   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 99, m: 99)                                                                  	 0.133642  	 809       	 7.83161   	 0         	 1.42872   	 5.48154   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 99, m: 4950, k: 99) 	 0.0901407 	 700       	 753.499   	 0         	 61.4977   	 12.2525   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 7450, m: 99)                                                                       	 0.0867154 	 700       	 0         	 0         	 95.2606   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 99, reductionFactor: 37, colBlockingSize: 12)                  	 0.0858476 	 101       	 59.2128   	 0         	 2.42172   	 24.4507   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 149)                                                                	 0.0758052 	 100       	 3.43974   	 0         	 0.184156  	 18.6784   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r: 149, r2: 149)           	 0.0672051 	 100       	 165.173   	 0         	 9.13265   	 18.086    
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 149, n: 50, r: 149, r2: 50)           	 0.0665105 	 100       	 166.898   	 0         	 17.922    	 9.3125    
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 99, n: 50, r2: 99)                                                                                         	 0.0661615 	 707       	 0         	 0         	 83.7866   	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 149, r: 149, r2: 2500, leftOrthog: 0)      	 0.0650989 	 100       	 170.517   	 0         	 14.2786   	 11.9422   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 7450, leftOrthog: 0)        	 0.0538376 	 100       	 69.1896   	 0         	 16.6798   	 4.14811   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 99, k: 2500)   	 0.0502894 	 800       	 393.721   	 0         	 48.0356   	 8.19645   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 4950, k: 99) 	 0.0468922 	 700       	 731.539   	 0         	 88.6714   	 8.25      
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 7450, m: 99)                                                              	 0.0425758 	 700       	 0         	 0         	 194.02    	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0422487 	 100       	 2.07107   	 0         	 0.142963  	 14.4868   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 2500, m: 99, k: 50)	 0.0402819 	 800       	 491.536   	 0         	 59.9693   	 8.19645   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 99, n: 50, r2: 99)                   	 0.0351469 	 700       	 0         	 0         	 235.029   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 7450, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0344865 	 100       	 110.933   	 0         	 8.69907   	 12.7523   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 99, r: 99, streamingCols: 0)                   	 0.0195945 	 101       	 126.298   	 0         	 20.6139   	 6.12684   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 149, reductionFactor: 37, colBlockingSize: 12)                   	 0.0187974 	 100       	 12.1299   	 0         	 1.26192   	 9.61225   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 4950, k: 50) 	 0.0095263 	 100       	 259.807   	 0         	 41.7791   	 6.21859   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 99)                                                                       	 0.00869353	 101       	 0         	 0         	 46.0066   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 50, Qr2: 99)       	 0.00843165	 100       	 0         	 0         	 70.686    	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00827599	 109       	 2.1951    	 0         	 0.795506  	 2.75937   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 0, n: 50, r2: 99)                    	 0.00754681	 100       	 0         	 0         	 52.4725   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4950, cols: 99, reductionFactor: 37, colBlockingSize: 12)                  	 0.0071469 	 7         	 97.604    	 0         	 3.91661   	 24.9205   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 99)                                                              	 0.00712511	 101       	 0         	 0         	 56.1339   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 99, r1_: 99, n: 50, r2: 99)           	 0.00539943	 7         	 125.793   	 0         	 10.2667   	 12.2525   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 50)           	 0.00494556	 8         	 20.2202   	 0         	 3.26758   	 6.18812   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.00378687	 101       	 6.84799   	 0         	 1.06684   	 6.41892   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 149, r: 50, r2: 50, leftOrthog: 0)         	 0.00325418	 100       	 22.8936   	 0         	 6.72365   	 3.40494   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 99)                                                                                         	 0.00294936	 101       	 0         	 0         	 135.609   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.00272869	 8         	 37.6381   	 0         	 2.99045   	 12.5861   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 99, m: 99, fromLeft: 0)                	 0.00267522	 808       	 0         	 0         	 47.3633   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                   	 0.00223614	 8         	 22.36     	 0         	 7.19098   	 3.10945   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 4950, Xcols: 99, r: 99, streamingCols: 0)                   	 0.00190318	 7         	 178.441   	 0         	 28.9831   	 6.15672   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 99, m: 50, k: 99)   	 0.00133436	 100       	 73.4511   	 0         	 11.8115   	 6.21859   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 50, r2: 50)              	 0.00115765	 100       	 21.5955   	 0         	 5.18291   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 99)   	 0.00109919	 100       	 45.0332   	 0         	 9.02484   	 4.98992   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 4950, m: 99)                                                              	 0.00109387	 7         	 0         	 0         	 50.1757   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50, k: 50)     	 0.00106739	 100       	 23.4215   	 0         	 5.62117   	 4.16667   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 4950, m: 99)                                                                       	 0.00103414	 7         	 0         	 0         	 53.0734   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                   	 0.000903139	 100       	 0.553625  	 0         	 2.2145    	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 99, n: 50, r2: 1)                                                                                          	 0.00088566	 201       	 0         	 0         	 17.9744   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000810468	 201       	 0         	 0         	 9.92019   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 50, k: 50)  	 0.000599564	 100       	 41.697    	 0         	 10.0073   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 99, n: 50, r2: 1)                    	 0.000595005	 100       	 0         	 0         	 20.0334   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                          	 0.000572312	 100       	 0         	 0         	 6.98919   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 1, r1low: 0, n: 50, r2: 50)                     	 0.000514653	 100       	 0         	 0         	 7.77223   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                                	 0.000460836	 101       	 0         	 0         	 8.76668   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 1, Xr2: 50, Qr1: 1, Qr2: 0)          	 0.000446183	 100       	 0         	 0         	 8.96493   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                            	 0.000445348	 100       	 1.12272   	 0         	 13.4726   	 0.0833333 
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 99, r1_: 50, n: 50, r2: 99)           	 0.000435801	 1         	 112.448   	 0         	 13.6301   	 8.25      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 99, n: 50, r2: 1)                                                                                 	 0.000392589	 101       	 1.27347   	 0         	 20.3755   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000388377	 101       	 0.650141  	 0         	 10.4023   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000326624	 100       	 0.765406  	 0         	 12.2465   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                              	 0.000278686	 8         	 0         	 0         	 57.4123   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 50)                                                                       	 0.000276409	 8         	 0         	 0         	 57.8852   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 99, reductionFactor: 37, colBlockingSize: 12)                    	 0.000110242	 1         	 9.13072   	 0         	 1.07045   	 8.52984   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 50, r: 50, streamingCols: 0)                     	 3.1651e-05	 1         	 3.94932   	 0         	 1.57973   	 2.5       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 99, r: 50, streamingCols: 24)                    	 2.7821e-05	 1         	 4.49301   	 0         	 1.7972    	 2.5       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 99, r1_: 99, n: 50, r2: 1)            	 1.9941e-05	 1         	 49.15     	 0         	 7.90372   	 6.21859   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 0)                	 1.0602e-05	 9         	 0         	 0         	 33.9559   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 1.046e-05 	 1         	 23.9006   	 0         	 5.73614   	 4.16667   
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 99, n: 50, r2: 1)                                                                                   	 8.95e-06  	 1         	 1.10615   	 0         	 4.42458   	 0.25      
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 8.72e-06  	 1         	 0.573394  	 0         	 2.29358   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 0, m: 4950, k: 50)  	 8e-06     	 100       	 0         	 0         	 24750     	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                         	 7.94e-06  	 2         	 0         	 0         	 10.0756   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 99)                                                                	 4.93e-06  	 1         	 0         	 0         	 16.0649   	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 99, fromLeft: 0)                	 1.97e-06  	 1         	 0         	 0         	 40.203    	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 9.06954   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 9.0695    	 100       
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                            	 7.23207   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                        	 7.23073   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 5.96757   	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 2.24587   	 1818      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 2.02451   	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_leftOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                   	 1.83733   	 100       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 1.46194   	 900       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 1.37701   	 918       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 1.17649   	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 1.07117   	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.785223  	 918       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.27457   	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.188411  	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.149001  	 1800      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.141918  	 918       
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                       	 0.0967274 	 818       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0713793 	 1310      
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                              	 0.0515392 	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0513568 	 900       
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                              	 0.0508531 	 20        
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0438034 	 1000      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0408815 	 900       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 0.0380723 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 0.0380432 	 2         
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.0181741 	 5273      
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.0108112 	 18        
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00856169	 1818      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.0042971 	 6472      
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.00268779	 818       
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00110759	 302       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000920809	 102       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000445348	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: L, orthoY: L
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m43->44  [0m[1;34m44->45  [0m[1;34m45->46  [0m[1;34m46->47  [0m[1;34m47->48  [0m[1;34m48->49  [0m[1;34m49->50  [0m[1;34m50->51  [0m[1;34m51->52  [0m[1;34m52->53  [0m[1;34m53->54  [0m[1;34m54->55  [0m[1;34m55->56  [0m[1;34m56->57  [0m[1;34m57->58  [0m[1;34m58->59  [0m[1;34m59->60  [0m[1;34m60->61  [0m[1;34m61->62  [0m[1;34m62->63  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 22917653710720 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 22917475723264 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 22917274396800 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 22917073070336 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 22916871743872 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 22916670417408 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 22916469090944 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 22916267764480 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 22916066438016 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 22915865111552 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 22915663785088 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 22915462458624 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 22915261132160 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 22915059805696 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 22914858479232 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 22914657152768 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 22914455826304 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 22914254499840 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 22914053173376 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 22913851846912 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 22913650520448 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 22913449193984 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 22913247867520 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 22913046541056 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 22912845214592 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 22912643888128 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 22912442561664 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 22912241235200 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 22912039908736 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 22911838582272 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 22911637255808 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 22911435929344 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 22911234598784 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 22911033272320 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 22910831945856 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 22910630619392 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 22910429292928 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 22910227966464 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 22910026640000 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 22909825313536 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 22909623987072 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 22909422660608 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 22909221334144 -> hwthread 43 - OK[0m[1;34m
[0m[1;34m	threadid 22909020007680 -> hwthread 44 - OK[0m[1;34m
[0m[1;34m	threadid 22908818681216 -> hwthread 45 - OK[0m[1;34m
[0m[1;34m	threadid 22908617354752 -> hwthread 46 - OK[0m[1;34m
[0m[1;34m	threadid 22908416028288 -> hwthread 47 - OK[0m[1;34m
[0m[1;34m	threadid 22908214701824 -> hwthread 48 - OK[0m[1;34m
[0m[1;34m	threadid 22908013375360 -> hwthread 49 - OK[0m[1;34m
[0m[1;34m	threadid 22907812048896 -> hwthread 50 - OK[0m[1;34m
[0m[1;34m	threadid 22907610722432 -> hwthread 51 - OK[0m[1;34m
[0m[1;34m	threadid 22907409395968 -> hwthread 52 - OK[0m[1;34m
[0m[1;34m	threadid 22907208069504 -> hwthread 53 - OK[0m[1;34m
[0m[1;34m	threadid 22907006743040 -> hwthread 54 - OK[0m[1;34m
[0m[1;34m	threadid 22906805416576 -> hwthread 55 - OK[0m[1;34m
[0m[1;34m	threadid 22906604090112 -> hwthread 56 - OK[0m[1;34m
[0m[1;34m	threadid 22906402763648 -> hwthread 57 - OK[0m[1;34m
[0m[1;34m	threadid 22906201437184 -> hwthread 58 - OK[0m[1;34m
[0m[1;34m	threadid 22906000110720 -> hwthread 59 - OK[0m[1;34m
[0m[1;34m	threadid 22905798784256 -> hwthread 60 - OK[0m[1;34m
[0m[1;34m	threadid 22905597457792 -> hwthread 61 - OK[0m[1;34m
[0m[1;34m	threadid 22905396131328 -> hwthread 62 - OK[0m[1;34m
[0m[1;34m	threadid 22905194804864 -> hwthread 63 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 22917548050176 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 22917369472768 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
Performance statistics:
function                                                                                                                                                                                                       	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 150, m: 150)                                                                	 1.88456   	 700       	 8.77527   	 0         	 0.201023  	 43.653    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 7500, cols: 150, reductionFactor: 37, colBlockingSize: 12)                  	 1.23921   	 600       	 167.827   	 0         	 4.44477   	 37.7583   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 150, n: 50, r: 150, r2: 150)           	 1.06931   	 600       	 189.375   	 0         	 10.201    	 18.5644   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 150, r: 150, r2: 7500, leftOrthog: 0)       	 0.902228  	 600       	 224.444   	 0         	 18.195    	 12.3355   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 7500, cols: 100, reductionFactor: 37, colBlockingSize: 12)                  	 0.686009  	 700       	 157.196   	 0         	 6.204     	 25.3378   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 7500, Xcols: 100, r: 100, streamingCols: 0)                  	 0.256328  	 700       	 204.815   	 0         	 32.8797   	 6.22924   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 150, Qr2: 100)      	 0.190405  	 700       	 0         	 0         	 58.8221   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 150, reductionFactor: 37, colBlockingSize: 12)                  	 0.166568  	 100       	 69.3655   	 0         	 1.90913   	 36.3335   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 100, m: 100)                                                                 	 0.129876  	 809       	 8.30535   	 0         	 1.49995   	 5.53709   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 100, m: 5000, k: 100)	 0.0923267 	 700       	 758.177   	 0         	 61.2607   	 12.3762   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 7500, m: 100)                                                                       	 0.0850895 	 700       	 0         	 0         	 98.7196   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 100, reductionFactor: 37, colBlockingSize: 12)                  	 0.0810159 	 101       	 64.0181   	 0         	 2.59307   	 24.6881   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 150)                                                                 	 0.0783047 	 100       	 3.35229   	 0         	 0.1793    	 18.6966   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 100, n: 50, r2: 100)                                                                                        	 0.0729149 	 707       	 0         	 0         	 77.5699   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r: 150, r2: 150)            	 0.0705077 	 100       	 159.557   	 0         	 8.765     	 18.2039   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 150, r: 150, r2: 2500, leftOrthog: 0)       	 0.0644233 	 100       	 174.626   	 0         	 14.5289   	 12.0192   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 150, n: 50, r: 150, r2: 50)            	 0.063579  	 100       	 176.945   	 0         	 18.9685   	 9.32836   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 7500, leftOrthog: 0)         	 0.0578077 	 100       	 64.8703   	 0         	 15.6381   	 4.14823   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 100, k: 2500)   	 0.0526761 	 800       	 379.679   	 0         	 46.169    	 8.22368   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 5000, k: 100) 	 0.0484254 	 700       	 722.761   	 0         	 87.3095   	 8.27815   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 7500, m: 100)                                                              	 0.0481465 	 700       	 0         	 0         	 174.468   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.0434141 	 100       	 2.01547   	 0         	 0.139125  	 14.4868   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 2500, m: 100, k: 50)	 0.0394957 	 800       	 506.384   	 0         	 61.5763   	 8.22368   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 7500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                   	 0.0343102 	 100       	 112.251   	 0         	 8.80205   	 12.7528   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 100, n: 50, r2: 100)                  	 0.0322312 	 700       	 0         	 0         	 260.617   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 150, reductionFactor: 37, colBlockingSize: 12)                    	 0.0199975 	 100       	 11.5555   	 0         	 1.20015   	 9.62838   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 100, r: 100, streamingCols: 0)                  	 0.0198558 	 101       	 127.167   	 0         	 20.5502   	 6.18812   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 50, Qr2: 100)       	 0.00844226	 100       	 0         	 0         	 71.071    	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                   	 0.00840232	 109       	 2.16209   	 0         	 0.783546  	 2.75937   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 5000, k: 50)  	 0.00810328	 100       	 308.517   	 0         	 49.6096   	 6.21891   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 100)                                                                       	 0.00775904	 101       	 0         	 0         	 52.0683   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 5000, cols: 100, reductionFactor: 37, colBlockingSize: 12)                  	 0.00723191	 7         	 99.4093   	 0         	 3.94916   	 25.1722   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 100)                                                              	 0.00614854	 101       	 0         	 0         	 65.7066   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 0, n: 50, r2: 100)                    	 0.00588306	 100       	 0         	 0         	 67.9919   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 100, r1_: 100, n: 50, r2: 100)         	 0.00544948	 7         	 128.453   	 0         	 10.379    	 12.3762   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 50)            	 0.00478145	 8         	 20.9142   	 0         	 3.37973   	 6.18812   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                     	 0.00372393	 101       	 6.96372   	 0         	 1.08487   	 6.41892   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 100)                                                                                         	 0.0029402 	 101       	 0         	 0         	 137.406   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                   	 0.00263976	 8         	 38.9061   	 0         	 3.09119   	 12.5861   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 150, r: 50, r2: 50, leftOrthog: 0)          	 0.00253411	 100       	 29.5962   	 0         	 8.68157   	 3.40909   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 100, m: 100, fromLeft: 0)               	 0.0019415 	 808       	 0         	 0         	 66.5878   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 5000, Xcols: 100, r: 100, streamingCols: 0)                  	 0.00193753	 7         	 180.642   	 0         	 29.0473   	 6.21891   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                    	 0.0019107 	 8         	 26.1684   	 0         	 8.41576   	 3.10945   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 100, m: 50, k: 100)  	 0.00128402	 100       	 77.8803   	 0         	 12.4608   	 6.25      
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 50, r2: 50)               	 0.00111497	 100       	 22.4222   	 0         	 5.38133   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 100)   	 0.00108641	 100       	 46.0231   	 0         	 9.20462   	 5         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50, k: 50)      	 0.00104014	 100       	 24.0352   	 0         	 5.76844   	 4.16667   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 5000, m: 100)                                                              	 0.00101081	 7         	 0         	 0         	 55.4014   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 5000, m: 100)                                                                       	 0.000972705	 7         	 0         	 0         	 57.5714   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                    	 0.000914201	 100       	 0.546926  	 0         	 2.1877    	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 100, n: 50, r2: 1)                                                                                          	 0.000866465	 201       	 0         	 0         	 18.5582   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                           	 0.000819636	 201       	 0         	 0         	 9.80923   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 50, k: 50)   	 0.000625221	 100       	 39.9859   	 0         	 9.59661   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 100, n: 50, r2: 1)                    	 0.000611254	 100       	 0         	 0         	 19.6318   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                           	 0.000502454	 100       	 0         	 0         	 7.96093   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 1, r1low: 0, n: 50, r2: 50)                      	 0.000492694	 100       	 0         	 0         	 8.11863   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 1, Xr2: 50, Qr1: 1, Qr2: 0)           	 0.000462288	 100       	 0         	 0         	 8.65261   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                             	 0.000458302	 100       	 1.09098   	 0         	 13.0918   	 0.0833333 
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 100, r1_: 50, n: 50, r2: 100)          	 0.000446152	 1         	 112.069   	 0         	 13.538    	 8.27815   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                                 	 0.000436485	 101       	 0         	 0         	 9.25576   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                  	 0.000388171	 101       	 0.650487  	 0         	 10.4078   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 100, n: 50, r2: 1)                                                                                 	 0.000365253	 101       	 1.3826    	 0         	 22.1217   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                  	 0.000327296	 100       	 0.763835  	 0         	 12.2214   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                               	 0.000265896	 8         	 0         	 0         	 60.1739   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 50)                                                                        	 0.000218095	 8         	 0         	 0         	 73.3625   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 100, reductionFactor: 37, colBlockingSize: 12)                    	 0.000113883	 1         	 9.01826   	 0         	 1.05371   	 8.55856   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 50, r: 50, streamingCols: 0)                      	 3.2921e-05	 1         	 3.79697   	 0         	 1.51879   	 2.5       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 100, r: 50, streamingCols: 25)                    	 2.8791e-05	 1         	 4.34163   	 0         	 1.73665   	 2.5       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 100, r1_: 100, n: 50, r2: 1)           	 1.889e-05 	 1         	 52.9381   	 0         	 8.47009   	 6.25      
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 0)                 	 9.97e-06  	 9         	 0         	 0         	 36.1083   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)             	 9.671e-06 	 1         	 25.8505   	 0         	 6.20412   	 4.16667   
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                    	 9.08e-06  	 1         	 0.550661  	 0         	 2.20264   	 0.25      
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 100, n: 50, r2: 1)                                                                                   	 8.84e-06  	 1         	 1.13122   	 0         	 4.52489   	 0.25      
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                          	 8.47e-06  	 2         	 0         	 0         	 9.4451    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 0, m: 5000, k: 50)   	 7.32e-06  	 100       	 0         	 0         	 27322.4   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 100)                                                                	 5.01e-06  	 1         	 0         	 0         	 15.9681   	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 100, fromLeft: 0)                	 2.06e-06  	 1         	 0         	 0         	 38.835    	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 9.08625   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 9.08619   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                            	 7.2367    	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                        	 7.23533   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 5.93      	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 2.24082   	 1818      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 2.00628   	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_leftOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                   	 1.84941   	 100       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 1.46076   	 900       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 1.37779   	 918       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 1.20451   	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 1.02699   	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.78124   	 918       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.280094  	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.199309  	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.151233  	 1800      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.138278  	 918       
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                       	 0.0940478 	 818       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0780436 	 1310      
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                              	 0.0560132 	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1l(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0537162 	 900       
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                              	 0.0511203 	 20        
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0401209 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0392182 	 1000      
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 0.0373802 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 0.0373514 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.0107056 	 18        
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00738383	 5273      
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00656324	 1818      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00437778	 6472      
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.00195353	 818       
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00108072	 302       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000932121	 102       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000458302	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
