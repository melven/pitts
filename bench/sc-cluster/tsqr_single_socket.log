[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 140324056070016 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 140324047673344 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 140324039276672 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 140323829311744 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 140323820915072 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 140323812518400 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 140323804121728 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 140323795725056 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 140323787328384 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 140323778931712 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 140323292441728 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 140323284045056 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 140323275648384 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 140323267251712 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 140323258855040 -> hwthread 15 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 140323250460416 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 140323242067712 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 16
PITTS: SIMD implementation: avx512
wtime: 0.0870118
singular values (new):
2886.53
Performance statistics:
function                                                                                                                                                                                       	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 25000000, cols: 1, reductionFactor: 37, colBlockingSize: 12)	 0.0869436 	 50        	 29.5314   	 0         	 115.017   	 0.256757  
<PITTS::MultiVector<double>> :: void PITTS::randomize(MultiVector<T>&) [with T = double](rows: 25000000, cols: 1)                                                                              	 0.0250135 	 1         	 0         	 0         	 7.9957    	 0         
Timing statistics:
function                                                                                                                      	 time [s]  	 #calls    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]  	 0.0869436 	 50        
<PITTS::MultiVector<double>> :: void PITTS::randomize(MultiVector<T>&) [with T = double]                                      	 0.0250135 	 1         
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]	 1.458e-05 	 1         
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]              	 6.64e-07  	 1         
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 139752773838720 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 139752765442048 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 139752757045376 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 139752748648704 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 139752531552640 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 139752523155968 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 139752514759296 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 139752506362624 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 139752497965952 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 139752489569280 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 139752481172608 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 139751927573760 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 139751919177088 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 139751910780416 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 139751902383744 -> hwthread 15 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 139751893989120 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 139751885596416 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 16
PITTS: SIMD implementation: avx512
wtime: 0.200483
singular values (new):
2886.53 2886.25
Performance statistics:
function                                                                                                                                                                                       	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 25000000, cols: 2, reductionFactor: 37, colBlockingSize: 12)	 0.20042   	 50        	 51.2438   	 0         	 99.7906   	 0.513513  
<PITTS::MultiVector<double>> :: void PITTS::randomize(MultiVector<T>&) [with T = double](rows: 25000000, cols: 2)                                                                              	 0.040245  	 1         	 0         	 0         	 9.93912   	 0         
Timing statistics:
function                                                                                                                      	 time [s]  	 #calls    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]  	 0.20042   	 50        
<PITTS::MultiVector<double>> :: void PITTS::randomize(MultiVector<T>&) [with T = double]                                      	 0.040245  	 1         
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]	 3.4991e-05	 1         
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]              	 1.4e-06   	 1         
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 140342681790336 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 140342673393664 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 140342664996992 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 140342656600320 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 140342648203648 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 140342639806976 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 140342631410304 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 140342150032128 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 140342141635456 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 140342133238784 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 140342124842112 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 140342116445440 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 140342108048768 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 140342099652096 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 140341613162112 -> hwthread 15 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 140341604767488 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 140341596374784 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 16
PITTS: SIMD implementation: avx512
wtime: 0.326887
singular values (new):
2887.72 2887.33 2886.43
Performance statistics:
function                                                                                                                                                                                       	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 25000000, cols: 3, reductionFactor: 37, colBlockingSize: 12)	 0.326822  	 50        	 70.7055   	 0         	 91.7931   	 0.77027   
<PITTS::MultiVector<double>> :: void PITTS::randomize(MultiVector<T>&) [with T = double](rows: 25000000, cols: 3)                                                                              	 0.0545812 	 1         	 0         	 0         	 10.9928   	 0         
Timing statistics:
function                                                                                                                      	 time [s]  	 #calls    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]  	 0.326822  	 50        
<PITTS::MultiVector<double>> :: void PITTS::randomize(MultiVector<T>&) [with T = double]                                      	 0.0545812 	 1         
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]	 1.8874e-05	 1         
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]              	 2.073e-06 	 1         
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 139975696123776 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 139975687727104 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 139975679330432 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 139975467198720 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 139975458802048 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 139975450405376 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 139975442008704 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 139975433612032 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 139975425215360 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 139975416818688 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 139974930328704 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 139974921932032 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 139974913535360 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 139974905138688 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 139974896742016 -> hwthread 15 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 139974888347392 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 139974879954688 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 16
PITTS: SIMD implementation: avx512
wtime: 0.445546
singular values (new):
2887.51 2886.51 2886.44 2886.12
Performance statistics:
function                                                                                                                                                                                       	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 25000000, cols: 4, reductionFactor: 37, colBlockingSize: 12)	 0.445478  	 50        	 92.218    	 0         	 89.7912   	 1.02703   
<PITTS::MultiVector<double>> :: void PITTS::randomize(MultiVector<T>&) [with T = double](rows: 25000000, cols: 4)                                                                              	 0.0703321 	 1         	 0         	 0         	 11.3746   	 0         
Timing statistics:
function                                                                                                                      	 time [s]  	 #calls    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]  	 0.445478  	 50        
<PITTS::MultiVector<double>> :: void PITTS::randomize(MultiVector<T>&) [with T = double]                                      	 0.0703321 	 1         
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]	 2.3764e-05	 1         
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]              	 1.501e-06 	 1         
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 139833232009088 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 139833223612416 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 139833215215744 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 139833206819072 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 139832995080576 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 139832986683904 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 139832978287232 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 139832969890560 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 139832961493888 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 139832953097216 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 139832944700544 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 139832391101696 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 139832382705024 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 139832374308352 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 139832365911680 -> hwthread 15 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 139832357517056 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 139832349124352 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 16
PITTS: SIMD implementation: avx512
wtime: 0.5573
singular values (new):
2887.93 2887.31 2886.91  2886.5 2885.92
Performance statistics:
function                                                                                                                                                                                       	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 25000000, cols: 5, reductionFactor: 37, colBlockingSize: 12)	 0.557228  	 50        	 115.194   	 0         	 89.7298   	 1.28378   
<PITTS::MultiVector<double>> :: void PITTS::randomize(MultiVector<T>&) [with T = double](rows: 25000000, cols: 5)                                                                              	 0.0792652 	 1         	 0         	 0         	 12.6159   	 0         
Timing statistics:
function                                                                                                                      	 time [s]  	 #calls    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]  	 0.557228  	 50        
<PITTS::MultiVector<double>> :: void PITTS::randomize(MultiVector<T>&) [with T = double]                                      	 0.0792652 	 1         
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]	 2.6964e-05	 1         
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]              	 1.223e-06 	 1         
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 140221466589056 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 140221458192384 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 140221449795712 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 140221441399040 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 140221433002368 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 140221085641216 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 140221077244544 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 140221068847872 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 140221060451200 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 140221052054528 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 140221043657856 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 140221035261184 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 140220548771200 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 140220540374528 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 140220531977856 -> hwthread 15 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 140220523583232 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 140220515190528 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 16
PITTS: SIMD implementation: avx512
wtime: 0.708887
singular values (new):
2887.69 2887.62 2887.09 2886.55 2886.06  2885.5
Performance statistics:
function                                                                                                                                                                                       	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 25000000, cols: 6, reductionFactor: 37, colBlockingSize: 12)	 0.708819  	 50        	 130.403   	 0         	 84.6479   	 1.54054   
<PITTS::MultiVector<double>> :: void PITTS::randomize(MultiVector<T>&) [with T = double](rows: 25000000, cols: 6)                                                                              	 0.0973896 	 1         	 0         	 0         	 12.3216   	 0         
Timing statistics:
function                                                                                                                      	 time [s]  	 #calls    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]  	 0.708819  	 50        
<PITTS::MultiVector<double>> :: void PITTS::randomize(MultiVector<T>&) [with T = double]                                      	 0.0973896 	 1         
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]	 3.2787e-05	 1         
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]              	 1.203e-06 	 1         
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 140137763571584 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 140137755174912 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 140137746778240 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 140137535105280 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 140137526708608 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 140137518311936 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 140137509915264 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 140137501518592 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 140137493121920 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 140137484725248 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 140136998235264 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 140136989838592 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 140136981441920 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 140136973045248 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 140136964648576 -> hwthread 15 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 140136956253952 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 140136947861248 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 16
PITTS: SIMD implementation: avx512
wtime: 0.85176
singular values (new):
2888.44  2887.6 2887.07 2886.65 2886.24 2886.04 2885.99
Performance statistics:
function                                                                                                                                                                                       	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 25000000, cols: 7, reductionFactor: 37, colBlockingSize: 12)	 0.851678  	 50        	 147.721   	 0         	 82.1907   	 1.7973    
<PITTS::MultiVector<double>> :: void PITTS::randomize(MultiVector<T>&) [with T = double](rows: 25000000, cols: 7)                                                                              	 0.115006  	 1         	 0         	 0         	 12.1733   	 0         
Timing statistics:
function                                                                                                                      	 time [s]  	 #calls    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]  	 0.851678  	 50        
<PITTS::MultiVector<double>> :: void PITTS::randomize(MultiVector<T>&) [with T = double]                                      	 0.115006  	 1         
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]	 3.4803e-05	 1         
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]              	 1.476e-06 	 1         
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 140168125593472 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 140168117196800 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 140168108800128 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 140168100403456 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 140168092006784 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 140168083610112 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 140167734094464 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 140167725697792 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 140167717301120 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 140167708904448 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 140167700507776 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 140167692111104 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 140167683714432 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 140167130115584 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 140167121718912 -> hwthread 15 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 140167113324288 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 140167104931584 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 16
PITTS: SIMD implementation: avx512
wtime: 0.988838
singular values (new):
2888.17 2887.74  2887.5 2887.41 2886.42 2886.15 2886.13 2885.86
Performance statistics:
function                                                                                                                                                                                       	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 25000000, cols: 8, reductionFactor: 37, colBlockingSize: 12)	 0.988764  	 50        	 166.192   	 0         	 80.9092   	 2.05405   
<PITTS::MultiVector<double>> :: void PITTS::randomize(MultiVector<T>&) [with T = double](rows: 25000000, cols: 8)                                                                              	 0.130404  	 1         	 0         	 0         	 12.2696   	 0         
Timing statistics:
function                                                                                                                      	 time [s]  	 #calls    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]  	 0.988764  	 50        
<PITTS::MultiVector<double>> :: void PITTS::randomize(MultiVector<T>&) [with T = double]                                      	 0.130404  	 1         
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]	 3.6175e-05	 1         
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]              	 1.849e-06 	 1         
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 140570909403008 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 140570901006336 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 140570892609664 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 140570884212992 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 140570875816320 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 140570867419648 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 140570521496192 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 140570513099520 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 140570504702848 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 140570496306176 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 140570487909504 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 140570479512832 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 140570471116160 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 140569917517312 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 140569909120640 -> hwthread 15 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 140569900726016 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 140569892333312 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 16
PITTS: SIMD implementation: avx512
wtime: 1.17126
singular values (new):
2888.18 2887.94 2887.69 2887.28 2886.69 2886.49 2886.29 2886.11 2885.44
Performance statistics:
function                                                                                                                                                                                       	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 25000000, cols: 9, reductionFactor: 37, colBlockingSize: 12)	 1.17119   	 50        	 177.575   	 0         	 76.8452   	 2.31081   
<PITTS::MultiVector<double>> :: void PITTS::randomize(MultiVector<T>&) [with T = double](rows: 25000000, cols: 9)                                                                              	 0.144729  	 1         	 0         	 0         	 12.437    	 0         
Timing statistics:
function                                                                                                                      	 time [s]  	 #calls    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]  	 1.17119   	 50        
<PITTS::MultiVector<double>> :: void PITTS::randomize(MultiVector<T>&) [with T = double]                                      	 0.144729  	 1         
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]	 3.9749e-05	 1         
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]              	 1.804e-06 	 1         
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 140514834720640 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 140514754029568 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 140514745632896 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 140514737236224 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 140514728839552 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 140514720442880 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 140514712046208 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 140514703649536 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 140514217159552 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 140514208762880 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 140514200366208 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 140514191969536 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 140514183572864 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 140514175176192 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 140514166779520 -> hwthread 15 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 140513680291584 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 140513671898880 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 16
PITTS: SIMD implementation: avx512
wtime: 1.33517
singular values (new):
2888.17 2887.77 2887.12 2886.79 2886.68 2886.29  2886.2 2886.02 2885.86 2885.44
Performance statistics:
function                                                                                                                                                                                        	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 25000000, cols: 10, reductionFactor: 37, colBlockingSize: 12)	 1.3351    	 50        	 192.313   	 0         	 74.9007   	 2.56757   
<PITTS::MultiVector<double>> :: void PITTS::randomize(MultiVector<T>&) [with T = double](rows: 25000000, cols: 10)                                                                              	 0.161157  	 1         	 0         	 0         	 12.4103   	 0         
Timing statistics:
function                                                                                                                      	 time [s]  	 #calls    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]  	 1.3351    	 50        
<PITTS::MultiVector<double>> :: void PITTS::randomize(MultiVector<T>&) [with T = double]                                      	 0.161157  	 1         
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]	 4.2383e-05	 1         
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]              	 1.906e-06 	 1         
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 140044307224448 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 140044298827776 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 140044290431104 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 140044282034432 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 140044273637760 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 140044265241088 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 140043918240384 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 140043909843712 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 140043901447040 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 140043893050368 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 140043884653696 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 140043876257024 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 140043867860352 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 140043314261504 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 140043305864832 -> hwthread 15 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 140043297470208 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 140043289077504 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 16
PITTS: SIMD implementation: avx512
wtime: 1.51212
singular values (new):
 2887.9  2887.8 2887.44 2887.21 2886.85 2886.54 2886.19 2885.96 2885.88 2885.64 2885.47
Performance statistics:
function                                                                                                                                                                                        	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 25000000, cols: 11, reductionFactor: 37, colBlockingSize: 12)	 1.51204   	 50        	 205.468   	 0         	 72.7493   	 2.82432   
<PITTS::MultiVector<double>> :: void PITTS::randomize(MultiVector<T>&) [with T = double](rows: 25000000, cols: 11)                                                                              	 0.175179  	 1         	 0         	 0         	 12.5586   	 0         
Timing statistics:
function                                                                                                                      	 time [s]  	 #calls    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]  	 1.51204   	 50        
<PITTS::MultiVector<double>> :: void PITTS::randomize(MultiVector<T>&) [with T = double]                                      	 0.175179  	 1         
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]	 6.1599e-05	 1         
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]              	 2.158e-06 	 1         
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 140177413171072 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 140177330661376 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 140177322264704 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 140177313868032 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 140177305471360 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 140177297074688 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 140177288678016 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 140177280281344 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 140176793791360 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 140176785394688 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 140176776998016 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 140176768601344 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 140176760204672 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 140176751808000 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 140176743411328 -> hwthread 15 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 140176256923392 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 140176248530688 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 16
PITTS: SIMD implementation: avx512
wtime: 1.74576
singular values (new):
2888.29 2887.92 2887.81 2887.51 2886.94 2886.81 2886.55  2886.4 2886.01  2885.9 2885.52  2885.3
Performance statistics:
function                                                                                                                                                                                        	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 25000000, cols: 12, reductionFactor: 37, colBlockingSize: 12)	 1.74567   	 50        	 211.798   	 0         	 68.7415   	 3.08108   
<PITTS::MultiVector<double>> :: void PITTS::randomize(MultiVector<T>&) [with T = double](rows: 25000000, cols: 12)                                                                              	 0.185312  	 1         	 0         	 0         	 12.9512   	 0         
Timing statistics:
function                                                                                                                      	 time [s]  	 #calls    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]  	 1.74567   	 50        
<PITTS::MultiVector<double>> :: void PITTS::randomize(MultiVector<T>&) [with T = double]                                      	 0.185312  	 1         
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]	 5.0624e-05	 1         
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]              	 1.639e-06 	 1         
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 140208651589504 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 140208643192832 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 140208634796160 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 140208626399488 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 140208618002816 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 140208267848192 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 140208259451520 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 140208251054848 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 140208242658176 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 140208234261504 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 140208225864832 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 140208217468160 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 140207730978176 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 140207722581504 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 140207714184832 -> hwthread 15 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 140207705790208 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 140207697397504 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 16
PITTS: SIMD implementation: avx512
wtime: 1.95442
singular values (new):
2888.49 2887.91 2887.61 2887.51 2887.12 2886.94 2886.85 2886.57 2886.22 2886.06 2885.61 2885.47 2885.41
Performance statistics:
function                                                                                                                                                                                        	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 25000000, cols: 13, reductionFactor: 37, colBlockingSize: 12)	 1.95435   	 50        	 222.027   	 0         	 66.5183   	 3.33784   
<PITTS::MultiVector<double>> :: void PITTS::randomize(MultiVector<T>&) [with T = double](rows: 25000000, cols: 13)                                                                              	 0.201078  	 1         	 0         	 0         	 12.9303   	 0         
Timing statistics:
function                                                                                                                      	 time [s]  	 #calls    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]  	 1.95435   	 50        
<PITTS::MultiVector<double>> :: void PITTS::randomize(MultiVector<T>&) [with T = double]                                      	 0.201078  	 1         
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]	 5.8251e-05	 1         
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]              	 1.51e-06  	 1         
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 139952361326464 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 139952352929792 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 139952344533120 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 139952336136448 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 139952327739776 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 139951979096576 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 139951970699904 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 139951962303232 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 139951953906560 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 139951945509888 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 139951937113216 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 139951928716544 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 139951442226560 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 139951433829888 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 139951425433216 -> hwthread 15 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 139951417038592 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 139951408645888 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 16
PITTS: SIMD implementation: avx512
wtime: 2.19321
singular values (new):
2888.68 2888.21 2887.82 2887.71 2887.36 2887.04 2886.88 2886.64 2886.25 2886.21 2885.89 2885.64  2885.2 2885.11
Performance statistics:
function                                                                                                                                                                                        	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 25000000, cols: 14, reductionFactor: 37, colBlockingSize: 12)	 2.19313   	 50        	 229.464   	 0         	 63.8358   	 3.59459   
<PITTS::MultiVector<double>> :: void PITTS::randomize(MultiVector<T>&) [with T = double](rows: 25000000, cols: 14)                                                                              	 0.215306  	 1         	 0         	 0         	 13.0047   	 0         
Timing statistics:
function                                                                                                                      	 time [s]  	 #calls    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]  	 2.19313   	 50        
<PITTS::MultiVector<double>> :: void PITTS::randomize(MultiVector<T>&) [with T = double]                                      	 0.215306  	 1         
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]	 0.000120312	 1         
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]              	 2.466e-06 	 1         
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 140030478894976 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 140030470498304 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 140030462101632 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 140030453704960 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 140030445308288 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 140030093814272 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 140030085417600 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 140030077020928 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 140030068624256 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 140030060227584 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 140030051830912 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 140030043434240 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 140029556944256 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 140029548547584 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 140029540150912 -> hwthread 15 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 140029531756288 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 140029523363584 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 16
PITTS: SIMD implementation: avx512
wtime: 2.42462
singular values (new):
2888.47 2888.09 2887.81 2887.76  2887.6 2887.29 2886.82 2886.74 2886.39 2886.21 2885.89 2885.81 2885.45 2885.07 2884.75
Performance statistics:
function                                                                                                                                                                                        	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 25000000, cols: 15, reductionFactor: 37, colBlockingSize: 12)	 2.42453   	 50        	 238.274   	 0         	 61.8676   	 3.85135   
<PITTS::MultiVector<double>> :: void PITTS::randomize(MultiVector<T>&) [with T = double](rows: 25000000, cols: 15)                                                                              	 0.236352  	 1         	 0         	 0         	 12.6929   	 0         
Timing statistics:
function                                                                                                                      	 time [s]  	 #calls    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]  	 2.42453   	 50        
<PITTS::MultiVector<double>> :: void PITTS::randomize(MultiVector<T>&) [with T = double]                                      	 0.236352  	 1         
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]	 6.1082e-05	 1         
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]              	 1.588e-06 	 1         
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 139927299020672 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 139927215925248 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 139927207528576 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 139927199131904 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 139927190735232 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 139927182338560 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 139927173941888 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 139927165545216 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 139926679055232 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 139926670658560 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 139926662261888 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 139926653865216 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 139926645468544 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 139926637071872 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 139926628675200 -> hwthread 15 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 139926142187264 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 139926133794560 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 16
PITTS: SIMD implementation: avx512
wtime: 2.67711
singular values (new):
2888.75 2888.29  2888.2 2887.78 2887.55 2887.33 2887.04 2886.95 2886.67 2886.23 2886.19 2885.94 2885.71 2885.44 2885.17 2884.55
Performance statistics:
function                                                                                                                                                                                        	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 25000000, cols: 16, reductionFactor: 37, colBlockingSize: 12)	 2.67703   	 50        	 245.533   	 0         	 59.7679   	 4.10811   
<PITTS::MultiVector<double>> :: void PITTS::randomize(MultiVector<T>&) [with T = double](rows: 25000000, cols: 16)                                                                              	 0.251403  	 1         	 0         	 0         	 12.7286   	 0         
Timing statistics:
function                                                                                                                      	 time [s]  	 #calls    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]  	 2.67703   	 50        
<PITTS::MultiVector<double>> :: void PITTS::randomize(MultiVector<T>&) [with T = double]                                      	 0.251403  	 1         
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]	 6.7726e-05	 1         
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]              	 1.954e-06 	 1         
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 140690313738112 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 140690305341440 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 140690296944768 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 140690288548096 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 140690280151424 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 140690271754752 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 140690263358080 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 140690254961408 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 140689773947776 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 140689765551104 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 140689757154432 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 140689748757760 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 140689740361088 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 140689731964416 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 140689723567744 -> hwthread 15 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 140689169970944 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 140689161578240 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 16
PITTS: SIMD implementation: avx512
wtime: 2.94527
singular values (new):
 2888.9 2888.45 2888.01 2887.63 2887.49 2887.26 2887.12 2886.93 2886.65  2886.6 2886.47 2886.34 2885.87 2885.73 2885.38 2885.06 2884.88
Performance statistics:
function                                                                                                                                                                                        	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 25000000, cols: 17, reductionFactor: 37, colBlockingSize: 12)	 2.94519   	 50        	 251.946   	 0         	 57.7214   	 4.36486   
<PITTS::MultiVector<double>> :: void PITTS::randomize(MultiVector<T>&) [with T = double](rows: 25000000, cols: 17)                                                                              	 0.260078  	 1         	 0         	 0         	 13.073    	 0         
Timing statistics:
function                                                                                                                      	 time [s]  	 #calls    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]  	 2.94519   	 50        
<PITTS::MultiVector<double>> :: void PITTS::randomize(MultiVector<T>&) [with T = double]                                      	 0.260078  	 1         
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]	 7.1537e-05	 1         
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]              	 2.178e-06 	 1         
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 140066139010944 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 140066130614272 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 140066122217600 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 140066113820928 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 140066105424256 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 140066097027584 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 140066088630912 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 140066080234240 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 140065594403712 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 140065586007040 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 140065577610368 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 140065569213696 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 140065560817024 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 140065552420352 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 140065544023680 -> hwthread 15 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 140064990426880 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 140064982034176 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 16
PITTS: SIMD implementation: avx512
wtime: 3.23662
singular values (new):
2888.45 2888.29 2888.23 2887.78 2887.66 2887.42 2887.22 2887.01 2886.95 2886.53 2886.43 2886.17 2886.08 2885.76 2885.53 2885.37 2885.08  2884.4
Performance statistics:
function                                                                                                                                                                                        	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 25000000, cols: 18, reductionFactor: 37, colBlockingSize: 12)	 3.23654   	 50        	 257.031   	 0         	 55.6149   	 4.62162   
<PITTS::MultiVector<double>> :: void PITTS::randomize(MultiVector<T>&) [with T = double](rows: 25000000, cols: 18)                                                                              	 0.281199  	 1         	 0         	 0         	 12.8023   	 0         
Timing statistics:
function                                                                                                                      	 time [s]  	 #calls    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]  	 3.23654   	 50        
<PITTS::MultiVector<double>> :: void PITTS::randomize(MultiVector<T>&) [with T = double]                                      	 0.281199  	 1         
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]	 6.7791e-05	 1         
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]              	 1.385e-06 	 1         
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 140417450256256 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 140417441859584 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 140417433462912 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 140417425066240 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 140417416669568 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 140417408272896 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 140417399876224 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 140417391479552 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 140416909306752 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 140416900910080 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 140416892513408 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 140416884116736 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 140416875720064 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 140416867323392 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 140416858926720 -> hwthread 15 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 140416305329920 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 140416296937216 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 16
PITTS: SIMD implementation: avx512
wtime: 3.54458
singular values (new):
2889.02 2888.58 2888.36 2888.25 2887.72 2887.58 2887.39 2887.13 2886.96  2886.9 2886.61 2886.54 2886.21 2885.87 2885.67 2885.51 2885.18 2884.72 2884.38
Performance statistics:
function                                                                                                                                                                                        	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 25000000, cols: 19, reductionFactor: 37, colBlockingSize: 12)	 3.5445    	 50        	 261.502   	 0         	 53.6043   	 4.87837   
<PITTS::MultiVector<double>> :: void PITTS::randomize(MultiVector<T>&) [with T = double](rows: 25000000, cols: 19)                                                                              	 0.297926  	 1         	 0         	 0         	 12.7548   	 0         
Timing statistics:
function                                                                                                                      	 time [s]  	 #calls    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]  	 3.5445    	 50        
<PITTS::MultiVector<double>> :: void PITTS::randomize(MultiVector<T>&) [with T = double]                                      	 0.297926  	 1         
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]	 7.0668e-05	 1         
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]              	 2.192e-06 	 1         
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 140280672835456 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 140280664438784 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 140280656042112 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 140280647645440 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 140280639248768 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 140280630852096 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 140280622455424 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 140280141441792 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 140280133045120 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 140280124648448 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 140280116251776 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 140280107855104 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 140280099458432 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 140280091061760 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 140279604571776 -> hwthread 15 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 140279596177152 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 140279587784448 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 16
PITTS: SIMD implementation: avx512
wtime: 3.835
singular values (new):
2888.83 2888.42 2888.34 2887.77 2887.76 2887.62 2887.47 2887.28  2887.2 2886.72 2886.66 2886.43 2886.11 2885.95 2885.66 2885.34 2885.15 2884.72  2884.6 2883.99
Performance statistics:
function                                                                                                                                                                                        	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 25000000, cols: 20, reductionFactor: 37, colBlockingSize: 12)	 3.83492   	 50        	 267.809   	 0         	 52.1524   	 5.13513   
<PITTS::MultiVector<double>> :: void PITTS::randomize(MultiVector<T>&) [with T = double](rows: 25000000, cols: 20)                                                                              	 0.306274  	 1         	 0         	 0         	 13.0602   	 0         
Timing statistics:
function                                                                                                                      	 time [s]  	 #calls    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]  	 3.83492   	 50        
<PITTS::MultiVector<double>> :: void PITTS::randomize(MultiVector<T>&) [with T = double]                                      	 0.306274  	 1         
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]	 8.5881e-05	 1         
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]              	 1.836e-06 	 1         
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 139948761495424 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 139948753098752 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 139948744702080 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 139948736305408 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 139948727908736 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 139948719512064 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 139948711115392 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 139948702718720 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 139948221000576 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 139948212603904 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 139948204207232 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 139948195810560 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 139948187413888 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 139948179017216 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 139948170620544 -> hwthread 15 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 139947617023744 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 139947608631040 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 16
PITTS: SIMD implementation: avx512
wtime: 4.16671
singular values (new):
2888.88 2888.63 2888.43 2888.21 2888.07 2887.94 2887.59 2887.52  2887.1 2886.89 2886.84  2886.7 2886.26 2886.12 2886.02 2885.77  2885.5 2885.19 2884.94 2884.57 2884.06
Performance statistics:
function                                                                                                                                                                                        	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 25000000, cols: 21, reductionFactor: 37, colBlockingSize: 12)	 4.16663   	 50        	 271.754   	 0         	 50.4005   	 5.39189   
<PITTS::MultiVector<double>> :: void PITTS::randomize(MultiVector<T>&) [with T = double](rows: 25000000, cols: 21)                                                                              	 0.327149  	 1         	 0         	 0         	 12.8382   	 0         
Timing statistics:
function                                                                                                                      	 time [s]  	 #calls    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]  	 4.16663   	 50        
<PITTS::MultiVector<double>> :: void PITTS::randomize(MultiVector<T>&) [with T = double]                                      	 0.327149  	 1         
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]	 8.3019e-05	 1         
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]              	 1.994e-06 	 1         
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 139854118123392 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 139854109726720 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 139854101330048 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 139854092933376 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 139854084536704 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 139854076140032 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 139853731719808 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 139853723323136 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 139853714926464 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 139853706529792 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 139853698133120 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 139853689736448 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 139853681339776 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 139853127740928 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 139853119344256 -> hwthread 15 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 139853110949632 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 139853102556928 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 16
PITTS: SIMD implementation: avx512
wtime: 4.50875
singular values (new):
2889.11 2888.77 2888.38 2888.32 2888.22 2887.95 2887.69 2887.54  2887.4  2886.9 2886.74 2886.66 2886.57 2886.29 2886.16 2885.84 2885.61 2885.46 2885.26 2884.88 2884.43 2883.88
Performance statistics:
function                                                                                                                                                                                        	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 25000000, cols: 22, reductionFactor: 37, colBlockingSize: 12)	 4.50865   	 50        	 275.626   	 0         	 48.7952   	 5.64864   
<PITTS::MultiVector<double>> :: void PITTS::randomize(MultiVector<T>&) [with T = double](rows: 25000000, cols: 22)                                                                              	 0.339737  	 1         	 0         	 0         	 12.9512   	 0         
Timing statistics:
function                                                                                                                      	 time [s]  	 #calls    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]  	 4.50865   	 50        
<PITTS::MultiVector<double>> :: void PITTS::randomize(MultiVector<T>&) [with T = double]                                      	 0.339737  	 1         
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]	 9.6485e-05	 1         
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]              	 1.643e-06 	 1         
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 140346547197824 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 140346538801152 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 140346530404480 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 140346522007808 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 140346310781312 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 140346302384640 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 140346293987968 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 140346285591296 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 140346277194624 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 140346268797952 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 140346260401280 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 140345706802432 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 140345698405760 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 140345690009088 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 140345681612416 -> hwthread 15 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 140345673217792 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 140345664825088 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 16
PITTS: SIMD implementation: avx512
wtime: 4.82003
singular values (new):
2889.08 2889.05 2888.85 2888.45 2888.21  2887.9 2887.79 2887.61 2887.28    2887 2886.72 2886.56 2886.48 2886.26 2886.09 2885.88 2885.79 2885.56 2885.41 2885.16 2884.88 2884.34 2883.99
Performance statistics:
function                                                                                                                                                                                        	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 25000000, cols: 23, reductionFactor: 37, colBlockingSize: 12)	 4.81993   	 50        	 281.797   	 0         	 47.7185   	 5.9054    
<PITTS::MultiVector<double>> :: void PITTS::randomize(MultiVector<T>&) [with T = double](rows: 25000000, cols: 23)                                                                              	 0.351914  	 1         	 0         	 0         	 13.0714   	 0         
Timing statistics:
function                                                                                                                      	 time [s]  	 #calls    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]  	 4.81993   	 50        
<PITTS::MultiVector<double>> :: void PITTS::randomize(MultiVector<T>&) [with T = double]                                      	 0.351914  	 1         
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]	 8.0181e-05	 1         
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]              	 1.683e-06 	 1         
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 140604395333504 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 140604386936832 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 140604378540160 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 140604370143488 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 140604361746816 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 140604353350144 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 140604008819328 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 140604000422656 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 140603992025984 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 140603983629312 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 140603975232640 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 140603966835968 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 140603958439296 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 140603404840448 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 140603396443776 -> hwthread 15 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 140603388049152 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 140603379656448 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 16
PITTS: SIMD implementation: avx512
wtime: 4.73033
singular values (new):
2889.16 2889.05 2888.86 2888.48 2888.24 2888.05 2887.94 2887.58 2887.46 2887.21 2886.83 2886.74 2886.61 2886.22 2886.01 2885.83 2885.81 2885.64 2885.57 2885.43    2885  2884.8 2884.44 2884.19
Performance statistics:
function                                                                                                                                                                                        	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 25000000, cols: 24, reductionFactor: 37, colBlockingSize: 12)	 4.73021   	 50        	 312.654   	 0         	 50.7377   	 6.16216   
<PITTS::MultiVector<double>> :: void PITTS::randomize(MultiVector<T>&) [with T = double](rows: 25000000, cols: 24)                                                                              	 0.373837  	 1         	 0         	 0         	 12.8398   	 0         
Timing statistics:
function                                                                                                                      	 time [s]  	 #calls    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]  	 4.73021   	 50        
<PITTS::MultiVector<double>> :: void PITTS::randomize(MultiVector<T>&) [with T = double]                                      	 0.373837  	 1         
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]	 9.5921e-05	 1         
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]              	 1.768e-06 	 1         
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 140297827374976 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 140297818978304 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 140297810581632 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 140297802184960 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 140297589746048 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 140297581349376 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 140297572952704 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 140297564556032 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 140297556159360 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 140297547762688 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 140297539366016 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 140296985767168 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 140296977370496 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 140296968973824 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 140296960577152 -> hwthread 15 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 140296952182528 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 140296943789824 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 16
PITTS: SIMD implementation: avx512
wtime: 5.09692
singular values (new):
2889.47  2889.1 2888.77 2888.69  2888.3 2888.19 2887.93 2887.81 2887.61 2887.34 2887.21 2887.05 2886.83 2886.81 2886.54  2886.2 2886.04 2885.88 2885.57 2885.46 2885.26  2885.1 2884.75 2884.33 2883.59
Performance statistics:
function                                                                                                                                                                                        	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 25000000, cols: 25, reductionFactor: 37, colBlockingSize: 12)	 5.09682   	 50        	 314.849   	 0         	 49.0503   	 6.41891   
<PITTS::MultiVector<double>> :: void PITTS::randomize(MultiVector<T>&) [with T = double](rows: 25000000, cols: 25)                                                                              	 0.381204  	 1         	 0         	 0         	 13.1163   	 0         
Timing statistics:
function                                                                                                                      	 time [s]  	 #calls    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]  	 5.09682   	 50        
<PITTS::MultiVector<double>> :: void PITTS::randomize(MultiVector<T>&) [with T = double]                                      	 0.381204  	 1         
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]	 0.000100589	 1         
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]              	 2.143e-06 	 1         
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 140175182194560 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 140175173797888 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 140175165401216 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 140175157004544 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 140175148607872 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 140175140211200 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 140175131814528 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 140174646307584 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 140174637910912 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 140174629514240 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 140174621117568 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 140174612720896 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 140174604324224 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 140174595927552 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 140174109437568 -> hwthread 15 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 140174101042944 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 140174092650240 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 16
PITTS: SIMD implementation: avx512
wtime: 5.39855
singular values (new):
2889.54 2889.08 2888.74 2888.47 2888.41 2888.16 2887.93 2887.66  2887.6 2887.41 2887.29 2886.99 2886.87 2886.78 2886.45  2886.4 2886.22 2886.08 2885.78 2885.67 2885.47 2885.21 2884.76 2884.73  2884.3 2884.24
Performance statistics:
function                                                                                                                                                                                        	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 25000000, cols: 26, reductionFactor: 37, colBlockingSize: 12)	 5.39846   	 50        	 321.513   	 0         	 48.162    	 6.67567   
<PITTS::MultiVector<double>> :: void PITTS::randomize(MultiVector<T>&) [with T = double](rows: 25000000, cols: 26)                                                                              	 0.397419  	 1         	 0         	 0         	 13.0844   	 0         
Timing statistics:
function                                                                                                                      	 time [s]  	 #calls    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]  	 5.39846   	 50        
<PITTS::MultiVector<double>> :: void PITTS::randomize(MultiVector<T>&) [with T = double]                                      	 0.397419  	 1         
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]	 9.1434e-05	 1         
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]              	 1.92e-06  	 1         
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 140235000502144 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 140234992105472 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 140234910066816 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 140234901670144 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 140234893273472 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 140234884876800 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 140234876480128 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 140234868083456 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 140234859686784 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 140234306087936 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 140234297691264 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 140234289294592 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 140234280897920 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 140234272501248 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 140234264104576 -> hwthread 15 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 140234255709952 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 140233769219840 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 16
PITTS: SIMD implementation: avx512
wtime: 5.74474
singular values (new):
2889.76 2889.23 2889.01 2888.53 2888.49 2888.14 2887.82 2887.77 2887.38 2887.25 2887.18 2886.89 2886.81 2886.63 2886.54 2886.48 2886.39 2886.29 2886.01 2885.91 2885.62 2885.51 2885.36 2884.74 2884.58 2884.52 2884.16
Performance statistics:
function                                                                                                                                                                                        	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 25000000, cols: 27, reductionFactor: 37, colBlockingSize: 12)	 5.74464   	 50        	 325.827   	 0         	 47.0004   	 6.93242   
<PITTS::MultiVector<double>> :: void PITTS::randomize(MultiVector<T>&) [with T = double](rows: 25000000, cols: 27)                                                                              	 0.411955  	 1         	 0         	 0         	 13.1082   	 0         
Timing statistics:
function                                                                                                                      	 time [s]  	 #calls    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]  	 5.74464   	 50        
<PITTS::MultiVector<double>> :: void PITTS::randomize(MultiVector<T>&) [with T = double]                                      	 0.411955  	 1         
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]	 0.000153426	 1         
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]              	 1.625e-06 	 1         
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 140700786141056 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 140700777744384 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 140700769347712 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 140700760951040 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 140700752554368 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 140700744157696 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 140700735761024 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 140700727364352 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 140700242930560 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 140700234533888 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 140700226137216 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 140700217740544 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 140700209343872 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 140700200947200 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 140700192550528 -> hwthread 15 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 140699638953728 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 140699630561024 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 16
PITTS: SIMD implementation: avx512
wtime: 6.12213
singular values (new):
2889.59 2889.17 2888.98  2888.6 2888.36 2888.11 2888.05 2887.76  2887.7 2887.59 2887.58 2887.17 2886.88 2886.65 2886.56  2886.4 2886.39 2886.31 2886.09 2886.02 2885.89 2885.64 2885.57 2885.51 2884.84 2884.39 2884.25 2884.01
Performance statistics:
function                                                                                                                                                                                        	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 25000000, cols: 28, reductionFactor: 37, colBlockingSize: 12)	 6.12203   	 50        	 328.808   	 0         	 45.7365   	 7.18918   
<PITTS::MultiVector<double>> :: void PITTS::randomize(MultiVector<T>&) [with T = double](rows: 25000000, cols: 28)                                                                              	 0.432866  	 1         	 0         	 0         	 12.937    	 0         
Timing statistics:
function                                                                                                                      	 time [s]  	 #calls    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]  	 6.12203   	 50        
<PITTS::MultiVector<double>> :: void PITTS::randomize(MultiVector<T>&) [with T = double]                                      	 0.432866  	 1         
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]	 0.000106767	 1         
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]              	 1.332e-06 	 1         
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 140706720745344 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 140706712348672 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 140706703952000 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 140706695555328 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 140706484054400 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 140706475657728 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 140706467261056 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 140706458864384 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 140706450467712 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 140706442071040 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 140706433674368 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 140705880075520 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 140705871678848 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 140705863282176 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 140705854885504 -> hwthread 15 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 140705846490880 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 140705838098176 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 16
PITTS: SIMD implementation: avx512
wtime: 6.47499
singular values (new):
2889.72 2889.15 2889.04 2888.75 2888.47 2888.35 2888.08  2887.9 2887.78  2887.7 2887.64 2887.39 2887.07 2886.89 2886.81 2886.63 2886.36 2886.21 2886.06 2885.77 2885.62 2885.48 2885.42    2885 2884.71 2884.61 2884.35 2884.15 2883.74
Performance statistics:
function                                                                                                                                                                                        	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 25000000, cols: 29, reductionFactor: 37, colBlockingSize: 12)	 6.4749    	 50        	 333.492   	 0         	 44.7884   	 7.44594   
<PITTS::MultiVector<double>> :: void PITTS::randomize(MultiVector<T>&) [with T = double](rows: 25000000, cols: 29)                                                                              	 0.450082  	 1         	 0         	 0         	 12.8865   	 0         
Timing statistics:
function                                                                                                                      	 time [s]  	 #calls    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]  	 6.4749    	 50        
<PITTS::MultiVector<double>> :: void PITTS::randomize(MultiVector<T>&) [with T = double]                                      	 0.450082  	 1         
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]	 0.000106948	 1         
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]              	 1.547e-06 	 1         
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 140111322736512 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 140111314339840 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 140111305943168 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 140111094212864 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 140111085816192 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 140111077419520 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 140111069022848 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 140111060626176 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 140111052229504 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 140111043832832 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 140110557342848 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 140110548946176 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 140110540549504 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 140110532152832 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 140110523756160 -> hwthread 15 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 140110515361536 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 140110506968832 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 16
PITTS: SIMD implementation: avx512
wtime: 6.82786
singular values (new):
2889.49 2889.24 2888.92 2888.68 2888.59 2888.47 2888.14 2887.94 2887.66 2887.62  2887.5 2887.39  2887.1    2887 2886.85 2886.76 2886.65 2886.54  2886.4 2886.36 2886.04  2885.9  2885.8 2885.34 2885.23 2885.09  2884.9 2884.53 2884.51 2883.95
Performance statistics:
function                                                                                                                                                                                        	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 25000000, cols: 30, reductionFactor: 37, colBlockingSize: 12)	 6.82776   	 50        	 338.443   	 0         	 43.9383   	 7.70269   
<PITTS::MultiVector<double>> :: void PITTS::randomize(MultiVector<T>&) [with T = double](rows: 25000000, cols: 30)                                                                              	 0.464026  	 1         	 0         	 0         	 12.9303   	 0         
Timing statistics:
function                                                                                                                      	 time [s]  	 #calls    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]  	 6.82776   	 50        
<PITTS::MultiVector<double>> :: void PITTS::randomize(MultiVector<T>&) [with T = double]                                      	 0.464026  	 1         
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]	 0.000149841	 1         
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]              	 1.862e-06 	 1         
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 140535956567936 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 140535948171264 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 140535939774592 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 140535931377920 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 140535922981248 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 140535914584576 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 140535906187904 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 140535423560448 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 140535415163776 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 140535406767104 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 140535398370432 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 140535389973760 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 140535381577088 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 140535373180416 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 140534886690432 -> hwthread 15 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 140534878295808 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 140534869903104 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 16
PITTS: SIMD implementation: avx512
wtime: 7.27472
singular values (new):
 2889.7 2889.35 2888.86 2888.82 2888.75 2888.53 2888.44 2888.27 2887.92 2887.62  2887.5  2887.4  2887.2 2887.16 2887.01 2886.74 2886.65 2886.42 2886.28  2886.1 2885.74 2885.66 2885.55 2885.38 2885.09 2884.89  2884.8 2884.49 2884.26 2884.23  2883.8
Performance statistics:
function                                                                                                                                                                                        	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 25000000, cols: 31, reductionFactor: 37, colBlockingSize: 12)	 7.27464   	 50        	 339.183   	 0         	 42.6139   	 7.95945   
<PITTS::MultiVector<double>> :: void PITTS::randomize(MultiVector<T>&) [with T = double](rows: 25000000, cols: 31)                                                                              	 0.479733  	 1         	 0         	 0         	 12.9238   	 0         
Timing statistics:
function                                                                                                                      	 time [s]  	 #calls    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]  	 7.27464   	 50        
<PITTS::MultiVector<double>> :: void PITTS::randomize(MultiVector<T>&) [with T = double]                                      	 0.479733  	 1         
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]	 0.000111684	 1         
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]              	 1.759e-06 	 1         
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 140697955481472 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 140697947084800 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 140697938688128 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 140697930291456 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 140697921894784 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 140697913498112 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 140697905101440 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 140697424358144 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 140697415961472 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 140697407564800 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 140697399168128 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 140697390771456 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 140697382374784 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 140697373978112 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 140696887488128 -> hwthread 15 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 140696879093504 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 140696870700800 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 16
PITTS: SIMD implementation: avx512
wtime: 7.66068
singular values (new):
2889.54 2889.48 2889.27 2889.08 2888.92 2888.62 2888.34 2887.96 2887.84 2887.56 2887.53 2887.43  2887.3 2887.17 2887.04 2886.91  2886.8 2886.65 2886.36 2886.14 2886.08 2885.95 2885.85 2885.64 2885.39 2885.29 2885.04 2884.91 2884.84 2884.61 2884.26 2883.73
Performance statistics:
function                                                                                                                                                                                        	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 25000000, cols: 32, reductionFactor: 37, colBlockingSize: 12)	 7.66058   	 50        	 343.21    	 0         	 41.7723   	 8.21621   
<PITTS::MultiVector<double>> :: void PITTS::randomize(MultiVector<T>&) [with T = double](rows: 25000000, cols: 32)                                                                              	 0.503586  	 1         	 0         	 0         	 12.7088   	 0         
Timing statistics:
function                                                                                                                      	 time [s]  	 #calls    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]  	 7.66058   	 50        
<PITTS::MultiVector<double>> :: void PITTS::randomize(MultiVector<T>&) [with T = double]                                      	 0.503586  	 1         
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]	 0.000107589	 1         
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]              	 1.768e-06 	 1         
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 140035588335488 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 140035579938816 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 140035571542144 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 140035563145472 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 140035554748800 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 140035546352128 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 140035194088064 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 140035185691392 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 140035177294720 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 140035168898048 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 140035160501376 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 140035152104704 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 140035143708032 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 140034590109184 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 140034581712512 -> hwthread 15 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 140034573317888 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 140034564925184 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 16
PITTS: SIMD implementation: avx512
wtime: 8.02462
singular values (new):
2889.77 2889.65 2889.41 2888.98 2888.63 2888.47 2888.25 2888.01 2887.97  2887.8 2887.55 2887.38 2887.35 2887.21 2887.11 2886.91 2886.74 2886.64  2886.5 2886.38 2886.24 2886.02 2885.84 2885.76 2885.58 2885.35 2885.22 2884.99 2884.69 2884.63 2884.48 2884.05 2883.75
Performance statistics:
function                                                                                                                                                                                        	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 25000000, cols: 33, reductionFactor: 37, colBlockingSize: 12)	 8.02452   	 50        	 348.442   	 0         	 41.124    	 8.47296   
<PITTS::MultiVector<double>> :: void PITTS::randomize(MultiVector<T>&) [with T = double](rows: 25000000, cols: 33)                                                                              	 0.511706  	 1         	 0         	 0         	 12.898    	 0         
Timing statistics:
function                                                                                                                      	 time [s]  	 #calls    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]  	 8.02452   	 50        
<PITTS::MultiVector<double>> :: void PITTS::randomize(MultiVector<T>&) [with T = double]                                      	 0.511706  	 1         
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]	 0.000117936	 1         
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]              	 1.574e-06 	 1         
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 140165892536192 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 140165884139520 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 140165875742848 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 140165867346176 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 140165653719424 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 140165645322752 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 140165636926080 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 140165628529408 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 140165620132736 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 140165611736064 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 140165603339392 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 140165049740544 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 140165041343872 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 140165032947200 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 140165024550528 -> hwthread 15 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 140165016155904 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 140165007763200 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 16
PITTS: SIMD implementation: avx512
wtime: 8.5051
singular values (new):
2890.09 2889.61 2889.34    2889 2888.81 2888.75 2888.39 2888.28 2887.93 2887.92 2887.71 2887.67 2887.51 2887.32 2887.04 2886.89 2886.79 2886.69 2886.52 2886.21 2886.08 2885.92 2885.81 2885.63 2885.46  2885.2 2885.01 2884.87 2884.76  2884.5 2884.23 2883.98 2883.93 2883.68
Performance statistics:
function                                                                                                                                                                                        	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 25000000, cols: 34, reductionFactor: 37, colBlockingSize: 12)	 8.50501   	 50        	 348.984   	 0         	 39.9765   	 8.72972   
<PITTS::MultiVector<double>> :: void PITTS::randomize(MultiVector<T>&) [with T = double](rows: 25000000, cols: 34)                                                                              	 0.529042  	 1         	 0         	 0         	 12.8534   	 0         
Timing statistics:
function                                                                                                                      	 time [s]  	 #calls    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]  	 8.50501   	 50        
<PITTS::MultiVector<double>> :: void PITTS::randomize(MultiVector<T>&) [with T = double]                                      	 0.529042  	 1         
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]	 0.000119363	 1         
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]              	 1.601e-06 	 1         
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 140506817841024 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 140506809444352 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 140506801047680 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 140506792651008 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 140506784254336 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 140506432530944 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 140506424134272 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 140506415737600 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 140506407340928 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 140506398944256 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 140506390547584 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 140506382150912 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 140505895660928 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 140505887264256 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 140505878867584 -> hwthread 15 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 140505870472960 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 140505862080256 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 16
PITTS: SIMD implementation: avx512
wtime: 8.92637
singular values (new):
2889.98 2889.73 2889.15 2888.97 2888.84 2888.62 2888.49 2888.35 2888.21 2887.98 2887.87 2887.59 2887.41 2887.35 2887.13 2887.05 2886.84 2886.71 2886.62 2886.47 2886.28 2886.16 2885.93 2885.76 2885.63 2885.36 2885.33 2884.98 2884.76 2884.51 2884.37 2884.29 2884.04 2883.87  2883.2
Performance statistics:
function                                                                                                                                                                                        	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 25000000, cols: 35, reductionFactor: 37, colBlockingSize: 12)	 8.92628   	 50        	 352.361   	 0         	 39.2101   	 8.98647   
<PITTS::MultiVector<double>> :: void PITTS::randomize(MultiVector<T>&) [with T = double](rows: 25000000, cols: 35)                                                                              	 0.546168  	 1         	 0         	 0         	 12.8166   	 0         
Timing statistics:
function                                                                                                                      	 time [s]  	 #calls    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]  	 8.92628   	 50        
<PITTS::MultiVector<double>> :: void PITTS::randomize(MultiVector<T>&) [with T = double]                                      	 0.546168  	 1         
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]	 0.00011442	 1         
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]              	 1.598e-06 	 1         
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 140122540971904 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 140122532575232 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 140122524178560 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 140122515781888 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 140122301393280 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 140122292996608 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 140122284599936 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 140122276203264 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 140122267806592 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 140122259409920 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 140122251013248 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 140121697414400 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 140121689017728 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 140121680621056 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 140121672224384 -> hwthread 15 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 140121663829760 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 140121655437056 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 16
PITTS: SIMD implementation: avx512
wtime: 8.88037
singular values (new):
2890.21 2889.51  2889.3 2889.06 2889.02 2888.78 2888.48  2888.3 2888.22    2888 2887.92 2887.85 2887.82  2887.4 2887.33 2887.13 2886.93 2886.87 2886.65 2886.47 2886.42  2886.1 2885.99 2885.93 2885.77 2885.49  2885.4 2885.39 2885.02 2884.87 2884.66 2884.63 2884.48 2884.12 2883.85 2883.32
Performance statistics:
function                                                                                                                                                                                        	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 25000000, cols: 36, reductionFactor: 37, colBlockingSize: 12)	 8.88028   	 50        	 374.714   	 0         	 40.5393   	 9.24323   
<PITTS::MultiVector<double>> :: void PITTS::randomize(MultiVector<T>&) [with T = double](rows: 25000000, cols: 36)                                                                              	 0.560284  	 1         	 0         	 0         	 12.8506   	 0         
Timing statistics:
function                                                                                                                      	 time [s]  	 #calls    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]  	 8.88028   	 50        
<PITTS::MultiVector<double>> :: void PITTS::randomize(MultiVector<T>&) [with T = double]                                      	 0.560284  	 1         
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]	 0.000128939	 1         
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]              	 1.897e-06 	 1         
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 140141618325376 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 140141609928704 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 140141601532032 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 140141593135360 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 140141584738688 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 140141576342016 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 140141226093184 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 140141217696512 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 140141209299840 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 140141200903168 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 140141192506496 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 140141184109824 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 140141175713152 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 140140622114304 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 140140613717632 -> hwthread 15 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 140140605323008 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 140140596930304 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 16
PITTS: SIMD implementation: avx512
wtime: 9.41349
singular values (new):
2890.02 2889.57 2889.28 2889.15  2889.1 2888.89 2888.66 2888.51 2888.41 2888.21 2888.16 2887.97  2887.8 2887.53 2887.27  2887.1 2886.99  2886.9 2886.85 2886.69 2886.45 2886.32 2886.24 2886.02 2885.85 2885.68 2885.53 2885.34 2885.26 2885.16 2885.08 2884.81 2884.46 2884.31 2884.12 2884.02 2883.81
Performance statistics:
function                                                                                                                                                                                        	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 25000000, cols: 37, reductionFactor: 37, colBlockingSize: 12)	 9.4134    	 50        	 373.404   	 0         	 39.3057   	 9.49999   
<PITTS::MultiVector<double>> :: void PITTS::randomize(MultiVector<T>&) [with T = double](rows: 25000000, cols: 37)                                                                              	 0.582121  	 1         	 0         	 0         	 12.7121   	 0         
Timing statistics:
function                                                                                                                      	 time [s]  	 #calls    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]  	 9.4134    	 50        
<PITTS::MultiVector<double>> :: void PITTS::randomize(MultiVector<T>&) [with T = double]                                      	 0.582121  	 1         
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]	 0.000128989	 1         
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]              	 1.679e-06 	 1         
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 139743808374656 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 139743799977984 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 139743791581312 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 139743783184640 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 139743774787968 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 139743766391296 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 139743757994624 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 139743749597952 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 139743270529920 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 139743262133248 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 139743253736576 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 139743245339904 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 139743236943232 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 139743228546560 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 139743220149888 -> hwthread 15 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 139742666553088 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 139742658160384 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 16
PITTS: SIMD implementation: avx512
wtime: 9.79078
singular values (new):
2889.83 2889.61  2889.3 2889.29 2889.03  2888.9 2888.74 2888.56  2888.4  2888.3 2888.12 2887.89 2887.72  2887.5 2887.48 2887.36 2887.23 2887.07  2886.9 2886.63 2886.53  2886.4 2886.22 2886.14 2885.96 2885.93 2885.59 2885.47 2885.32 2885.06 2884.98  2884.7 2884.52 2884.35 2884.26 2883.76 2883.54 2883.46
Performance statistics:
function                                                                                                                                                                                        	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 25000000, cols: 38, reductionFactor: 37, colBlockingSize: 12)	 9.7907    	 50        	 378.682   	 0         	 38.8124   	 9.75674   
<PITTS::MultiVector<double>> :: void PITTS::randomize(MultiVector<T>&) [with T = double](rows: 25000000, cols: 38)                                                                              	 0.586818  	 1         	 0         	 0         	 12.9512   	 0         
Timing statistics:
function                                                                                                                      	 time [s]  	 #calls    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]  	 9.7907    	 50        
<PITTS::MultiVector<double>> :: void PITTS::randomize(MultiVector<T>&) [with T = double]                                      	 0.586818  	 1         
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]	 0.000147647	 1         
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]              	 1.67e-06  	 1         
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 140376261834624 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 140376253437952 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 140376174225536 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 140376165828864 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 140376157432192 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 140376149035520 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 140376140638848 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 140376132242176 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 140376123845504 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 140375570246656 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 140375561849984 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 140375553453312 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 140375545056640 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 140375536659968 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 140375528263296 -> hwthread 15 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 140375519868672 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 140375033378560 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 16
PITTS: SIMD implementation: avx512
wtime: 10.2248
singular values (new):
2890.13 2889.92 2889.68 2889.37 2889.18 2889.07 2888.83 2888.52 2888.41 2888.23 2888.13 2887.91 2887.75 2887.65 2887.46 2887.37 2887.28 2887.13 2887.05    2887 2886.87 2886.66 2886.32 2886.29 2886.14 2885.95 2885.78  2885.7 2885.54  2885.4 2885.23 2885.01 2884.96 2884.76 2884.35 2884.11    2884 2883.97 2883.46
Performance statistics:
function                                                                                                                                                                                        	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 25000000, cols: 39, reductionFactor: 37, colBlockingSize: 12)	 10.2247   	 50        	 381.944   	 0         	 38.143    	 10.0135   
<PITTS::MultiVector<double>> :: void PITTS::randomize(MultiVector<T>&) [with T = double](rows: 25000000, cols: 39)                                                                              	 0.604303  	 1         	 0         	 0         	 12.9074   	 0         
Timing statistics:
function                                                                                                                      	 time [s]  	 #calls    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]  	 10.2247   	 50        
<PITTS::MultiVector<double>> :: void PITTS::randomize(MultiVector<T>&) [with T = double]                                      	 0.604303  	 1         
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]	 0.00012992	 1         
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]              	 1.992e-06 	 1         
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 140521135384448 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 140521126987776 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 140521118591104 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 140521110194432 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 140521101797760 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 140521093401088 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 140521085004416 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 140521076607744 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 140520592501632 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 140520584104960 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 140520575708288 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 140520567311616 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 140520558914944 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 140520550518272 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 140520542121600 -> hwthread 15 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 140519988524800 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 140519980132096 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 16
PITTS: SIMD implementation: avx512
wtime: 10.8417
singular values (new):
2890.23 2889.89 2889.62 2889.58  2889.2 2889.01 2888.79 2888.62 2888.47 2888.26 2888.16 2887.97 2887.85 2887.71 2887.55 2887.46 2887.21  2887.1 2886.96 2886.61 2886.59  2886.5  2886.3 2886.21 2886.15 2886.01 2885.76 2885.71 2885.36 2885.29 2885.12 2885.06 2884.87  2884.7  2884.6 2884.25 2884.22 2884.08 2883.96 2883.43
Performance statistics:
function                                                                                                                                                                                        	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 25000000, cols: 40, reductionFactor: 37, colBlockingSize: 12)	 10.8416   	 50        	 378.921   	 0         	 36.895    	 10.2703   
<PITTS::MultiVector<double>> :: void PITTS::randomize(MultiVector<T>&) [with T = double](rows: 25000000, cols: 40)                                                                              	 0.619485  	 1         	 0         	 0         	 12.914    	 0         
Timing statistics:
function                                                                                                                      	 time [s]  	 #calls    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]  	 10.8416   	 50        
<PITTS::MultiVector<double>> :: void PITTS::randomize(MultiVector<T>&) [with T = double]                                      	 0.619485  	 1         
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]	 0.000144918	 1         
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]              	 7.724e-06 	 1         
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 140136122783616 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 140136114386944 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 140136105990272 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 140136097593600 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 140136089196928 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 140136080800256 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 140136072403584 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 140135588948736 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 140135580552064 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 140135572155392 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 140135563758720 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 140135555362048 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 140135546965376 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 140135538568704 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 140135052078720 -> hwthread 15 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 140135043684096 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 140135035291392 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 16
PITTS: SIMD implementation: avx512
wtime: 11.1659
singular values (new):
2890.31  2890.1 2889.65 2889.45 2889.28 2889.26 2889.17 2888.72 2888.48 2888.29 2888.24 2888.03 2887.83 2887.73 2887.66 2887.36  2887.3 2887.17 2886.99 2886.88 2886.74 2886.65 2886.55 2886.42 2886.19 2886.08 2885.94 2885.86 2885.65 2885.28 2885.15 2885.05 2885.03 2884.56  2884.5 2884.44 2884.33 2884.23  2884.1 2883.52 2883.18
Performance statistics:
function                                                                                                                                                                                        	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 25000000, cols: 41, reductionFactor: 37, colBlockingSize: 12)	 11.1658   	 50        	 386.544   	 0         	 36.7192   	 10.527    
<PITTS::MultiVector<double>> :: void PITTS::randomize(MultiVector<T>&) [with T = double](rows: 25000000, cols: 41)                                                                              	 0.64399   	 1         	 0         	 0         	 12.7331   	 0         
Timing statistics:
function                                                                                                                      	 time [s]  	 #calls    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]  	 11.1658   	 50        
<PITTS::MultiVector<double>> :: void PITTS::randomize(MultiVector<T>&) [with T = double]                                      	 0.64399   	 1         
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]	 0.000142544	 1         
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]              	 1.33e-06  	 1         
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 140667902433152 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 140667894036480 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 140667885639808 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 140667877243136 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 140667868846464 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 140667860449792 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 140667852053120 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 140667843656448 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 140667359587200 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 140667351190528 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 140667342793856 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 140667334397184 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 140667326000512 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 140667317603840 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 140667309207168 -> hwthread 15 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 140666755610368 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 140666747217664 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 16
PITTS: SIMD implementation: avx512
wtime: 11.6123
singular values (new):
2889.94 2889.69 2889.51 2889.35 2889.21 2889.02 2888.91 2888.62 2888.46 2888.42 2888.37 2888.22 2887.94 2887.81 2887.57 2887.48 2887.38 2887.21 2886.97  2886.9 2886.77 2886.72 2886.62 2886.48 2886.38 2886.13 2885.96 2885.76 2885.68 2885.47 2885.28 2885.23 2884.85 2884.84 2884.64 2884.48 2884.29 2884.25 2884.01 2883.79 2883.55 2883.37
Performance statistics:
function                                                                                                                                                                                        	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 25000000, cols: 42, reductionFactor: 37, colBlockingSize: 12)	 11.6123   	 50        	 390.035   	 0         	 36.1687   	 10.7838   
<PITTS::MultiVector<double>> :: void PITTS::randomize(MultiVector<T>&) [with T = double](rows: 25000000, cols: 42)                                                                              	 0.654122  	 1         	 0         	 0         	 12.8416   	 0         
Timing statistics:
function                                                                                                                      	 time [s]  	 #calls    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]  	 11.6123   	 50        
<PITTS::MultiVector<double>> :: void PITTS::randomize(MultiVector<T>&) [with T = double]                                      	 0.654122  	 1         
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]	 0.000164202	 1         
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]              	 2.031e-06 	 1         
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 139631804598144 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 139631796201472 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 139631787804800 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 139631779408128 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 139631771011456 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 139631762614784 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 139631754218112 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 139631745821440 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 139631265835904 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 139631257439232 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 139631249042560 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 139631240645888 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 139631232249216 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 139631223852544 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 139631215455872 -> hwthread 15 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 139630661859072 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 139630653466368 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 16
PITTS: SIMD implementation: avx512
wtime: 12.2006
singular values (new):
   2890 2889.88 2889.83 2889.57  2889.2 2889.11 2888.85 2888.77  2888.5 2888.25 2888.19    2888 2887.83 2887.76 2887.56 2887.45 2887.27 2887.18 2887.13 2886.92  2886.8 2886.65 2886.56 2886.35 2886.26 2886.18 2885.95 2885.91 2885.74 2885.58 2885.47 2885.31 2885.16 2884.98 2884.86 2884.73 2884.68  2884.3 2884.24 2884.12 2883.89 2883.66 2883.34
Performance statistics:
function                                                                                                                                                                                        	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 25000000, cols: 43, reductionFactor: 37, colBlockingSize: 12)	 12.2006   	 50        	 389.116   	 0         	 35.2443   	 11.0405   
<PITTS::MultiVector<double>> :: void PITTS::randomize(MultiVector<T>&) [with T = double](rows: 25000000, cols: 43)                                                                              	 0.670659  	 1         	 0         	 0         	 12.8232   	 0         
Timing statistics:
function                                                                                                                      	 time [s]  	 #calls    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]  	 12.2006   	 50        
<PITTS::MultiVector<double>> :: void PITTS::randomize(MultiVector<T>&) [with T = double]                                      	 0.670659  	 1         
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]	 0.000144476	 1         
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]              	 2.639e-06 	 1         
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 140608218175360 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 140608209778688 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 140608201382016 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 140608192985344 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 140608184588672 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 140607834024448 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 140607825627776 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 140607817231104 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 140607808834432 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 140607800437760 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 140607792041088 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 140607783644416 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 140607297154432 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 140607288757760 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 140607280361088 -> hwthread 15 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 140607271966464 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 140607263573760 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 16
PITTS: SIMD implementation: avx512
wtime: 12.6847
singular values (new):
 2890.1 2889.83 2889.62 2889.38 2889.13 2889.02  2888.9 2888.71 2888.59 2888.37 2888.25 2888.09 2887.99 2887.93 2887.69 2887.61 2887.51 2887.37 2887.18 2887.12 2886.84 2886.74 2886.58 2886.46  2886.4 2886.24 2886.14 2886.07 2885.83 2885.75 2885.71 2885.62 2885.31  2885.2 2885.08 2884.86  2884.8 2884.72 2884.63 2884.32 2884.08 2883.94 2883.51 2883.19
Performance statistics:
function                                                                                                                                                                                        	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 25000000, cols: 44, reductionFactor: 37, colBlockingSize: 12)	 12.6846   	 50        	 391.878   	 0         	 34.6878   	 11.2973   
<PITTS::MultiVector<double>> :: void PITTS::randomize(MultiVector<T>&) [with T = double](rows: 25000000, cols: 44)                                                                              	 0.681193  	 1         	 0         	 0         	 12.9185   	 0         
Timing statistics:
function                                                                                                                      	 time [s]  	 #calls    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]  	 12.6846   	 50        
<PITTS::MultiVector<double>> :: void PITTS::randomize(MultiVector<T>&) [with T = double]                                      	 0.681193  	 1         
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]	 0.000154275	 1         
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]              	 1.699e-06 	 1         
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 139832594147200 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 139832585750528 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 139832577353856 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 139832568957184 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 139832560560512 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 139832552163840 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 139832543767168 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 139832535370496 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 139832055556992 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 139832047160320 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 139832038763648 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 139832030366976 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 139832021970304 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 139832013573632 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 139832005176960 -> hwthread 15 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 139831451580160 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 139831443187456 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 16
PITTS: SIMD implementation: avx512
wtime: 13.1519
singular values (new):
2890.68 2890.39 2889.98 2889.78 2889.38 2889.37 2889.21 2889.07 2888.83 2888.79 2888.45 2888.39 2888.28 2888.19 2887.85 2887.67 2887.55 2887.44 2887.32 2887.16 2886.94 2886.92 2886.63 2886.51 2886.42 2886.41 2886.27 2886.17    2886 2885.95 2885.68 2885.61 2885.49 2885.16 2885.15 2884.75 2884.71 2884.65  2884.4 2884.34 2884.01    2884 2883.76 2883.59 2883.27
Performance statistics:
function                                                                                                                                                                                        	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 25000000, cols: 45, reductionFactor: 37, colBlockingSize: 12)	 13.1518   	 50        	 395.332   	 0         	 34.216    	 11.554    
<PITTS::MultiVector<double>> :: void PITTS::randomize(MultiVector<T>&) [with T = double](rows: 25000000, cols: 45)                                                                              	 0.70004   	 1         	 0         	 0         	 12.8564   	 0         
Timing statistics:
function                                                                                                                      	 time [s]  	 #calls    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]  	 13.1518   	 50        
<PITTS::MultiVector<double>> :: void PITTS::randomize(MultiVector<T>&) [with T = double]                                      	 0.70004   	 1         
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]	 0.000152201	 1         
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]              	 1.516e-06 	 1         
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 140302889793408 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 140302881396736 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 140302873000064 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 140302864603392 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 140302856206720 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 140302847810048 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 140302839413376 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 140302354475776 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 140302346079104 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 140302337682432 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 140302329285760 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 140302320889088 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 140302312492416 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 140302304095744 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 140301817605760 -> hwthread 15 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 140301809211136 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 140301800818432 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 16
PITTS: SIMD implementation: avx512
wtime: 13.76
singular values (new):
2890.46 2890.31 2890.04 2889.87 2889.47 2889.32 2889.02 2888.91 2888.75 2888.62 2888.55 2888.33 2888.08  2887.9 2887.76 2887.73 2887.61 2887.58 2887.47 2887.25 2887.16 2886.99 2886.94 2886.75  2886.7  2886.5 2886.33 2886.27 2886.14    2886 2885.88 2885.56 2885.42 2885.36 2885.16 2885.01 2884.78  2884.7 2884.59 2884.47 2884.26 2883.95 2883.66 2883.48 2883.36  2883.2
Performance statistics:
function                                                                                                                                                                                        	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 25000000, cols: 46, reductionFactor: 37, colBlockingSize: 12)	 13.7599   	 50        	 394.84    	 0         	 33.4305   	 11.8108   
<PITTS::MultiVector<double>> :: void PITTS::randomize(MultiVector<T>&) [with T = double](rows: 25000000, cols: 46)                                                                              	 0.717703  	 1         	 0         	 0         	 12.8187   	 0         
Timing statistics:
function                                                                                                                      	 time [s]  	 #calls    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]  	 13.7599   	 50        
<PITTS::MultiVector<double>> :: void PITTS::randomize(MultiVector<T>&) [with T = double]                                      	 0.717703  	 1         
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]	 0.000167204	 1         
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]              	 1.67e-06  	 1         
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 140149206300544 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 140149197903872 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 140149189507200 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 140149181110528 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 140149172713856 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 140149164317184 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 140149155920512 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 140148675177216 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 140148666780544 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 140148658383872 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 140148649987200 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 140148641590528 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 140148633193856 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 140148624797184 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 140148138307200 -> hwthread 15 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 140148129912576 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 140148121519872 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 16
PITTS: SIMD implementation: avx512
wtime: 14.2383
singular values (new):
2890.31  2890.1  2889.8 2889.68 2889.55  2889.3 2889.14 2888.94 2888.87 2888.75 2888.55 2888.36 2888.17 2888.11 2887.98  2887.7 2887.66 2887.54 2887.42 2887.19  2887.1 2887.02 2886.95 2886.76 2886.62  2886.5 2886.26  2886.1 2885.87 2885.76 2885.67  2885.5 2885.35 2885.28 2885.05 2884.97 2884.94 2884.81 2884.75 2884.56 2884.31 2884.13 2883.94 2883.83  2883.6 2883.36 2883.17
Performance statistics:
function                                                                                                                                                                                        	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 25000000, cols: 47, reductionFactor: 37, colBlockingSize: 12)	 14.2382   	 50        	 398.348   	 0         	 33.0098   	 12.0675   
<PITTS::MultiVector<double>> :: void PITTS::randomize(MultiVector<T>&) [with T = double](rows: 25000000, cols: 47)                                                                              	 0.734454  	 1         	 0         	 0         	 12.7986   	 0         
Timing statistics:
function                                                                                                                      	 time [s]  	 #calls    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]  	 14.2382   	 50        
<PITTS::MultiVector<double>> :: void PITTS::randomize(MultiVector<T>&) [with T = double]                                      	 0.734454  	 1         
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]	 0.000166395	 1         
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]              	 2.687e-06 	 1         
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 140338954995584 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 140338946598912 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 140338938202240 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 140338727479552 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 140338719082880 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 140338710686208 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 140338702289536 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 140338693892864 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 140338685496192 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 140338677099520 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 140338190609536 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 140338182212864 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 140338173816192 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 140338165419520 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 140338157022848 -> hwthread 15 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 140338148628224 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 140338140235520 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 16
PITTS: SIMD implementation: avx512
wtime: 14.2273
singular values (new):
2890.58 2890.21 2890.05 2889.86 2889.69 2889.45  2889.3 2889.19 2889.09 2888.77 2888.59 2888.43 2888.19 2888.17 2888.13 2887.82 2887.68 2887.57 2887.47 2887.29 2887.26 2887.12 2886.95 2886.87 2886.55 2886.39 2886.31 2886.17 2886.11 2885.97 2885.86 2885.79  2885.7 2885.68  2885.4 2885.14 2884.98 2884.94  2884.7 2884.65 2884.44 2884.33 2884.14 2884.05 2883.97 2883.57 2883.44 2882.92
Performance statistics:
function                                                                                                                                                                                        	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 25000000, cols: 48, reductionFactor: 37, colBlockingSize: 12)	 14.2272   	 50        	 415.8     	 0         	 33.7382   	 12.3243   
<PITTS::MultiVector<double>> :: void PITTS::randomize(MultiVector<T>&) [with T = double](rows: 25000000, cols: 48)                                                                              	 0.750635  	 1         	 0         	 0         	 12.7892   	 0         
Timing statistics:
function                                                                                                                      	 time [s]  	 #calls    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]  	 14.2272   	 50        
<PITTS::MultiVector<double>> :: void PITTS::randomize(MultiVector<T>&) [with T = double]                                      	 0.750635  	 1         
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]	 0.000169799	 1         
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]              	 2.01e-06  	 1         
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 140402022107008 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 140401944029184 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 140401935632512 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 140401927235840 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 140401918839168 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 140401910442496 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 140401902045824 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 140401893649152 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 140401407159168 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 140401398762496 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 140401390365824 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 140401381969152 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 140401373572480 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 140401365175808 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 140401356779136 -> hwthread 15 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 140400870291200 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 140400861898496 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 16
PITTS: SIMD implementation: avx512
wtime: 14.8912
singular values (new):
2890.46 2890.39  2889.9 2889.67  2889.5  2889.4 2889.22 2889.11 2888.88 2888.86 2888.65 2888.44 2888.31 2888.26 2887.96 2887.83 2887.78 2887.61 2887.58 2887.36 2887.29  2887.1 2886.94 2886.92 2886.77 2886.62 2886.56 2886.42 2886.21 2886.03 2885.96 2885.84 2885.77 2885.62  2885.5 2885.42 2885.23 2884.97 2884.85 2884.76 2884.62 2884.55 2884.44 2883.89 2883.79 2883.56 2883.42  2883.4 2883.21
Performance statistics:
function                                                                                                                                                                                        	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 25000000, cols: 49, reductionFactor: 37, colBlockingSize: 12)	 14.8911   	 50        	 413.987   	 0         	 32.9056   	 12.5811   
<PITTS::MultiVector<double>> :: void PITTS::randomize(MultiVector<T>&) [with T = double](rows: 25000000, cols: 49)                                                                              	 0.759814  	 1         	 0         	 0         	 12.8979   	 0         
Timing statistics:
function                                                                                                                      	 time [s]  	 #calls    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]  	 14.8911   	 50        
<PITTS::MultiVector<double>> :: void PITTS::randomize(MultiVector<T>&) [with T = double]                                      	 0.759814  	 1         
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]	 0.000171722	 1         
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]              	 1.856e-06 	 1         
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 140418137814912 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 140418129418240 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 140418050156672 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 140418041760000 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 140418033363328 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 140418024966656 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 140418016569984 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 140418008173312 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 140417999776640 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 140417446177792 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 140417437781120 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 140417429384448 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 140417420987776 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 140417412591104 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 140417404194432 -> hwthread 15 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 140417395799808 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 140416909309696 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 16
PITTS: SIMD implementation: avx512
wtime: 15.3671
singular values (new):
2890.73 2890.29  2890.1 2889.94 2889.66 2889.55 2889.45 2889.11 2888.87 2888.75 2888.67 2888.57  2888.4  2888.3 2888.15 2888.08 2887.88 2887.61 2887.56 2887.41 2887.17 2887.15 2886.99 2886.82  2886.7 2886.59  2886.4 2886.35 2886.27 2886.16 2885.99 2885.87 2885.73 2885.61 2885.36  2885.3 2885.23 2885.06  2884.8 2884.78 2884.72 2884.58 2884.36 2884.17 2884.12 2883.73 2883.63  2883.4 2883.11 2882.85
Performance statistics:
function                                                                                                                                                                                        	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 25000000, cols: 50, reductionFactor: 37, colBlockingSize: 12)	 15.367    	 50        	 417.707   	 0         	 32.5372   	 12.8378   
<PITTS::MultiVector<double>> :: void PITTS::randomize(MultiVector<T>&) [with T = double](rows: 25000000, cols: 50)                                                                              	 0.781307  	 1         	 0         	 0         	 12.7991   	 0         
Timing statistics:
function                                                                                                                      	 time [s]  	 #calls    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]  	 15.367    	 50        
<PITTS::MultiVector<double>> :: void PITTS::randomize(MultiVector<T>&) [with T = double]                                      	 0.781307  	 1         
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]	 0.000169945	 1         
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]              	 1.403e-06 	 1         
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 140577614518144 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 140577606121472 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 140577597724800 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 140577589328128 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 140577580931456 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 140577232382464 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 140577223985792 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 140577215589120 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 140577207192448 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 140577198795776 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 140577190399104 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 140577182002432 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 140576695512448 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 140576687115776 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 140576678719104 -> hwthread 15 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 140576670324480 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 140576661931776 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 16
PITTS: SIMD implementation: avx512
wtime: 15.8538
singular values (new):
2890.54 2890.34 2890.19 2889.85 2889.78 2889.63  2889.5 2889.23 2889.08 2889.01 2888.87 2888.68 2888.52 2888.37 2888.23 2888.02 2887.94 2887.84 2887.61 2887.54 2887.46 2887.29  2887.2 2887.08 2886.89 2886.83  2886.7 2886.61  2886.3 2886.22 2886.13 2886.08  2885.8 2885.71  2885.6 2885.44 2885.35  2885.2  2884.9 2884.86 2884.58 2884.44 2884.21 2884.16 2883.93 2883.91 2883.65 2883.52 2883.37 2883.15  2882.8
Performance statistics:
function                                                                                                                                                                                        	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 25000000, cols: 51, reductionFactor: 37, colBlockingSize: 12)	 15.8537   	 50        	 421.242   	 0         	 32.1692   	 13.0946   
<PITTS::MultiVector<double>> :: void PITTS::randomize(MultiVector<T>&) [with T = double](rows: 25000000, cols: 51)                                                                              	 0.793605  	 1         	 0         	 0         	 12.8527   	 0         
Timing statistics:
function                                                                                                                      	 time [s]  	 #calls    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]  	 15.8537   	 50        
<PITTS::MultiVector<double>> :: void PITTS::randomize(MultiVector<T>&) [with T = double]                                      	 0.793605  	 1         
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]	 0.000167621	 1         
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]              	 1.782e-06 	 1         
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 140031738963840 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 140031730567168 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 140031722170496 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 140031713773824 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 140031503100288 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 140031494703616 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 140031486306944 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 140031477910272 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 140031469513600 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 140031461116928 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 140031452720256 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 140030899121408 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 140030890724736 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 140030882328064 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 140030873931392 -> hwthread 15 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 140030865536768 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 140030857144064 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 16
PITTS: SIMD implementation: avx512
wtime: 16.5879
singular values (new):
2890.63 2890.26 2889.89 2889.79 2889.64 2889.39 2889.28 2889.18 2888.89 2888.78 2888.71 2888.64  2888.4 2888.26 2888.21 2888.03 2887.88 2887.81 2887.56 2887.54 2887.45 2887.15 2887.04  2886.9 2886.81 2886.72 2886.69 2886.59 2886.44 2886.35 2886.13  2886.1 2885.91 2885.89 2885.72 2885.54  2885.5 2885.46 2885.38  2885.1 2884.93 2884.75 2884.66 2884.48 2884.37 2884.23 2883.94 2883.77 2883.53 2883.45 2882.95 2882.65
Performance statistics:
function                                                                                                                                                                                        	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 25000000, cols: 52, reductionFactor: 37, colBlockingSize: 12)	 16.5878   	 50        	 418.542   	 0         	 31.3484   	 13.3513   
<PITTS::MultiVector<double>> :: void PITTS::randomize(MultiVector<T>&) [with T = double](rows: 25000000, cols: 52)                                                                              	 0.814132  	 1         	 0         	 0         	 12.7743   	 0         
Timing statistics:
function                                                                                                                      	 time [s]  	 #calls    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]  	 16.5878   	 50        
<PITTS::MultiVector<double>> :: void PITTS::randomize(MultiVector<T>&) [with T = double]                                      	 0.814132  	 1         
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]	 0.000174584	 1         
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]              	 8.868e-06 	 1         
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 139941313128320 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 139941304731648 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 139941296334976 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 139941287938304 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 139941279541632 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 139941271144960 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 139941262748288 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 139941254351616 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 139940771916672 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 139940763520000 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 139940755123328 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 139940746726656 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 139940738329984 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 139940729933312 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 139940721536640 -> hwthread 15 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 139940167939840 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 139940159547136 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 16
PITTS: SIMD implementation: avx512
wtime: 17.0369
singular values (new):
2890.45 2890.45 2890.11 2889.99 2889.82 2889.72 2889.52 2889.33 2889.03 2888.89 2888.84 2888.74 2888.62 2888.44 2888.35 2888.28  2888.1 2888.01 2887.97 2887.71 2887.56 2887.49  2887.3 2887.27 2887.03  2886.9 2886.78 2886.68 2886.48 2886.37 2886.26  2886.2 2885.95 2885.82 2885.71 2885.54 2885.49 2885.44 2885.31 2885.02 2884.86 2884.64  2884.6 2884.57 2884.35 2884.21 2884.09 2883.97  2883.6  2883.4 2883.15 2882.95 2882.91
Performance statistics:
function                                                                                                                                                                                        	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 25000000, cols: 53, reductionFactor: 37, colBlockingSize: 12)	 17.0368   	 50        	 423.337   	 0         	 31.1092   	 13.6081   
<PITTS::MultiVector<double>> :: void PITTS::randomize(MultiVector<T>&) [with T = double](rows: 25000000, cols: 53)                                                                              	 0.832448  	 1         	 0         	 0         	 12.7335   	 0         
Timing statistics:
function                                                                                                                      	 time [s]  	 #calls    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]  	 17.0368   	 50        
<PITTS::MultiVector<double>> :: void PITTS::randomize(MultiVector<T>&) [with T = double]                                      	 0.832448  	 1         
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]	 0.000209437	 1         
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]              	 3.567e-06 	 1         
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 140580186711936 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 140580178315264 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 140580169918592 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 140580161521920 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 140580153125248 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 140580144728576 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 140580136331904 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 140580127935232 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 140579648301952 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 140579639905280 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 140579631508608 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 140579623111936 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 140579614715264 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 140579606318592 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 140579597921920 -> hwthread 15 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 140579044325120 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 140579035932416 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 16
PITTS: SIMD implementation: avx512
wtime: 17.5461
singular values (new):
2890.84 2890.41 2890.37 2890.25 2890.04 2889.79 2889.66 2889.35 2889.29 2889.06 2888.73 2888.72 2888.53 2888.46 2888.35 2888.22 2888.18 2887.96 2887.79 2887.72 2887.64 2887.54 2887.45 2887.23 2887.15  2886.9 2886.88 2886.78 2886.74 2886.52 2886.38 2886.15 2886.07 2886.02 2885.72 2885.69 2885.65 2885.57 2885.37 2885.15 2884.95 2884.89 2884.85 2884.73  2884.6 2884.27 2884.18 2884.07 2884.01 2883.77 2883.45 2883.43  2883.3 2882.85
Performance statistics:
function                                                                                                                                                                                        	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 25000000, cols: 54, reductionFactor: 37, colBlockingSize: 12)	 17.546    	 50        	 426.708   	 0         	 30.7763   	 13.8648   
<PITTS::MultiVector<double>> :: void PITTS::randomize(MultiVector<T>&) [with T = double](rows: 25000000, cols: 54)                                                                              	 0.842975  	 1         	 0         	 0         	 12.8118   	 0         
Timing statistics:
function                                                                                                                      	 time [s]  	 #calls    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]  	 17.546    	 50        
<PITTS::MultiVector<double>> :: void PITTS::randomize(MultiVector<T>&) [with T = double]                                      	 0.842975  	 1         
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]	 0.00023348	 1         
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]              	 3.743e-06 	 1         
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 140708456195968 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 140708447799296 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 140708439402624 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 140708228884736 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 140708220488064 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 140708212091392 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 140708203694720 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 140708195298048 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 140708186901376 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 140708178504704 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 140707692014720 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 140707683618048 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 140707675221376 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 140707666824704 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 140707658428032 -> hwthread 15 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 140707650033408 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 140707641640704 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 16
PITTS: SIMD implementation: avx512
wtime: 18.3152
singular values (new):
2890.48 2890.14 2889.98 2889.92 2889.82 2889.66 2889.54 2889.33 2889.13 2889.01 2888.82 2888.73 2888.64 2888.61 2888.45 2888.29 2888.23 2888.01 2887.93 2887.87 2887.82 2887.59  2887.4 2887.23 2887.14 2886.92 2886.85 2886.72 2886.59 2886.56 2886.36 2886.22 2886.02 2885.98 2885.96 2885.87 2885.78 2885.54 2885.45 2885.33 2885.28 2885.16  2885.1  2884.9 2884.72  2884.7 2884.59 2884.33 2884.11 2883.94 2883.65 2883.59 2883.32  2883.1 2882.86
Performance statistics:
function                                                                                                                                                                                        	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 25000000, cols: 55, reductionFactor: 37, colBlockingSize: 12)	 18.3151   	 50        	 424.071   	 0         	 30.03     	 14.1216   
<PITTS::MultiVector<double>> :: void PITTS::randomize(MultiVector<T>&) [with T = double](rows: 25000000, cols: 55)                                                                              	 0.860702  	 1         	 0         	 0         	 12.7803   	 0         
Timing statistics:
function                                                                                                                      	 time [s]  	 #calls    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]  	 18.3151   	 50        
<PITTS::MultiVector<double>> :: void PITTS::randomize(MultiVector<T>&) [with T = double]                                      	 0.860702  	 1         
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]	 0.000193074	 1         
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]              	 3.654e-06 	 1         
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 140565945034624 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 140565936637952 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 140565928241280 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 140565919844608 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 140565911447936 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 140565903051264 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 140565555440256 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 140565547043584 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 140565538646912 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 140565530250240 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 140565521853568 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 140565513456896 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 140565505060224 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 140564951461376 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 140564943064704 -> hwthread 15 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 140564934670080 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 140564926277376 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 16
PITTS: SIMD implementation: avx512
wtime: 18.8526
singular values (new):
2890.93 2890.47 2890.39    2890 2889.89 2889.61 2889.58 2889.53 2889.08 2888.98 2888.89 2888.81 2888.59 2888.42 2888.38 2888.28 2888.11 2888.05 2887.97 2887.62 2887.61 2887.46 2887.41 2887.28 2887.17 2887.09 2886.89 2886.83 2886.69 2886.56 2886.44  2886.4 2886.23 2886.09 2886.02 2885.92 2885.88 2885.52 2885.52 2885.38 2885.15 2884.99 2884.98 2884.93 2884.71 2884.59 2884.48 2884.21 2884.05 2883.99 2883.83 2883.65 2883.44 2883.11 2882.73 2882.43
Performance statistics:
function                                                                                                                                                                                        	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 25000000, cols: 56, reductionFactor: 37, colBlockingSize: 12)	 18.8525   	 50        	 427.1     	 0         	 29.7044   	 14.3783   
<PITTS::MultiVector<double>> :: void PITTS::randomize(MultiVector<T>&) [with T = double](rows: 25000000, cols: 56)                                                                              	 0.878153  	 1         	 0         	 0         	 12.754    	 0         
Timing statistics:
function                                                                                                                      	 time [s]  	 #calls    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]  	 18.8525   	 50        
<PITTS::MultiVector<double>> :: void PITTS::randomize(MultiVector<T>&) [with T = double]                                      	 0.878153  	 1         
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]	 0.000190267	 1         
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]              	 3.791e-06 	 1         
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 140169381795712 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 140169373399040 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 140169365002368 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 140169356605696 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 140169143380352 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 140169134983680 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 140169126587008 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 140169118190336 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 140169109793664 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 140169101396992 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 140169093000320 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 140168539401472 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 140168531004800 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 140168522608128 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 140168514211456 -> hwthread 15 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 140168505816832 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 140168497424128 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 16
PITTS: SIMD implementation: avx512
wtime: 19.3951
singular values (new):
 2890.6 2890.42  2890.3  2890.1 2889.84 2889.73 2889.63 2889.49  2889.3 2889.21 2889.02 2889.01 2888.88  2888.7 2888.58 2888.32 2888.17 2888.13 2887.85 2887.73 2887.67 2887.61 2887.44 2887.29 2887.28 2887.04 2886.98 2886.92 2886.81  2886.7  2886.5 2886.38 2886.32 2886.24 2886.08 2885.89 2885.81 2885.73 2885.71 2885.44 2885.25 2885.13 2884.94 2884.85 2884.75 2884.54 2884.51 2884.41  2884.3 2884.12 2883.94 2883.74 2883.58 2883.52 2883.08 2882.87 2882.63
Performance statistics:
function                                                                                                                                                                                        	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 25000000, cols: 57, reductionFactor: 37, colBlockingSize: 12)	 19.395    	 50        	 430.112   	 0         	 29.3891   	 14.6351   
<PITTS::MultiVector<double>> :: void PITTS::randomize(MultiVector<T>&) [with T = double](rows: 25000000, cols: 57)                                                                              	 0.891259  	 1         	 0         	 0         	 12.7909   	 0         
Timing statistics:
function                                                                                                                      	 time [s]  	 #calls    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]  	 19.395    	 50        
<PITTS::MultiVector<double>> :: void PITTS::randomize(MultiVector<T>&) [with T = double]                                      	 0.891259  	 1         
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]	 0.00020598	 1         
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]              	 2.9e-06   	 1         
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 139965672200064 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 139965663803392 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 139965655406720 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 139965647010048 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 139965638613376 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 139965630216704 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 139965621820032 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 139965613423360 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 139965132434304 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 139965124037632 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 139965115640960 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 139965107244288 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 139965098847616 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 139965090450944 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 139965082054272 -> hwthread 15 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 139964528457472 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 139964520064768 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 16
PITTS: SIMD implementation: avx512
wtime: 20.1939
singular values (new):
2891.25 2890.49 2890.39 2890.09 2889.98 2889.74 2889.59 2889.44 2889.33 2889.17 2888.97 2888.82 2888.78 2888.61 2888.55 2888.32 2888.22 2888.11 2888.02 2887.89 2887.65 2887.57 2887.38  2887.3 2887.17 2887.01 2886.91 2886.82 2886.74 2886.66 2886.55  2886.5 2886.38  2886.2 2886.12 2885.86 2885.81 2885.76 2885.69 2885.56 2885.45 2885.23 2885.08 2884.89 2884.83 2884.61 2884.58 2884.49 2884.27 2884.22 2884.06 2883.81  2883.7  2883.5 2883.39 2882.88 2882.78 2882.62
Performance statistics:
function                                                                                                                                                                                        	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 25000000, cols: 58, reductionFactor: 37, colBlockingSize: 12)	 20.1938   	 50        	 427.72    	 0         	 28.7217   	 14.8919   
<PITTS::MultiVector<double>> :: void PITTS::randomize(MultiVector<T>&) [with T = double](rows: 25000000, cols: 58)                                                                              	 0.91145   	 1         	 0         	 0         	 12.727    	 0         
Timing statistics:
function                                                                                                                      	 time [s]  	 #calls    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]  	 20.1938   	 50        
<PITTS::MultiVector<double>> :: void PITTS::randomize(MultiVector<T>&) [with T = double]                                      	 0.91145   	 1         
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]	 0.000257797	 1         
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]              	 4.266e-06 	 1         
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 140565892089728 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 140565883693056 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 140565875296384 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 140565866899712 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 140565858503040 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 140565850106368 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 140565841709696 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 140565833313024 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 140565354113920 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 140565345717248 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 140565337320576 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 140565328923904 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 140565320527232 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 140565312130560 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 140565303733888 -> hwthread 15 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 140564750137088 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 140564741744384 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 16
PITTS: SIMD implementation: avx512
wtime: 20.7208
singular values (new):
2891.17 2890.62 2890.55  2890.3 2890.03 2889.89 2889.68  2889.5  2889.4  2889.3 2889.17 2889.04 2888.93 2888.89 2888.71 2888.65 2888.51 2888.27 2888.09 2887.92 2887.85 2887.75 2887.64 2887.48 2887.37 2887.19 2887.12 2886.91 2886.87 2886.72 2886.63 2886.48 2886.43 2886.26 2886.23 2885.98 2885.91 2885.79 2885.73 2885.69 2885.49 2885.34 2885.27 2885.12 2884.97  2884.9 2884.73 2884.68 2884.61 2884.33 2884.28 2884.01 2883.72 2883.49 2883.34 2883.28 2883.19 2882.95 2882.26
Performance statistics:
function                                                                                                                                                                                        	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 25000000, cols: 59, reductionFactor: 37, colBlockingSize: 12)	 20.7207   	 50        	 431.342   	 0         	 28.474    	 15.1486   
<PITTS::MultiVector<double>> :: void PITTS::randomize(MultiVector<T>&) [with T = double](rows: 25000000, cols: 59)                                                                              	 0.927268  	 1         	 0         	 0         	 12.7256   	 0         
Timing statistics:
function                                                                                                                      	 time [s]  	 #calls    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]  	 20.7207   	 50        
<PITTS::MultiVector<double>> :: void PITTS::randomize(MultiVector<T>&) [with T = double]                                      	 0.927268  	 1         
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]	 0.000199926	 1         
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]              	 3.723e-06 	 1         
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 140117389473664 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 140117381076992 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 140117372680320 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 140117364283648 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 140117355886976 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 140117347490304 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 140116999793280 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 140116991396608 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 140116982999936 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 140116974603264 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 140116966206592 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 140116957809920 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 140116949413248 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 140116395814400 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 140116387417728 -> hwthread 15 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 140116379023104 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 140116370630400 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 16
PITTS: SIMD implementation: avx512
wtime: 20.8236
singular values (new):
2890.86  2890.5 2890.34 2890.26 2890.02 2889.86 2889.79 2889.55 2889.42 2889.26  2889.2 2888.99 2888.94 2888.86  2888.7 2888.62 2888.44 2888.34 2888.12 2888.03 2887.88 2887.74 2887.56 2887.52 2887.41 2887.32 2887.19  2886.9 2886.81 2886.67 2886.62 2886.53 2886.44 2886.34 2886.31  2886.3 2886.07 2885.85 2885.72 2885.66 2885.54 2885.51 2885.23 2885.19    2885 2884.95 2884.76 2884.56 2884.46 2884.22 2884.01 2883.91 2883.89 2883.66 2883.55  2883.4  2883.3 2882.97 2882.74 2882.56
Performance statistics:
function                                                                                                                                                                                        	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 25000000, cols: 60, reductionFactor: 37, colBlockingSize: 12)	 20.8235   	 50        	 443.885   	 0         	 28.8137   	 15.4054   
<PITTS::MultiVector<double>> :: void PITTS::randomize(MultiVector<T>&) [with T = double](rows: 25000000, cols: 60)                                                                              	 0.944381  	 1         	 0         	 0         	 12.7067   	 0         
Timing statistics:
function                                                                                                                      	 time [s]  	 #calls    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]  	 20.8235   	 50        
<PITTS::MultiVector<double>> :: void PITTS::randomize(MultiVector<T>&) [with T = double]                                      	 0.944381  	 1         
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]	 0.000211806	 1         
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]              	 3.875e-06 	 1         
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 139774903113600 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 139774894716928 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 139774811695232 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 139774803298560 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 139774794901888 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 139774786505216 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 139774778108544 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 139774769711872 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 139774761315200 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 139774207716352 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 139774199319680 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 139774190923008 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 139774182526336 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 139774174129664 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 139774165732992 -> hwthread 15 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 139774157338368 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 139773670848256 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 16
PITTS: SIMD implementation: avx512
wtime: 21.6076
singular values (new):
2890.99 2890.85 2890.54 2890.34 2890.07 2889.92 2889.79 2889.71 2889.58 2889.18 2889.07 2888.97 2888.96 2888.77 2888.64 2888.61 2888.52 2888.41  2888.1 2888.06    2888  2887.8  2887.7 2887.52 2887.43 2887.28  2887.2 2887.12 2887.06 2886.96 2886.76 2886.53 2886.43 2886.24 2886.15 2886.09 2886.06 2885.87 2885.68 2885.53 2885.44 2885.39 2885.28 2885.06    2885 2884.87 2884.76 2884.58 2884.42 2884.27 2884.14 2884.05 2883.92 2883.81 2883.77 2883.65 2883.38 2882.97 2882.81 2882.65 2882.41
Performance statistics:
function                                                                                                                                                                                        	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 25000000, cols: 61, reductionFactor: 37, colBlockingSize: 12)	 21.6075   	 50        	 442.158   	 0         	 28.2311   	 15.6621   
<PITTS::MultiVector<double>> :: void PITTS::randomize(MultiVector<T>&) [with T = double](rows: 25000000, cols: 61)                                                                              	 0.960251  	 1         	 0         	 0         	 12.705    	 0         
Timing statistics:
function                                                                                                                      	 time [s]  	 #calls    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]  	 21.6075   	 50        
<PITTS::MultiVector<double>> :: void PITTS::randomize(MultiVector<T>&) [with T = double]                                      	 0.960251  	 1         
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]	 0.000201404	 1         
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]              	 3.696e-06 	 1         
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 140480137246592 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 140480058746880 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 140480050350208 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 140480041953536 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 140480033556864 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 140480025160192 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 140480016763520 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 140480008366848 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 140479521876864 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 140479513480192 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 140479505083520 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 140479496686848 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 140479488290176 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 140479479893504 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 140479471496832 -> hwthread 15 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 140478985008896 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 140478976616192 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 16
PITTS: SIMD implementation: avx512
wtime: 22.1814
singular values (new):
2891.14 2890.87 2890.49 2890.41 2890.21 2889.98 2889.72 2889.62 2889.48 2889.42 2889.23 2889.11  2888.9 2888.78 2888.61 2888.53 2888.44 2888.23 2888.12 2888.04 2887.85 2887.77 2887.53  2887.5 2887.33 2887.23 2887.21 2887.19 2886.88  2886.8 2886.61 2886.58  2886.5 2886.41 2886.31 2886.25 2886.23 2886.02 2885.94 2885.82 2885.67 2885.65 2885.36 2885.24 2885.06 2885.03 2884.83 2884.77 2884.74 2884.51 2884.47 2884.23 2884.19  2884.1 2884.03  2883.8 2883.59 2883.46 2883.34 2883.22 2882.76 2882.74
Performance statistics:
function                                                                                                                                                                                        	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 25000000, cols: 62, reductionFactor: 37, colBlockingSize: 12)	 22.1813   	 50        	 444.957   	 0         	 27.9515   	 15.9189   
<PITTS::MultiVector<double>> :: void PITTS::randomize(MultiVector<T>&) [with T = double](rows: 25000000, cols: 62)                                                                              	 0.972509  	 1         	 0         	 0         	 12.7505   	 0         
Timing statistics:
function                                                                                                                      	 time [s]  	 #calls    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]  	 22.1813   	 50        
<PITTS::MultiVector<double>> :: void PITTS::randomize(MultiVector<T>&) [with T = double]                                      	 0.972509  	 1         
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]	 0.000217732	 1         
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]              	 3.758e-06 	 1         
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 140497153734528 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 140497145337856 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 140497136941184 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 140497128544512 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 140497120147840 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 140496768854528 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 140496760457856 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 140496752061184 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 140496743664512 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 140496735267840 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 140496726871168 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 140496718474496 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 140496231984512 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 140496223587840 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 140496215191168 -> hwthread 15 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 140496206796544 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 140496198403840 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 16
PITTS: SIMD implementation: avx512
wtime: 22.7972
singular values (new):
2890.82 2890.55 2890.44 2890.36 2890.34 2890.06 2889.87  2889.6 2889.55 2889.41 2889.21 2889.19 2888.94 2888.79 2888.72 2888.57 2888.32 2888.29 2888.22 2888.13 2888.04  2887.8 2887.69 2887.64 2887.54 2887.49 2887.47 2887.26 2887.11    2887 2886.95 2886.86 2886.75  2886.6 2886.52 2886.34 2886.17 2886.05 2885.97 2885.86 2885.61  2885.6 2885.44  2885.4 2885.32 2885.11 2885.02 2884.86 2884.81 2884.64 2884.59 2884.24 2884.14 2884.11 2884.02 2883.95 2883.68 2883.45 2883.05 2882.93 2882.83 2882.71 2882.55
Performance statistics:
function                                                                                                                                                                                        	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 25000000, cols: 63, reductionFactor: 37, colBlockingSize: 12)	 22.7972   	 50        	 447.015   	 0         	 27.6351   	 16.1756   
<PITTS::MultiVector<double>> :: void PITTS::randomize(MultiVector<T>&) [with T = double](rows: 25000000, cols: 63)                                                                              	 0.995982  	 1         	 0         	 0         	 12.6508   	 0         
Timing statistics:
function                                                                                                                      	 time [s]  	 #calls    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]  	 22.7972   	 50        
<PITTS::MultiVector<double>> :: void PITTS::randomize(MultiVector<T>&) [with T = double]                                      	 0.995982  	 1         
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]	 0.000208773	 1         
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]              	 3.563e-06 	 1         
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 140361188149120 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 140361179752448 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 140361171355776 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 140361162959104 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 140361154562432 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 140360806296064 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 140360797899392 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 140360789502720 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 140360781106048 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 140360772709376 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 140360764312704 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 140360755916032 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 140360269426048 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 140360261029376 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 140360252632704 -> hwthread 15 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 140360244238080 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 140360235845376 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 16
PITTS: SIMD implementation: avx512
wtime: 23.7632
singular values (new):
2890.97 2890.67  2890.6 2890.51 2890.21 2889.93 2889.83 2889.82 2889.57 2889.42 2889.29 2889.22 2889.01 2888.97 2888.95 2888.77 2888.65 2888.44 2888.36  2888.3 2888.01 2887.97 2887.76 2887.59 2887.51 2887.45 2887.27 2887.18 2887.11 2886.99 2886.84 2886.82 2886.73 2886.66 2886.52 2886.25  2886.2 2886.03 2885.88 2885.75 2885.68 2885.64 2885.58 2885.35 2885.17 2885.08 2884.98 2884.92 2884.87  2884.7 2884.41 2884.23 2884.16 2883.96 2883.91 2883.77 2883.73 2883.67 2883.51 2883.47 2883.11 2882.87  2882.5  2882.4
Performance statistics:
function                                                                                                                                                                                        	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 25000000, cols: 64, reductionFactor: 37, colBlockingSize: 12)	 23.7632   	 50        	 442.566   	 0         	 26.9325   	 16.4324   
<PITTS::MultiVector<double>> :: void PITTS::randomize(MultiVector<T>&) [with T = double](rows: 25000000, cols: 64)                                                                              	 1.01027   	 1         	 0         	 0         	 12.6698   	 0         
Timing statistics:
function                                                                                                                      	 time [s]  	 #calls    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]  	 23.7632   	 50        
<PITTS::MultiVector<double>> :: void PITTS::randomize(MultiVector<T>&) [with T = double]                                      	 1.01027   	 1         
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]	 0.000244633	 1         
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]              	 3.659e-06 	 1         
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 140594633713536 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 140594625316864 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 140594546468992 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 140594538072320 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 140594529675648 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 140594521278976 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 140594512882304 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 140594504485632 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 140594496088960 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 140593942490112 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 140593934093440 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 140593925696768 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 140593917300096 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 140593908903424 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 140593900506752 -> hwthread 15 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 140593892112128 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 140593405622016 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 16
PITTS: SIMD implementation: avx512
wtime: 24.3799
singular values (new):
2891.13 2890.93 2890.85 2890.51 2890.17 2889.96 2889.77 2889.59 2889.53 2889.33  2889.2 2889.08 2889.02 2888.93 2888.82 2888.67 2888.45 2888.35 2888.33  2888.2  2888.1 2887.97 2887.78 2887.73 2887.49 2887.48 2887.39 2887.25 2887.13 2887.02 2886.95 2886.87 2886.75 2886.67 2886.58 2886.45  2886.4 2886.29 2885.99 2885.94 2885.85 2885.77 2885.46 2885.43 2885.39 2885.32 2885.13 2885.07 2885.01 2884.75 2884.67  2884.5 2884.39 2884.37 2884.18 2884.08 2883.98  2883.9 2883.69 2883.49  2883.3 2883.26 2882.84 2882.76 2882.67
Performance statistics:
function                                                                                                                                                                                        	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 25000000, cols: 65, reductionFactor: 37, colBlockingSize: 12)	 24.3798   	 50        	 444.958   	 0         	 26.6615   	 16.6891   
<PITTS::MultiVector<double>> :: void PITTS::randomize(MultiVector<T>&) [with T = double](rows: 25000000, cols: 65)                                                                              	 1.02289   	 1         	 0         	 0         	 12.709    	 0         
Timing statistics:
function                                                                                                                      	 time [s]  	 #calls    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]  	 24.3798   	 50        
<PITTS::MultiVector<double>> :: void PITTS::randomize(MultiVector<T>&) [with T = double]                                      	 1.02289   	 1         
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]	 0.000222063	 1         
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]              	 3.476e-06 	 1         
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 140152862390144 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 140152853993472 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 140152845596800 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 140152634599680 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 140152626203008 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 140152617806336 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 140152609409664 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 140152601012992 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 140152592616320 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 140152584219648 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 140152097729664 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 140152089332992 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 140152080936320 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 140152072539648 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 140152064142976 -> hwthread 15 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 140152055748352 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 140152047355648 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 16
PITTS: SIMD implementation: avx512
wtime: 24.9452
singular values (new):
2891.04 2890.74 2890.73 2890.41 2890.24 2890.14  2889.9 2889.75 2889.53 2889.46 2889.43 2889.24 2889.15 2889.09 2888.87 2888.81 2888.69 2888.58 2888.55 2888.31 2888.18 2888.12 2887.95 2887.89 2887.75 2887.63 2887.52 2887.43 2887.33 2887.23 2887.02 2886.91  2886.9 2886.71 2886.59 2886.41 2886.33 2886.17 2886.09 2886.05 2885.99 2885.69 2885.54 2885.47 2885.44  2885.3 2885.15 2885.04 2884.96 2884.83 2884.69 2884.56 2884.41 2884.23 2884.06 2883.97 2883.92 2883.72 2883.58 2883.55 2883.48 2883.13 2882.97 2882.73 2882.71 2882.33
Performance statistics:
function                                                                                                                                                                                        	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 25000000, cols: 66, reductionFactor: 37, colBlockingSize: 12)	 24.9451   	 50        	 448.357   	 0         	 26.4582   	 16.9459   
<PITTS::MultiVector<double>> :: void PITTS::randomize(MultiVector<T>&) [with T = double](rows: 25000000, cols: 66)                                                                              	 1.04172   	 1         	 0         	 0         	 12.6714   	 0         
Timing statistics:
function                                                                                                                      	 time [s]  	 #calls    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]  	 24.9451   	 50        
<PITTS::MultiVector<double>> :: void PITTS::randomize(MultiVector<T>&) [with T = double]                                      	 1.04172   	 1         
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]	 0.000229332	 1         
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]              	 3.232e-06 	 1         
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 139783094409088 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 139783086012416 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 139783077615744 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 139782864759040 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 139782856362368 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 139782847965696 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 139782839569024 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 139782831172352 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 139782822775680 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 139782814379008 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 139782327889024 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 139782319492352 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 139782311095680 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 139782302699008 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 139782294302336 -> hwthread 15 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 139782285907712 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 139782277515008 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 16
PITTS: SIMD implementation: avx512
wtime: 25.8574
singular values (new):
 2891.2  2890.8 2890.71 2890.41 2890.29 2890.14 2889.96 2889.96 2889.77 2889.72 2889.57 2889.29 2889.14 2889.12 2889.01 2888.83 2888.77 2888.63 2888.51 2888.37 2888.24 2888.13 2888.07 2887.92 2887.78 2887.59 2887.52 2887.44 2887.22 2887.15  2887.1 2886.98 2886.91 2886.79 2886.67 2886.56  2886.5 2886.29 2886.15 2885.97 2885.92 2885.75 2885.62 2885.56 2885.48 2885.46 2885.29 2885.16 2885.09 2884.94 2884.83 2884.76 2884.56 2884.51 2884.22 2884.16    2884 2883.85 2883.72 2883.51 2883.48 2883.15 2883.01 2882.86 2882.77 2882.49 2882.28
Performance statistics:
function                                                                                                                                                                                        	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 25000000, cols: 67, reductionFactor: 37, colBlockingSize: 12)	 25.8573   	 50        	 445.747   	 0         	 25.9115   	 17.2027   
<PITTS::MultiVector<double>> :: void PITTS::randomize(MultiVector<T>&) [with T = double](rows: 25000000, cols: 67)                                                                              	 1.058     	 1         	 0         	 0         	 12.6654   	 0         
Timing statistics:
function                                                                                                                      	 time [s]  	 #calls    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]  	 25.8573   	 50        
<PITTS::MultiVector<double>> :: void PITTS::randomize(MultiVector<T>&) [with T = double]                                      	 1.058     	 1         
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]	 0.000224867	 1         
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]              	 3.684e-06 	 1         
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 140160473970560 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 140160465573888 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 140160457177216 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 140160448780544 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 140160440383872 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 140160431987200 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 140160083683968 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 140160075287296 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 140160066890624 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 140160058493952 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 140160050097280 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 140160041700608 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 140160033303936 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 140159479705088 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 140159471308416 -> hwthread 15 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 140159462913792 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 140159454521088 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 16
PITTS: SIMD implementation: avx512
wtime: 26.4159
singular values (new):
2891.56 2891.29 2890.61 2890.56 2890.41 2890.32  2890.2 2889.94 2889.88 2889.78 2889.62 2889.32 2889.27 2889.19 2889.05 2888.86 2888.66 2888.57 2888.53 2888.44 2888.35 2888.24 2888.14 2887.91 2887.85 2887.73 2887.62 2887.42 2887.35 2887.25 2887.13 2887.04 2886.92 2886.74 2886.68 2886.57 2886.47  2886.2 2886.15 2886.09    2886 2885.81 2885.69 2885.65 2885.54 2885.52 2885.49 2885.27 2885.24 2885.15 2885.07 2884.69 2884.57  2884.5 2884.31 2884.05 2883.99 2883.91 2883.76 2883.73 2883.64 2883.49 2883.37 2883.22 2882.82 2882.57 2882.47 2882.09
Performance statistics:
function                                                                                                                                                                                        	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 25000000, cols: 68, reductionFactor: 37, colBlockingSize: 12)	 26.4158   	 50        	 449.444   	 0         	 25.7422   	 17.4594   
<PITTS::MultiVector<double>> :: void PITTS::randomize(MultiVector<T>&) [with T = double](rows: 25000000, cols: 68)                                                                              	 1.07972   	 1         	 0         	 0         	 12.5959   	 0         
Timing statistics:
function                                                                                                                      	 time [s]  	 #calls    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]  	 26.4158   	 50        
<PITTS::MultiVector<double>> :: void PITTS::randomize(MultiVector<T>&) [with T = double]                                      	 1.07972   	 1         
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]	 0.000227772	 1         
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]              	 3.531e-06 	 1         
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 139917931460480 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 139917923063808 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 139917914667136 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 139917906270464 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 139917897873792 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 139917552249344 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 139917543852672 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 139917535456000 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 139917527059328 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 139917518662656 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 139917510265984 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 139917501869312 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 139917015379328 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 139917006982656 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 139916998585984 -> hwthread 15 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 139916990191360 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 139916981798656 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 16
PITTS: SIMD implementation: avx512
wtime: 27.0567
singular values (new):
2891.48  2891.3 2891.08 2890.66 2890.51 2890.47 2890.01 2889.88 2889.77 2889.53  2889.5 2889.37  2889.3 2889.14 2888.91 2888.73 2888.66  2888.6 2888.39 2888.35 2888.19 2888.16 2887.96 2887.84 2887.82 2887.65 2887.63 2887.53  2887.3  2887.2 2887.04 2886.95 2886.86 2886.79 2886.72 2886.55  2886.5  2886.3 2886.11 2886.03 2885.98 2885.96 2885.82 2885.78 2885.66 2885.56 2885.41 2885.38 2885.31 2885.21 2884.97 2884.89 2884.78 2884.69 2884.63 2884.43 2884.28 2884.01 2883.86 2883.76 2883.73 2883.63 2883.37 2883.17 2883.05 2882.89 2882.81  2882.6 2881.75
Performance statistics:
function                                                                                                                                                                                        	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 25000000, cols: 69, reductionFactor: 37, colBlockingSize: 12)	 27.0566   	 50        	 451.801   	 0         	 25.5022   	 17.7162   
<PITTS::MultiVector<double>> :: void PITTS::randomize(MultiVector<T>&) [with T = double](rows: 25000000, cols: 69)                                                                              	 1.08734   	 1         	 0         	 0         	 12.6915   	 0         
Timing statistics:
function                                                                                                                      	 time [s]  	 #calls    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]  	 27.0566   	 50        
<PITTS::MultiVector<double>> :: void PITTS::randomize(MultiVector<T>&) [with T = double]                                      	 1.08734   	 1         
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]	 0.000252203	 1         
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]              	 2.709e-06 	 1         
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 139859332298624 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 139859323901952 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 139859315505280 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 139859100428544 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 139859092031872 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 139859083635200 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 139859075238528 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 139859066841856 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 139859058445184 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 139859050048512 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 139858563558528 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 139858555161856 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 139858546765184 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 139858538368512 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 139858529971840 -> hwthread 15 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 139858521577216 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 139858513184512 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 16
PITTS: SIMD implementation: avx512
wtime: 27.9703
singular values (new):
2891.02  2890.9 2890.75 2890.63 2890.28 2890.11 2890.05 2889.82 2889.69 2889.55 2889.36 2889.33 2889.13 2889.08 2889.05 2888.89 2888.78 2888.73 2888.65 2888.43 2888.36 2888.28 2888.17 2888.03 2887.86 2887.84 2887.68  2887.6 2887.45 2887.39 2887.19 2887.16 2887.05 2886.88 2886.72 2886.63 2886.59  2886.5 2886.34 2886.25 2886.19 2886.12 2886.05 2885.93 2885.72 2885.69 2885.46 2885.38 2885.32 2885.17 2885.08 2885.02    2885 2884.76 2884.71 2884.58 2884.48 2884.36 2884.14 2883.93 2883.78 2883.63 2883.48 2883.44 2883.19 2883.07 2883.04 2882.63 2882.18 2882.13
Performance statistics:
function                                                                                                                                                                                        	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 25000000, cols: 70, reductionFactor: 37, colBlockingSize: 12)	 27.9702   	 50        	 449.803   	 0         	 25.0267   	 17.9729   
<PITTS::MultiVector<double>> :: void PITTS::randomize(MultiVector<T>&) [with T = double](rows: 25000000, cols: 70)                                                                              	 1.10519   	 1         	 0         	 0         	 12.6675   	 0         
Timing statistics:
function                                                                                                                      	 time [s]  	 #calls    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]  	 27.9702   	 50        
<PITTS::MultiVector<double>> :: void PITTS::randomize(MultiVector<T>&) [with T = double]                                      	 1.10519   	 1         
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]	 0.000242702	 1         
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]              	 3.763e-06 	 1         
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 140199935129472 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 140199926732800 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 140199918336128 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 140199909939456 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 140199901542784 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 140199893146112 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 140199543696000 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 140199535299328 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 140199526902656 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 140199518505984 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 140199510109312 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 140199501712640 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 140199493315968 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 140198939717120 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 140198931320448 -> hwthread 15 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 140198922925824 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 140198914533120 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 16
PITTS: SIMD implementation: avx512
wtime: 28.6971
singular values (new):
2891.23 2891.08  2890.7 2890.56 2890.42 2890.25 2890.14 2890.05 2889.93 2889.65 2889.48 2889.36 2889.23 2889.15 2889.02 2888.88 2888.83 2888.75 2888.68 2888.64 2888.42 2888.35 2888.27  2888.1 2888.02 2887.86  2887.8 2887.68 2887.58 2887.52 2887.33 2887.19 2887.13 2886.97 2886.87 2886.77 2886.66 2886.62 2886.46 2886.41 2886.32 2886.18 2886.07 2885.92 2885.81 2885.77 2885.65  2885.5  2885.4 2885.25 2885.11 2885.06 2884.98 2884.77 2884.73 2884.62 2884.47 2884.43 2884.37 2884.09 2884.01 2883.92 2883.73 2883.69  2883.4 2883.19 2883.04 2882.87  2882.6 2882.34  2882.1
Performance statistics:
function                                                                                                                                                                                        	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 25000000, cols: 71, reductionFactor: 37, colBlockingSize: 12)	 28.697    	 50        	 451.026   	 0         	 24.7413   	 18.2297   
<PITTS::MultiVector<double>> :: void PITTS::randomize(MultiVector<T>&) [with T = double](rows: 25000000, cols: 71)                                                                              	 1.12138   	 1         	 0         	 0         	 12.6629   	 0         
Timing statistics:
function                                                                                                                      	 time [s]  	 #calls    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]  	 28.697    	 50        
<PITTS::MultiVector<double>> :: void PITTS::randomize(MultiVector<T>&) [with T = double]                                      	 1.12138   	 1         
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]	 0.000246119	 1         
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]              	 3.312e-06 	 1         
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 139696644368256 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 139696562759680 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 139696554363008 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 139696545966336 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 139696537569664 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 139696529172992 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 139696520776320 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 139696512379648 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 139696025889664 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 139696017492992 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 139696009096320 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 139696000699648 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 139695992302976 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 139695983906304 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 139695975509632 -> hwthread 15 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 139695489021696 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 139695480628992 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 16
PITTS: SIMD implementation: avx512
wtime: 28.9505
singular values (new):
2891.64 2890.97 2890.74 2890.63 2890.54  2890.2 2890.02  2889.9 2889.87 2889.69 2889.56 2889.47  2889.4  2889.3 2888.99 2888.93 2888.88 2888.67 2888.57  2888.5 2888.33 2888.29 2888.16 2888.08    2888 2887.93  2887.8  2887.7 2887.52 2887.44  2887.4 2887.29 2887.07 2886.99 2886.84 2886.73  2886.6 2886.54  2886.5 2886.46 2886.36 2886.29 2886.09 2885.96 2885.89 2885.78 2885.66 2885.44  2885.4 2885.34 2885.29 2885.14 2885.05  2884.9 2884.67 2884.64 2884.49 2884.45 2884.34 2884.15 2883.87 2883.82 2883.74 2883.63 2883.37 2883.29 2883.17 2882.92 2882.84 2882.82 2882.49 2882.25
Performance statistics:
function                                                                                                                                                                                        	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 25000000, cols: 72, reductionFactor: 37, colBlockingSize: 12)	 28.9504   	 50        	 459.76    	 0         	 24.8702   	 18.4864   
<PITTS::MultiVector<double>> :: void PITTS::randomize(MultiVector<T>&) [with T = double](rows: 25000000, cols: 72)                                                                              	 1.14288   	 1         	 0         	 0         	 12.5998   	 0         
Timing statistics:
function                                                                                                                      	 time [s]  	 #calls    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]  	 28.9504   	 50        
<PITTS::MultiVector<double>> :: void PITTS::randomize(MultiVector<T>&) [with T = double]                                      	 1.14288   	 1         
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]	 0.000254254	 1         
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]              	 2.941e-06 	 1         
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 140461885601664 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 140461805135872 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 140461796739200 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 140461788342528 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 140461779945856 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 140461771549184 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 140461763152512 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 140461754755840 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 140461268265856 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 140461259869184 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 140461251472512 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 140461243075840 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 140461234679168 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 140461226282496 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 140461217885824 -> hwthread 15 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 140460731397888 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 140460723005184 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 16
PITTS: SIMD implementation: avx512
wtime: 29.9183
singular values (new):
2891.66 2891.18 2891.05 2890.78 2890.53  2890.4  2890.2 2890.06 2889.86 2889.71 2889.58 2889.54 2889.38 2889.31 2889.14 2888.96 2888.91 2888.83 2888.79 2888.63 2888.57 2888.44 2888.23  2888.1 2888.02 2887.74 2887.68 2887.65  2887.5  2887.4 2887.28  2887.2 2887.12 2887.01 2886.93 2886.68 2886.61 2886.54 2886.42 2886.39 2886.31 2886.19 2886.05 2885.99  2885.9 2885.81 2885.63 2885.59 2885.46 2885.36 2885.25  2885.1 2884.97 2884.92  2884.7 2884.65 2884.61 2884.54 2884.36 2884.23 2884.05 2883.91 2883.83 2883.66 2883.57 2883.46 2883.26 2883.04 2882.86 2882.83 2882.67 2882.38 2882.12
Performance statistics:
function                                                                                                                                                                                        	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 25000000, cols: 73, reductionFactor: 37, colBlockingSize: 12)	 29.9182   	 50        	 457.332   	 0         	 24.3999   	 18.7432   
<PITTS::MultiVector<double>> :: void PITTS::randomize(MultiVector<T>&) [with T = double](rows: 25000000, cols: 73)                                                                              	 1.16226   	 1         	 0         	 0         	 12.5617   	 0         
Timing statistics:
function                                                                                                                      	 time [s]  	 #calls    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]  	 29.9182   	 50        
<PITTS::MultiVector<double>> :: void PITTS::randomize(MultiVector<T>&) [with T = double]                                      	 1.16226   	 1         
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]	 0.000259281	 1         
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]              	 4.095e-06 	 1         
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 139942384244608 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 139942375847936 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 139942367451264 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 139942359054592 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 139942350657920 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 139942342261248 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 139942333864576 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 139942325467904 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 139941845658496 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 139941837261824 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 139941828865152 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 139941820468480 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 139941812071808 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 139941803675136 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 139941795278464 -> hwthread 15 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 139941241681664 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 139941233288960 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 16
PITTS: SIMD implementation: avx512
wtime: 30.4802
singular values (new):
2891.42 2891.33 2891.16 2890.83 2890.64 2890.56 2890.27 2890.19 2890.05 2889.99 2889.88 2889.71 2889.59  2889.5 2889.34 2889.26 2889.11 2888.98 2888.88 2888.76 2888.71 2888.51 2888.34 2888.27 2888.23 2888.05  2887.8 2887.75 2887.69 2887.61 2887.53 2887.45 2887.28 2887.08 2887.05 2887.01  2886.9 2886.72  2886.7 2886.57 2886.46 2886.45 2886.33 2886.17 2886.09 2885.99 2885.89 2885.62 2885.55 2885.51 2885.39 2885.26 2885.11 2885.04 2884.85 2884.65 2884.63 2884.53 2884.47 2884.26 2884.05 2883.99  2883.9 2883.75 2883.59 2883.54  2883.4 2883.36  2883.1 2882.79 2882.76 2882.43 2882.32  2881.9
Performance statistics:
function                                                                                                                                                                                        	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 25000000, cols: 74, reductionFactor: 37, colBlockingSize: 12)	 30.4801   	 50        	 461.285   	 0         	 24.2782   	 18.9999   
<PITTS::MultiVector<double>> :: void PITTS::randomize(MultiVector<T>&) [with T = double](rows: 25000000, cols: 74)                                                                              	 1.17721   	 1         	 0         	 0         	 12.5721   	 0         
Timing statistics:
function                                                                                                                      	 time [s]  	 #calls    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]  	 30.4801   	 50        
<PITTS::MultiVector<double>> :: void PITTS::randomize(MultiVector<T>&) [with T = double]                                      	 1.17721   	 1         
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]	 0.000240462	 1         
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]              	 3.058e-06 	 1         
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 140382308681600 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 140382300284928 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 140382291888256 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 140382079805696 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 140382071409024 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 140382063012352 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 140382054615680 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 140382046219008 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 140382037822336 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 140382029425664 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 140381542935680 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 140381534539008 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 140381526142336 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 140381517745664 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 140381509348992 -> hwthread 15 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 140381500954368 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 140381492561664 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 16
PITTS: SIMD implementation: avx512
wtime: 31.1771
singular values (new):
2891.33 2891.19    2891 2890.79 2890.47 2890.44 2890.33 2890.11 2889.87 2889.82 2889.69 2889.62 2889.36 2889.28 2889.22 2889.02 2888.96 2888.85 2888.77 2888.67 2888.45 2888.33 2888.25 2888.15 2888.07 2887.97 2887.84 2887.73  2887.7  2887.6 2887.53 2887.48 2887.36 2887.19 2887.06 2886.98 2886.79 2886.73 2886.64 2886.59 2886.44 2886.31 2886.22 2886.19  2886.1    2886 2885.89 2885.72 2885.61 2885.45 2885.41 2885.31 2885.24  2885.2 2885.02 2884.86 2884.62 2884.55  2884.5 2884.24 2884.16 2884.12 2884.04 2883.83 2883.71  2883.6  2883.5 2883.28 2883.15 2883.06  2882.8 2882.72 2882.38 2882.22 2882.11
Performance statistics:
function                                                                                                                                                                                        	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 25000000, cols: 75, reductionFactor: 37, colBlockingSize: 12)	 31.177    	 50        	 463.244   	 0         	 24.0563   	 19.2567   
<PITTS::MultiVector<double>> :: void PITTS::randomize(MultiVector<T>&) [with T = double](rows: 25000000, cols: 75)                                                                              	 1.19022   	 1         	 0         	 0         	 12.6027   	 0         
Timing statistics:
function                                                                                                                      	 time [s]  	 #calls    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]  	 31.177    	 50        
<PITTS::MultiVector<double>> :: void PITTS::randomize(MultiVector<T>&) [with T = double]                                      	 1.19022   	 1         
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]	 0.000261308	 1         
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]              	 3.365e-06 	 1         
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 139801482405760 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 139801474009088 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 139801465612416 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 139801252587776 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 139801244191104 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 139801235794432 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 139801227397760 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 139801219001088 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 139801210604416 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 139801202207744 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 139800715717760 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 139800707321088 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 139800698924416 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 139800690527744 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 139800682131072 -> hwthread 15 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 139800673736448 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 139800665343744 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 16
PITTS: SIMD implementation: avx512
wtime: 32.1659
singular values (new):
2891.62 2891.42  2891.2 2890.99 2890.84  2890.6 2890.34 2890.19 2890.03 2889.82 2889.69 2889.56 2889.47 2889.41  2889.4 2889.26 2889.16 2888.95 2888.72 2888.67 2888.52 2888.44 2888.36 2888.26 2888.18 2888.11 2888.03 2887.91 2887.82 2887.74 2887.57 2887.51 2887.37 2887.34 2887.19 2887.09  2886.9 2886.88 2886.74  2886.6 2886.57 2886.48 2886.38 2886.31 2886.21 2886.13 2885.92 2885.84 2885.72 2885.62 2885.42 2885.39 2885.27 2885.17 2885.04 2884.93 2884.71 2884.63 2884.43 2884.34 2884.32 2884.25 2884.21 2884.16 2883.89 2883.87 2883.78 2883.63 2883.54  2883.3 2883.23 2882.86 2882.78  2882.6 2882.49 2882.14
Performance statistics:
function                                                                                                                                                                                        	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 25000000, cols: 76, reductionFactor: 37, colBlockingSize: 12)	 32.1658   	 50        	 461.056   	 0         	 23.6276   	 19.5135   
<PITTS::MultiVector<double>> :: void PITTS::randomize(MultiVector<T>&) [with T = double](rows: 25000000, cols: 76)                                                                              	 1.20817   	 1         	 0         	 0         	 12.581    	 0         
Timing statistics:
function                                                                                                                      	 time [s]  	 #calls    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]  	 32.1658   	 50        
<PITTS::MultiVector<double>> :: void PITTS::randomize(MultiVector<T>&) [with T = double]                                      	 1.20817   	 1         
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]	 0.000271033	 1         
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]              	 4.271e-06 	 1         
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 140009762457472 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 140009754060800 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 140009745664128 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 140009737267456 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 140009728870784 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 140009720474112 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 140009712077440 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 140009703680768 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 140009222957952 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 140009214561280 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 140009206164608 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 140009197767936 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 140009189371264 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 140009180974592 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 140009172577920 -> hwthread 15 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 140008618981120 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 140008610588416 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 16
PITTS: SIMD implementation: avx512
wtime: 32.8877
singular values (new):
2891.39 2891.31  2890.9  2890.6  2890.5 2890.31 2890.18 2889.98 2889.93 2889.77 2889.74 2889.57 2889.53 2889.38 2889.31 2889.28 2889.17 2888.95 2888.87 2888.78 2888.61 2888.46 2888.38  2888.3 2888.15 2888.07 2888.03 2887.93 2887.65 2887.63 2887.58 2887.52 2887.43 2887.29 2887.19 2887.14 2886.92  2886.8 2886.67 2886.64 2886.51 2886.38 2886.33 2886.16 2886.13 2885.99 2885.86  2885.8 2885.68 2885.59 2885.54 2885.35 2885.31 2885.19 2885.13 2884.97 2884.88 2884.73 2884.67 2884.48 2884.47 2884.23 2884.14 2884.07 2884.03 2883.88 2883.76 2883.66 2883.63 2883.36 2883.21 2882.96  2882.9 2882.76  2882.6 2882.46 2882.15
Performance statistics:
function                                                                                                                                                                                        	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 25000000, cols: 77, reductionFactor: 37, colBlockingSize: 12)	 32.8876   	 50        	 462.883   	 0         	 23.4132   	 19.7702   
<PITTS::MultiVector<double>> :: void PITTS::randomize(MultiVector<T>&) [with T = double](rows: 25000000, cols: 77)                                                                              	 1.22935   	 1         	 0         	 0         	 12.527    	 0         
Timing statistics:
function                                                                                                                      	 time [s]  	 #calls    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]  	 32.8876   	 50        
<PITTS::MultiVector<double>> :: void PITTS::randomize(MultiVector<T>&) [with T = double]                                      	 1.22935   	 1         
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]	 0.000267421	 1         
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]              	 3.021e-06 	 1         
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 140644546045824 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 140644537649152 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 140644529252480 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 140644520855808 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 140644512459136 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 140644504062464 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 140644495665792 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 140644487269120 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 140644005702528 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 140643997305856 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 140643988909184 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 140643980512512 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 140643972115840 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 140643963719168 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 140643955322496 -> hwthread 15 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 140643401725696 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 140643393332992 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 16
PITTS: SIMD implementation: avx512
wtime: 33.5223
singular values (new):
2891.58 2891.38 2891.18 2890.76 2890.51 2890.47 2890.27 2890.15 2890.13 2889.94 2889.83 2889.71 2889.66 2889.47 2889.41 2889.25 2889.13 2889.05 2888.98 2888.82 2888.65 2888.54 2888.44 2888.33 2888.21  2888.1 2888.02 2887.95 2887.87 2887.79 2887.77 2887.66 2887.53 2887.35 2887.24 2887.18 2887.07    2887 2886.85 2886.68  2886.6 2886.53 2886.37 2886.26 2886.18  2886.1 2885.98 2885.89 2885.78 2885.66 2885.49 2885.45 2885.34 2885.21 2885.11 2885.09 2884.96 2884.76 2884.72 2884.52 2884.51 2884.37 2884.26 2884.16 2884.05 2883.92 2883.79 2883.65 2883.48 2883.32 2883.16 2882.95  2882.9 2882.78 2882.38 2882.35 2882.15 2881.93
Performance statistics:
function                                                                                                                                                                                        	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 25000000, cols: 78, reductionFactor: 37, colBlockingSize: 12)	 33.5222   	 50        	 465.992   	 0         	 23.2682   	 20.027    
<PITTS::MultiVector<double>> :: void PITTS::randomize(MultiVector<T>&) [with T = double](rows: 25000000, cols: 78)                                                                              	 1.23492   	 1         	 0         	 0         	 12.6324   	 0         
Timing statistics:
function                                                                                                                      	 time [s]  	 #calls    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]  	 33.5222   	 50        
<PITTS::MultiVector<double>> :: void PITTS::randomize(MultiVector<T>&) [with T = double]                                      	 1.23492   	 1         
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]	 0.000270624	 1         
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]              	 3.706e-06 	 1         
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 139674448136064 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 139674439739392 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 139674431342720 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 139674215508224 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 139674207111552 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 139674198714880 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 139674190318208 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 139674181921536 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 139674173524864 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 139674165128192 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 139673678638208 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 139673670241536 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 139673661844864 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 139673653448192 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 139673645051520 -> hwthread 15 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 139673636656896 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 139673628264192 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 16
PITTS: SIMD implementation: avx512
wtime: 34.6646
singular values (new):
2891.59 2891.13 2890.99 2890.72 2890.59 2890.54 2890.41 2890.17 2890.09 2890.08 2889.93 2889.87 2889.79 2889.69 2889.48 2889.44 2889.22 2889.21 2889.05 2888.93  2888.9 2888.82 2888.59 2888.47 2888.38  2888.2 2888.05 2887.92 2887.78 2887.73 2887.68 2887.58 2887.53 2887.34 2887.24 2887.23 2887.11 2887.08 2886.88 2886.81 2886.58 2886.48 2886.43 2886.25 2886.21 2886.13 2886.04 2885.97 2885.87 2885.73 2885.59 2885.55 2885.49 2885.43 2885.35 2885.16    2885 2884.93 2884.87 2884.66  2884.5 2884.45  2884.4 2884.27  2884.1 2884.04 2883.83 2883.75  2883.7 2883.63  2883.5 2883.29 2883.11 2882.99 2882.84 2882.77 2882.58 2882.02 2881.56
Performance statistics:
function                                                                                                                                                                                        	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 25000000, cols: 79, reductionFactor: 37, colBlockingSize: 12)	 34.6645   	 50        	 462.265   	 0         	 22.7899   	 20.2837   
<PITTS::MultiVector<double>> :: void PITTS::randomize(MultiVector<T>&) [with T = double](rows: 25000000, cols: 79)                                                                              	 1.25401   	 1         	 0         	 0         	 12.5996   	 0         
Timing statistics:
function                                                                                                                      	 time [s]  	 #calls    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]  	 34.6645   	 50        
<PITTS::MultiVector<double>> :: void PITTS::randomize(MultiVector<T>&) [with T = double]                                      	 1.25401   	 1         
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]	 0.000265399	 1         
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]              	 2.609e-06 	 1         
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 140323851855744 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 140323843459072 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 140323762202752 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 140323753806080 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 140323745409408 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 140323737012736 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 140323728616064 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 140323720219392 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 140323711822720 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 140323158223872 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 140323149827200 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 140323141430528 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 140323133033856 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 140323124637184 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 140323116240512 -> hwthread 15 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 140323107845888 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 140322621355776 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 16
PITTS: SIMD implementation: avx512
wtime: 35.3599
singular values (new):
2891.66 2891.35 2891.17 2890.96 2890.87  2890.6 2890.43 2890.34 2890.15 2890.08 2889.91 2889.72 2889.63 2889.43 2889.36 2889.31 2889.19 2889.07    2889 2888.81 2888.76 2888.57 2888.49 2888.41 2888.36 2888.25 2888.13 2888.11 2887.98 2887.85 2887.68  2887.6 2887.44 2887.43 2887.31 2887.18 2887.08 2886.99 2886.89 2886.81 2886.63 2886.56  2886.5 2886.43 2886.27 2886.22 2886.17 2886.04 2885.92 2885.89 2885.74 2885.65 2885.48 2885.41 2885.38 2885.22 2885.15    2885 2884.93 2884.81  2884.7 2884.53 2884.47 2884.35  2884.2 2884.14    2884 2883.85 2883.76 2883.54 2883.47 2883.43 2883.28 2882.86 2882.81 2882.71 2882.52 2882.34 2882.17  2882.1
Performance statistics:
function                                                                                                                                                                                        	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 25000000, cols: 80, reductionFactor: 37, colBlockingSize: 12)	 35.3598   	 50        	 464.721   	 0         	 22.6246   	 20.5405   
<PITTS::MultiVector<double>> :: void PITTS::randomize(MultiVector<T>&) [with T = double](rows: 25000000, cols: 80)                                                                              	 1.27654   	 1         	 0         	 0         	 12.5339   	 0         
Timing statistics:
function                                                                                                                      	 time [s]  	 #calls    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]  	 35.3598   	 50        
<PITTS::MultiVector<double>> :: void PITTS::randomize(MultiVector<T>&) [with T = double]                                      	 1.27654   	 1         
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]	 0.000292228	 1         
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]              	 2.977e-06 	 1         
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 139730179319680 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 139730170923008 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 139730162526336 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 139730154129664 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 139730145732992 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 139730137336320 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 139730128939648 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 139729647430400 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 139729639033728 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 139729630637056 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 139729622240384 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 139729613843712 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 139729605447040 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 139729597050368 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 139729110560384 -> hwthread 15 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 139729102165760 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 139729093773056 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 16
PITTS: SIMD implementation: avx512
wtime: 36.6405
singular values (new):
2891.63 2891.55 2891.17 2890.96 2890.77 2890.72 2890.49 2890.34 2890.29 2890.17 2889.97 2889.85 2889.82 2889.76 2889.34 2889.24 2889.13 2889.08 2888.99 2888.87 2888.76 2888.69 2888.65 2888.43 2888.34 2888.22 2888.16  2888.1 2888.02 2887.87 2887.82 2887.66 2887.59 2887.51 2887.47 2887.25 2887.22 2887.18 2886.98 2886.86 2886.77 2886.73  2886.5 2886.36 2886.34 2886.26 2886.18 2886.14 2886.03 2885.92 2885.85 2885.66 2885.49 2885.42 2885.33 2885.23 2885.09 2885.08 2884.91 2884.82 2884.65 2884.54 2884.45 2884.41  2884.3  2884.1 2883.98 2883.95 2883.89 2883.65 2883.51 2883.44 2883.18 2883.11 2882.91 2882.71 2882.53 2882.33  2882.3 2882.04 2881.31
Performance statistics:
function                                                                                                                                                                                        	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 25000000, cols: 81, reductionFactor: 37, colBlockingSize: 12)	 36.6404   	 50        	 459.76    	 0         	 22.1068   	 20.7972   
<PITTS::MultiVector<double>> :: void PITTS::randomize(MultiVector<T>&) [with T = double](rows: 25000000, cols: 81)                                                                              	 1.2948    	 1         	 0         	 0         	 12.5116   	 0         
Timing statistics:
function                                                                                                                      	 time [s]  	 #calls    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]  	 36.6404   	 50        
<PITTS::MultiVector<double>> :: void PITTS::randomize(MultiVector<T>&) [with T = double]                                      	 1.2948    	 1         
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]	 0.000277916	 1         
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]              	 3.55e-06  	 1         
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 139791561291648 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 139791552894976 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 139791544498304 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 139791536101632 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 139791320476032 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 139791312079360 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 139791303682688 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 139791295286016 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 139791286889344 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 139791278492672 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 139791270096000 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 139790716497152 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 139790708100480 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 139790699703808 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 139790691307136 -> hwthread 15 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 139790682912512 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 139790674519808 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 16
PITTS: SIMD implementation: avx512
wtime: 37.5701
singular values (new):
2891.89 2891.77 2891.49    2891 2890.86 2890.76 2890.59 2890.47 2890.37 2890.15  2890.1 2889.91 2889.83 2889.71  2889.6  2889.4 2889.24  2889.2  2889.1 2888.95 2888.88 2888.75 2888.69 2888.53 2888.42  2888.3  2888.2  2888.1  2888.1 2887.95  2887.9 2887.71 2887.65 2887.57 2887.46 2887.33 2887.24 2887.16 2887.11 2886.92 2886.84 2886.74 2886.58 2886.55 2886.38 2886.24 2886.23 2886.18    2886 2885.93 2885.88 2885.74 2885.66 2885.57 2885.47 2885.28 2885.13    2885 2884.89 2884.84 2884.68 2884.67 2884.52 2884.32 2884.28 2884.18  2884.1 2883.95 2883.87 2883.78 2883.63 2883.52  2883.3 2883.23 2883.16 2883.03 2882.87 2882.78 2882.68 2882.38 2882.23 2881.83
Performance statistics:
function                                                                                                                                                                                        	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 25000000, cols: 82, reductionFactor: 37, colBlockingSize: 12)	 37.57     	 50        	 459.524   	 0         	 21.826    	 21.054    
<PITTS::MultiVector<double>> :: void PITTS::randomize(MultiVector<T>&) [with T = double](rows: 25000000, cols: 82)                                                                              	 1.30279   	 1         	 0         	 0         	 12.5884   	 0         
Timing statistics:
function                                                                                                                      	 time [s]  	 #calls    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]  	 37.57     	 50        
<PITTS::MultiVector<double>> :: void PITTS::randomize(MultiVector<T>&) [with T = double]                                      	 1.30279   	 1         
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]	 0.000278445	 1         
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]              	 3.393e-06 	 1         
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 139842557769600 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 139842549372928 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 139842540976256 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 139842323212544 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 139842314815872 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 139842306419200 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 139842298022528 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 139842289625856 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 139842281229184 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 139842272832512 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 139841786342528 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 139841777945856 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 139841769549184 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 139841761152512 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 139841752755840 -> hwthread 15 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 139841744361216 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 139841735968512 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 16
PITTS: SIMD implementation: avx512
wtime: 38.3437
singular values (new):
2891.83  2891.5 2891.41 2891.14 2891.07 2890.74  2890.7 2890.54 2890.32 2890.22 2890.09 2889.93  2889.7 2889.58 2889.52 2889.42 2889.27 2889.13  2889.1 2889.01 2888.72 2888.68 2888.56 2888.49 2888.37 2888.31 2888.24  2888.1 2887.91 2887.88 2887.71 2887.64 2887.56 2887.45 2887.42 2887.27 2887.16 2887.05 2886.97 2886.86  2886.8 2886.77 2886.58 2886.48  2886.4 2886.28 2886.06 2885.99 2885.95 2885.83 2885.71 2885.62 2885.52 2885.43 2885.36  2885.3 2885.18 2885.08 2884.96 2884.82 2884.69 2884.61 2884.56 2884.49 2884.34 2884.27 2884.04 2883.91 2883.81 2883.72 2883.66 2883.53  2883.4 2883.26 2883.15 2883.07 2882.87  2882.7 2882.49 2882.31 2881.88 2881.58 2881.54
Performance statistics:
function                                                                                                                                                                                        	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 25000000, cols: 83, reductionFactor: 37, colBlockingSize: 12)	 38.3436   	 50        	 461.302   	 0         	 21.6464   	 21.3107   
<PITTS::MultiVector<double>> :: void PITTS::randomize(MultiVector<T>&) [with T = double](rows: 25000000, cols: 83)                                                                              	 1.32136   	 1         	 0         	 0         	 12.5628   	 0         
Timing statistics:
function                                                                                                                      	 time [s]  	 #calls    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]  	 38.3436   	 50        
<PITTS::MultiVector<double>> :: void PITTS::randomize(MultiVector<T>&) [with T = double]                                      	 1.32136   	 1         
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]	 0.000290102	 1         
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]              	 4.285e-06 	 1         
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 139812515223424 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 139812506826752 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 139812498430080 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 139812490033408 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 139812481636736 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 139812473240064 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 139812124224128 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 139812115827456 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 139812107430784 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 139812099034112 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 139812090637440 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 139812082240768 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 139812073844096 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 139811520245248 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 139811511848576 -> hwthread 15 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 139811503453952 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 139811495061248 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 16
PITTS: SIMD implementation: avx512
wtime: 38.7522
singular values (new):
2891.91 2891.55 2891.34 2891.02 2890.95  2890.7 2890.65 2890.57 2890.47 2890.21 2890.19 2890.09 2889.89 2889.59 2889.51 2889.46 2889.33 2889.25 2889.15 2889.02  2888.9 2888.77 2888.73 2888.67 2888.56 2888.46 2888.38 2888.21 2888.08    2888 2887.81 2887.62 2887.44 2887.39 2887.26 2887.24 2887.16 2887.05 2887.01 2886.94 2886.89 2886.78 2886.72 2886.69 2886.54 2886.46 2886.31 2886.26 2886.21 2886.11    2886  2885.8 2885.67 2885.58  2885.5 2885.43 2885.34 2885.26 2885.17 2884.95 2884.83 2884.73 2884.65  2884.5 2884.29 2884.21 2884.12    2884 2883.89 2883.78 2883.69 2883.61 2883.26 2883.19 2883.09 2883.01 2882.96 2882.93 2882.67 2882.56 2882.41 2882.24 2882.05 2881.58
Performance statistics:
function                                                                                                                                                                                        	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 25000000, cols: 84, reductionFactor: 37, colBlockingSize: 12)	 38.7521   	 50        	 467.504   	 0         	 21.6763   	 21.5675   
<PITTS::MultiVector<double>> :: void PITTS::randomize(MultiVector<T>&) [with T = double](rows: 25000000, cols: 84)                                                                              	 1.33384   	 1         	 0         	 0         	 12.5952   	 0         
Timing statistics:
function                                                                                                                      	 time [s]  	 #calls    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]  	 38.7521   	 50        
<PITTS::MultiVector<double>> :: void PITTS::randomize(MultiVector<T>&) [with T = double]                                      	 1.33384   	 1         
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]	 0.000291372	 1         
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]              	 3.55e-06  	 1         
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 139694532315008 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 139694523918336 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 139694515521664 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 139694507124992 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 139694498728320 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 139694146841088 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 139694138444416 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 139694130047744 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 139694121651072 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 139694113254400 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 139694104857728 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 139694096461056 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 139693609971072 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 139693601574400 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 139693593177728 -> hwthread 15 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 139693584783104 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 139693576390400 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 16
PITTS: SIMD implementation: avx512
wtime: 39.937
singular values (new):
2891.99 2891.59 2891.52 2891.21    2891 2890.51 2890.49 2890.44 2890.24 2890.18 2890.02 2889.98 2889.81 2889.69 2889.61 2889.49 2889.31 2889.27 2889.14 2889.09 2889.01 2888.96  2888.8  2888.7 2888.52 2888.41 2888.37 2888.31 2888.15 2888.02 2887.87 2887.86  2887.8 2887.64  2887.6 2887.47  2887.3 2887.28 2887.07 2886.95 2886.91 2886.89 2886.79 2886.66 2886.54  2886.4 2886.35 2886.22 2886.11 2886.07 2885.97 2885.87 2885.75 2885.59 2885.46  2885.4 2885.24 2885.19 2885.12 2885.06  2884.9 2884.81 2884.69  2884.5 2884.45  2884.4  2884.2  2884.1 2883.98  2883.9 2883.85 2883.77 2883.52 2883.44 2883.44 2883.35 2883.26 2883.19  2882.9 2882.77 2882.57 2882.43 2882.17 2881.99 2881.58
Performance statistics:
function                                                                                                                                                                                        	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 25000000, cols: 85, reductionFactor: 37, colBlockingSize: 12)	 39.9369   	 50        	 464.5     	 0         	 21.2837   	 21.8243   
<PITTS::MultiVector<double>> :: void PITTS::randomize(MultiVector<T>&) [with T = double](rows: 25000000, cols: 85)                                                                              	 1.35597   	 1         	 0         	 0         	 12.5371   	 0         
Timing statistics:
function                                                                                                                      	 time [s]  	 #calls    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]  	 39.9369   	 50        
<PITTS::MultiVector<double>> :: void PITTS::randomize(MultiVector<T>&) [with T = double]                                      	 1.35597   	 1         
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]	 0.00027588	 1         
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]              	 3.177e-06 	 1         
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 139930913101696 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 139930904705024 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 139930896308352 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 139930887911680 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 139930879515008 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 139930871118336 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 139930862721664 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 139930854324992 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 139930370042752 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 139930361646080 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 139930353249408 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 139930344852736 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 139930336456064 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 139930328059392 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 139930319662720 -> hwthread 15 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 139929766065920 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 139929757673216 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 16
PITTS: SIMD implementation: avx512
wtime: 40.6016
singular values (new):
2891.79 2891.64 2891.49  2891.4 2890.98 2890.88 2890.71 2890.48 2890.37 2890.16 2890.13 2889.96 2889.91 2889.85 2889.61 2889.49 2889.38 2889.26 2889.15 2889.07 2888.96 2888.87 2888.85 2888.69 2888.58 2888.47 2888.41  2888.3 2888.13    2888 2887.92 2887.82 2887.75 2887.68 2887.64 2887.42 2887.31 2887.23 2887.08 2887.01 2886.93 2886.83 2886.73 2886.72 2886.64 2886.47 2886.35 2886.18 2886.12 2885.96 2885.93 2885.88 2885.81 2885.68 2885.58  2885.5 2885.33 2885.28 2885.21 2885.06 2884.93 2884.81 2884.73 2884.67 2884.54 2884.41 2884.33 2884.28 2884.04 2883.99  2883.9 2883.75  2883.6 2883.53 2883.44 2883.25 2883.06    2883 2882.76 2882.72 2882.58  2882.3 2882.01 2881.91 2881.87 2881.64
Performance statistics:
function                                                                                                                                                                                        	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 25000000, cols: 86, reductionFactor: 37, colBlockingSize: 12)	 40.6015   	 50        	 467.71    	 0         	 21.1816   	 22.081    
<PITTS::MultiVector<double>> :: void PITTS::randomize(MultiVector<T>&) [with T = double](rows: 25000000, cols: 86)                                                                              	 1.36992   	 1         	 0         	 0         	 12.5555   	 0         
Timing statistics:
function                                                                                                                      	 time [s]  	 #calls    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]  	 40.6015   	 50        
<PITTS::MultiVector<double>> :: void PITTS::randomize(MultiVector<T>&) [with T = double]                                      	 1.36992   	 1         
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]	 0.000277507	 1         
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]              	 3.184e-06 	 1         
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 139640055777152 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 139640047380480 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 139640038983808 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 139640030587136 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 139640022190464 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 139640013793792 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 139640005397120 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 139639520226048 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 139639511829376 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 139639503432704 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 139639495036032 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 139639486639360 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 139639478242688 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 139639469846016 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 139638983356032 -> hwthread 15 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 139638974961408 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 139638966568704 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 16
PITTS: SIMD implementation: avx512
wtime: 41.4318
singular values (new):
2892.07 2891.69 2891.45 2891.28 2891.09 2890.88 2890.79 2890.64 2890.39 2890.32 2890.24 2890.04 2889.91 2889.74 2889.65 2889.59 2889.52 2889.38 2889.32 2889.21 2889.08 2888.93 2888.87 2888.76 2888.54 2888.43 2888.38 2888.29 2888.18 2888.08 2888.03 2887.99 2887.92 2887.77 2887.72 2887.52  2887.4 2887.37 2887.24 2887.11 2886.97 2886.92 2886.84 2886.76  2886.7 2886.67 2886.41 2886.32 2886.18 2886.14 2886.06 2886.03 2885.92 2885.73  2885.6 2885.57 2885.48 2885.41 2885.32  2885.2 2885.05 2884.92 2884.73 2884.65 2884.59 2884.51 2884.39  2884.2  2884.1 2884.02 2883.93 2883.85 2883.72 2883.59  2883.5 2883.24 2883.18 2883.08 2882.89 2882.88 2882.73 2882.67 2882.41  2882.2 2882.01 2881.79 2881.61
Performance statistics:
function                                                                                                                                                                                        	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 25000000, cols: 87, reductionFactor: 37, colBlockingSize: 12)	 41.4317   	 50        	 469.059   	 0         	 20.9985   	 22.3378   
<PITTS::MultiVector<double>> :: void PITTS::randomize(MultiVector<T>&) [with T = double](rows: 25000000, cols: 87)                                                                              	 1.38636   	 1         	 0         	 0         	 12.5508   	 0         
Timing statistics:
function                                                                                                                      	 time [s]  	 #calls    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]  	 41.4317   	 50        
<PITTS::MultiVector<double>> :: void PITTS::randomize(MultiVector<T>&) [with T = double]                                      	 1.38636   	 1         
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]	 0.000289165	 1         
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]              	 3.558e-06 	 1         
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 140488426628992 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 140488418232320 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 140488409835648 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 140488401438976 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 140488393042304 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 140488044702208 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 140488036305536 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 140488027908864 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 140488019512192 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 140488011115520 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 140488002718848 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 140487994322176 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 140487507832192 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 140487499435520 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 140487491038848 -> hwthread 15 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 140487482644224 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 140487474251520 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 16
PITTS: SIMD implementation: avx512
wtime: 42.5797
singular values (new):
2892.02 2891.75 2891.55 2891.26 2891.16 2891.01 2890.91 2890.68 2890.52 2890.49 2890.39 2890.23 2890.19 2889.89 2889.76 2889.63 2889.47 2889.43 2889.35 2889.29 2889.15    2889 2888.84 2888.81 2888.72  2888.6 2888.57 2888.45 2888.32 2888.17 2887.98 2887.88 2887.74 2887.69 2887.64 2887.58 2887.42 2887.33 2887.26 2887.21 2887.08 2886.98 2886.94 2886.85 2886.75 2886.65 2886.53 2886.49 2886.33 2886.25 2886.18 2886.07 2885.91 2885.87 2885.83 2885.72 2885.62 2885.45 2885.41 2885.36 2885.26 2885.12 2884.94 2884.88 2884.78 2884.66 2884.55 2884.42 2884.28  2884.2 2884.06 2883.75 2883.67 2883.61 2883.54 2883.43 2883.36 2883.21 2883.08 2882.98 2882.81 2882.71 2882.62 2882.38 2882.25  2882.1 2881.98 2881.57
Performance statistics:
function                                                                                                                                                                                        	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 25000000, cols: 88, reductionFactor: 37, colBlockingSize: 12)	 42.5796   	 50        	 466.967   	 0         	 20.6673   	 22.5945   
<PITTS::MultiVector<double>> :: void PITTS::randomize(MultiVector<T>&) [with T = double](rows: 25000000, cols: 88)                                                                              	 1.3947    	 1         	 0         	 0         	 12.6192   	 0         
Timing statistics:
function                                                                                                                      	 time [s]  	 #calls    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]  	 42.5796   	 50        
<PITTS::MultiVector<double>> :: void PITTS::randomize(MultiVector<T>&) [with T = double]                                      	 1.3947    	 1         
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]	 0.00036639	 1         
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]              	 3.658e-06 	 1         
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 139872762750848 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 139872754354176 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 139872745957504 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 139872737560832 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 139872522201472 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 139872513804800 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 139872505408128 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 139872497011456 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 139872488614784 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 139872480218112 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 139872471821440 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 139871918222592 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 139871909825920 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 139871901429248 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 139871893032576 -> hwthread 15 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 139871884637952 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 139871876245248 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 16
PITTS: SIMD implementation: avx512
wtime: 43.3555
singular values (new):
2891.82 2891.39 2891.28 2891.22 2891.06 2890.78 2890.59 2890.45 2890.34 2890.26 2890.18 2890.11 2889.94 2889.73 2889.72 2889.66 2889.56 2889.45 2889.27 2889.17 2888.95 2888.92 2888.83  2888.8 2888.59 2888.54 2888.47 2888.29 2888.18 2888.11 2887.98 2887.94 2887.78 2887.74 2887.69 2887.64 2887.59  2887.5 2887.41 2887.29 2887.14 2887.09 2886.99 2886.92  2886.7 2886.68 2886.62 2886.56 2886.42  2886.3 2886.25 2886.22 2886.03 2885.98  2885.9 2885.71 2885.67 2885.59 2885.56  2885.5 2885.33 2885.22 2885.17 2884.93 2884.93 2884.78 2884.68 2884.62  2884.4 2884.28 2884.17 2884.04 2883.96 2883.78 2883.69 2883.64 2883.41 2883.36  2883.2 2883.08  2882.9 2882.84 2882.67 2882.64 2882.58  2882.4 2882.07 2881.87  2881.7
Performance statistics:
function                                                                                                                                                                                        	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 25000000, cols: 89, reductionFactor: 37, colBlockingSize: 12)	 43.3554   	 50        	 469.093   	 0         	 20.5281   	 22.8513   
<PITTS::MultiVector<double>> :: void PITTS::randomize(MultiVector<T>&) [with T = double](rows: 25000000, cols: 89)                                                                              	 1.41156   	 1         	 0         	 0         	 12.6102   	 0         
Timing statistics:
function                                                                                                                      	 time [s]  	 #calls    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]  	 43.3554   	 50        
<PITTS::MultiVector<double>> :: void PITTS::randomize(MultiVector<T>&) [with T = double]                                      	 1.41156   	 1         
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]	 0.000289008	 1         
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]              	 3.996e-06 	 1         
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 139638699001728 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 139638690605056 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 139638682208384 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 139638673811712 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 139638665415040 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 139638657018368 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 139638312266368 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 139638303869696 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 139638295473024 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 139638287076352 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 139638278679680 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 139638270283008 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 139638261886336 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 139637708287488 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 139637699890816 -> hwthread 15 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 139637691496192 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 139637683103488 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 16
PITTS: SIMD implementation: avx512
wtime: 44.2008
singular values (new):
2892.01 2891.51 2891.34 2891.25 2891.13 2890.97 2890.81 2890.66 2890.53 2890.49 2890.28 2890.18 2889.87  2889.8 2889.75 2889.72 2889.68 2889.59 2889.35 2889.18 2889.06 2889.04 2888.94 2888.75 2888.71 2888.59 2888.52 2888.44 2888.32 2888.26 2888.21 2888.18 2888.04 2887.87  2887.8  2887.7 2887.64 2887.54 2887.42 2887.22 2887.06    2887 2886.89 2886.79  2886.7 2886.59 2886.56 2886.44 2886.42 2886.33 2886.19 2886.15 2886.11 2885.97 2885.78 2885.78 2885.63 2885.56  2885.5 2885.43  2885.3 2885.19 2885.13 2884.98 2884.85 2884.78 2884.74 2884.59 2884.51 2884.39 2884.19 2884.18 2884.01 2883.85 2883.83 2883.76 2883.59 2883.52 2883.31 2883.22 2883.09  2882.9 2882.69 2882.65 2882.55 2882.34 2882.05 2882.01 2881.71  2881.6
Performance statistics:
function                                                                                                                                                                                        	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 25000000, cols: 90, reductionFactor: 37, colBlockingSize: 12)	 44.2007   	 50        	 470.52    	 0         	 20.3617   	 23.108    
<PITTS::MultiVector<double>> :: void PITTS::randomize(MultiVector<T>&) [with T = double](rows: 25000000, cols: 90)                                                                              	 1.43171   	 1         	 0         	 0         	 12.5723   	 0         
Timing statistics:
function                                                                                                                      	 time [s]  	 #calls    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]  	 44.2007   	 50        
<PITTS::MultiVector<double>> :: void PITTS::randomize(MultiVector<T>&) [with T = double]                                      	 1.43171   	 1         
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]	 0.000304285	 1         
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]              	 2.251e-06 	 1         
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 140089095636864 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 140089015396352 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 140089006999680 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 140088998603008 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 140088990206336 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 140088981809664 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 140088973412992 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 140088965016320 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 140088478526336 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 140088470129664 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 140088461732992 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 140088453336320 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 140088444939648 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 140088436542976 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 140088428146304 -> hwthread 15 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 140087941658368 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 140087933265664 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 16
PITTS: SIMD implementation: avx512
wtime: 45.5343
singular values (new):
2892.04 2891.88  2891.6 2891.17 2891.08 2890.96 2890.77 2890.71 2890.53 2890.47 2890.35  2890.1 2890.06 2889.95 2889.84 2889.72 2889.63 2889.48 2889.29 2889.27 2889.12 2889.06 2888.99 2888.82 2888.79 2888.67  2888.6 2888.49 2888.42 2888.32 2888.18 2887.96 2887.95 2887.86 2887.74 2887.66 2887.65 2887.56 2887.47 2887.36 2887.26  2887.1 2887.07 2886.91 2886.84 2886.74 2886.71 2886.57 2886.48 2886.33 2886.17 2886.15 2886.13 2886.01 2885.89 2885.73 2885.63 2885.58 2885.43 2885.38 2885.31 2885.12 2884.96  2884.9 2884.85 2884.78 2884.66 2884.51 2884.44 2884.29 2884.21  2884.2 2884.12 2883.83 2883.81 2883.74 2883.65 2883.51 2883.37 2883.28 2883.25 2883.15 2882.93 2882.88 2882.75 2882.52 2882.18 2882.09 2881.75 2881.63 2881.37
Performance statistics:
function                                                                                                                                                                                        	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 25000000, cols: 91, reductionFactor: 37, colBlockingSize: 12)	 45.5342   	 50        	 466.947   	 0         	 19.9851   	 23.3648   
<PITTS::MultiVector<double>> :: void PITTS::randomize(MultiVector<T>&) [with T = double](rows: 25000000, cols: 91)                                                                              	 1.44962   	 1         	 0         	 0         	 12.555    	 0         
Timing statistics:
function                                                                                                                      	 time [s]  	 #calls    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]  	 45.5342   	 50        
<PITTS::MultiVector<double>> :: void PITTS::randomize(MultiVector<T>&) [with T = double]                                      	 1.44962   	 1         
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]	 0.000314189	 1         
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]              	 2.483e-06 	 1         
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 140468449396608 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 140468440999936 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 140468432603264 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 140468424206592 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 140468415809920 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 140468407413248 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 140468399016576 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 140468390619904 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 140467912043392 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 140467903646720 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 140467895250048 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 140467886853376 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 140467878456704 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 140467870060032 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 140467861663360 -> hwthread 15 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 140467308066560 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 140467299673856 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 16
PITTS: SIMD implementation: avx512
wtime: 46.1893
singular values (new):
2892.06 2891.92 2891.63 2891.45 2891.25 2891.15 2891.02 2890.85 2890.66  2890.5  2890.3 2890.22  2890.1 2889.93 2889.87 2889.81  2889.7 2889.52 2889.33 2889.28 2889.14 2889.04 2888.99 2888.92 2888.81 2888.75 2888.67 2888.52 2888.47 2888.37 2888.22 2888.04 2888.02 2887.93 2887.76 2887.67 2887.58  2887.5 2887.46 2887.39 2887.33 2887.24  2887.1 2887.03  2886.9  2886.8 2886.76 2886.72  2886.6 2886.52 2886.44 2886.16 2886.09 2885.98 2885.97 2885.93 2885.84 2885.64 2885.59 2885.45  2885.3 2885.15 2885.14 2885.03 2884.95 2884.91 2884.89 2884.72 2884.68 2884.51 2884.43 2884.24 2884.08 2884.03 2883.99 2883.88 2883.79 2883.67 2883.53 2883.45 2883.27 2883.16 2882.96 2882.84 2882.72 2882.58 2882.54 2882.35 2882.12 2881.95 2881.75 2881.51
Performance statistics:
function                                                                                                                                                                                        	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 25000000, cols: 92, reductionFactor: 37, colBlockingSize: 12)	 46.1892   	 50        	 470.497   	 0         	 19.9181   	 23.6215   
<PITTS::MultiVector<double>> :: void PITTS::randomize(MultiVector<T>&) [with T = double](rows: 25000000, cols: 92)                                                                              	 1.47222   	 1         	 0         	 0         	 12.4981   	 0         
Timing statistics:
function                                                                                                                      	 time [s]  	 #calls    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]  	 46.1892   	 50        
<PITTS::MultiVector<double>> :: void PITTS::randomize(MultiVector<T>&) [with T = double]                                      	 1.47222   	 1         
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]	 0.000315912	 1         
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]              	 2.1491e-05	 1         
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 140401205892992 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 140401197496320 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 140401189099648 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 140401180702976 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 140401172306304 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 140401163909632 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 140401155512960 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 140400668961536 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 140400660564864 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 140400652168192 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 140400643771520 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 140400635374848 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 140400626978176 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 140400618581504 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 140400132091520 -> hwthread 15 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 140400123696896 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 140400115304192 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 16
PITTS: SIMD implementation: avx512
wtime: 47.1269
singular values (new):
2891.98 2891.69 2891.33 2891.26 2891.18    2891 2890.88 2890.85 2890.58 2890.46 2890.35 2890.19 2890.16 2890.07 2889.81 2889.75 2889.67 2889.59 2889.47 2889.39 2889.28 2889.23 2889.05 2888.97 2888.88  2888.8 2888.64  2888.5 2888.42 2888.37  2888.3 2888.24    2888 2887.93 2887.89 2887.74 2887.68 2887.58 2887.45 2887.43  2887.3 2887.22 2887.18 2887.03 2886.96 2886.94 2886.75 2886.67 2886.55 2886.43 2886.39 2886.25 2886.12    2886 2885.88 2885.86 2885.75  2885.7 2885.55  2885.4 2885.36 2885.29 2885.14 2885.07 2884.99 2884.83 2884.73  2884.7 2884.52 2884.48 2884.41 2884.33 2884.24 2884.12 2883.94 2883.89 2883.86  2883.8 2883.61 2883.56 2883.44 2883.26 2883.04 2882.93 2882.77 2882.73 2882.52 2882.32 2882.26 2882.11 2881.83 2881.67 2881.26
Performance statistics:
function                                                                                                                                                                                        	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 25000000, cols: 93, reductionFactor: 37, colBlockingSize: 12)	 47.1268   	 50        	 471.216   	 0         	 19.7341   	 23.8783   
<PITTS::MultiVector<double>> :: void PITTS::randomize(MultiVector<T>&) [with T = double](rows: 25000000, cols: 93)                                                                              	 1.48323   	 1         	 0         	 0         	 12.5402   	 0         
Timing statistics:
function                                                                                                                      	 time [s]  	 #calls    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]  	 47.1268   	 50        
<PITTS::MultiVector<double>> :: void PITTS::randomize(MultiVector<T>&) [with T = double]                                      	 1.48323   	 1         
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]	 0.000303758	 1         
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]              	 1.972e-05 	 1         
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 139626248828800 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 139626165561344 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 139626157164672 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 139626148768000 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 139626140371328 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 139626131974656 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 139626123577984 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 139626115181312 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 139625628691328 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 139625620294656 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 139625611897984 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 139625603501312 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 139625595104640 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 139625586707968 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 139625578311296 -> hwthread 15 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 139625091823360 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 139625083430656 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 16
PITTS: SIMD implementation: avx512
wtime: 48.3736
singular values (new):
2892.31 2892.05 2891.64 2891.35 2891.15 2891.12 2890.96 2890.78 2890.56 2890.45 2890.41 2890.28 2890.17 2890.02 2889.85 2889.78 2889.66 2889.55 2889.45 2889.35 2889.29 2889.22 2889.07 2889.06 2888.97  2888.9 2888.85  2888.7 2888.54 2888.46 2888.38 2888.22 2888.15 2888.07 2887.99 2887.94 2887.87 2887.71 2887.51 2887.39 2887.36 2887.31 2887.21 2887.17 2887.12  2886.9 2886.78 2886.73  2886.7 2886.53 2886.46  2886.3 2886.25 2886.18 2886.04 2885.95 2885.87 2885.82 2885.64 2885.58 2885.41  2885.4 2885.34 2885.14 2885.02 2884.98 2884.89 2884.83 2884.71 2884.52 2884.46 2884.36 2884.23  2884.1 2883.97 2883.86 2883.73 2883.66  2883.6  2883.5 2883.33 2883.25 2883.15 2882.98 2882.79  2882.7 2882.66 2882.37  2882.3 2882.02 2881.85 2881.75 2881.42 2881.23
Performance statistics:
function                                                                                                                                                                                        	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 25000000, cols: 94, reductionFactor: 37, colBlockingSize: 12)	 48.3735   	 50        	 468.997   	 0         	 19.4322   	 24.135    
<PITTS::MultiVector<double>> :: void PITTS::randomize(MultiVector<T>&) [with T = double](rows: 25000000, cols: 94)                                                                              	 1.49876   	 1         	 0         	 0         	 12.5437   	 0         
Timing statistics:
function                                                                                                                      	 time [s]  	 #calls    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]  	 48.3735   	 50        
<PITTS::MultiVector<double>> :: void PITTS::randomize(MultiVector<T>&) [with T = double]                                      	 1.49876   	 1         
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]	 0.000317501	 1         
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]              	 2.0961e-05	 1         
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 139839896770432 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 139839888373760 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 139839879977088 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 139839871580416 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 139839863183744 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 139839854787072 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 139839504640640 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 139839496243968 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 139839487847296 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 139839479450624 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 139839471053952 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 139839462657280 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 139839454260608 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 139838900661760 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 139838892265088 -> hwthread 15 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 139838883870464 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 139838875477760 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 16
PITTS: SIMD implementation: avx512
wtime: 49.2303
singular values (new):
2892.23 2891.92 2891.88  2891.4 2891.29 2891.19 2890.94  2890.7 2890.66 2890.62 2890.53 2890.37 2890.23 2890.16 2890.02 2889.92 2889.73 2889.66 2889.51 2889.39 2889.35 2889.21 2889.14 2889.03 2888.98 2888.84  2888.8 2888.74 2888.68 2888.39 2888.28 2888.22 2888.18 2888.05 2887.96 2887.87 2887.77 2887.76  2887.6 2887.51 2887.43 2887.35 2887.21 2887.05 2886.96 2886.88  2886.8 2886.74 2886.67 2886.55 2886.46  2886.4 2886.35 2886.23 2886.17 2886.04 2886.01 2885.91  2885.7 2885.61  2885.6 2885.49 2885.35 2885.25  2885.2 2885.09    2885 2884.92 2884.78 2884.63 2884.61 2884.51 2884.29  2884.2 2883.95 2883.93 2883.85 2883.66 2883.51 2883.45 2883.36 2883.33 2883.25 2883.06 2882.96 2882.73 2882.62 2882.53 2882.46 2882.35    2882 2881.94 2881.67 2881.63  2881.3
Performance statistics:
function                                                                                                                                                                                        	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 25000000, cols: 95, reductionFactor: 37, colBlockingSize: 12)	 49.2302   	 50        	 470.693   	 0         	 19.2972   	 24.3918   
<PITTS::MultiVector<double>> :: void PITTS::randomize(MultiVector<T>&) [with T = double](rows: 25000000, cols: 95)                                                                              	 1.51102   	 1         	 0         	 0         	 12.5743   	 0         
Timing statistics:
function                                                                                                                      	 time [s]  	 #calls    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]  	 49.2302   	 50        
<PITTS::MultiVector<double>> :: void PITTS::randomize(MultiVector<T>&) [with T = double]                                      	 1.51102   	 1         
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]	 0.000315726	 1         
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]              	 2.0131e-05	 1         
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 139899253434240 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 139899245037568 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 139899164420224 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 139899156023552 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 139899147626880 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 139899139230208 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 139899130833536 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 139899122436864 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 139899114040192 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 139898560441344 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 139898552044672 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 139898543648000 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 139898535251328 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 139898526854656 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 139898518457984 -> hwthread 15 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 139898510063360 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 139898023573248 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 16
PITTS: SIMD implementation: avx512
wtime: 49.7302
singular values (new):
2892.35  2891.6 2891.52 2891.44 2891.37 2891.21 2890.89 2890.78 2890.74 2890.63 2890.61 2890.49 2890.23  2890.1 2889.94 2889.87 2889.75 2889.64 2889.56 2889.49  2889.4 2889.32 2889.22 2889.08 2888.99 2888.87 2888.84  2888.7 2888.56 2888.52 2888.39 2888.32 2888.27 2888.17 2888.08    2888 2887.88 2887.83  2887.7 2887.57 2887.38 2887.32 2887.15 2887.07 2886.97 2886.94  2886.9 2886.84 2886.72 2886.55 2886.52 2886.47 2886.35 2886.21 2886.08 2886.05 2885.96 2885.88 2885.75 2885.69 2885.61 2885.44 2885.39 2885.35 2885.25  2885.1 2885.05 2884.96  2884.9 2884.77 2884.75 2884.65 2884.52  2884.4 2884.25 2884.15 2884.08 2883.97 2883.86 2883.82 2883.57 2883.53 2883.44 2883.32 2883.17 2882.94 2882.78 2882.73 2882.54 2882.51 2882.23 2882.18 2882.05 2881.77 2881.71 2881.38
Performance statistics:
function                                                                                                                                                                                        	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 25000000, cols: 96, reductionFactor: 37, colBlockingSize: 12)	 49.7301   	 50        	 475.822   	 0         	 19.3043   	 24.6486   
<PITTS::MultiVector<double>> :: void PITTS::randomize(MultiVector<T>&) [with T = double](rows: 25000000, cols: 96)                                                                              	 1.53121   	 1         	 0         	 0         	 12.5391   	 0         
Timing statistics:
function                                                                                                                      	 time [s]  	 #calls    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]  	 49.7301   	 50        
<PITTS::MultiVector<double>> :: void PITTS::randomize(MultiVector<T>&) [with T = double]                                      	 1.53121   	 1         
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]	 0.0003035 	 1         
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]              	 1.9334e-05	 1         
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 140644627617664 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 140644619220992 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 140644542572672 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 140644534176000 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 140644525779328 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 140644517382656 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 140644508985984 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 140644500589312 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 140644492192640 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 140643938593792 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 140643930197120 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 140643921800448 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 140643913403776 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 140643905007104 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 140643896610432 -> hwthread 15 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 140643888215808 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 140643401725696 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 16
PITTS: SIMD implementation: avx512
wtime: 51.3998
singular values (new):
2892.25 2891.85  2891.8 2891.68 2891.35 2891.24 2891.04 2890.96 2890.88  2890.8 2890.55 2890.35 2890.28 2890.18  2890.1 2889.98 2889.88 2889.84 2889.61 2889.52  2889.4 2889.38 2889.31 2889.04 2889.02 2888.86 2888.78  2888.7 2888.59 2888.51 2888.42 2888.36 2888.22 2888.14 2887.98 2887.93 2887.87 2887.76 2887.74 2887.65 2887.45 2887.38 2887.32 2887.24 2887.15 2887.06 2887.02 2886.93 2886.81 2886.76  2886.6 2886.57 2886.35 2886.19 2886.07 2886.04 2885.95 2885.87 2885.79 2885.69 2885.59 2885.56 2885.34 2885.28 2885.16 2885.07 2885.04  2884.9 2884.85 2884.79  2884.7 2884.49 2884.43 2884.35 2884.31 2884.24 2884.17  2883.9 2883.81 2883.77  2883.5 2883.47 2883.38 2883.22 2883.07 2882.96 2882.86 2882.82 2882.78 2882.58 2882.56 2882.32 2882.17 2882.07 2882.06  2881.4  2881.2
Performance statistics:
function                                                                                                                                                                                        	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 25000000, cols: 97, reductionFactor: 37, colBlockingSize: 12)	 51.3997   	 50        	 470.007   	 0         	 18.8718   	 24.9053   
<PITTS::MultiVector<double>> :: void PITTS::randomize(MultiVector<T>&) [with T = double](rows: 25000000, cols: 97)                                                                              	 1.54492   	 1         	 0         	 0         	 12.5573   	 0         
Timing statistics:
function                                                                                                                      	 time [s]  	 #calls    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]  	 51.3997   	 50        
<PITTS::MultiVector<double>> :: void PITTS::randomize(MultiVector<T>&) [with T = double]                                      	 1.54492   	 1         
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]	 0.000319024	 1         
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]              	 2.0389e-05	 1         
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 139657528113024 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 139657519716352 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 139657438292096 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 139657429895424 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 139657421498752 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 139657413102080 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 139657404705408 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 139657396308736 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 139657387912064 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 139656834313216 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 139656825916544 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 139656817519872 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 139656809123200 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 139656800726528 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 139656792329856 -> hwthread 15 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 139656783935232 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 139656297445120 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 16
PITTS: SIMD implementation: avx512
wtime: 52.3395
singular values (new):
 2892.4 2892.12 2891.85 2891.64 2891.47 2891.44 2891.27 2891.19 2890.75 2890.71 2890.68 2890.52 2890.33 2890.24 2890.13 2890.07 2889.91 2889.76 2889.67 2889.58 2889.49 2889.42 2889.25 2889.16 2888.99 2888.85 2888.83 2888.72 2888.68 2888.63  2888.5 2888.43 2888.29 2888.19  2888.1 2888.01 2887.93 2887.76 2887.74 2887.65 2887.51 2887.46 2887.28 2887.23 2887.12 2887.04 2886.93 2886.85 2886.75 2886.68  2886.6 2886.47 2886.43  2886.3 2886.24 2886.11 2886.08 2885.99 2885.95 2885.83 2885.76 2885.67 2885.57 2885.48 2885.28  2885.2 2885.13 2885.07    2885 2884.85 2884.81  2884.7 2884.68 2884.52  2884.4 2884.21 2884.12 2884.08 2883.95  2883.8 2883.74  2883.7  2883.6 2883.23  2883.2 2883.11 2882.93 2882.88 2882.73 2882.68 2882.53 2882.42 2882.26 2882.16 2881.82 2881.61 2881.27 2881.13
Performance statistics:
function                                                                                                                                                                                        	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 25000000, cols: 98, reductionFactor: 37, colBlockingSize: 12)	 52.3394   	 50        	 471.135   	 0         	 18.724    	 25.1621   
<PITTS::MultiVector<double>> :: void PITTS::randomize(MultiVector<T>&) [with T = double](rows: 25000000, cols: 98)                                                                              	 1.5636    	 1         	 0         	 0         	 12.5352   	 0         
Timing statistics:
function                                                                                                                      	 time [s]  	 #calls    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]  	 52.3394   	 50        
<PITTS::MultiVector<double>> :: void PITTS::randomize(MultiVector<T>&) [with T = double]                                      	 1.5636    	 1         
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]	 0.000360866	 1         
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]              	 1.9708e-05	 1         
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 139782584059776 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 139782575663104 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 139782567266432 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 139782558869760 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 139782550473088 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 139782542076416 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 139782193670784 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 139782185274112 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 139782176877440 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 139782168480768 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 139782160084096 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 139782151687424 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 139782143290752 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 139781589691904 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 139781581295232 -> hwthread 15 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 139781572900608 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 139781564507904 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 16
PITTS: SIMD implementation: avx512
wtime: 53.2425
singular values (new):
2892.46 2891.93 2891.69 2891.58  2891.5 2891.23 2891.13 2891.05 2890.85 2890.79 2890.67  2890.6 2890.46 2890.37 2890.17  2890.1 2889.88 2889.88 2889.82 2889.55 2889.46 2889.37 2889.33 2889.25  2889.2 2889.13 2889.02 2888.97  2888.8 2888.62 2888.53 2888.49 2888.41 2888.35 2888.18 2888.12 2888.07 2887.94 2887.78 2887.71  2887.6 2887.56 2887.51 2887.29  2887.2 2887.16 2887.04 2886.96 2886.88 2886.82 2886.65 2886.59 2886.46 2886.37  2886.2 2886.13 2886.01 2885.93 2885.82 2885.73 2885.61 2885.53 2885.47 2885.33 2885.22 2885.18 2885.04 2884.86 2884.81 2884.79  2884.7 2884.68 2884.58 2884.38 2884.36 2884.25 2884.16    2884 2883.95 2883.87 2883.76 2883.62 2883.47 2883.45 2883.39  2883.2 2883.12 2883.02 2882.83 2882.74 2882.57 2882.46 2882.36 2882.05 2881.97  2881.9 2881.76  2881.6 2881.38
Performance statistics:
function                                                                                                                                                                                        	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 25000000, cols: 99, reductionFactor: 37, colBlockingSize: 12)	 53.2424   	 50        	 472.644   	 0         	 18.5943   	 25.4188   
<PITTS::MultiVector<double>> :: void PITTS::randomize(MultiVector<T>&) [with T = double](rows: 25000000, cols: 99)                                                                              	 1.58301   	 1         	 0         	 0         	 12.5078   	 0         
Timing statistics:
function                                                                                                                      	 time [s]  	 #calls    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]  	 53.2424   	 50        
<PITTS::MultiVector<double>> :: void PITTS::randomize(MultiVector<T>&) [with T = double]                                      	 1.58301   	 1         
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]	 0.00033501	 1         
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]              	 1.922e-05 	 1         
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 140385361815424 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 140385353418752 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 140385345022080 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 140385336625408 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 140385328228736 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 140385319832064 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 140385311435392 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 140384831269632 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 140384822872960 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 140384814476288 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 140384806079616 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 140384797682944 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 140384789286272 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 140384780889600 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 140384294399616 -> hwthread 15 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 140384286004992 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 140384277612288 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 16
PITTS: SIMD implementation: avx512
wtime: 54.5301
singular values (new):
2892.22 2892.15 2891.86 2891.68 2891.49 2891.34 2891.07    2891  2890.9 2890.83 2890.66 2890.53 2890.46 2890.28 2890.21 2890.16 2890.02 2889.83 2889.76 2889.71 2889.68 2889.57 2889.43 2889.36 2889.27 2889.19 2889.11 2889.02 2888.96  2888.8 2888.64 2888.53 2888.45 2888.31 2888.27 2888.19 2888.14 2887.95 2887.87 2887.81  2887.7 2887.61 2887.55  2887.5 2887.39 2887.24 2887.09 2887.09  2886.9 2886.84 2886.71 2886.65 2886.58 2886.56 2886.38 2886.32 2886.25 2886.17 2886.02 2885.83 2885.78 2885.68 2885.64 2885.53 2885.45 2885.43 2885.33 2885.18 2885.12 2884.99 2884.95 2884.87 2884.83 2884.61 2884.45 2884.37 2884.36 2884.19 2884.13 2884.04 2883.98 2883.95 2883.61 2883.47 2883.38 2883.28 2883.13 2883.09 2882.89 2882.84 2882.72 2882.63 2882.48 2882.39  2882.3 2882.13 2881.93  2881.7 2881.39 2881.17
Performance statistics:
function                                                                                                                                                                                         	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 25000000, cols: 100, reductionFactor: 37, colBlockingSize: 12)	 54.53     	 50        	 470.854   	 0         	 18.3386   	 25.6756   
<PITTS::MultiVector<double>> :: void PITTS::randomize(MultiVector<T>&) [with T = double](rows: 25000000, cols: 100)                                                                              	 1.58911   	 1         	 0         	 0         	 12.5857   	 0         
Timing statistics:
function                                                                                                                      	 time [s]  	 #calls    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]  	 54.53     	 50        
<PITTS::MultiVector<double>> :: void PITTS::randomize(MultiVector<T>&) [with T = double]                                      	 1.58911   	 1         
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]	 0.000334955	 1         
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]              	 1.7356e-05	 1         
